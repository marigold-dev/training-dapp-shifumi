#import "session.jsligo" "Session"


export type sessionBoard = {
    points : map<address, nat>
};

export const retrieve_board = (sess : Session.t) : sessionBoard => {
    let scores : map<address, nat> = (Map.empty as map<address, nat>);
    let myfunc = ([acc, elt] : [map<address, nat>, [Session.round, option<address>]]) : map<address, nat> =>
        match (elt[1]) {
            when(None()): acc;
            when(Some(winner_round)): match (Map.find_opt(winner_round, acc)) {
                when(None()): Map.add(winner_round, 1n, acc);
                when(Some(old_value)): Map.update(winner_round, (Some(old_value + 1n)), acc)
            };
        };
    let final_scores = Map.fold(myfunc, sess.board, scores);
    return { points:final_scores }
};