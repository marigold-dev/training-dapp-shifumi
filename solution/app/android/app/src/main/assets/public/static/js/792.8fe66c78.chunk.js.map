{"version":3,"file":"static/js/792.8fe66c78.chunk.js","mappings":"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","sources":["../node_modules/@taquito/http-utils/node_modules/@vespaiach/axios-fetch-adapter/index.js"],"sourcesContent":["import axios from 'axios';\nimport settle from 'axios/lib/core/settle';\nimport buildURL from 'axios/lib/helpers/buildURL';\nimport buildFullPath from 'axios/lib/core/buildFullPath';\nimport { isUndefined, isStandardBrowserEnv, isFormData } from 'axios/lib/utils';\n\n/**\n * - Create a request object\n * - Get response body\n * - Check if timeout\n */\nexport default async function fetchAdapter(config) {\n    const request = createRequest(config);\n    const promiseChain = [getResponse(request, config)];\n\n    if (config.timeout && config.timeout > 0) {\n        promiseChain.push(\n            new Promise((res) => {\n                setTimeout(() => {\n                    const message = config.timeoutErrorMessage\n                        ? config.timeoutErrorMessage\n                        : 'timeout of ' + config.timeout + 'ms exceeded';\n                    res(createError(message, config, 'ECONNABORTED', request));\n                }, config.timeout);\n            })\n        );\n    }\n\n    const data = await Promise.race(promiseChain);\n    return new Promise((resolve, reject) => {\n        if (data instanceof Error) {\n            reject(data);\n        } else {\n            Object.prototype.toString.call(config.settle) === '[object Function]'\n                ? config.settle(resolve, reject, data)\n                : settle(resolve, reject, data);\n        }\n    });\n}\n\n\n/**\n * Fetch API stage two is to get response body. This funtion tries to retrieve\n * response body based on response's type\n */\nasync function getResponse(request, config) {\n    let stageOne;\n    try {\n        stageOne = await fetch(request);\n        \n        const response = {\n          ok: stageOne.ok,\n          status: stageOne.status,\n          statusText: stageOne.statusText,\n          headers: new Headers(stageOne.headers), // Make a copy of headers\n          config: config,\n          request,\n        }\n\n        if (stageOne.status >= 400) {\n          return createError('Response Error', config, 'ERR_NETWORK', request, response);\n        }\n    } catch (e) {\n        return createError('Network Error', config, 'ERR_NETWORK', request);\n    }\n\n    const response = {\n        ok: stageOne.ok,\n        status: stageOne.status,\n        statusText: stageOne.statusText,\n        headers: new Headers(stageOne.headers), // Make a copy of headers\n        config: config,\n        request,\n    };\n\n    if (stageOne.status >= 200 && stageOne.status !== 204) {\n        switch (config.responseType) {\n            case 'arraybuffer':\n                response.data = await stageOne.arrayBuffer();\n                break;\n            case 'blob':\n                response.data = await stageOne.blob();\n                break;\n            case 'json':\n                response.data = await stageOne.json();\n                break;\n            case 'formData':\n                response.data = await stageOne.formData();\n                break;\n            default:\n                response.data = await stageOne.text();\n                break;\n        }\n    }\n\n    return response;\n}\n\n/**\n * This function will create a Request object based on configuration's axios\n */\nfunction createRequest(config) {\n    const headers = new Headers(config.headers);\n\n    // HTTP basic authentication\n    if (config.auth) {\n        const username = config.auth.username || '';\n        const password = config.auth.password ? decodeURI(encodeURIComponent(config.auth.password)) : '';\n        headers.set('Authorization', `Basic ${btoa(username + ':' + password)}`);\n    }\n\n    const method = config.method.toUpperCase();\n    const options = {\n        headers: headers,\n        method,\n    };\n    if (method !== 'GET' && method !== 'HEAD') {\n        options.body = config.data;\n\n        // In these cases the browser will automatically set the correct Content-Type,\n        // but only if that header hasn't been set yet. So that's why we're deleting it.\n        if (isFormData(options.body) && isStandardBrowserEnv()) {\n            headers.delete('Content-Type');\n        }\n    }\n    if (config.mode) {\n        options.mode = config.mode;\n    }\n    if (config.cache) {\n        options.cache = config.cache;\n    }\n    if (config.integrity) {\n        options.integrity = config.integrity;\n    }\n    if (config.redirect) {\n        options.redirect = config.redirect;\n    }\n    if (config.referrer) {\n        options.referrer = config.referrer;\n    }\n    // This config is similar to XHRâ€™s withCredentials flag, but with three available values instead of two.\n    // So if withCredentials is not set, default value 'same-origin' will be used\n    if (!isUndefined(config.withCredentials)) {\n        options.credentials = config.withCredentials ? 'include' : 'omit';\n    }\n\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    const url = buildURL(fullPath, config.params, config.paramsSerializer);\n\n    // Expected browser to throw error if there is any wrong configuration value\n    return new Request(url, options);\n}\n\n\n\n/**\n * Note:\n * \n *   From version >= 0.27.0, createError function is replaced by AxiosError class.\n *   So I copy the old createError function here for backward compatible.\n * \n * \n * \n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nfunction createError(message, config, code, request, response) {\n    if (axios.AxiosError && typeof axios.AxiosError === 'function') {\n        return new axios.AxiosError(message, axios.AxiosError[code], config, request, response);\n    }\n\n    var error = new Error(message);\n    return enhanceError(error, config, code, request, response);\n};\n\n/**\n * \n * Note:\n * \n *   This function is for backward compatible.\n * \n *  \n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nfunction enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  };\n  return error;\n};\n"],"names":["async","fetchAdapter","config","request","headers","Headers","auth","username","password","decodeURI","encodeURIComponent","set","btoa","method","toUpperCase","options","body","data","isFormData","isStandardBrowserEnv","delete","mode","cache","integrity","redirect","referrer","isUndefined","withCredentials","credentials","fullPath","buildFullPath","baseURL","url","buildURL","params","paramsSerializer","Request","createRequest","promiseChain","getResponse","timeout","push","Promise","res","setTimeout","message","timeoutErrorMessage","createError","race","resolve","reject","Error","Object","prototype","toString","call","settle","stageOne","fetch","response","ok","status","statusText","e","responseType","arrayBuffer","blob","json","formData","text","code","axios","error","isAxiosError","toJSON","this","name","description","number","fileName","lineNumber","columnNumber","stack","enhanceError"],"sourceRoot":""}