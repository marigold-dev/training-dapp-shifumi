{
  "version": 3,
  "sources": ["../../history/index.js", "../../@ionic/react-router/src/ReactRouter/IonRouteInner.tsx", "../../@ionic/react-router/src/ReactRouter/ReactRouterViewStack.tsx", "../../@ionic/react-router/src/ReactRouter/clonePageElement.ts", "../../@ionic/react-router/src/ReactRouter/StackManager.tsx", "../../@ionic/react-router/src/ReactRouter/IonRouter.tsx", "../../@ionic/react-router/src/ReactRouter/IonReactRouter.tsx", "../../@ionic/react-router/src/ReactRouter/IonReactMemoryRouter.tsx", "../../@ionic/react-router/src/ReactRouter/IonReactHashRouter.tsx"],
  "sourcesContent": ["import _extends from '@babel/runtime/helpers/esm/extends';\n\n/**\r\n * Actions represent the type of change to a location value.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#action\r\n */\nvar Action;\n\n(function (Action) {\n  /**\r\n   * A POP indicates a change to an arbitrary index in the history stack, such\r\n   * as a back or forward navigation. It does not describe the direction of the\r\n   * navigation, only that the current index changed.\r\n   *\r\n   * Note: This is the default action for newly created history objects.\r\n   */\n  Action[\"Pop\"] = \"POP\";\n  /**\r\n   * A PUSH indicates a new entry being added to the history stack, such as when\r\n   * a link is clicked and a new page loads. When this happens, all subsequent\r\n   * entries in the stack are lost.\r\n   */\n\n  Action[\"Push\"] = \"PUSH\";\n  /**\r\n   * A REPLACE indicates the entry at the current index in the history stack\r\n   * being replaced by a new one.\r\n   */\n\n  Action[\"Replace\"] = \"REPLACE\";\n})(Action || (Action = {}));\n\nvar readOnly = process.env.NODE_ENV !== \"production\" ? function (obj) {\n  return Object.freeze(obj);\n} : function (obj) {\n  return obj;\n};\n\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== 'undefined') console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message); // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nvar BeforeUnloadEventType = 'beforeunload';\nvar HashChangeEventType = 'hashchange';\nvar PopStateEventType = 'popstate';\n/**\r\n * Browser history stores the location in regular URLs. This is the standard for\r\n * most web apps, but it requires some configuration on the server to ensure you\r\n * serve the same app at multiple URLs.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\r\n */\n\nfunction createBrowserHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$window = _options.window,\n      window = _options$window === void 0 ? document.defaultView : _options$window;\n  var globalHistory = window.history;\n\n  function getIndexAndLocation() {\n    var _window$location = window.location,\n        pathname = _window$location.pathname,\n        search = _window$location.search,\n        hash = _window$location.hash;\n    var state = globalHistory.state || {};\n    return [state.idx, readOnly({\n      pathname: pathname,\n      search: search,\n      hash: hash,\n      state: state.usr || null,\n      key: state.key || 'default'\n    })];\n  }\n\n  var blockedPopTx = null;\n\n  function handlePop() {\n    if (blockedPopTx) {\n      blockers.call(blockedPopTx);\n      blockedPopTx = null;\n    } else {\n      var nextAction = Action.Pop;\n\n      var _getIndexAndLocation = getIndexAndLocation(),\n          nextIndex = _getIndexAndLocation[0],\n          nextLocation = _getIndexAndLocation[1];\n\n      if (blockers.length) {\n        if (nextIndex != null) {\n          var delta = index - nextIndex;\n\n          if (delta) {\n            // Revert the POP\n            blockedPopTx = {\n              action: nextAction,\n              location: nextLocation,\n              retry: function retry() {\n                go(delta * -1);\n              }\n            };\n            go(delta);\n          }\n        } else {\n          // Trying to POP to a location with no index. We did not create\n          // this location, so we can't effectively block the navigation.\n          process.env.NODE_ENV !== \"production\" ? warning(false, // TODO: Write up a doc that explains our blocking strategy in\n          // detail and link to it here so people can understand better what\n          // is going on and how to avoid it.\n          \"You are trying to block a POP navigation to a location that was not \" + \"created by the history library. The block will fail silently in \" + \"production, but in general you should do all navigation with the \" + \"history library (instead of using window.history.pushState directly) \" + \"to avoid this situation.\") : void 0;\n        }\n      } else {\n        applyTx(nextAction);\n      }\n    }\n  }\n\n  window.addEventListener(PopStateEventType, handlePop);\n  var action = Action.Pop;\n\n  var _getIndexAndLocation2 = getIndexAndLocation(),\n      index = _getIndexAndLocation2[0],\n      location = _getIndexAndLocation2[1];\n\n  var listeners = createEvents();\n  var blockers = createEvents();\n\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\n      idx: index\n    }), '');\n  }\n\n  function createHref(to) {\n    return typeof to === 'string' ? to : createPath(to);\n  } // state defaults to `null` because `window.history.state` does\n\n\n  function getNextLocation(to, state) {\n    if (state === void 0) {\n      state = null;\n    }\n\n    return readOnly(_extends({\n      pathname: location.pathname,\n      hash: '',\n      search: ''\n    }, typeof to === 'string' ? parsePath(to) : to, {\n      state: state,\n      key: createKey()\n    }));\n  }\n\n  function getHistoryStateAndUrl(nextLocation, index) {\n    return [{\n      usr: nextLocation.state,\n      key: nextLocation.key,\n      idx: index\n    }, createHref(nextLocation)];\n  }\n\n  function allowTx(action, location, retry) {\n    return !blockers.length || (blockers.call({\n      action: action,\n      location: location,\n      retry: retry\n    }), false);\n  }\n\n  function applyTx(nextAction) {\n    action = nextAction;\n\n    var _getIndexAndLocation3 = getIndexAndLocation();\n\n    index = _getIndexAndLocation3[0];\n    location = _getIndexAndLocation3[1];\n    listeners.call({\n      action: action,\n      location: location\n    });\n  }\n\n  function push(to, state) {\n    var nextAction = Action.Push;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      push(to, state);\n    }\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      var _getHistoryStateAndUr = getHistoryStateAndUrl(nextLocation, index + 1),\n          historyState = _getHistoryStateAndUr[0],\n          url = _getHistoryStateAndUr[1]; // TODO: Support forced reloading\n      // try...catch because iOS limits us to 100 pushState calls :/\n\n\n      try {\n        globalHistory.pushState(historyState, '', url);\n      } catch (error) {\n        // They are going to lose state here, but there is no real\n        // way to warn them about it since the page will refresh...\n        window.location.assign(url);\n      }\n\n      applyTx(nextAction);\n    }\n  }\n\n  function replace(to, state) {\n    var nextAction = Action.Replace;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      replace(to, state);\n    }\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      var _getHistoryStateAndUr2 = getHistoryStateAndUrl(nextLocation, index),\n          historyState = _getHistoryStateAndUr2[0],\n          url = _getHistoryStateAndUr2[1]; // TODO: Support forced reloading\n\n\n      globalHistory.replaceState(historyState, '', url);\n      applyTx(nextAction);\n    }\n  }\n\n  function go(delta) {\n    globalHistory.go(delta);\n  }\n\n  var history = {\n    get action() {\n      return action;\n    },\n\n    get location() {\n      return location;\n    },\n\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    back: function back() {\n      go(-1);\n    },\n    forward: function forward() {\n      go(1);\n    },\n    listen: function listen(listener) {\n      return listeners.push(listener);\n    },\n    block: function block(blocker) {\n      var unblock = blockers.push(blocker);\n\n      if (blockers.length === 1) {\n        window.addEventListener(BeforeUnloadEventType, promptBeforeUnload);\n      }\n\n      return function () {\n        unblock(); // Remove the beforeunload listener so the document may\n        // still be salvageable in the pagehide event.\n        // See https://html.spec.whatwg.org/#unloading-documents\n\n        if (!blockers.length) {\n          window.removeEventListener(BeforeUnloadEventType, promptBeforeUnload);\n        }\n      };\n    }\n  };\n  return history;\n}\n/**\r\n * Hash history stores the location in window.location.hash. This makes it ideal\r\n * for situations where you don't want to send the location to the server for\r\n * some reason, either because you do cannot configure it or the URL space is\r\n * reserved for something else.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\r\n */\n\nfunction createHashHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options2 = options,\n      _options2$window = _options2.window,\n      window = _options2$window === void 0 ? document.defaultView : _options2$window;\n  var globalHistory = window.history;\n\n  function getIndexAndLocation() {\n    var _parsePath = parsePath(window.location.hash.substr(1)),\n        _parsePath$pathname = _parsePath.pathname,\n        pathname = _parsePath$pathname === void 0 ? '/' : _parsePath$pathname,\n        _parsePath$search = _parsePath.search,\n        search = _parsePath$search === void 0 ? '' : _parsePath$search,\n        _parsePath$hash = _parsePath.hash,\n        hash = _parsePath$hash === void 0 ? '' : _parsePath$hash;\n\n    var state = globalHistory.state || {};\n    return [state.idx, readOnly({\n      pathname: pathname,\n      search: search,\n      hash: hash,\n      state: state.usr || null,\n      key: state.key || 'default'\n    })];\n  }\n\n  var blockedPopTx = null;\n\n  function handlePop() {\n    if (blockedPopTx) {\n      blockers.call(blockedPopTx);\n      blockedPopTx = null;\n    } else {\n      var nextAction = Action.Pop;\n\n      var _getIndexAndLocation4 = getIndexAndLocation(),\n          nextIndex = _getIndexAndLocation4[0],\n          nextLocation = _getIndexAndLocation4[1];\n\n      if (blockers.length) {\n        if (nextIndex != null) {\n          var delta = index - nextIndex;\n\n          if (delta) {\n            // Revert the POP\n            blockedPopTx = {\n              action: nextAction,\n              location: nextLocation,\n              retry: function retry() {\n                go(delta * -1);\n              }\n            };\n            go(delta);\n          }\n        } else {\n          // Trying to POP to a location with no index. We did not create\n          // this location, so we can't effectively block the navigation.\n          process.env.NODE_ENV !== \"production\" ? warning(false, // TODO: Write up a doc that explains our blocking strategy in\n          // detail and link to it here so people can understand better\n          // what is going on and how to avoid it.\n          \"You are trying to block a POP navigation to a location that was not \" + \"created by the history library. The block will fail silently in \" + \"production, but in general you should do all navigation with the \" + \"history library (instead of using window.history.pushState directly) \" + \"to avoid this situation.\") : void 0;\n        }\n      } else {\n        applyTx(nextAction);\n      }\n    }\n  }\n\n  window.addEventListener(PopStateEventType, handlePop); // popstate does not fire on hashchange in IE 11 and old (trident) Edge\n  // https://developer.mozilla.org/de/docs/Web/API/Window/popstate_event\n\n  window.addEventListener(HashChangeEventType, function () {\n    var _getIndexAndLocation5 = getIndexAndLocation(),\n        nextLocation = _getIndexAndLocation5[1]; // Ignore extraneous hashchange events.\n\n\n    if (createPath(nextLocation) !== createPath(location)) {\n      handlePop();\n    }\n  });\n  var action = Action.Pop;\n\n  var _getIndexAndLocation6 = getIndexAndLocation(),\n      index = _getIndexAndLocation6[0],\n      location = _getIndexAndLocation6[1];\n\n  var listeners = createEvents();\n  var blockers = createEvents();\n\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\n      idx: index\n    }), '');\n  }\n\n  function getBaseHref() {\n    var base = document.querySelector('base');\n    var href = '';\n\n    if (base && base.getAttribute('href')) {\n      var url = window.location.href;\n      var hashIndex = url.indexOf('#');\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href;\n  }\n\n  function createHref(to) {\n    return getBaseHref() + '#' + (typeof to === 'string' ? to : createPath(to));\n  }\n\n  function getNextLocation(to, state) {\n    if (state === void 0) {\n      state = null;\n    }\n\n    return readOnly(_extends({\n      pathname: location.pathname,\n      hash: '',\n      search: ''\n    }, typeof to === 'string' ? parsePath(to) : to, {\n      state: state,\n      key: createKey()\n    }));\n  }\n\n  function getHistoryStateAndUrl(nextLocation, index) {\n    return [{\n      usr: nextLocation.state,\n      key: nextLocation.key,\n      idx: index\n    }, createHref(nextLocation)];\n  }\n\n  function allowTx(action, location, retry) {\n    return !blockers.length || (blockers.call({\n      action: action,\n      location: location,\n      retry: retry\n    }), false);\n  }\n\n  function applyTx(nextAction) {\n    action = nextAction;\n\n    var _getIndexAndLocation7 = getIndexAndLocation();\n\n    index = _getIndexAndLocation7[0];\n    location = _getIndexAndLocation7[1];\n    listeners.call({\n      action: action,\n      location: location\n    });\n  }\n\n  function push(to, state) {\n    var nextAction = Action.Push;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      push(to, state);\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(nextLocation.pathname.charAt(0) === '/', \"Relative pathnames are not supported in hash history.push(\" + JSON.stringify(to) + \")\") : void 0;\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      var _getHistoryStateAndUr3 = getHistoryStateAndUrl(nextLocation, index + 1),\n          historyState = _getHistoryStateAndUr3[0],\n          url = _getHistoryStateAndUr3[1]; // TODO: Support forced reloading\n      // try...catch because iOS limits us to 100 pushState calls :/\n\n\n      try {\n        globalHistory.pushState(historyState, '', url);\n      } catch (error) {\n        // They are going to lose state here, but there is no real\n        // way to warn them about it since the page will refresh...\n        window.location.assign(url);\n      }\n\n      applyTx(nextAction);\n    }\n  }\n\n  function replace(to, state) {\n    var nextAction = Action.Replace;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      replace(to, state);\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(nextLocation.pathname.charAt(0) === '/', \"Relative pathnames are not supported in hash history.replace(\" + JSON.stringify(to) + \")\") : void 0;\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      var _getHistoryStateAndUr4 = getHistoryStateAndUrl(nextLocation, index),\n          historyState = _getHistoryStateAndUr4[0],\n          url = _getHistoryStateAndUr4[1]; // TODO: Support forced reloading\n\n\n      globalHistory.replaceState(historyState, '', url);\n      applyTx(nextAction);\n    }\n  }\n\n  function go(delta) {\n    globalHistory.go(delta);\n  }\n\n  var history = {\n    get action() {\n      return action;\n    },\n\n    get location() {\n      return location;\n    },\n\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    back: function back() {\n      go(-1);\n    },\n    forward: function forward() {\n      go(1);\n    },\n    listen: function listen(listener) {\n      return listeners.push(listener);\n    },\n    block: function block(blocker) {\n      var unblock = blockers.push(blocker);\n\n      if (blockers.length === 1) {\n        window.addEventListener(BeforeUnloadEventType, promptBeforeUnload);\n      }\n\n      return function () {\n        unblock(); // Remove the beforeunload listener so the document may\n        // still be salvageable in the pagehide event.\n        // See https://html.spec.whatwg.org/#unloading-documents\n\n        if (!blockers.length) {\n          window.removeEventListener(BeforeUnloadEventType, promptBeforeUnload);\n        }\n      };\n    }\n  };\n  return history;\n}\n/**\r\n * Memory history stores the current location in memory. It is designed for use\r\n * in stateful non-browser environments like tests and React Native.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#creatememoryhistory\r\n */\n\nfunction createMemoryHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options3 = options,\n      _options3$initialEntr = _options3.initialEntries,\n      initialEntries = _options3$initialEntr === void 0 ? ['/'] : _options3$initialEntr,\n      initialIndex = _options3.initialIndex;\n  var entries = initialEntries.map(function (entry) {\n    var location = readOnly(_extends({\n      pathname: '/',\n      search: '',\n      hash: '',\n      state: null,\n      key: createKey()\n    }, typeof entry === 'string' ? parsePath(entry) : entry));\n    process.env.NODE_ENV !== \"production\" ? warning(location.pathname.charAt(0) === '/', \"Relative pathnames are not supported in createMemoryHistory({ initialEntries }) (invalid entry: \" + JSON.stringify(entry) + \")\") : void 0;\n    return location;\n  });\n  var index = clamp(initialIndex == null ? entries.length - 1 : initialIndex, 0, entries.length - 1);\n  var action = Action.Pop;\n  var location = entries[index];\n  var listeners = createEvents();\n  var blockers = createEvents();\n\n  function createHref(to) {\n    return typeof to === 'string' ? to : createPath(to);\n  }\n\n  function getNextLocation(to, state) {\n    if (state === void 0) {\n      state = null;\n    }\n\n    return readOnly(_extends({\n      pathname: location.pathname,\n      search: '',\n      hash: ''\n    }, typeof to === 'string' ? parsePath(to) : to, {\n      state: state,\n      key: createKey()\n    }));\n  }\n\n  function allowTx(action, location, retry) {\n    return !blockers.length || (blockers.call({\n      action: action,\n      location: location,\n      retry: retry\n    }), false);\n  }\n\n  function applyTx(nextAction, nextLocation) {\n    action = nextAction;\n    location = nextLocation;\n    listeners.call({\n      action: action,\n      location: location\n    });\n  }\n\n  function push(to, state) {\n    var nextAction = Action.Push;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      push(to, state);\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(location.pathname.charAt(0) === '/', \"Relative pathnames are not supported in memory history.push(\" + JSON.stringify(to) + \")\") : void 0;\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      applyTx(nextAction, nextLocation);\n    }\n  }\n\n  function replace(to, state) {\n    var nextAction = Action.Replace;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      replace(to, state);\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(location.pathname.charAt(0) === '/', \"Relative pathnames are not supported in memory history.replace(\" + JSON.stringify(to) + \")\") : void 0;\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      entries[index] = nextLocation;\n      applyTx(nextAction, nextLocation);\n    }\n  }\n\n  function go(delta) {\n    var nextIndex = clamp(index + delta, 0, entries.length - 1);\n    var nextAction = Action.Pop;\n    var nextLocation = entries[nextIndex];\n\n    function retry() {\n      go(delta);\n    }\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      index = nextIndex;\n      applyTx(nextAction, nextLocation);\n    }\n  }\n\n  var history = {\n    get index() {\n      return index;\n    },\n\n    get action() {\n      return action;\n    },\n\n    get location() {\n      return location;\n    },\n\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    back: function back() {\n      go(-1);\n    },\n    forward: function forward() {\n      go(1);\n    },\n    listen: function listen(listener) {\n      return listeners.push(listener);\n    },\n    block: function block(blocker) {\n      return blockers.push(blocker);\n    }\n  };\n  return history;\n} ////////////////////////////////////////////////////////////////////////////////\n// UTILS\n////////////////////////////////////////////////////////////////////////////////\n\nfunction clamp(n, lowerBound, upperBound) {\n  return Math.min(Math.max(n, lowerBound), upperBound);\n}\n\nfunction promptBeforeUnload(event) {\n  // Cancel the event.\n  event.preventDefault(); // Chrome (and legacy IE) requires returnValue to be set.\n\n  event.returnValue = '';\n}\n\nfunction createEvents() {\n  var handlers = [];\n  return {\n    get length() {\n      return handlers.length;\n    },\n\n    push: function push(fn) {\n      handlers.push(fn);\n      return function () {\n        handlers = handlers.filter(function (handler) {\n          return handler !== fn;\n        });\n      };\n    },\n    call: function call(arg) {\n      handlers.forEach(function (fn) {\n        return fn && fn(arg);\n      });\n    }\n  };\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n/**\r\n * Creates a string URL path from the given pathname, search, and hash components.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createpath\r\n */\n\n\nfunction createPath(_ref) {\n  var _ref$pathname = _ref.pathname,\n      pathname = _ref$pathname === void 0 ? '/' : _ref$pathname,\n      _ref$search = _ref.search,\n      search = _ref$search === void 0 ? '' : _ref$search,\n      _ref$hash = _ref.hash,\n      hash = _ref$hash === void 0 ? '' : _ref$hash;\n  if (search && search !== '?') pathname += search.charAt(0) === '?' ? search : '?' + search;\n  if (hash && hash !== '#') pathname += hash.charAt(0) === '#' ? hash : '#' + hash;\n  return pathname;\n}\n/**\r\n * Parses a string URL path into its separate pathname, search, and hash components.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#parsepath\r\n */\n\nfunction parsePath(path) {\n  var parsedPath = {};\n\n  if (path) {\n    var hashIndex = path.indexOf('#');\n\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    var searchIndex = path.indexOf('?');\n\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\n\nexport { Action, createBrowserHistory, createHashHistory, createMemoryHistory, createPath, parsePath };\n//# sourceMappingURL=index.js.map\n", "import type { IonRouteProps } from '@ionic/react';\nimport React from 'react';\nimport { Route } from 'react-router';\n\nexport class IonRouteInner extends React.PureComponent<IonRouteProps> {\n  render() {\n    return (\n      <Route\n        path={this.props.path}\n        exact={this.props.exact}\n        render={this.props.render}\n        {\n          /**\n           * `computedMatch` is a private API in react-router v5 that\n           * has been removed in v6.\n           *\n           * This needs to be removed when we support v6.\n           *\n           * TODO: FW-647\n           */\n          ...((this.props as any).computedMatch !== undefined\n            ? {\n                computedMatch: (this.props as any).computedMatch,\n              }\n            : {})\n        }\n      />\n    );\n  }\n}\n", "import type { RouteInfo, ViewItem } from '@ionic/react';\nimport { IonRoute, ViewLifeCycleManager, ViewStacks, generateId } from '@ionic/react';\nimport React from 'react';\nimport { matchPath } from 'react-router';\n\nexport class ReactRouterViewStack extends ViewStacks {\n  constructor() {\n    super();\n    this.createViewItem = this.createViewItem.bind(this);\n    this.findViewItemByRouteInfo = this.findViewItemByRouteInfo.bind(this);\n    this.findLeavingViewItemByRouteInfo = this.findLeavingViewItemByRouteInfo.bind(this);\n    this.getChildrenToRender = this.getChildrenToRender.bind(this);\n    this.findViewItemByPathname = this.findViewItemByPathname.bind(this);\n  }\n\n  createViewItem(outletId: string, reactElement: React.ReactElement, routeInfo: RouteInfo, page?: HTMLElement) {\n    const viewItem: ViewItem = {\n      id: generateId('viewItem'),\n      outletId,\n      ionPageElement: page,\n      reactElement,\n      mount: true,\n      ionRoute: false,\n    };\n\n    const matchProps = {\n      exact: reactElement.props.exact,\n      path: reactElement.props.path || reactElement.props.from,\n      component: reactElement.props.component,\n    };\n\n    const match = matchPath(routeInfo.pathname, matchProps);\n\n    if (reactElement.type === IonRoute) {\n      viewItem.ionRoute = true;\n      viewItem.disableIonPageManagement = reactElement.props.disableIonPageManagement;\n    }\n\n    viewItem.routeData = {\n      match,\n      childProps: reactElement.props,\n    };\n\n    return viewItem;\n  }\n\n  getChildrenToRender(outletId: string, ionRouterOutlet: React.ReactElement, routeInfo: RouteInfo) {\n    const viewItems = this.getViewItemsForOutlet(outletId);\n\n    // Sync latest routes with viewItems\n    React.Children.forEach(ionRouterOutlet.props.children, (child: React.ReactElement) => {\n      const viewItem = viewItems.find((v) => {\n        return matchComponent(child, v.routeData.childProps.path || v.routeData.childProps.from);\n      });\n      if (viewItem) {\n        viewItem.reactElement = child;\n      }\n    });\n\n    const children = viewItems.map((viewItem) => {\n      let clonedChild;\n      if (viewItem.ionRoute && !viewItem.disableIonPageManagement) {\n        clonedChild = (\n          <ViewLifeCycleManager\n            key={`view-${viewItem.id}`}\n            mount={viewItem.mount}\n            removeView={() => this.remove(viewItem)}\n          >\n            {React.cloneElement(viewItem.reactElement, {\n              computedMatch: viewItem.routeData.match,\n            })}\n          </ViewLifeCycleManager>\n        );\n      } else {\n        const match = matchComponent(viewItem.reactElement, routeInfo.pathname);\n        clonedChild = (\n          <ViewLifeCycleManager\n            key={`view-${viewItem.id}`}\n            mount={viewItem.mount}\n            removeView={() => this.remove(viewItem)}\n          >\n            {React.cloneElement(viewItem.reactElement, {\n              computedMatch: viewItem.routeData.match,\n            })}\n          </ViewLifeCycleManager>\n        );\n\n        if (!match && viewItem.routeData.match) {\n          viewItem.routeData.match = undefined;\n          viewItem.mount = false;\n        }\n      }\n\n      return clonedChild;\n    });\n    return children;\n  }\n\n  findViewItemByRouteInfo(routeInfo: RouteInfo, outletId?: string, updateMatch?: boolean) {\n    const { viewItem, match } = this.findViewItemByPath(routeInfo.pathname, outletId);\n    const shouldUpdateMatch = updateMatch === undefined || updateMatch === true;\n    if (shouldUpdateMatch && viewItem && match) {\n      viewItem.routeData.match = match;\n    }\n    return viewItem;\n  }\n\n  findLeavingViewItemByRouteInfo(routeInfo: RouteInfo, outletId?: string, mustBeIonRoute = true) {\n    const { viewItem } = this.findViewItemByPath(routeInfo.lastPathname!, outletId, false, mustBeIonRoute);\n    return viewItem;\n  }\n\n  findViewItemByPathname(pathname: string, outletId?: string) {\n    const { viewItem } = this.findViewItemByPath(pathname, outletId);\n    return viewItem;\n  }\n\n  private findViewItemByPath(pathname: string, outletId?: string, forceExact?: boolean, mustBeIonRoute?: boolean) {\n    let viewItem: ViewItem | undefined;\n    let match: ReturnType<typeof matchPath> | undefined;\n    let viewStack: ViewItem[];\n\n    if (outletId) {\n      viewStack = this.getViewItemsForOutlet(outletId);\n      viewStack.some(matchView);\n      if (!viewItem) {\n        viewStack.some(matchDefaultRoute);\n      }\n    } else {\n      const viewItems = this.getAllViewItems();\n      viewItems.some(matchView);\n      if (!viewItem) {\n        viewItems.some(matchDefaultRoute);\n      }\n    }\n\n    return { viewItem, match };\n\n    function matchView(v: ViewItem) {\n      if (mustBeIonRoute && !v.ionRoute) {\n        return false;\n      }\n      const matchProps = {\n        exact: forceExact ? true : v.routeData.childProps.exact,\n        path: v.routeData.childProps.path || v.routeData.childProps.from,\n        component: v.routeData.childProps.component,\n      };\n      const myMatch = matchPath(pathname, matchProps);\n      if (myMatch) {\n        viewItem = v;\n        match = myMatch;\n        return true;\n      }\n      return false;\n    }\n\n    function matchDefaultRoute(v: ViewItem) {\n      // try to find a route that doesn't have a path or from prop, that will be our default route\n      if (!v.routeData.childProps.path && !v.routeData.childProps.from) {\n        match = {\n          path: pathname,\n          url: pathname,\n          isExact: true,\n          params: {},\n        };\n        viewItem = v;\n        return true;\n      }\n      return false;\n    }\n  }\n}\n\nfunction matchComponent(node: React.ReactElement, pathname: string, forceExact?: boolean) {\n  const matchProps = {\n    exact: forceExact ? true : node.props.exact,\n    path: node.props.path || node.props.from,\n    component: node.props.component,\n  };\n  const match = matchPath(pathname, matchProps);\n\n  return match;\n}\n", "export function clonePageElement(leavingViewHtml: string | HTMLElement) {\n  let html: string;\n  if (typeof leavingViewHtml === 'string') {\n    html = leavingViewHtml;\n  } else {\n    html = leavingViewHtml.outerHTML;\n  }\n  if (document) {\n    const newEl = document.createElement('div');\n    newEl.innerHTML = html;\n    newEl.style.zIndex = '';\n    // Remove an existing back button so the new element doesn't get two of them\n    const ionBackButton = newEl.getElementsByTagName('ion-back-button');\n    if (ionBackButton[0]) {\n      ionBackButton[0].remove();\n    }\n    return newEl.firstChild as HTMLElement;\n  }\n  return undefined;\n}\n", "import type { RouteInfo, StackContextState, ViewItem } from '@ionic/react';\nimport { RouteManagerContext, StackContext, generateId, getConfig } from '@ionic/react';\nimport React from 'react';\nimport { matchPath } from 'react-router-dom';\n\nimport { clonePageElement } from './clonePageElement';\n\n// TODO(FW-2959): types\n\ninterface StackManagerProps {\n  routeInfo: RouteInfo;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface StackManagerState {}\n\nconst isViewVisible = (el: HTMLElement) =>\n  !el.classList.contains('ion-page-invisible') && !el.classList.contains('ion-page-hidden');\n\nexport class StackManager extends React.PureComponent<StackManagerProps, StackManagerState> {\n  id: string;\n  context!: React.ContextType<typeof RouteManagerContext>;\n  ionRouterOutlet?: React.ReactElement;\n  routerOutletElement: HTMLIonRouterOutletElement | undefined;\n  prevProps?: StackManagerProps;\n  skipTransition: boolean;\n\n  stackContextValue: StackContextState = {\n    registerIonPage: this.registerIonPage.bind(this),\n    isInOutlet: () => true,\n  };\n\n  private clearOutletTimeout: any;\n  private pendingPageTransition = false;\n\n  constructor(props: StackManagerProps) {\n    super(props);\n    this.registerIonPage = this.registerIonPage.bind(this);\n    this.transitionPage = this.transitionPage.bind(this);\n    this.handlePageTransition = this.handlePageTransition.bind(this);\n    this.id = generateId('routerOutlet');\n    this.prevProps = undefined;\n    this.skipTransition = false;\n  }\n\n  componentDidMount() {\n    if (this.clearOutletTimeout) {\n      /**\n       * The clearOutlet integration with React Router is a bit hacky.\n       * It uses a timeout to clear the outlet after a transition.\n       * In React v18, components are mounted and unmounted in development mode\n       * to check for side effects.\n       *\n       * This clearTimeout prevents the outlet from being cleared when the component is re-mounted,\n       * which should only happen in development mode and as a result of a hot reload.\n       */\n      clearTimeout(this.clearOutletTimeout);\n    }\n    if (this.routerOutletElement) {\n      this.setupRouterOutlet(this.routerOutletElement);\n      this.handlePageTransition(this.props.routeInfo);\n    }\n  }\n\n  componentDidUpdate(prevProps: StackManagerProps) {\n    const { pathname } = this.props.routeInfo;\n    const { pathname: prevPathname } = prevProps.routeInfo;\n\n    if (pathname !== prevPathname) {\n      this.prevProps = prevProps;\n      this.handlePageTransition(this.props.routeInfo);\n    } else if (this.pendingPageTransition) {\n      this.handlePageTransition(this.props.routeInfo);\n      this.pendingPageTransition = false;\n    }\n  }\n\n  componentWillUnmount() {\n    this.clearOutletTimeout = this.context.clearOutlet(this.id);\n  }\n\n  async handlePageTransition(routeInfo: RouteInfo) {\n    if (!this.routerOutletElement || !this.routerOutletElement.commit) {\n      /**\n       * The route outlet has not mounted yet. We need to wait for it to render\n       * before we can transition the page.\n       *\n       * Set a flag to indicate that we should transition the page after\n       * the component has updated.\n       */\n      this.pendingPageTransition = true;\n    } else {\n      let enteringViewItem = this.context.findViewItemByRouteInfo(routeInfo, this.id);\n      let leavingViewItem = this.context.findLeavingViewItemByRouteInfo(routeInfo, this.id);\n\n      if (!leavingViewItem && routeInfo.prevRouteLastPathname) {\n        leavingViewItem = this.context.findViewItemByPathname(routeInfo.prevRouteLastPathname, this.id);\n      }\n\n      // Check if leavingViewItem should be unmounted\n      if (leavingViewItem) {\n        if (routeInfo.routeAction === 'replace') {\n          leavingViewItem.mount = false;\n        } else if (!(routeInfo.routeAction === 'push' && routeInfo.routeDirection === 'forward')) {\n          if (routeInfo.routeDirection !== 'none' && enteringViewItem !== leavingViewItem) {\n            leavingViewItem.mount = false;\n          }\n        } else if (routeInfo.routeOptions?.unmount) {\n          leavingViewItem.mount = false;\n        }\n      }\n\n      const enteringRoute = matchRoute(this.ionRouterOutlet?.props.children, routeInfo) as React.ReactElement;\n\n      if (enteringViewItem) {\n        enteringViewItem.reactElement = enteringRoute;\n      } else if (enteringRoute) {\n        enteringViewItem = this.context.createViewItem(this.id, enteringRoute, routeInfo);\n        this.context.addViewItem(enteringViewItem);\n      }\n\n      if (enteringViewItem && enteringViewItem.ionPageElement) {\n        /**\n         * If the entering view item is the same as the leaving view item,\n         * then we don't need to transition.\n         */\n        if (enteringViewItem === leavingViewItem) {\n          /**\n           * If the entering view item is the same as the leaving view item,\n           * we are either transitioning using parameterized routes to the same view\n           * or a parent router outlet is re-rendering as a result of React props changing.\n           *\n           * If the route data does not match the current path, the parent router outlet\n           * is attempting to transition and we cancel the operation.\n           */\n          if (enteringViewItem.routeData.match.url !== routeInfo.pathname) {\n            return;\n          }\n        }\n\n        /**\n         * If there isn't a leaving view item, but the route info indicates\n         * that the user has routed from a previous path, then we need\n         * to find the leaving view item to transition between.\n         */\n        if (!leavingViewItem && this.props.routeInfo.prevRouteLastPathname) {\n          leavingViewItem = this.context.findViewItemByPathname(this.props.routeInfo.prevRouteLastPathname, this.id);\n        }\n\n        /**\n         * If the entering view is already visible and the leaving view is not, the transition does not need to occur.\n         */\n        if (\n          isViewVisible(enteringViewItem.ionPageElement) &&\n          leavingViewItem !== undefined &&\n          !isViewVisible(leavingViewItem.ionPageElement!)\n        ) {\n          return;\n        }\n\n        /**\n         * The view should only be transitioned in the following cases:\n         * 1. Performing a replace or pop action, such as a swipe to go back gesture\n         * to animation the leaving view off the screen.\n         *\n         * 2. Navigating between top-level router outlets, such as /page-1 to /page-2;\n         * or navigating within a nested outlet, such as /tabs/tab-1 to /tabs/tab-2.\n         *\n         * 3. The entering view is an ion-router-outlet containing a page\n         * matching the current route and that hasn't already transitioned in.\n         *\n         * This should only happen when navigating directly to a nested router outlet\n         * route or on an initial page load (i.e. refreshing). In cases when loading\n         * /tabs/tab-1, we need to transition the /tabs page element into the view.\n         */\n        this.transitionPage(routeInfo, enteringViewItem, leavingViewItem);\n      } else if (leavingViewItem && !enteringRoute && !enteringViewItem) {\n        // If we have a leavingView but no entering view/route, we are probably leaving to\n        // another outlet, so hide this leavingView. We do it in a timeout to give time for a\n        // transition to finish.\n        // setTimeout(() => {\n        if (leavingViewItem.ionPageElement) {\n          leavingViewItem.ionPageElement.classList.add('ion-page-hidden');\n          leavingViewItem.ionPageElement.setAttribute('aria-hidden', 'true');\n        }\n        // }, 250);\n      }\n\n      this.forceUpdate();\n    }\n  }\n\n  registerIonPage(page: HTMLElement, routeInfo: RouteInfo) {\n    const foundView = this.context.findViewItemByRouteInfo(routeInfo, this.id);\n    if (foundView) {\n      const oldPageElement = foundView.ionPageElement;\n      foundView.ionPageElement = page;\n      foundView.ionRoute = true;\n\n      /**\n       * React 18 will unmount and remount IonPage\n       * elements in development mode when using createRoot.\n       * This can cause duplicate page transitions to occur.\n       */\n      if (oldPageElement === page) {\n        return;\n      }\n    }\n    this.handlePageTransition(routeInfo);\n  }\n\n  async setupRouterOutlet(routerOutlet: HTMLIonRouterOutletElement) {\n    const canStart = () => {\n      const config = getConfig();\n      const swipeEnabled = config && config.get('swipeBackEnabled', routerOutlet.mode === 'ios');\n      if (!swipeEnabled) {\n        return false;\n      }\n\n      const { routeInfo } = this.props;\n\n      const propsToUse =\n        this.prevProps && this.prevProps.routeInfo.pathname === routeInfo.pushedByRoute\n          ? this.prevProps.routeInfo\n          : ({ pathname: routeInfo.pushedByRoute || '' } as any);\n      const enteringViewItem = this.context.findViewItemByRouteInfo(propsToUse, this.id, false);\n\n      return (\n        !!enteringViewItem &&\n        /**\n         * The root url '/' is treated as\n         * the first view item (but is never mounted),\n         * so we do not want to swipe back to the\n         * root url.\n         */\n        enteringViewItem.mount &&\n        /**\n         * When on the first page (whatever view\n         * you land on after the root url) it\n         * is possible for findViewItemByRouteInfo to\n         * return the exact same view you are currently on.\n         * Make sure that we are not swiping back to the same\n         * instances of a view.\n         */\n        enteringViewItem.routeData.match.path !== routeInfo.pathname\n      );\n    };\n\n    const onStart = async () => {\n      const { routeInfo } = this.props;\n\n      const propsToUse =\n        this.prevProps && this.prevProps.routeInfo.pathname === routeInfo.pushedByRoute\n          ? this.prevProps.routeInfo\n          : ({ pathname: routeInfo.pushedByRoute || '' } as any);\n      const enteringViewItem = this.context.findViewItemByRouteInfo(propsToUse, this.id, false);\n      const leavingViewItem = this.context.findViewItemByRouteInfo(routeInfo, this.id, false);\n\n      /**\n       * When the gesture starts, kick off\n       * a transition that is controlled\n       * via a swipe gesture.\n       */\n      if (enteringViewItem && leavingViewItem) {\n        await this.transitionPage(routeInfo, enteringViewItem, leavingViewItem, 'back', true);\n      }\n\n      return Promise.resolve();\n    };\n    const onEnd = (shouldContinue: boolean) => {\n      if (shouldContinue) {\n        this.skipTransition = true;\n\n        this.context.goBack();\n      } else {\n        /**\n         * In the event that the swipe\n         * gesture was aborted, we should\n         * re-hide the page that was going to enter.\n         */\n        const { routeInfo } = this.props;\n\n        const propsToUse =\n          this.prevProps && this.prevProps.routeInfo.pathname === routeInfo.pushedByRoute\n            ? this.prevProps.routeInfo\n            : ({ pathname: routeInfo.pushedByRoute || '' } as any);\n        const enteringViewItem = this.context.findViewItemByRouteInfo(propsToUse, this.id, false);\n        const leavingViewItem = this.context.findViewItemByRouteInfo(routeInfo, this.id, false);\n\n        /**\n         * Ionic React has a design defect where it\n         * a) Unmounts the leaving view item when using parameterized routes\n         * b) Considers the current view to be the entering view when using\n         * parameterized routes\n         *\n         * As a result, we should not hide the view item here\n         * as it will cause the current view to be hidden.\n         */\n        if (enteringViewItem !== leavingViewItem && enteringViewItem?.ionPageElement !== undefined) {\n          const { ionPageElement } = enteringViewItem;\n          ionPageElement.setAttribute('aria-hidden', 'true');\n          ionPageElement.classList.add('ion-page-hidden');\n        }\n      }\n    };\n\n    routerOutlet.swipeHandler = {\n      canStart,\n      onStart,\n      onEnd,\n    };\n  }\n\n  async transitionPage(\n    routeInfo: RouteInfo,\n    enteringViewItem: ViewItem,\n    leavingViewItem?: ViewItem,\n    direction?: 'forward' | 'back',\n    progressAnimation = false\n  ) {\n    const runCommit = async (enteringEl: HTMLElement, leavingEl?: HTMLElement) => {\n      const skipTransition = this.skipTransition;\n\n      /**\n       * If the transition was handled\n       * via the swipe to go back gesture,\n       * then we do not want to perform\n       * another transition.\n       *\n       * We skip adding ion-page or ion-page-invisible\n       * because the entering view already exists in the DOM.\n       * If we added the classes, there would be a flicker where\n       * the view would be briefly hidden.\n       */\n      if (skipTransition) {\n        /**\n         * We need to reset skipTransition before\n         * we call routerOutlet.commit otherwise\n         * the transition triggered by the swipe\n         * to go back gesture would reset it. In\n         * that case you would see a duplicate\n         * transition triggered by handlePageTransition\n         * in componentDidUpdate.\n         */\n        this.skipTransition = false;\n      } else {\n        enteringEl.classList.add('ion-page');\n        enteringEl.classList.add('ion-page-invisible');\n      }\n\n      await routerOutlet.commit(enteringEl, leavingEl, {\n        duration: skipTransition || directionToUse === undefined ? 0 : undefined,\n        direction: directionToUse,\n        showGoBack: !!routeInfo.pushedByRoute,\n        progressAnimation,\n        animationBuilder: routeInfo.routeAnimation,\n      });\n    };\n\n    const routerOutlet = this.routerOutletElement!;\n\n    const routeInfoFallbackDirection =\n      routeInfo.routeDirection === 'none' || routeInfo.routeDirection === 'root' ? undefined : routeInfo.routeDirection;\n    const directionToUse = direction ?? routeInfoFallbackDirection;\n\n    if (enteringViewItem && enteringViewItem.ionPageElement && this.routerOutletElement) {\n      if (leavingViewItem && leavingViewItem.ionPageElement && enteringViewItem === leavingViewItem) {\n        // If a page is transitioning to another version of itself\n        // we clone it so we can have an animation to show\n\n        const match = matchComponent(leavingViewItem.reactElement, routeInfo.pathname, true);\n        if (match) {\n          const newLeavingElement = clonePageElement(leavingViewItem.ionPageElement.outerHTML);\n          if (newLeavingElement) {\n            this.routerOutletElement.appendChild(newLeavingElement);\n            await runCommit(enteringViewItem.ionPageElement, newLeavingElement);\n            this.routerOutletElement.removeChild(newLeavingElement);\n          }\n        } else {\n          await runCommit(enteringViewItem.ionPageElement, undefined);\n        }\n      } else {\n        await runCommit(enteringViewItem.ionPageElement, leavingViewItem?.ionPageElement);\n        if (leavingViewItem && leavingViewItem.ionPageElement && !progressAnimation) {\n          leavingViewItem.ionPageElement.classList.add('ion-page-hidden');\n          leavingViewItem.ionPageElement.setAttribute('aria-hidden', 'true');\n        }\n      }\n    }\n  }\n\n  render() {\n    const { children } = this.props;\n    const ionRouterOutlet = React.Children.only(children) as React.ReactElement;\n    this.ionRouterOutlet = ionRouterOutlet;\n\n    const components = this.context.getChildrenToRender(this.id, this.ionRouterOutlet, this.props.routeInfo, () => {\n      this.forceUpdate();\n    });\n\n    return (\n      <StackContext.Provider value={this.stackContextValue}>\n        {React.cloneElement(\n          ionRouterOutlet as any,\n          {\n            ref: (node: HTMLIonRouterOutletElement) => {\n              if (ionRouterOutlet.props.setRef) {\n                ionRouterOutlet.props.setRef(node);\n              }\n              if (ionRouterOutlet.props.forwardedRef) {\n                ionRouterOutlet.props.forwardedRef.current = node;\n              }\n              this.routerOutletElement = node;\n              const { ref } = ionRouterOutlet as any;\n              if (typeof ref === 'function') {\n                ref(node);\n              }\n            },\n          },\n          components\n        )}\n      </StackContext.Provider>\n    );\n  }\n\n  static get contextType() {\n    return RouteManagerContext;\n  }\n}\n\nexport default StackManager;\n\nfunction matchRoute(node: React.ReactNode, routeInfo: RouteInfo) {\n  let matchedNode: React.ReactNode;\n  React.Children.forEach(node as React.ReactElement, (child: React.ReactElement) => {\n    const matchProps = {\n      exact: child.props.exact,\n      path: child.props.path || child.props.from,\n      component: child.props.component,\n    };\n    const match = matchPath(routeInfo.pathname, matchProps);\n    if (match) {\n      matchedNode = child;\n    }\n  });\n\n  if (matchedNode) {\n    return matchedNode;\n  }\n  // If we haven't found a node\n  // try to find one that doesn't have a path or from prop, that will be our not found route\n  React.Children.forEach(node as React.ReactElement, (child: React.ReactElement) => {\n    if (!(child.props.path || child.props.from)) {\n      matchedNode = child;\n    }\n  });\n\n  return matchedNode;\n}\n\nfunction matchComponent(node: React.ReactElement, pathname: string, forceExact?: boolean) {\n  const matchProps = {\n    exact: forceExact ? true : node.props.exact,\n    path: node.props.path || node.props.from,\n    component: node.props.component,\n  };\n  const match = matchPath(pathname, matchProps);\n\n  return match;\n}\n", "import type {\n  AnimationBuilder,\n  RouteAction,\n  RouteInfo,\n  RouteManagerContextState,\n  RouterDirection,\n  ViewItem,\n} from '@ionic/react';\nimport { LocationHistory, NavManager, RouteManagerContext, generateId, getConfig } from '@ionic/react';\nimport type { Action as HistoryAction, Location as HistoryLocation } from 'history';\nimport React from 'react';\nimport type { RouteComponentProps } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\n\nimport { IonRouteInner } from './IonRouteInner';\nimport { ReactRouterViewStack } from './ReactRouterViewStack';\nimport StackManager from './StackManager';\n\nexport interface LocationState {\n  direction?: RouterDirection;\n  routerOptions?: { as?: string; unmount?: boolean };\n}\n\ninterface IonRouteProps extends RouteComponentProps<{}, {}, LocationState> {\n  registerHistoryListener: (cb: (location: HistoryLocation<any>, action: HistoryAction) => void) => void;\n}\n\ninterface IonRouteState {\n  routeInfo: RouteInfo;\n}\n\nclass IonRouterInner extends React.PureComponent<IonRouteProps, IonRouteState> {\n  currentTab?: string;\n  exitViewFromOtherOutletHandlers: ((pathname: string) => ViewItem | undefined)[] = [];\n  incomingRouteParams?: Partial<RouteInfo>;\n  locationHistory = new LocationHistory();\n  viewStack = new ReactRouterViewStack();\n  routeMangerContextState: RouteManagerContextState = {\n    canGoBack: () => this.locationHistory.canGoBack(),\n    clearOutlet: this.viewStack.clear,\n    findViewItemByPathname: this.viewStack.findViewItemByPathname,\n    getChildrenToRender: this.viewStack.getChildrenToRender,\n    goBack: () => this.handleNavigateBack(),\n    createViewItem: this.viewStack.createViewItem,\n    findViewItemByRouteInfo: this.viewStack.findViewItemByRouteInfo,\n    findLeavingViewItemByRouteInfo: this.viewStack.findLeavingViewItemByRouteInfo,\n    addViewItem: this.viewStack.add,\n    unMountViewItem: this.viewStack.remove,\n  };\n\n  constructor(props: IonRouteProps) {\n    super(props);\n\n    const routeInfo = {\n      id: generateId('routeInfo'),\n      pathname: this.props.location.pathname,\n      search: this.props.location.search,\n    };\n\n    this.locationHistory.add(routeInfo);\n    this.handleChangeTab = this.handleChangeTab.bind(this);\n    this.handleResetTab = this.handleResetTab.bind(this);\n    this.handleNativeBack = this.handleNativeBack.bind(this);\n    this.handleNavigate = this.handleNavigate.bind(this);\n    this.handleNavigateBack = this.handleNavigateBack.bind(this);\n    this.props.registerHistoryListener(this.handleHistoryChange.bind(this));\n    this.handleSetCurrentTab = this.handleSetCurrentTab.bind(this);\n\n    this.state = {\n      routeInfo,\n    };\n  }\n\n  handleChangeTab(tab: string, path?: string, routeOptions?: any) {\n    if (!path) {\n      return;\n    }\n\n    const routeInfo = this.locationHistory.getCurrentRouteInfoForTab(tab);\n    const [pathname, search] = path.split('?');\n    if (routeInfo) {\n      this.incomingRouteParams = { ...routeInfo, routeAction: 'push', routeDirection: 'none' };\n      if (routeInfo.pathname === pathname) {\n        this.incomingRouteParams.routeOptions = routeOptions;\n        this.props.history.push(routeInfo.pathname + (routeInfo.search || ''));\n      } else {\n        this.incomingRouteParams.pathname = pathname;\n        this.incomingRouteParams.search = search ? '?' + search : undefined;\n        this.incomingRouteParams.routeOptions = routeOptions;\n        this.props.history.push(pathname + (search ? '?' + search : ''));\n      }\n    } else {\n      this.handleNavigate(pathname, 'push', 'none', undefined, routeOptions, tab);\n    }\n  }\n\n  handleHistoryChange(location: HistoryLocation<LocationState>, action: HistoryAction) {\n    let leavingLocationInfo: RouteInfo;\n    if (this.incomingRouteParams) {\n      if (this.incomingRouteParams.routeAction === 'replace') {\n        leavingLocationInfo = this.locationHistory.previous();\n      } else {\n        leavingLocationInfo = this.locationHistory.current();\n      }\n    } else {\n      leavingLocationInfo = this.locationHistory.current();\n    }\n\n    const leavingUrl = leavingLocationInfo.pathname + leavingLocationInfo.search;\n    if (leavingUrl !== location.pathname) {\n      if (!this.incomingRouteParams) {\n        if (action === 'REPLACE') {\n          this.incomingRouteParams = {\n            routeAction: 'replace',\n            routeDirection: 'none',\n            tab: this.currentTab,\n          };\n        }\n        if (action === 'POP') {\n          const currentRoute = this.locationHistory.current();\n          if (currentRoute && currentRoute.pushedByRoute) {\n            const prevInfo = this.locationHistory.findLastLocation(currentRoute);\n            this.incomingRouteParams = { ...prevInfo, routeAction: 'pop', routeDirection: 'back' };\n          } else {\n            this.incomingRouteParams = {\n              routeAction: 'pop',\n              routeDirection: 'none',\n              tab: this.currentTab,\n            };\n          }\n        }\n        if (!this.incomingRouteParams) {\n          this.incomingRouteParams = {\n            routeAction: 'push',\n            routeDirection: location.state?.direction || 'forward',\n            routeOptions: location.state?.routerOptions,\n            tab: this.currentTab,\n          };\n        }\n      }\n\n      let routeInfo: RouteInfo;\n\n      if (this.incomingRouteParams?.id) {\n        routeInfo = {\n          ...(this.incomingRouteParams as RouteInfo),\n          lastPathname: leavingLocationInfo.pathname,\n        };\n        this.locationHistory.add(routeInfo);\n      } else {\n        const isPushed =\n          this.incomingRouteParams.routeAction === 'push' && this.incomingRouteParams.routeDirection === 'forward';\n        routeInfo = {\n          id: generateId('routeInfo'),\n          ...this.incomingRouteParams,\n          lastPathname: leavingLocationInfo.pathname,\n          pathname: location.pathname,\n          search: location.search,\n          params: this.props.match.params,\n          prevRouteLastPathname: leavingLocationInfo.lastPathname,\n        };\n        if (isPushed) {\n          routeInfo.tab = leavingLocationInfo.tab;\n          routeInfo.pushedByRoute = leavingLocationInfo.pathname;\n        } else if (routeInfo.routeAction === 'pop') {\n          const r = this.locationHistory.findLastLocation(routeInfo);\n          routeInfo.pushedByRoute = r?.pushedByRoute;\n        } else if (routeInfo.routeAction === 'push' && routeInfo.tab !== leavingLocationInfo.tab) {\n          // If we are switching tabs grab the last route info for the tab and use its pushedByRoute\n          const lastRoute = this.locationHistory.getCurrentRouteInfoForTab(routeInfo.tab);\n          routeInfo.pushedByRoute = lastRoute?.pushedByRoute;\n        } else if (routeInfo.routeAction === 'replace') {\n          // Make sure to set the lastPathname, etc.. to the current route so the page transitions out\n          const currentRouteInfo = this.locationHistory.current();\n\n          /**\n           * If going from /home to /child, then replacing from\n           * /child to /home, we don't want the route info to\n           * say that /home was pushed by /home which is not correct.\n           */\n          const currentPushedBy = currentRouteInfo?.pushedByRoute;\n          const pushedByRoute =\n            currentPushedBy !== undefined && currentPushedBy !== routeInfo.pathname\n              ? currentPushedBy\n              : routeInfo.pushedByRoute;\n\n          routeInfo.lastPathname = currentRouteInfo?.pathname || routeInfo.lastPathname;\n          routeInfo.prevRouteLastPathname = currentRouteInfo?.lastPathname;\n          routeInfo.pushedByRoute = pushedByRoute;\n          routeInfo.routeDirection = currentRouteInfo?.routeDirection || routeInfo.routeDirection;\n          routeInfo.routeAnimation = currentRouteInfo?.routeAnimation || routeInfo.routeAnimation;\n        }\n\n        this.locationHistory.add(routeInfo);\n      }\n\n      this.setState({\n        routeInfo,\n      });\n    }\n\n    this.incomingRouteParams = undefined;\n  }\n\n  /**\n   * history@4.x uses goBack(), history@5.x uses back()\n   * TODO: If support for React Router <=5 is dropped\n   * this logic is no longer needed. We can just\n   * assume back() is available.\n   */\n  handleNativeBack() {\n    const history = this.props.history as any;\n    const goBack = history.goBack || history.back;\n    goBack();\n  }\n\n  handleNavigate(\n    path: string,\n    routeAction: RouteAction,\n    routeDirection?: RouterDirection,\n    routeAnimation?: AnimationBuilder,\n    routeOptions?: any,\n    tab?: string\n  ) {\n    this.incomingRouteParams = Object.assign(this.incomingRouteParams || {}, {\n      routeAction,\n      routeDirection,\n      routeOptions,\n      routeAnimation,\n      tab,\n    });\n\n    if (routeAction === 'push') {\n      this.props.history.push(path);\n    } else {\n      this.props.history.replace(path);\n    }\n  }\n\n  handleNavigateBack(defaultHref: string | RouteInfo = '/', routeAnimation?: AnimationBuilder) {\n    const config = getConfig();\n    defaultHref = defaultHref ? defaultHref : config && config.get('backButtonDefaultHref' as any);\n    const routeInfo = this.locationHistory.current();\n    if (routeInfo && routeInfo.pushedByRoute) {\n      const prevInfo = this.locationHistory.findLastLocation(routeInfo);\n      if (prevInfo) {\n        this.incomingRouteParams = {\n          ...prevInfo,\n          routeAction: 'pop',\n          routeDirection: 'back',\n          routeAnimation: routeAnimation || routeInfo.routeAnimation,\n        };\n        if (\n          routeInfo.lastPathname === routeInfo.pushedByRoute ||\n          /**\n           * We need to exclude tab switches/tab\n           * context changes here because tabbed\n           * navigation is not linear, but router.back()\n           * will go back in a linear fashion.\n           */\n          (prevInfo.pathname === routeInfo.pushedByRoute && routeInfo.tab === '' && prevInfo.tab === '')\n        ) {\n          /**\n           * history@4.x uses goBack(), history@5.x uses back()\n           * TODO: If support for React Router <=5 is dropped\n           * this logic is no longer needed. We can just\n           * assume back() is available.\n           */\n          const history = this.props.history as any;\n          const goBack = history.goBack || history.back;\n          goBack();\n        } else {\n          this.handleNavigate(prevInfo.pathname + (prevInfo.search || ''), 'pop', 'back');\n        }\n      } else {\n        this.handleNavigate(defaultHref as string, 'pop', 'back');\n      }\n    } else {\n      this.handleNavigate(defaultHref as string, 'pop', 'back');\n    }\n  }\n\n  handleResetTab(tab: string, originalHref: string, originalRouteOptions: any) {\n    const routeInfo = this.locationHistory.getFirstRouteInfoForTab(tab);\n    if (routeInfo) {\n      const newRouteInfo = { ...routeInfo };\n      newRouteInfo.pathname = originalHref;\n      newRouteInfo.routeOptions = originalRouteOptions;\n      this.incomingRouteParams = { ...newRouteInfo, routeAction: 'pop', routeDirection: 'back' };\n      this.props.history.push(newRouteInfo.pathname + (newRouteInfo.search || ''));\n    }\n  }\n\n  handleSetCurrentTab(tab: string) {\n    this.currentTab = tab;\n    const ri = { ...this.locationHistory.current() };\n    if (ri.tab !== tab) {\n      ri.tab = tab;\n      this.locationHistory.update(ri);\n    }\n  }\n\n  render() {\n    return (\n      <RouteManagerContext.Provider value={this.routeMangerContextState}>\n        <NavManager\n          ionRoute={IonRouteInner}\n          ionRedirect={{}}\n          stackManager={StackManager}\n          routeInfo={this.state.routeInfo!}\n          onNativeBack={this.handleNativeBack}\n          onNavigateBack={this.handleNavigateBack}\n          onNavigate={this.handleNavigate}\n          onSetCurrentTab={this.handleSetCurrentTab}\n          onChangeTab={this.handleChangeTab}\n          onResetTab={this.handleResetTab}\n          locationHistory={this.locationHistory}\n        >\n          {this.props.children}\n        </NavManager>\n      </RouteManagerContext.Provider>\n    );\n  }\n}\n\nexport const IonRouter = withRouter(IonRouterInner);\nIonRouter.displayName = 'IonRouter';\n", "import type { Action as HistoryAction, History, Location as HistoryLocation } from 'history';\nimport { createBrowserHistory as createHistory } from 'history';\nimport React from 'react';\nimport type { BrowserRouterProps } from 'react-router-dom';\nimport { Router } from 'react-router-dom';\n\nimport { IonRouter } from './IonRouter';\n\ninterface IonReactRouterProps extends BrowserRouterProps {\n  history?: History;\n}\n\nexport class IonReactRouter extends React.Component<IonReactRouterProps> {\n  historyListenHandler?: (location: HistoryLocation, action: HistoryAction) => void;\n  history: History;\n\n  constructor(props: IonReactRouterProps) {\n    super(props);\n    const { history, ...rest } = props;\n    this.history = history || createHistory(rest);\n    this.history.listen(this.handleHistoryChange.bind(this));\n    this.registerHistoryListener = this.registerHistoryListener.bind(this);\n  }\n\n  /**\n   * history@4.x passes separate location and action\n   * params. history@5.x passes location and action\n   * together as a single object.\n   * TODO: If support for React Router <=5 is dropped\n   * this logic is no longer needed. We can just assume\n   * a single object with both location and action.\n   */\n  handleHistoryChange(location: HistoryLocation, action: HistoryAction) {\n    const locationValue = (location as any).location || location;\n    const actionValue = (location as any).action || action;\n    if (this.historyListenHandler) {\n      this.historyListenHandler(locationValue, actionValue);\n    }\n  }\n\n  registerHistoryListener(cb: (location: HistoryLocation, action: HistoryAction) => void) {\n    this.historyListenHandler = cb;\n  }\n\n  render() {\n    const { children, ...props } = this.props;\n    return (\n      <Router history={this.history} {...props}>\n        <IonRouter registerHistoryListener={this.registerHistoryListener}>{children}</IonRouter>\n      </Router>\n    );\n  }\n}\n", "import type { Action as HistoryAction, Location as HistoryLocation, MemoryHistory } from 'history';\nimport React from 'react';\nimport type { MemoryRouterProps } from 'react-router';\nimport { Router } from 'react-router';\n\nimport { IonRouter } from './IonRouter';\n\ninterface IonReactMemoryRouterProps extends MemoryRouterProps {\n  history: MemoryHistory;\n}\n\nexport class IonReactMemoryRouter extends React.Component<IonReactMemoryRouterProps> {\n  history: MemoryHistory;\n  historyListenHandler?: (location: HistoryLocation, action: HistoryAction) => void;\n\n  constructor(props: IonReactMemoryRouterProps) {\n    super(props);\n    this.history = props.history;\n    this.history.listen(this.handleHistoryChange.bind(this));\n    this.registerHistoryListener = this.registerHistoryListener.bind(this);\n  }\n\n  /**\n   * history@4.x passes separate location and action\n   * params. history@5.x passes location and action\n   * together as a single object.\n   * TODO: If support for React Router <=5 is dropped\n   * this logic is no longer needed. We can just assume\n   * a single object with both location and action.\n   */\n  handleHistoryChange(location: HistoryLocation, action: HistoryAction) {\n    const locationValue = (location as any).location || location;\n    const actionValue = (location as any).action || action;\n    if (this.historyListenHandler) {\n      this.historyListenHandler(locationValue, actionValue);\n    }\n  }\n\n  registerHistoryListener(cb: (location: HistoryLocation, action: HistoryAction) => void) {\n    this.historyListenHandler = cb;\n  }\n\n  render() {\n    const { children, ...props } = this.props;\n    return (\n      <Router {...props}>\n        <IonRouter registerHistoryListener={this.registerHistoryListener}>{children}</IonRouter>\n      </Router>\n    );\n  }\n}\n", "import type { Action as HistoryAction, History, Location as HistoryLocation } from 'history';\nimport { createHashHistory as createHistory } from 'history';\nimport React from 'react';\nimport type { BrowserRouterProps } from 'react-router-dom';\nimport { Router } from 'react-router-dom';\n\nimport { IonRouter } from './IonRouter';\n\ninterface IonReactHashRouterProps extends BrowserRouterProps {\n  history?: History;\n}\n\nexport class IonReactHashRouter extends React.Component<IonReactHashRouterProps> {\n  history: History;\n  historyListenHandler?: (location: HistoryLocation, action: HistoryAction) => void;\n\n  constructor(props: IonReactHashRouterProps) {\n    super(props);\n    const { history, ...rest } = props;\n    this.history = history || createHistory(rest);\n    this.history.listen(this.handleHistoryChange.bind(this));\n    this.registerHistoryListener = this.registerHistoryListener.bind(this);\n  }\n\n  /**\n   * history@4.x passes separate location and action\n   * params. history@5.x passes location and action\n   * together as a single object.\n   * TODO: If support for React Router <=5 is dropped\n   * this logic is no longer needed. We can just assume\n   * a single object with both location and action.\n   */\n  handleHistoryChange(location: HistoryLocation, action: HistoryAction) {\n    const locationValue = (location as any).location || location;\n    const actionValue = (location as any).action || action;\n    if (this.historyListenHandler) {\n      this.historyListenHandler(locationValue, actionValue);\n    }\n  }\n\n  registerHistoryListener(cb: (location: HistoryLocation, action: HistoryAction) => void) {\n    this.historyListenHandler = cb;\n  }\n\n  render() {\n    const { children, ...props } = this.props;\n    return (\n      <Router history={this.history} {...props}>\n        <IonRouter registerHistoryListener={this.registerHistoryListener}>{children}</IonRouter>\n      </Router>\n    );\n  }\n}\n"],
  "mappings": "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",
  "names": ["Action", "index", "action", "location", "React", "matchComponent", "matchPath", "createHistory", "Router"]
}
