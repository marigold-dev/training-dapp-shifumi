{
  "version": 3,
  "sources": ["../../@taquito/http-utils/node_modules/axios/lib/helpers/bind.js", "../../@taquito/http-utils/node_modules/axios/lib/utils.js", "../../@taquito/http-utils/node_modules/axios/lib/helpers/buildURL.js", "../../@taquito/http-utils/node_modules/axios/lib/core/InterceptorManager.js", "../../@taquito/http-utils/node_modules/axios/lib/helpers/normalizeHeaderName.js", "../../@taquito/http-utils/node_modules/axios/lib/core/AxiosError.js", "../../@taquito/http-utils/node_modules/axios/lib/defaults/transitional.js", "../../@taquito/http-utils/node_modules/axios/lib/helpers/toFormData.js", "../../@taquito/http-utils/node_modules/axios/lib/core/settle.js", "../../@taquito/http-utils/node_modules/axios/lib/helpers/cookies.js", "../../@taquito/http-utils/node_modules/axios/lib/helpers/isAbsoluteURL.js", "../../@taquito/http-utils/node_modules/axios/lib/helpers/combineURLs.js", "../../@taquito/http-utils/node_modules/axios/lib/core/buildFullPath.js", "../../@taquito/http-utils/node_modules/axios/lib/helpers/parseHeaders.js", "../../@taquito/http-utils/node_modules/axios/lib/helpers/isURLSameOrigin.js", "../../@taquito/http-utils/node_modules/axios/lib/cancel/CanceledError.js", "../../@taquito/http-utils/node_modules/axios/lib/helpers/parseProtocol.js", "../../@taquito/http-utils/node_modules/axios/lib/adapters/xhr.js", "../../@taquito/http-utils/node_modules/axios/lib/helpers/null.js", "../../@taquito/http-utils/node_modules/axios/lib/defaults/index.js", "../../@taquito/http-utils/node_modules/axios/lib/core/transformData.js", "../../@taquito/http-utils/node_modules/axios/lib/cancel/isCancel.js", "../../@taquito/http-utils/node_modules/axios/lib/core/dispatchRequest.js", "../../@taquito/http-utils/node_modules/axios/lib/core/mergeConfig.js", "../../@taquito/http-utils/node_modules/axios/lib/env/data.js", "../../@taquito/http-utils/node_modules/axios/lib/helpers/validator.js", "../../@taquito/http-utils/node_modules/axios/lib/core/Axios.js", "../../@taquito/http-utils/node_modules/axios/lib/cancel/CancelToken.js", "../../@taquito/http-utils/node_modules/axios/lib/helpers/spread.js", "../../@taquito/http-utils/node_modules/axios/lib/helpers/isAxiosError.js", "../../@taquito/http-utils/node_modules/axios/lib/axios.js", "../../@taquito/http-utils/node_modules/axios/index.js", "../../@stablelib/random/source/browser.ts", "../../@stablelib/wipe/wipe.ts", "../../@stablelib/random/source/node.ts", "../../@stablelib/random/source/system.ts", "../../@stablelib/int/int.ts", "../../@stablelib/binary/binary.ts", "../../@stablelib/random/random.ts", "../../@stablelib/sha512/sha512.ts", "../../@stablelib/ed25519/ed25519.ts", "../../@stablelib/blake2b/blake2b.ts", "../../blakejs/util.js", "../../blakejs/blake2b.js", "../../blakejs/blake2s.js", "../../blakejs/index.js", "../../@noble/hashes/src/_assert.ts", "../../@noble/hashes/src/crypto.ts", "../../@noble/hashes/src/utils.ts", "../../@noble/hashes/src/_sha2.ts", "../../@noble/hashes/src/sha256.ts", "../../@taquito/utils/node_modules/base-x/src/index.js", "../../@taquito/utils/node_modules/bs58/index.js", "../../@taquito/utils/node_modules/bs58check/base.js", "../../@taquito/utils/node_modules/bs58check/index.js", "../../typedarray-to-buffer/index.js", "../../fast-json-stable-stringify/index.js", "../../@taquito/http-utils/dist/taquito-http-utils.es6.js", "../../@taquito/core/dist/taquito-core.es6.js", "../../@taquito/utils/dist/taquito-utils.es6.js", "../../@taquito/rpc/dist/taquito-rpc.es6.js", "../../rxjs/src/internal/util/isFunction.ts", "../../rxjs/src/internal/util/createErrorClass.ts", "../../rxjs/src/internal/util/UnsubscriptionError.ts", "../../rxjs/src/internal/util/arrRemove.ts", "../../rxjs/src/internal/Subscription.ts", "../../rxjs/src/internal/config.ts", "../../rxjs/src/internal/scheduler/timeoutProvider.ts", "../../rxjs/src/internal/util/reportUnhandledError.ts", "../../rxjs/src/internal/util/noop.ts", "../../rxjs/src/internal/NotificationFactories.ts", "../../rxjs/src/internal/util/errorContext.ts", "../../rxjs/src/internal/Subscriber.ts", "../../rxjs/src/internal/symbol/observable.ts", "../../rxjs/src/internal/util/identity.ts", "../../rxjs/src/internal/util/pipe.ts", "../../rxjs/src/internal/Observable.ts", "../../rxjs/src/internal/util/lift.ts", "../../rxjs/src/internal/operators/OperatorSubscriber.ts", "../../rxjs/src/internal/operators/refCount.ts", "../../rxjs/src/internal/observable/ConnectableObservable.ts", "../../rxjs/src/internal/scheduler/performanceTimestampProvider.ts", "../../rxjs/src/internal/scheduler/animationFrameProvider.ts", "../../rxjs/src/internal/observable/dom/animationFrames.ts", "../../rxjs/src/internal/util/ObjectUnsubscribedError.ts", "../../rxjs/src/internal/Subject.ts", "../../rxjs/src/internal/BehaviorSubject.ts", "../../rxjs/src/internal/scheduler/dateTimestampProvider.ts", "../../rxjs/src/internal/ReplaySubject.ts", "../../rxjs/src/internal/AsyncSubject.ts", "../../rxjs/src/internal/scheduler/Action.ts", "../../rxjs/src/internal/scheduler/intervalProvider.ts", "../../rxjs/src/internal/scheduler/AsyncAction.ts", "../../rxjs/src/internal/util/Immediate.ts", "../../rxjs/src/internal/scheduler/immediateProvider.ts", "../../rxjs/src/internal/scheduler/AsapAction.ts", "../../rxjs/src/internal/Scheduler.ts", "../../rxjs/src/internal/scheduler/AsyncScheduler.ts", "../../rxjs/src/internal/scheduler/AsapScheduler.ts", "../../rxjs/src/internal/scheduler/asap.ts", "../../rxjs/src/internal/scheduler/async.ts", "../../rxjs/src/internal/scheduler/QueueAction.ts", "../../rxjs/src/internal/scheduler/QueueScheduler.ts", "../../rxjs/src/internal/scheduler/queue.ts", "../../rxjs/src/internal/scheduler/AnimationFrameAction.ts", "../../rxjs/src/internal/scheduler/AnimationFrameScheduler.ts", "../../rxjs/src/internal/scheduler/animationFrame.ts", "../../rxjs/src/internal/scheduler/VirtualTimeScheduler.ts", "../../rxjs/src/internal/observable/empty.ts", "../../rxjs/src/internal/util/isScheduler.ts", "../../rxjs/src/internal/util/args.ts", "../../rxjs/src/internal/util/isArrayLike.ts", "../../rxjs/src/internal/util/isPromise.ts", "../../rxjs/src/internal/util/isInteropObservable.ts", "../../rxjs/src/internal/util/isAsyncIterable.ts", "../../rxjs/src/internal/util/throwUnobservableError.ts", "../../rxjs/src/internal/symbol/iterator.ts", "../../rxjs/src/internal/util/isIterable.ts", "../../rxjs/src/internal/util/isReadableStreamLike.ts", "../../rxjs/src/internal/observable/innerFrom.ts", "../../rxjs/src/internal/util/executeSchedule.ts", "../../rxjs/src/internal/operators/observeOn.ts", "../../rxjs/src/internal/operators/subscribeOn.ts", "../../rxjs/src/internal/scheduled/scheduleObservable.ts", "../../rxjs/src/internal/scheduled/schedulePromise.ts", "../../rxjs/src/internal/scheduled/scheduleArray.ts", "../../rxjs/src/internal/scheduled/scheduleIterable.ts", "../../rxjs/src/internal/scheduled/scheduleAsyncIterable.ts", "../../rxjs/src/internal/scheduled/scheduleReadableStreamLike.ts", "../../rxjs/src/internal/scheduled/scheduled.ts", "../../rxjs/src/internal/observable/from.ts", "../../rxjs/src/internal/observable/of.ts", "../../rxjs/src/internal/observable/throwError.ts", "../../rxjs/src/internal/Notification.ts", "../../rxjs/src/internal/util/EmptyError.ts", "../../rxjs/src/internal/util/ArgumentOutOfRangeError.ts", "../../rxjs/src/internal/util/NotFoundError.ts", "../../rxjs/src/internal/util/SequenceError.ts", "../../rxjs/src/internal/util/isDate.ts", "../../rxjs/src/internal/operators/timeout.ts", "../../rxjs/src/internal/operators/map.ts", "../../rxjs/src/internal/util/mapOneOrManyArgs.ts", "../../rxjs/src/internal/util/argsArgArrayOrObject.ts", "../../rxjs/src/internal/util/createObject.ts", "../../rxjs/src/internal/observable/combineLatest.ts", "../../rxjs/src/internal/operators/mergeInternals.ts", "../../rxjs/src/internal/operators/mergeMap.ts", "../../rxjs/src/internal/operators/mergeAll.ts", "../../rxjs/src/internal/operators/concatAll.ts", "../../rxjs/src/internal/observable/concat.ts", "../../rxjs/src/internal/observable/defer.ts", "../../rxjs/src/internal/observable/timer.ts", "../../rxjs/src/internal/observable/never.ts", "../../rxjs/src/internal/util/argsOrArgArray.ts", "../../rxjs/src/internal/operators/filter.ts", "../../rxjs/src/internal/observable/range.ts", "../../rxjs/src/internal/operators/catchError.ts", "../../rxjs/src/internal/operators/concatMap.ts", "../../rxjs/src/internal/observable/fromSubscribable.ts", "../../rxjs/src/internal/operators/connect.ts", "../../rxjs/src/internal/operators/defaultIfEmpty.ts", "../../rxjs/src/internal/operators/take.ts", "../../rxjs/src/internal/operators/distinctUntilChanged.ts", "../../rxjs/src/internal/operators/distinctUntilKeyChanged.ts", "../../rxjs/src/internal/operators/throwIfEmpty.ts", "../../rxjs/src/internal/operators/endWith.ts", "../../rxjs/src/internal/operators/first.ts", "../../rxjs/src/internal/operators/multicast.ts", "../../rxjs/src/internal/operators/pluck.ts", "../../rxjs/src/internal/operators/publish.ts", "../../rxjs/src/internal/operators/retry.ts", "../../rxjs/src/internal/operators/share.ts", "../../rxjs/src/internal/operators/shareReplay.ts", "../../rxjs/src/internal/operators/startWith.ts", "../../rxjs/src/internal/operators/switchMap.ts", "../../rxjs/src/internal/operators/takeUntil.ts", "../../rxjs/src/internal/operators/takeWhile.ts", "../../rxjs/src/internal/operators/tap.ts", "../../@taquito/michelson-encoder/dist/taquito-michelson-encoder.es6.js", "../../@taquito/michel-codec/dist/taquito-michel-codec.es6.js", "../../@taquito/local-forging/dist/taquito-local-forging.es6.js", "../../@taquito/taquito/dist/taquito.es6.js"],
  "sourcesContent": ["'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n", "'use strict';\n\nvar bind = require('./helpers/bind');\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n// eslint-disable-next-line func-names\nvar kindOf = (function(cache) {\n  // eslint-disable-next-line func-names\n  return function(thing) {\n    var str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n  };\n})(Object.create(null));\n\nfunction kindOfTest(type) {\n  type = type.toLowerCase();\n  return function isKindOf(thing) {\n    return kindOf(thing) === type;\n  };\n}\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return Array.isArray(val);\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nvar isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nvar isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nvar isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nvar isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nvar isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} thing The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(thing) {\n  var pattern = '[object FormData]';\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) ||\n    toString.call(thing) === pattern ||\n    (isFunction(thing.toString) && thing.toString() === pattern)\n  );\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nvar isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.trim ? str.trim() : str.replace(/^\\s+|\\s+$/g, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n */\n\nfunction inherits(constructor, superConstructor, props, descriptors) {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function} [filter]\n * @returns {Object}\n */\n\nfunction toFlatObject(sourceObj, destObj, filter) {\n  var props;\n  var i;\n  var prop;\n  var merged = {};\n\n  destObj = destObj || {};\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if (!merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = Object.getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/*\n * determines whether a string ends with the characters of a specified string\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n * @returns {boolean}\n */\nfunction endsWith(str, searchString, position) {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  var lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object\n * @param {*} [thing]\n * @returns {Array}\n */\nfunction toArray(thing) {\n  if (!thing) return null;\n  var i = thing.length;\n  if (isUndefined(i)) return null;\n  var arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n// eslint-disable-next-line func-names\nvar isTypedArray = (function(TypedArray) {\n  // eslint-disable-next-line func-names\n  return function(thing) {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && Object.getPrototypeOf(Uint8Array));\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM,\n  inherits: inherits,\n  toFlatObject: toFlatObject,\n  kindOf: kindOf,\n  kindOfTest: kindOfTest,\n  endsWith: endsWith,\n  toArray: toArray,\n  isTypedArray: isTypedArray,\n  isFileList: isFileList\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected,\n    synchronous: options ? options.synchronous : false,\n    runWhen: options ? options.runWhen : null\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n", "'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n", "'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nvar prototype = AxiosError.prototype;\nvar descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED'\n// eslint-disable-next-line func-names\n].forEach(function(code) {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = function(error, code, config, request, response, customProps) {\n  var axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nmodule.exports = AxiosError;\n", "'use strict';\n\nmodule.exports = {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n", "'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Convert a data object to FormData\n * @param {Object} obj\n * @param {?Object} [formData]\n * @returns {Object}\n **/\n\nfunction toFormData(obj, formData) {\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new FormData();\n\n  var stack = [];\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  function build(data, parentKey) {\n    if (utils.isPlainObject(data) || utils.isArray(data)) {\n      if (stack.indexOf(data) !== -1) {\n        throw Error('Circular reference detected in ' + parentKey);\n      }\n\n      stack.push(data);\n\n      utils.forEach(data, function each(value, key) {\n        if (utils.isUndefined(value)) return;\n        var fullKey = parentKey ? parentKey + '.' + key : key;\n        var arr;\n\n        if (value && !parentKey && typeof value === 'object') {\n          if (utils.endsWith(key, '{}')) {\n            // eslint-disable-next-line no-param-reassign\n            value = JSON.stringify(value);\n          } else if (utils.endsWith(key, '[]') && (arr = utils.toArray(value))) {\n            // eslint-disable-next-line func-names\n            arr.forEach(function(el) {\n              !utils.isUndefined(el) && formData.append(fullKey, convertValue(el));\n            });\n            return;\n          }\n        }\n\n        build(value, fullKey);\n      });\n\n      stack.pop();\n    } else {\n      formData.append(parentKey, convertValue(data));\n    }\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nmodule.exports = toFormData;\n", "'use strict';\n\nvar AxiosError = require('./AxiosError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n", "'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n};\n", "'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n", "'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n", "'use strict';\n\nvar AxiosError = require('../core/AxiosError');\nvar utils = require('../utils');\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction CanceledError(message) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nmodule.exports = CanceledError;\n", "'use strict';\n\nmodule.exports = function parseProtocol(url) {\n  var match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n};\n", "'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar transitionalDefaults = require('../defaults/transitional');\nvar AxiosError = require('../core/AxiosError');\nvar CanceledError = require('../cancel/CanceledError');\nvar parseProtocol = require('../helpers/parseProtocol');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n    var responseType = config.responseType;\n    var onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData) && utils.isStandardBrowserEnv()) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\n        request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      var transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = function(cancel) {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || (cancel && cancel.type) ? new CanceledError() : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    var protocol = parseProtocol(fullPath);\n\n    if (protocol && [ 'http', 'https', 'file' ].indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n", "// eslint-disable-next-line strict\nmodule.exports = null;\n", "'use strict';\n\nvar utils = require('../utils');\nvar normalizeHeaderName = require('../helpers/normalizeHeaderName');\nvar AxiosError = require('../core/AxiosError');\nvar transitionalDefaults = require('./transitional');\nvar toFormData = require('../helpers/toFormData');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('../adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('../adapters/http');\n  }\n  return adapter;\n}\n\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nvar defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n\n    var isObjectPayload = utils.isObject(data);\n    var contentType = headers && headers['Content-Type'];\n\n    var isFileList;\n\n    if ((isFileList = utils.isFileList(data)) || (isObjectPayload && contentType === 'multipart/form-data')) {\n      var _FormData = this.env && this.env.FormData;\n      return toFormData(isFileList ? {'files[]': data} : data, _FormData && new _FormData());\n    } else if (isObjectPayload || contentType === 'application/json') {\n      setContentTypeIfUnset(headers, 'application/json');\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    var transitional = this.transitional || defaults.transitional;\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\n\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: require('./env/FormData')\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n", "'use strict';\n\nvar utils = require('./../utils');\nvar defaults = require('../defaults');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  var context = this || defaults;\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(context, data, headers);\n  });\n\n  return data;\n};\n", "'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n", "'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar CanceledError = require('../cancel/CanceledError');\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n", "'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(prop) {\n    if (prop in config2) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  var mergeMap = {\n    'url': valueFromConfig2,\n    'method': valueFromConfig2,\n    'data': valueFromConfig2,\n    'baseURL': defaultToConfig2,\n    'transformRequest': defaultToConfig2,\n    'transformResponse': defaultToConfig2,\n    'paramsSerializer': defaultToConfig2,\n    'timeout': defaultToConfig2,\n    'timeoutMessage': defaultToConfig2,\n    'withCredentials': defaultToConfig2,\n    'adapter': defaultToConfig2,\n    'responseType': defaultToConfig2,\n    'xsrfCookieName': defaultToConfig2,\n    'xsrfHeaderName': defaultToConfig2,\n    'onUploadProgress': defaultToConfig2,\n    'onDownloadProgress': defaultToConfig2,\n    'decompress': defaultToConfig2,\n    'maxContentLength': defaultToConfig2,\n    'maxBodyLength': defaultToConfig2,\n    'beforeRedirect': defaultToConfig2,\n    'transport': defaultToConfig2,\n    'httpAgent': defaultToConfig2,\n    'httpsAgent': defaultToConfig2,\n    'cancelToken': defaultToConfig2,\n    'socketPath': defaultToConfig2,\n    'responseEncoding': defaultToConfig2,\n    'validateStatus': mergeDirectKeys\n  };\n\n  utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {\n    var merge = mergeMap[prop] || mergeDeepProperties;\n    var configValue = merge(prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n};\n", "module.exports = {\n  \"version\": \"0.27.2\"\n};", "'use strict';\n\nvar VERSION = require('../env/data').version;\nvar AxiosError = require('../core/AxiosError');\n\nvar validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nvar deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return function(value, opt, opts) {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  var keys = Object.keys(options);\n  var i = keys.length;\n  while (i-- > 0) {\n    var opt = keys[i];\n    var validator = schema[opt];\n    if (validator) {\n      var value = options[opt];\n      var result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nmodule.exports = {\n  assertOptions: assertOptions,\n  validators: validators\n};\n", "'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\nvar buildFullPath = require('./buildFullPath');\nvar validator = require('../helpers/validator');\n\nvar validators = validator.validators;\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(configOrUrl, config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof configOrUrl === 'string') {\n    config = config || {};\n    config.url = configOrUrl;\n  } else {\n    config = configOrUrl || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  var transitional = config.transitional;\n\n  if (transitional !== undefined) {\n    validator.assertOptions(transitional, {\n      silentJSONParsing: validators.transitional(validators.boolean),\n      forcedJSONParsing: validators.transitional(validators.boolean),\n      clarifyTimeoutError: validators.transitional(validators.boolean)\n    }, false);\n  }\n\n  // filter out skipped interceptors\n  var requestInterceptorChain = [];\n  var synchronousRequestInterceptors = true;\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n      return;\n    }\n\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var responseInterceptorChain = [];\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var promise;\n\n  if (!synchronousRequestInterceptors) {\n    var chain = [dispatchRequest, undefined];\n\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\n    chain = chain.concat(responseInterceptorChain);\n\n    promise = Promise.resolve(config);\n    while (chain.length) {\n      promise = promise.then(chain.shift(), chain.shift());\n    }\n\n    return promise;\n  }\n\n\n  var newConfig = config;\n  while (requestInterceptorChain.length) {\n    var onFulfilled = requestInterceptorChain.shift();\n    var onRejected = requestInterceptorChain.shift();\n    try {\n      newConfig = onFulfilled(newConfig);\n    } catch (error) {\n      onRejected(error);\n      break;\n    }\n  }\n\n  try {\n    promise = dispatchRequest(newConfig);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n\n  while (responseInterceptorChain.length) {\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  var fullPath = buildFullPath(config.baseURL, config.url);\n  return buildURL(fullPath, config.params, config.paramsSerializer);\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method: method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url: url,\n        data: data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nmodule.exports = Axios;\n", "'use strict';\n\nvar CanceledError = require('./CanceledError');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n\n  // eslint-disable-next-line func-names\n  this.promise.then(function(cancel) {\n    if (!token._listeners) return;\n\n    var i;\n    var l = token._listeners.length;\n\n    for (i = 0; i < l; i++) {\n      token._listeners[i](cancel);\n    }\n    token._listeners = null;\n  });\n\n  // eslint-disable-next-line func-names\n  this.promise.then = function(onfulfilled) {\n    var _resolve;\n    // eslint-disable-next-line func-names\n    var promise = new Promise(function(resolve) {\n      token.subscribe(resolve);\n      _resolve = resolve;\n    }).then(onfulfilled);\n\n    promise.cancel = function reject() {\n      token.unsubscribe(_resolve);\n    };\n\n    return promise;\n  };\n\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new CanceledError(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Subscribe to the cancel signal\n */\n\nCancelToken.prototype.subscribe = function subscribe(listener) {\n  if (this.reason) {\n    listener(this.reason);\n    return;\n  }\n\n  if (this._listeners) {\n    this._listeners.push(listener);\n  } else {\n    this._listeners = [listener];\n  }\n};\n\n/**\n * Unsubscribe from the cancel signal\n */\n\nCancelToken.prototype.unsubscribe = function unsubscribe(listener) {\n  if (!this._listeners) {\n    return;\n  }\n  var index = this._listeners.indexOf(listener);\n  if (index !== -1) {\n    this._listeners.splice(index, 1);\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n", "'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n};\n", "'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = require('./cancel/CanceledError');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\naxios.VERSION = require('./env/data').version;\naxios.toFormData = require('./helpers/toFormData');\n\n// Expose AxiosError class\naxios.AxiosError = require('../lib/core/AxiosError');\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n", "module.exports = require('./lib/axios');", "// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\nimport { RandomSource } from \"./\";\n\nconst QUOTA = 65536;\n\nexport class BrowserRandomSource implements RandomSource {\n    isAvailable = false;\n    isInstantiated = false;\n\n    private _crypto?: { getRandomValues: typeof window.crypto.getRandomValues };\n\n    constructor() {\n        const browserCrypto = typeof self !== 'undefined'\n            ? (self.crypto || (self as { msCrypto?: any }).msCrypto) // IE11 has msCrypto\n            : null;\n\n        if (browserCrypto && browserCrypto.getRandomValues !== undefined) {\n            this._crypto = browserCrypto;\n            this.isAvailable = true;\n            this.isInstantiated = true;\n        }\n    }\n\n    randomBytes(length: number): Uint8Array {\n        if (!this.isAvailable || !this._crypto) {\n            throw new Error(\"Browser random byte generator is not available.\");\n        }\n        const out = new Uint8Array(length);\n        for (let i = 0; i < out.length; i += QUOTA) {\n            this._crypto.getRandomValues(out.subarray(i, i + Math.min(out.length - i, QUOTA)));\n        }\n        return out;\n    }\n}\n", "// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package wipe implements functions for zeroing arrays.\n */\n\nexport type NumericArray = number[] | Uint8Array | Int8Array | Uint16Array\n    | Int16Array | Uint32Array | Int32Array | Float32Array | Float64Array;\n\n/**\n * Sets all values in the given array to zero and returns it.\n *\n * The fact that it sets bytes to zero can be relied on.\n *\n * There is no guarantee that this function makes data disappear from memory,\n * as runtime implementation can, for example, have copying garbage collector\n * that will make copies of sensitive data before we wipe it. Or that an\n * operating system will write our data to swap or sleep image. Another thing\n * is that an optimizing compiler can remove calls to this function or make it\n * no-op. There's nothing we can do with it, so we just do our best and hope\n * that everything will be okay and good will triumph over evil.\n */\nexport function wipe(array: NumericArray): NumericArray {\n    // Right now it's similar to array.fill(0). If it turns\n    // out that runtimes optimize this call away, maybe\n    // we can try something else.\n    for (let i = 0; i < array.length; i++) {\n        array[i] = 0;\n    }\n    return array;\n}\n", "// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\nimport { RandomSource } from \"./\";\nimport { wipe } from \"@stablelib/wipe\";\n\ndeclare function require(name: string): any;\n\nexport class NodeRandomSource implements RandomSource {\n    isAvailable = false;\n    isInstantiated = false;\n\n    private _crypto: { randomBytes(n: number): Uint8Array } | undefined;\n\n    constructor() {\n        if (typeof require !== \"undefined\") {\n            const nodeCrypto = require(\"crypto\");\n            if (nodeCrypto && nodeCrypto.randomBytes) {\n                this._crypto = nodeCrypto;\n                this.isAvailable = true;\n                this.isInstantiated = true;\n            }\n        }\n    }\n\n    randomBytes(length: number): Uint8Array {\n        if (!this.isAvailable || !this._crypto) {\n            throw new Error(\"Node.js random byte generator is not available.\");\n        }\n\n        // Get random bytes (result is Buffer).\n        let buffer = this._crypto.randomBytes(length);\n\n        // Make sure we got the length that we requested.\n        if (buffer.length !== length) {\n            throw new Error(\"NodeRandomSource: got fewer bytes than requested\");\n        }\n\n        // Allocate output array.\n        const out = new Uint8Array(length);\n\n        // Copy bytes from buffer to output.\n        for (let i = 0; i < out.length; i++) {\n            out[i] = buffer[i];\n        }\n\n        // Cleanup.\n        wipe(buffer);\n\n        return out;\n    }\n}\n", "// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\nimport { RandomSource } from \"./\";\nimport { BrowserRandomSource } from \"./browser\";\nimport { NodeRandomSource } from \"./node\";\n\nexport class SystemRandomSource implements RandomSource {\n    isAvailable = false;\n    name = \"\";\n    private _source: RandomSource;\n\n    constructor() {\n        // Try browser.\n        this._source = new BrowserRandomSource();\n        if (this._source.isAvailable) {\n            this.isAvailable = true;\n            this.name = \"Browser\";\n            return;\n        }\n\n        // If no browser source, try Node.\n        this._source = new NodeRandomSource();\n        if (this._source.isAvailable) {\n            this.isAvailable = true;\n            this.name = \"Node\";\n            return;\n        }\n\n        // No sources, we're out of options.\n    }\n\n    randomBytes(length: number): Uint8Array {\n        if (!this.isAvailable) {\n            throw new Error(\"System random byte generator is not available.\");\n        }\n        return this._source.randomBytes(length);\n    }\n}\n", "// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package int provides helper functions for integerss.\n */\n\n// Shim using 16-bit pieces.\nfunction imulShim(a: number, b: number): number {\n    const ah = (a >>> 16) & 0xffff, al = a & 0xffff;\n    const bh = (b >>> 16) & 0xffff, bl = b & 0xffff;\n    return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0) | 0);\n}\n\n/** 32-bit integer multiplication.  */\n// Use system Math.imul if available, otherwise use our shim.\nexport const mul = (Math as { imul?(a: number, b: number): number }).imul || imulShim;\n\n/** 32-bit integer addition.  */\nexport function add(a: number, b: number): number {\n    return (a + b) | 0;\n}\n\n/**  32-bit integer subtraction.  */\nexport function sub(a: number, b: number): number {\n    return (a - b) | 0;\n}\n\n/** 32-bit integer left rotation */\nexport function rotl(x: number, n: number): number {\n    return x << n | x >>> (32 - n);\n}\n\n/** 32-bit integer left rotation */\nexport function rotr(x: number, n: number): number {\n    return x << (32 - n) | x >>> n;\n}\n\nfunction isIntegerShim(n: number): boolean {\n    return typeof n === \"number\" && isFinite(n) && Math.floor(n) === n;\n}\n\n/**\n * Returns true if the argument is an integer number.\n *\n * In ES2015, Number.isInteger.\n */\nexport const isInteger = (Number as { isInteger?(n: number): boolean }).isInteger || isIntegerShim;\n\n/**\n *  Math.pow(2, 53) - 1\n *\n *  In ES2015 Number.MAX_SAFE_INTEGER.\n */\nexport const MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Returns true if the argument is a safe integer number\n * (-MIN_SAFE_INTEGER < number <= MAX_SAFE_INTEGER)\n *\n * In ES2015, Number.isSafeInteger.\n */\nexport const isSafeInteger = (n: number): boolean =>\n    isInteger(n) && (n >= -MAX_SAFE_INTEGER && n <= MAX_SAFE_INTEGER);\n", "// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package binary provides functions for encoding and decoding numbers in byte arrays.\n */\n\nimport { isSafeInteger } from \"@stablelib/int\";\n\n// TODO(dchest): add asserts for correct value ranges and array offsets.\n\n/**\n * Reads 2 bytes from array starting at offset as big-endian\n * signed 16-bit integer and returns it.\n */\nexport function readInt16BE(array: Uint8Array, offset = 0): number {\n    return (((array[offset + 0] << 8) | array[offset + 1]) << 16) >> 16;\n}\n\n/**\n * Reads 2 bytes from array starting at offset as big-endian\n * unsigned 16-bit integer and returns it.\n */\nexport function readUint16BE(array: Uint8Array, offset = 0): number {\n    return ((array[offset + 0] << 8) | array[offset + 1]) >>> 0;\n}\n\n/**\n * Reads 2 bytes from array starting at offset as little-endian\n * signed 16-bit integer and returns it.\n */\nexport function readInt16LE(array: Uint8Array, offset = 0): number {\n    return (((array[offset + 1] << 8) | array[offset]) << 16) >> 16;\n}\n\n/**\n * Reads 2 bytes from array starting at offset as little-endian\n * unsigned 16-bit integer and returns it.\n */\nexport function readUint16LE(array: Uint8Array, offset = 0): number {\n    return ((array[offset + 1] << 8) | array[offset]) >>> 0;\n}\n\n/**\n * Writes 2-byte big-endian representation of 16-bit unsigned\n * value to byte array starting at offset.\n *\n * If byte array is not given, creates a new 2-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeUint16BE(value: number, out = new Uint8Array(2), offset = 0): Uint8Array {\n    out[offset + 0] = value >>> 8;\n    out[offset + 1] = value >>> 0;\n    return out;\n}\n\nexport const writeInt16BE = writeUint16BE;\n\n/**\n * Writes 2-byte little-endian representation of 16-bit unsigned\n * value to array starting at offset.\n *\n * If byte array is not given, creates a new 2-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeUint16LE(value: number, out = new Uint8Array(2), offset = 0): Uint8Array {\n    out[offset + 0] = value >>> 0;\n    out[offset + 1] = value >>> 8;\n    return out;\n}\n\nexport const writeInt16LE = writeUint16LE;\n\n/**\n * Reads 4 bytes from array starting at offset as big-endian\n * signed 32-bit integer and returns it.\n */\nexport function readInt32BE(array: Uint8Array, offset = 0): number {\n    return (array[offset] << 24) |\n        (array[offset + 1] << 16) |\n        (array[offset + 2] << 8) |\n        array[offset + 3];\n}\n\n/**\n * Reads 4 bytes from array starting at offset as big-endian\n * unsigned 32-bit integer and returns it.\n */\nexport function readUint32BE(array: Uint8Array, offset = 0): number {\n    return ((array[offset] << 24) |\n        (array[offset + 1] << 16) |\n        (array[offset + 2] << 8) |\n        array[offset + 3]) >>> 0;\n}\n\n/**\n * Reads 4 bytes from array starting at offset as little-endian\n * signed 32-bit integer and returns it.\n */\nexport function readInt32LE(array: Uint8Array, offset = 0): number {\n    return (array[offset + 3] << 24) |\n        (array[offset + 2] << 16) |\n        (array[offset + 1] << 8) |\n        array[offset];\n}\n\n/**\n * Reads 4 bytes from array starting at offset as little-endian\n * unsigned 32-bit integer and returns it.\n */\nexport function readUint32LE(array: Uint8Array, offset = 0): number {\n    return ((array[offset + 3] << 24) |\n        (array[offset + 2] << 16) |\n        (array[offset + 1] << 8) |\n        array[offset]) >>> 0;\n}\n\n/**\n * Writes 4-byte big-endian representation of 32-bit unsigned\n * value to byte array starting at offset.\n *\n * If byte array is not given, creates a new 4-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeUint32BE(value: number, out = new Uint8Array(4), offset = 0): Uint8Array {\n    out[offset + 0] = value >>> 24;\n    out[offset + 1] = value >>> 16;\n    out[offset + 2] = value >>> 8;\n    out[offset + 3] = value >>> 0;\n    return out;\n}\n\nexport const writeInt32BE = writeUint32BE;\n\n/**\n * Writes 4-byte little-endian representation of 32-bit unsigned\n * value to array starting at offset.\n *\n * If byte array is not given, creates a new 4-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeUint32LE(value: number, out = new Uint8Array(4), offset = 0): Uint8Array {\n    out[offset + 0] = value >>> 0;\n    out[offset + 1] = value >>> 8;\n    out[offset + 2] = value >>> 16;\n    out[offset + 3] = value >>> 24;\n    return out;\n}\n\n\nexport const writeInt32LE = writeUint32LE;\n\n/**\n * Reads 8 bytes from array starting at offset as big-endian\n * signed 64-bit integer and returns it.\n *\n * IMPORTANT: due to JavaScript limitation, supports exact\n * numbers in range -9007199254740991 to 9007199254740991.\n * If the number stored in the byte array is outside this range,\n * the result is not exact.\n */\nexport function readInt64BE(array: Uint8Array, offset = 0): number {\n    const hi = readInt32BE(array, offset);\n    const lo = readInt32BE(array, offset + 4);\n    return hi * 0x100000000 + lo - ((lo>>31) * 0x100000000);\n}\n\n/**\n * Reads 8 bytes from array starting at offset as big-endian\n * unsigned 64-bit integer and returns it.\n *\n * IMPORTANT: due to JavaScript limitation, supports values up to 2^53-1.\n */\nexport function readUint64BE(array: Uint8Array, offset = 0): number {\n    const hi = readUint32BE(array, offset);\n    const lo = readUint32BE(array, offset + 4);\n    return hi * 0x100000000 + lo;\n}\n\n/**\n * Reads 8 bytes from array starting at offset as little-endian\n * signed 64-bit integer and returns it.\n *\n * IMPORTANT: due to JavaScript limitation, supports exact\n * numbers in range -9007199254740991 to 9007199254740991.\n * If the number stored in the byte array is outside this range,\n * the result is not exact.\n */\nexport function readInt64LE(array: Uint8Array, offset = 0): number {\n    const lo = readInt32LE(array, offset);\n    const hi = readInt32LE(array, offset + 4);\n    return hi * 0x100000000 + lo - ((lo>>31) * 0x100000000);\n}\n\n\n/**\n * Reads 8 bytes from array starting at offset as little-endian\n * unsigned 64-bit integer and returns it.\n *\n * IMPORTANT: due to JavaScript limitation, supports values up to 2^53-1.\n */\nexport function readUint64LE(array: Uint8Array, offset = 0): number {\n    const lo = readUint32LE(array, offset);\n    const hi = readUint32LE(array, offset + 4);\n    return hi * 0x100000000 + lo;\n}\n\n/**\n * Writes 8-byte big-endian representation of 64-bit unsigned\n * value to byte array starting at offset.\n *\n * Due to JavaScript limitation, supports values up to 2^53-1.\n *\n * If byte array is not given, creates a new 8-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeUint64BE(value: number, out = new Uint8Array(8), offset = 0): Uint8Array {\n    writeUint32BE(value / 0x100000000 >>> 0, out, offset);\n    writeUint32BE(value >>> 0, out, offset + 4);\n    return out;\n}\n\nexport const writeInt64BE = writeUint64BE;\n\n/**\n * Writes 8-byte little-endian representation of 64-bit unsigned\n * value to byte array starting at offset.\n *\n * Due to JavaScript limitation, supports values up to 2^53-1.\n *\n * If byte array is not given, creates a new 8-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeUint64LE(value: number, out = new Uint8Array(8), offset = 0): Uint8Array {\n    writeUint32LE(value >>> 0, out, offset);\n    writeUint32LE(value / 0x100000000 >>> 0, out, offset + 4);\n    return out;\n}\n\nexport const writeInt64LE = writeUint64LE;\n\n/**\n * Reads bytes from array starting at offset as big-endian\n * unsigned bitLen-bit integer and returns it.\n *\n * Supports bit lengths divisible by 8, up to 48.\n */\nexport function readUintBE(bitLength: number, array: Uint8Array, offset = 0): number {\n    // TODO(dchest): implement support for bitLengths non-divisible by 8\n    if (bitLength % 8 !== 0) {\n        throw new Error(\"readUintBE supports only bitLengths divisible by 8\");\n    }\n    if (bitLength / 8 > array.length - offset) {\n        throw new Error(\"readUintBE: array is too short for the given bitLength\");\n    }\n    let result = 0;\n    let mul = 1;\n    for (let i = bitLength / 8 + offset - 1; i >= offset; i--) {\n        result += array[i] * mul;\n        mul *= 256;\n    }\n    return result;\n}\n\n/**\n * Reads bytes from array starting at offset as little-endian\n * unsigned bitLen-bit integer and returns it.\n *\n * Supports bit lengths divisible by 8, up to 48.\n */\nexport function readUintLE(bitLength: number, array: Uint8Array, offset = 0): number {\n    // TODO(dchest): implement support for bitLengths non-divisible by 8\n    if (bitLength % 8 !== 0) {\n        throw new Error(\"readUintLE supports only bitLengths divisible by 8\");\n    }\n    if (bitLength / 8 > array.length - offset) {\n        throw new Error(\"readUintLE: array is too short for the given bitLength\");\n    }\n    let result = 0;\n    let mul = 1;\n    for (let i = offset; i < offset + bitLength / 8; i++) {\n        result += array[i] * mul;\n        mul *= 256;\n    }\n    return result;\n}\n\n/**\n * Writes a big-endian representation of bitLen-bit unsigned\n * value to array starting at offset.\n *\n * Supports bit lengths divisible by 8, up to 48.\n *\n * If byte array is not given, creates a new one.\n *\n * Returns the output byte array.\n */\nexport function writeUintBE(bitLength: number, value: number,\n    out = new Uint8Array(bitLength / 8), offset = 0): Uint8Array {\n    // TODO(dchest): implement support for bitLengths non-divisible by 8\n    if (bitLength % 8 !== 0) {\n        throw new Error(\"writeUintBE supports only bitLengths divisible by 8\");\n    }\n    if (!isSafeInteger(value)) {\n        throw new Error(\"writeUintBE value must be an integer\");\n    }\n    let div = 1;\n    for (let i = bitLength / 8 + offset - 1; i >= offset; i--) {\n        out[i] = (value / div) & 0xff;\n        div *= 256;\n    }\n    return out;\n}\n\n/**\n * Writes a little-endian representation of bitLen-bit unsigned\n * value to array starting at offset.\n *\n * Supports bit lengths divisible by 8, up to 48.\n *\n * If byte array is not given, creates a new one.\n *\n * Returns the output byte array.\n */\nexport function writeUintLE(bitLength: number, value: number,\n    out = new Uint8Array(bitLength / 8), offset = 0): Uint8Array {\n    // TODO(dchest): implement support for bitLengths non-divisible by 8\n    if (bitLength % 8 !== 0) {\n        throw new Error(\"writeUintLE supports only bitLengths divisible by 8\");\n    }\n    if (!isSafeInteger(value)) {\n        throw new Error(\"writeUintLE value must be an integer\");\n    }\n    let div = 1;\n    for (let i = offset; i < offset + bitLength / 8; i++) {\n        out[i] = (value / div) & 0xff;\n        div *= 256;\n    }\n    return out;\n}\n\n/**\n * Reads 4 bytes from array starting at offset as big-endian\n * 32-bit floating-point number and returns it.\n */\nexport function readFloat32BE(array: Uint8Array, offset = 0): number {\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getFloat32(offset);\n}\n\n/**\n * Reads 4 bytes from array starting at offset as little-endian\n * 32-bit floating-point number and returns it.\n */\nexport function readFloat32LE(array: Uint8Array, offset = 0): number {\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getFloat32(offset, true);\n}\n\n/**\n * Reads 8 bytes from array starting at offset as big-endian\n * 64-bit floating-point number (\"double\") and returns it.\n */\nexport function readFloat64BE(array: Uint8Array, offset = 0): number {\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getFloat64(offset);\n}\n\n/**\n * Reads 8 bytes from array starting at offset as little-endian\n * 64-bit floating-point number (\"double\") and returns it.\n */\nexport function readFloat64LE(array: Uint8Array, offset = 0): number {\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getFloat64(offset, true);\n}\n\n/**\n * Writes 4-byte big-endian floating-point representation of value\n * to byte array starting at offset.\n *\n * If byte array is not given, creates a new 4-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeFloat32BE(value: number, out = new Uint8Array(4), offset = 0): Uint8Array {\n    const view = new DataView(out.buffer, out.byteOffset, out.byteLength);\n    view.setFloat32(offset, value);\n    return out;\n}\n\n/**\n * Writes 4-byte little-endian floating-point representation of value\n * to byte array starting at offset.\n *\n * If byte array is not given, creates a new 4-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeFloat32LE(value: number, out = new Uint8Array(4), offset = 0): Uint8Array {\n    const view = new DataView(out.buffer, out.byteOffset, out.byteLength);\n    view.setFloat32(offset, value, true);\n    return out;\n}\n\n/**\n * Writes 8-byte big-endian floating-point representation of value\n * to byte array starting at offset.\n *\n * If byte array is not given, creates a new 8-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeFloat64BE(value: number, out = new Uint8Array(8), offset = 0): Uint8Array {\n    const view = new DataView(out.buffer, out.byteOffset, out.byteLength);\n    view.setFloat64(offset, value);\n    return out;\n}\n\n/**\n * Writes 8-byte little-endian floating-point representation of value\n * to byte array starting at offset.\n *\n * If byte array is not given, creates a new 8-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeFloat64LE(value: number, out = new Uint8Array(8), offset = 0): Uint8Array {\n    const view = new DataView(out.buffer, out.byteOffset, out.byteLength);\n    view.setFloat64(offset, value, true);\n    return out;\n}\n", "// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package random provides functions to access system's\n * cryptographically secure random byte generator.\n */\n\nimport { RandomSource } from \"./source\";\nimport { SystemRandomSource } from \"./source/system\";\nimport { readUint32LE } from \"@stablelib/binary\";\nimport { wipe } from \"@stablelib/wipe\";\n\nexport { RandomSource } from \"./source\";\n\nexport const defaultRandomSource = new SystemRandomSource();\n\nexport function randomBytes(length: number, prng: RandomSource = defaultRandomSource): Uint8Array {\n    return prng.randomBytes(length);\n}\n\n/**\n * Returns a uniformly random unsigned 32-bit integer.\n */\nexport function randomUint32(prng: RandomSource = defaultRandomSource): number {\n    // Generate 4-byte random buffer.\n    const buf = randomBytes(4, prng);\n\n    // Convert bytes from buffer into a 32-bit integer.\n    // It's not important which byte order to use, since\n    // the result is random.\n    const result = readUint32LE(buf);\n\n    // Clean the buffer.\n    wipe(buf);\n\n    return result;\n}\n\n/** 62 alphanumeric characters for default charset of randomString() */\nconst ALPHANUMERIC = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n\n/**\n * Returns a uniform random string of the given length\n * with characters from the given charset.\n *\n * Charset must not have more than 256 characters.\n *\n * Default charset generates case-sensitive alphanumeric\n * strings (0-9, A-Z, a-z).\n */\nexport function randomString(\n    length: number,\n    charset = ALPHANUMERIC,\n    prng: RandomSource = defaultRandomSource\n): string {\n    if (charset.length < 2) {\n        throw new Error(\"randomString charset is too short\");\n    }\n    if (charset.length > 256) {\n        throw new Error(\"randomString charset is too long\");\n    }\n    let out = '';\n    const charsLen = charset.length;\n    const maxByte = 256 - (256 % charsLen);\n    while (length > 0) {\n        const buf = randomBytes(Math.ceil(length * 256 / maxByte), prng);\n        for (let i = 0; i < buf.length && length > 0; i++) {\n            const randomByte = buf[i];\n            if (randomByte < maxByte) {\n                out += charset.charAt(randomByte % charsLen);\n                length--;\n            }\n        }\n        wipe(buf);\n    }\n    return out;\n}\n\n/**\n * Returns uniform random string containing at least the given\n * number of bits of entropy.\n *\n * For example, randomStringForEntropy(128) will return a 22-character\n * alphanumeric string, while randomStringForEntropy(128, \"0123456789\")\n * will return a 39-character numeric string, both will contain at\n * least 128 bits of entropy.\n *\n * Default charset generates case-sensitive alphanumeric\n * strings (0-9, A-Z, a-z).\n */\nexport function randomStringForEntropy(\n    bits: number,\n    charset = ALPHANUMERIC,\n    prng: RandomSource = defaultRandomSource\n): string {\n    const length = Math.ceil(bits / (Math.log(charset.length) / Math.LN2));\n    return randomString(length, charset, prng);\n}\n", "// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package sha512 implements SHA-2-512 cryptographic hash function.\n */\n\nimport { SerializableHash } from \"@stablelib/hash\";\nimport { readUint32BE, writeUint32BE } from \"@stablelib/binary\";\nimport { wipe } from \"@stablelib/wipe\";\n\nexport const DIGEST_LENGTH = 64;\nexport const BLOCK_SIZE = 128;\n\n/**\n * SHA-2-512 cryptographic hash algorithm.\n */\nexport class SHA512 implements SerializableHash {\n    /** Length of hash output */\n    readonly digestLength: number = DIGEST_LENGTH;\n\n    /** Block size */\n    readonly blockSize: number = BLOCK_SIZE;\n\n    // Note: Int32Array is used instead of Uint32Array for performance reasons.\n    protected _stateHi = new Int32Array(8); // hash state, high bytes\n    protected _stateLo = new Int32Array(8); // hash state, low bytes\n    private _tempHi = new Int32Array(16); // temporary state, high bytes\n    private _tempLo = new Int32Array(16); // temporary state, low bytes\n    private _buffer = new Uint8Array(256); // buffer for data to hash\n    private _bufferLength = 0; // number of bytes in buffer\n    private _bytesHashed = 0; // number of total bytes hashed\n    private _finished = false; // indicates whether the hash was finalized\n\n    constructor() {\n        this.reset();\n    }\n\n    protected _initState() {\n        this._stateHi[0] = 0x6a09e667;\n        this._stateHi[1] = 0xbb67ae85;\n        this._stateHi[2] = 0x3c6ef372;\n        this._stateHi[3] = 0xa54ff53a;\n        this._stateHi[4] = 0x510e527f;\n        this._stateHi[5] = 0x9b05688c;\n        this._stateHi[6] = 0x1f83d9ab;\n        this._stateHi[7] = 0x5be0cd19;\n\n        this._stateLo[0] = 0xf3bcc908;\n        this._stateLo[1] = 0x84caa73b;\n        this._stateLo[2] = 0xfe94f82b;\n        this._stateLo[3] = 0x5f1d36f1;\n        this._stateLo[4] = 0xade682d1;\n        this._stateLo[5] = 0x2b3e6c1f;\n        this._stateLo[6] = 0xfb41bd6b;\n        this._stateLo[7] = 0x137e2179;\n    }\n\n    /**\n     * Resets hash state making it possible\n     * to re-use this instance to hash other data.\n     */\n    reset(): this {\n        this._initState();\n        this._bufferLength = 0;\n        this._bytesHashed = 0;\n        this._finished = false;\n        return this;\n    }\n\n    /**\n     * Cleans internal buffers and resets hash state.\n     */\n    clean() {\n        wipe(this._buffer);\n        wipe(this._tempHi);\n        wipe(this._tempLo);\n        this.reset();\n    }\n\n    /**\n     * Updates hash state with the given data.\n     *\n     * Throws error when trying to update already finalized hash:\n     * instance must be reset to update it again.\n     */\n    update(data: Uint8Array, dataLength: number = data.length): this {\n        if (this._finished) {\n            throw new Error(\"SHA512: can't update because hash was finished.\");\n        }\n        let dataPos = 0;\n        this._bytesHashed += dataLength;\n        if (this._bufferLength > 0) {\n            while (this._bufferLength < BLOCK_SIZE && dataLength > 0) {\n                this._buffer[this._bufferLength++] = data[dataPos++];\n                dataLength--;\n            }\n            if (this._bufferLength === this.blockSize) {\n                hashBlocks(this._tempHi, this._tempLo, this._stateHi, this._stateLo,\n                    this._buffer, 0, this.blockSize);\n                this._bufferLength = 0;\n            }\n        }\n        if (dataLength >= this.blockSize) {\n            dataPos = hashBlocks(this._tempHi, this._tempLo, this._stateHi, this._stateLo,\n                data, dataPos, dataLength);\n            dataLength %= this.blockSize;\n        }\n        while (dataLength > 0) {\n            this._buffer[this._bufferLength++] = data[dataPos++];\n            dataLength--;\n        }\n        return this;\n    }\n\n    /**\n     * Finalizes hash state and puts hash into out.\n     * If hash was already finalized, puts the same value.\n     */\n    finish(out: Uint8Array): this {\n        if (!this._finished) {\n            const bytesHashed = this._bytesHashed;\n            const left = this._bufferLength;\n            const bitLenHi = (bytesHashed / 0x20000000) | 0;\n            const bitLenLo = bytesHashed << 3;\n            const padLength = (bytesHashed % 128 < 112) ? 128 : 256;\n\n            this._buffer[left] = 0x80;\n            for (let i = left + 1; i < padLength - 8; i++) {\n                this._buffer[i] = 0;\n            }\n            writeUint32BE(bitLenHi, this._buffer, padLength - 8);\n            writeUint32BE(bitLenLo, this._buffer, padLength - 4);\n\n            hashBlocks(this._tempHi, this._tempLo, this._stateHi, this._stateLo, this._buffer, 0, padLength);\n\n            this._finished = true;\n        }\n\n        for (let i = 0; i < this.digestLength / 8; i++) {\n            writeUint32BE(this._stateHi[i], out, i * 8);\n            writeUint32BE(this._stateLo[i], out, i * 8 + 4);\n        }\n\n        return this;\n    }\n\n    /**\n     * Returns the final hash digest.\n     */\n    digest(): Uint8Array {\n        const out = new Uint8Array(this.digestLength);\n        this.finish(out);\n        return out;\n    }\n\n    /**\n     * Function useful for HMAC/PBKDF2 optimization. Returns hash state to be\n     * used with restoreState(). Only chain value is saved, not buffers or\n     * other state variables.\n     */\n    saveState(): SavedState {\n        if (this._finished) {\n            throw new Error(\"SHA256: cannot save finished state\");\n        }\n        return {\n            stateHi: new Int32Array(this._stateHi),\n            stateLo: new Int32Array(this._stateLo),\n            buffer: this._bufferLength > 0 ? new Uint8Array(this._buffer) : undefined,\n            bufferLength: this._bufferLength,\n            bytesHashed: this._bytesHashed\n        };\n    }\n\n    /**\n     * Function useful for HMAC/PBKDF2 optimization. Restores state saved by\n     * saveState() and sets bytesHashed to the given value.\n     */\n    restoreState(savedState: SavedState): this {\n        this._stateHi.set(savedState.stateHi);\n        this._stateLo.set(savedState.stateLo);\n        this._bufferLength = savedState.bufferLength;\n        if (savedState.buffer) {\n            this._buffer.set(savedState.buffer);\n        }\n        this._bytesHashed = savedState.bytesHashed;\n        this._finished = false;\n        return this;\n    }\n\n    /**\n     * Cleans state returned by saveState().\n     */\n    cleanSavedState(savedState: SavedState) {\n        wipe(savedState.stateHi);\n        wipe(savedState.stateLo);\n        if (savedState.buffer) {\n            wipe(savedState.buffer);\n        }\n        savedState.bufferLength = 0;\n        savedState.bytesHashed = 0;\n    }\n}\n\nexport type SavedState = {\n    stateHi: Int32Array;\n    stateLo: Int32Array;\n    buffer: Uint8Array | undefined;\n    bufferLength: number;\n    bytesHashed: number;\n};\n\n// Constants\nconst K = new Int32Array([\n    0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n    0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n    0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n    0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n    0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n    0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n    0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n    0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n    0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n    0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n    0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n    0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n    0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n    0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n    0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n    0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n    0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n    0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n    0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n    0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n    0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n    0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n    0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n    0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n    0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n    0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n    0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n    0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n    0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n    0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n    0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n    0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n    0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n    0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n    0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n    0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n    0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n    0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n    0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n    0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n]);\n\n\nfunction hashBlocks(wh: Int32Array, wl: Int32Array, hh: Int32Array, hl: Int32Array,\n    m: Uint8Array, pos: number, len: number): number {\n\n    let ah0 = hh[0],\n        ah1 = hh[1],\n        ah2 = hh[2],\n        ah3 = hh[3],\n        ah4 = hh[4],\n        ah5 = hh[5],\n        ah6 = hh[6],\n        ah7 = hh[7],\n\n        al0 = hl[0],\n        al1 = hl[1],\n        al2 = hl[2],\n        al3 = hl[3],\n        al4 = hl[4],\n        al5 = hl[5],\n        al6 = hl[6],\n        al7 = hl[7];\n\n    let h: number, l: number;\n    let th: number, tl: number;\n    let a: number, b: number, c: number, d: number;\n\n    while (len >= 128) {\n        for (let i = 0; i < 16; i++) {\n            const j = 8 * i + pos;\n            wh[i] = readUint32BE(m, j);\n            wl[i] = readUint32BE(m, j + 4);\n        }\n        for (let i = 0; i < 80; i++) {\n            let bh0 = ah0;\n            let bh1 = ah1;\n            let bh2 = ah2;\n            let bh3 = ah3;\n            let bh4 = ah4;\n            let bh5 = ah5;\n            let bh6 = ah6;\n            let bh7 = ah7;\n\n            let bl0 = al0;\n            let bl1 = al1;\n            let bl2 = al2;\n            let bl3 = al3;\n            let bl4 = al4;\n            let bl5 = al5;\n            let bl6 = al6;\n            let bl7 = al7;\n\n            // add\n            h = ah7;\n            l = al7;\n\n            a = l & 0xffff; b = l >>> 16;\n            c = h & 0xffff; d = h >>> 16;\n\n            // Sigma1\n            h = ((ah4 >>> 14) | (al4 << (32 - 14))) ^ ((ah4 >>> 18) |\n                (al4 << (32 - 18))) ^ ((al4 >>> (41 - 32)) | (ah4 << (32 - (41 - 32))));\n            l = ((al4 >>> 14) | (ah4 << (32 - 14))) ^ ((al4 >>> 18) |\n                (ah4 << (32 - 18))) ^ ((ah4 >>> (41 - 32)) | (al4 << (32 - (41 - 32))));\n\n            a += l & 0xffff; b += l >>> 16;\n            c += h & 0xffff; d += h >>> 16;\n\n            // Ch\n            h = (ah4 & ah5) ^ (~ah4 & ah6);\n            l = (al4 & al5) ^ (~al4 & al6);\n\n            a += l & 0xffff; b += l >>> 16;\n            c += h & 0xffff; d += h >>> 16;\n\n            // K\n            h = K[i * 2];\n            l = K[i * 2 + 1];\n\n            a += l & 0xffff; b += l >>> 16;\n            c += h & 0xffff; d += h >>> 16;\n\n            // w\n            h = wh[i % 16];\n            l = wl[i % 16];\n\n            a += l & 0xffff; b += l >>> 16;\n            c += h & 0xffff; d += h >>> 16;\n\n            b += a >>> 16;\n            c += b >>> 16;\n            d += c >>> 16;\n\n            th = c & 0xffff | d << 16;\n            tl = a & 0xffff | b << 16;\n\n            // add\n            h = th;\n            l = tl;\n\n            a = l & 0xffff; b = l >>> 16;\n            c = h & 0xffff; d = h >>> 16;\n\n            // Sigma0\n            h = ((ah0 >>> 28) | (al0 << (32 - 28))) ^ ((al0 >>> (34 - 32)) |\n                (ah0 << (32 - (34 - 32)))) ^ ((al0 >>> (39 - 32)) | (ah0 << (32 - (39 - 32))));\n            l = ((al0 >>> 28) | (ah0 << (32 - 28))) ^ ((ah0 >>> (34 - 32)) |\n                (al0 << (32 - (34 - 32)))) ^ ((ah0 >>> (39 - 32)) | (al0 << (32 - (39 - 32))));\n\n            a += l & 0xffff; b += l >>> 16;\n            c += h & 0xffff; d += h >>> 16;\n\n            // Maj\n            h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n            l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n            a += l & 0xffff; b += l >>> 16;\n            c += h & 0xffff; d += h >>> 16;\n\n            b += a >>> 16;\n            c += b >>> 16;\n            d += c >>> 16;\n\n            bh7 = (c & 0xffff) | (d << 16);\n            bl7 = (a & 0xffff) | (b << 16);\n\n            // add\n            h = bh3;\n            l = bl3;\n\n            a = l & 0xffff; b = l >>> 16;\n            c = h & 0xffff; d = h >>> 16;\n\n            h = th;\n            l = tl;\n\n            a += l & 0xffff; b += l >>> 16;\n            c += h & 0xffff; d += h >>> 16;\n\n            b += a >>> 16;\n            c += b >>> 16;\n            d += c >>> 16;\n\n            bh3 = (c & 0xffff) | (d << 16);\n            bl3 = (a & 0xffff) | (b << 16);\n\n            ah1 = bh0;\n            ah2 = bh1;\n            ah3 = bh2;\n            ah4 = bh3;\n            ah5 = bh4;\n            ah6 = bh5;\n            ah7 = bh6;\n            ah0 = bh7;\n\n            al1 = bl0;\n            al2 = bl1;\n            al3 = bl2;\n            al4 = bl3;\n            al5 = bl4;\n            al6 = bl5;\n            al7 = bl6;\n            al0 = bl7;\n\n            if (i % 16 === 15) {\n                for (let j = 0; j < 16; j++) {\n                    // add\n                    h = wh[j];\n                    l = wl[j];\n\n                    a = l & 0xffff; b = l >>> 16;\n                    c = h & 0xffff; d = h >>> 16;\n\n                    h = wh[(j + 9) % 16];\n                    l = wl[(j + 9) % 16];\n\n                    a += l & 0xffff; b += l >>> 16;\n                    c += h & 0xffff; d += h >>> 16;\n\n                    // sigma0\n                    th = wh[(j + 1) % 16];\n                    tl = wl[(j + 1) % 16];\n                    h = ((th >>> 1) | (tl << (32 - 1))) ^ ((th >>> 8) |\n                        (tl << (32 - 8))) ^ (th >>> 7);\n                    l = ((tl >>> 1) | (th << (32 - 1))) ^ ((tl >>> 8) |\n                        (th << (32 - 8))) ^ ((tl >>> 7) | (th << (32 - 7)));\n\n                    a += l & 0xffff; b += l >>> 16;\n                    c += h & 0xffff; d += h >>> 16;\n\n                    // sigma1\n                    th = wh[(j + 14) % 16];\n                    tl = wl[(j + 14) % 16];\n                    h = ((th >>> 19) | (tl << (32 - 19))) ^ ((tl >>> (61 - 32)) |\n                        (th << (32 - (61 - 32)))) ^ (th >>> 6);\n                    l = ((tl >>> 19) | (th << (32 - 19))) ^ ((th >>> (61 - 32)) |\n                        (tl << (32 - (61 - 32)))) ^ ((tl >>> 6) | (th << (32 - 6)));\n\n                    a += l & 0xffff; b += l >>> 16;\n                    c += h & 0xffff; d += h >>> 16;\n\n                    b += a >>> 16;\n                    c += b >>> 16;\n                    d += c >>> 16;\n\n                    wh[j] = (c & 0xffff) | (d << 16);\n                    wl[j] = (a & 0xffff) | (b << 16);\n                }\n            }\n        }\n\n        // add\n        h = ah0;\n        l = al0;\n\n        a = l & 0xffff; b = l >>> 16;\n        c = h & 0xffff; d = h >>> 16;\n\n        h = hh[0];\n        l = hl[0];\n\n        a += l & 0xffff; b += l >>> 16;\n        c += h & 0xffff; d += h >>> 16;\n\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n\n        hh[0] = ah0 = (c & 0xffff) | (d << 16);\n        hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n        h = ah1;\n        l = al1;\n\n        a = l & 0xffff; b = l >>> 16;\n        c = h & 0xffff; d = h >>> 16;\n\n        h = hh[1];\n        l = hl[1];\n\n        a += l & 0xffff; b += l >>> 16;\n        c += h & 0xffff; d += h >>> 16;\n\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n\n        hh[1] = ah1 = (c & 0xffff) | (d << 16);\n        hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n        h = ah2;\n        l = al2;\n\n        a = l & 0xffff; b = l >>> 16;\n        c = h & 0xffff; d = h >>> 16;\n\n        h = hh[2];\n        l = hl[2];\n\n        a += l & 0xffff; b += l >>> 16;\n        c += h & 0xffff; d += h >>> 16;\n\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n\n        hh[2] = ah2 = (c & 0xffff) | (d << 16);\n        hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n        h = ah3;\n        l = al3;\n\n        a = l & 0xffff; b = l >>> 16;\n        c = h & 0xffff; d = h >>> 16;\n\n        h = hh[3];\n        l = hl[3];\n\n        a += l & 0xffff; b += l >>> 16;\n        c += h & 0xffff; d += h >>> 16;\n\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n\n        hh[3] = ah3 = (c & 0xffff) | (d << 16);\n        hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n        h = ah4;\n        l = al4;\n\n        a = l & 0xffff; b = l >>> 16;\n        c = h & 0xffff; d = h >>> 16;\n\n        h = hh[4];\n        l = hl[4];\n\n        a += l & 0xffff; b += l >>> 16;\n        c += h & 0xffff; d += h >>> 16;\n\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n\n        hh[4] = ah4 = (c & 0xffff) | (d << 16);\n        hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n        h = ah5;\n        l = al5;\n\n        a = l & 0xffff; b = l >>> 16;\n        c = h & 0xffff; d = h >>> 16;\n\n        h = hh[5];\n        l = hl[5];\n\n        a += l & 0xffff; b += l >>> 16;\n        c += h & 0xffff; d += h >>> 16;\n\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n\n        hh[5] = ah5 = (c & 0xffff) | (d << 16);\n        hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n        h = ah6;\n        l = al6;\n\n        a = l & 0xffff; b = l >>> 16;\n        c = h & 0xffff; d = h >>> 16;\n\n        h = hh[6];\n        l = hl[6];\n\n        a += l & 0xffff; b += l >>> 16;\n        c += h & 0xffff; d += h >>> 16;\n\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n\n        hh[6] = ah6 = (c & 0xffff) | (d << 16);\n        hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n        h = ah7;\n        l = al7;\n\n        a = l & 0xffff; b = l >>> 16;\n        c = h & 0xffff; d = h >>> 16;\n\n        h = hh[7];\n        l = hl[7];\n\n        a += l & 0xffff; b += l >>> 16;\n        c += h & 0xffff; d += h >>> 16;\n\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n\n        hh[7] = ah7 = (c & 0xffff) | (d << 16);\n        hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n        pos += 128;\n        len -= 128;\n    }\n\n    return pos;\n}\n\nexport function hash(data: Uint8Array): Uint8Array {\n    const h = new SHA512();\n    h.update(data);\n    const digest = h.digest();\n    h.clean();\n    return digest;\n}\n", "// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package ed25519 implements Ed25519 public-key signature algorithm.\n */\n\nimport { randomBytes, RandomSource } from \"@stablelib/random\";\nimport { hash, SHA512 } from \"@stablelib/sha512\";\nimport { wipe } from \"@stablelib/wipe\";\n\nexport const SIGNATURE_LENGTH = 64;\nexport const PUBLIC_KEY_LENGTH = 32;\nexport const SECRET_KEY_LENGTH = 64;\nexport const SEED_LENGTH = 32;\n\n// TODO(dchest): some functions are copies of ../kex/x25519.\n// Find a way to combine them without opening up to public.\n\n// Ported from TweetNaCl.js, which was ported from TweetNaCl\n// by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n// https://tweetnacl.js.org\n\n// TweetNaCl contributors:\n// Daniel J. Bernstein, Bernard van Gastel, Wesley Janssen,\n// Tanja Lange, Peter Schwabe, Sjaak Smetsers.\n// Public domain.\n// https://tweetnacl.cr.yp.to/\n\ntype GF = Float64Array;\n\n// Returns new zero-filled 16-element GF (Float64Array).\n// If passed an array of numbers, prefills the returned\n// array with them.\n//\n// We use Float64Array, because we need 48-bit numbers\n// for this implementation.\nfunction gf(init?: number[]): GF {\n    const r = new Float64Array(16);\n    if (init) {\n        for (let i = 0; i < init.length; i++) {\n            r[i] = init[i];\n        }\n    }\n    return r;\n}\n\n// Base point.\nconst _9 = new Uint8Array(32); _9[0] = 9;\n\nconst gf0 = gf();\n\nconst gf1 = gf([1]);\n\nconst D = gf([\n    0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070,\n    0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203\n]);\n\nconst D2 = gf([\n    0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0,\n    0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406\n]);\n\nconst X = gf([\n    0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c,\n    0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169\n]);\n\nconst Y = gf([\n    0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666,\n    0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666\n]);\n\nconst I = gf([\n    0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43,\n    0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83\n]);\n\nfunction set25519(r: GF, a: GF) {\n    for (let i = 0; i < 16; i++) {\n        r[i] = a[i] | 0;\n    }\n}\n\nfunction car25519(o: GF) {\n    let c = 1;\n    for (let i = 0; i < 16; i++) {\n        let v = o[i] + c + 65535;\n        c = Math.floor(v / 65536);\n        o[i] = v - c * 65536;\n    }\n    o[0] += c - 1 + 37 * (c - 1);\n}\n\nfunction sel25519(p: GF, q: GF, b: number) {\n    const c = ~(b - 1);\n    for (let i = 0; i < 16; i++) {\n        const t = c & (p[i] ^ q[i]);\n        p[i] ^= t;\n        q[i] ^= t;\n    }\n}\n\nfunction pack25519(o: Uint8Array, n: GF) {\n    const m = gf();\n    const t = gf();\n    for (let i = 0; i < 16; i++) {\n        t[i] = n[i];\n    }\n    car25519(t);\n    car25519(t);\n    car25519(t);\n    for (let j = 0; j < 2; j++) {\n        m[0] = t[0] - 0xffed;\n        for (let i = 1; i < 15; i++) {\n            m[i] = t[i] - 0xffff - ((m[i - 1] >> 16) & 1);\n            m[i - 1] &= 0xffff;\n        }\n        m[15] = t[15] - 0x7fff - ((m[14] >> 16) & 1);\n        const b = (m[15] >> 16) & 1;\n        m[14] &= 0xffff;\n        sel25519(t, m, 1 - b);\n    }\n    for (let i = 0; i < 16; i++) {\n        o[2 * i] = t[i] & 0xff;\n        o[2 * i + 1] = t[i] >> 8;\n    }\n}\n\nfunction verify32(x: Uint8Array, y: Uint8Array) {\n    let d = 0;\n    for (let i = 0; i < 32; i++) {\n        d |= x[i] ^ y[i];\n    }\n    return (1 & ((d - 1) >>> 8)) - 1;\n}\n\n\nfunction neq25519(a: GF, b: GF) {\n    const c = new Uint8Array(32);\n    const d = new Uint8Array(32);\n    pack25519(c, a);\n    pack25519(d, b);\n    return verify32(c, d);\n}\n\nfunction par25519(a: GF) {\n    const d = new Uint8Array(32);\n    pack25519(d, a);\n    return d[0] & 1;\n}\n\nfunction unpack25519(o: GF, n: Uint8Array) {\n    for (let i = 0; i < 16; i++) {\n        o[i] = n[2 * i] + (n[2 * i + 1] << 8);\n    }\n    o[15] &= 0x7fff;\n}\n\nfunction add(o: GF, a: GF, b: GF) {\n    for (let i = 0; i < 16; i++) {\n        o[i] = a[i] + b[i];\n    }\n}\n\nfunction sub(o: GF, a: GF, b: GF) {\n    for (let i = 0; i < 16; i++) {\n        o[i] = a[i] - b[i];\n    }\n}\n\nfunction mul(o: GF, a: GF, b: GF) {\n    let v: number, c: number,\n        t0 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0, t5 = 0, t6 = 0, t7 = 0,\n        t8 = 0, t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n        t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n        t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n        b0 = b[0],\n        b1 = b[1],\n        b2 = b[2],\n        b3 = b[3],\n        b4 = b[4],\n        b5 = b[5],\n        b6 = b[6],\n        b7 = b[7],\n        b8 = b[8],\n        b9 = b[9],\n        b10 = b[10],\n        b11 = b[11],\n        b12 = b[12],\n        b13 = b[13],\n        b14 = b[14],\n        b15 = b[15];\n\n    v = a[0];\n    t0 += v * b0;\n    t1 += v * b1;\n    t2 += v * b2;\n    t3 += v * b3;\n    t4 += v * b4;\n    t5 += v * b5;\n    t6 += v * b6;\n    t7 += v * b7;\n    t8 += v * b8;\n    t9 += v * b9;\n    t10 += v * b10;\n    t11 += v * b11;\n    t12 += v * b12;\n    t13 += v * b13;\n    t14 += v * b14;\n    t15 += v * b15;\n    v = a[1];\n    t1 += v * b0;\n    t2 += v * b1;\n    t3 += v * b2;\n    t4 += v * b3;\n    t5 += v * b4;\n    t6 += v * b5;\n    t7 += v * b6;\n    t8 += v * b7;\n    t9 += v * b8;\n    t10 += v * b9;\n    t11 += v * b10;\n    t12 += v * b11;\n    t13 += v * b12;\n    t14 += v * b13;\n    t15 += v * b14;\n    t16 += v * b15;\n    v = a[2];\n    t2 += v * b0;\n    t3 += v * b1;\n    t4 += v * b2;\n    t5 += v * b3;\n    t6 += v * b4;\n    t7 += v * b5;\n    t8 += v * b6;\n    t9 += v * b7;\n    t10 += v * b8;\n    t11 += v * b9;\n    t12 += v * b10;\n    t13 += v * b11;\n    t14 += v * b12;\n    t15 += v * b13;\n    t16 += v * b14;\n    t17 += v * b15;\n    v = a[3];\n    t3 += v * b0;\n    t4 += v * b1;\n    t5 += v * b2;\n    t6 += v * b3;\n    t7 += v * b4;\n    t8 += v * b5;\n    t9 += v * b6;\n    t10 += v * b7;\n    t11 += v * b8;\n    t12 += v * b9;\n    t13 += v * b10;\n    t14 += v * b11;\n    t15 += v * b12;\n    t16 += v * b13;\n    t17 += v * b14;\n    t18 += v * b15;\n    v = a[4];\n    t4 += v * b0;\n    t5 += v * b1;\n    t6 += v * b2;\n    t7 += v * b3;\n    t8 += v * b4;\n    t9 += v * b5;\n    t10 += v * b6;\n    t11 += v * b7;\n    t12 += v * b8;\n    t13 += v * b9;\n    t14 += v * b10;\n    t15 += v * b11;\n    t16 += v * b12;\n    t17 += v * b13;\n    t18 += v * b14;\n    t19 += v * b15;\n    v = a[5];\n    t5 += v * b0;\n    t6 += v * b1;\n    t7 += v * b2;\n    t8 += v * b3;\n    t9 += v * b4;\n    t10 += v * b5;\n    t11 += v * b6;\n    t12 += v * b7;\n    t13 += v * b8;\n    t14 += v * b9;\n    t15 += v * b10;\n    t16 += v * b11;\n    t17 += v * b12;\n    t18 += v * b13;\n    t19 += v * b14;\n    t20 += v * b15;\n    v = a[6];\n    t6 += v * b0;\n    t7 += v * b1;\n    t8 += v * b2;\n    t9 += v * b3;\n    t10 += v * b4;\n    t11 += v * b5;\n    t12 += v * b6;\n    t13 += v * b7;\n    t14 += v * b8;\n    t15 += v * b9;\n    t16 += v * b10;\n    t17 += v * b11;\n    t18 += v * b12;\n    t19 += v * b13;\n    t20 += v * b14;\n    t21 += v * b15;\n    v = a[7];\n    t7 += v * b0;\n    t8 += v * b1;\n    t9 += v * b2;\n    t10 += v * b3;\n    t11 += v * b4;\n    t12 += v * b5;\n    t13 += v * b6;\n    t14 += v * b7;\n    t15 += v * b8;\n    t16 += v * b9;\n    t17 += v * b10;\n    t18 += v * b11;\n    t19 += v * b12;\n    t20 += v * b13;\n    t21 += v * b14;\n    t22 += v * b15;\n    v = a[8];\n    t8 += v * b0;\n    t9 += v * b1;\n    t10 += v * b2;\n    t11 += v * b3;\n    t12 += v * b4;\n    t13 += v * b5;\n    t14 += v * b6;\n    t15 += v * b7;\n    t16 += v * b8;\n    t17 += v * b9;\n    t18 += v * b10;\n    t19 += v * b11;\n    t20 += v * b12;\n    t21 += v * b13;\n    t22 += v * b14;\n    t23 += v * b15;\n    v = a[9];\n    t9 += v * b0;\n    t10 += v * b1;\n    t11 += v * b2;\n    t12 += v * b3;\n    t13 += v * b4;\n    t14 += v * b5;\n    t15 += v * b6;\n    t16 += v * b7;\n    t17 += v * b8;\n    t18 += v * b9;\n    t19 += v * b10;\n    t20 += v * b11;\n    t21 += v * b12;\n    t22 += v * b13;\n    t23 += v * b14;\n    t24 += v * b15;\n    v = a[10];\n    t10 += v * b0;\n    t11 += v * b1;\n    t12 += v * b2;\n    t13 += v * b3;\n    t14 += v * b4;\n    t15 += v * b5;\n    t16 += v * b6;\n    t17 += v * b7;\n    t18 += v * b8;\n    t19 += v * b9;\n    t20 += v * b10;\n    t21 += v * b11;\n    t22 += v * b12;\n    t23 += v * b13;\n    t24 += v * b14;\n    t25 += v * b15;\n    v = a[11];\n    t11 += v * b0;\n    t12 += v * b1;\n    t13 += v * b2;\n    t14 += v * b3;\n    t15 += v * b4;\n    t16 += v * b5;\n    t17 += v * b6;\n    t18 += v * b7;\n    t19 += v * b8;\n    t20 += v * b9;\n    t21 += v * b10;\n    t22 += v * b11;\n    t23 += v * b12;\n    t24 += v * b13;\n    t25 += v * b14;\n    t26 += v * b15;\n    v = a[12];\n    t12 += v * b0;\n    t13 += v * b1;\n    t14 += v * b2;\n    t15 += v * b3;\n    t16 += v * b4;\n    t17 += v * b5;\n    t18 += v * b6;\n    t19 += v * b7;\n    t20 += v * b8;\n    t21 += v * b9;\n    t22 += v * b10;\n    t23 += v * b11;\n    t24 += v * b12;\n    t25 += v * b13;\n    t26 += v * b14;\n    t27 += v * b15;\n    v = a[13];\n    t13 += v * b0;\n    t14 += v * b1;\n    t15 += v * b2;\n    t16 += v * b3;\n    t17 += v * b4;\n    t18 += v * b5;\n    t19 += v * b6;\n    t20 += v * b7;\n    t21 += v * b8;\n    t22 += v * b9;\n    t23 += v * b10;\n    t24 += v * b11;\n    t25 += v * b12;\n    t26 += v * b13;\n    t27 += v * b14;\n    t28 += v * b15;\n    v = a[14];\n    t14 += v * b0;\n    t15 += v * b1;\n    t16 += v * b2;\n    t17 += v * b3;\n    t18 += v * b4;\n    t19 += v * b5;\n    t20 += v * b6;\n    t21 += v * b7;\n    t22 += v * b8;\n    t23 += v * b9;\n    t24 += v * b10;\n    t25 += v * b11;\n    t26 += v * b12;\n    t27 += v * b13;\n    t28 += v * b14;\n    t29 += v * b15;\n    v = a[15];\n    t15 += v * b0;\n    t16 += v * b1;\n    t17 += v * b2;\n    t18 += v * b3;\n    t19 += v * b4;\n    t20 += v * b5;\n    t21 += v * b6;\n    t22 += v * b7;\n    t23 += v * b8;\n    t24 += v * b9;\n    t25 += v * b10;\n    t26 += v * b11;\n    t27 += v * b12;\n    t28 += v * b13;\n    t29 += v * b14;\n    t30 += v * b15;\n\n    t0 += 38 * t16;\n    t1 += 38 * t17;\n    t2 += 38 * t18;\n    t3 += 38 * t19;\n    t4 += 38 * t20;\n    t5 += 38 * t21;\n    t6 += 38 * t22;\n    t7 += 38 * t23;\n    t8 += 38 * t24;\n    t9 += 38 * t25;\n    t10 += 38 * t26;\n    t11 += 38 * t27;\n    t12 += 38 * t28;\n    t13 += 38 * t29;\n    t14 += 38 * t30;\n    // t15 left as is\n\n    // first car\n    c = 1;\n    v = t0 + c + 65535; c = Math.floor(v / 65536); t0 = v - c * 65536;\n    v = t1 + c + 65535; c = Math.floor(v / 65536); t1 = v - c * 65536;\n    v = t2 + c + 65535; c = Math.floor(v / 65536); t2 = v - c * 65536;\n    v = t3 + c + 65535; c = Math.floor(v / 65536); t3 = v - c * 65536;\n    v = t4 + c + 65535; c = Math.floor(v / 65536); t4 = v - c * 65536;\n    v = t5 + c + 65535; c = Math.floor(v / 65536); t5 = v - c * 65536;\n    v = t6 + c + 65535; c = Math.floor(v / 65536); t6 = v - c * 65536;\n    v = t7 + c + 65535; c = Math.floor(v / 65536); t7 = v - c * 65536;\n    v = t8 + c + 65535; c = Math.floor(v / 65536); t8 = v - c * 65536;\n    v = t9 + c + 65535; c = Math.floor(v / 65536); t9 = v - c * 65536;\n    v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n    v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n    v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n    v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n    v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n    v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n    t0 += c - 1 + 37 * (c - 1);\n\n    // second car\n    c = 1;\n    v = t0 + c + 65535; c = Math.floor(v / 65536); t0 = v - c * 65536;\n    v = t1 + c + 65535; c = Math.floor(v / 65536); t1 = v - c * 65536;\n    v = t2 + c + 65535; c = Math.floor(v / 65536); t2 = v - c * 65536;\n    v = t3 + c + 65535; c = Math.floor(v / 65536); t3 = v - c * 65536;\n    v = t4 + c + 65535; c = Math.floor(v / 65536); t4 = v - c * 65536;\n    v = t5 + c + 65535; c = Math.floor(v / 65536); t5 = v - c * 65536;\n    v = t6 + c + 65535; c = Math.floor(v / 65536); t6 = v - c * 65536;\n    v = t7 + c + 65535; c = Math.floor(v / 65536); t7 = v - c * 65536;\n    v = t8 + c + 65535; c = Math.floor(v / 65536); t8 = v - c * 65536;\n    v = t9 + c + 65535; c = Math.floor(v / 65536); t9 = v - c * 65536;\n    v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n    v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n    v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n    v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n    v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n    v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n    t0 += c - 1 + 37 * (c - 1);\n\n    o[0] = t0;\n    o[1] = t1;\n    o[2] = t2;\n    o[3] = t3;\n    o[4] = t4;\n    o[5] = t5;\n    o[6] = t6;\n    o[7] = t7;\n    o[8] = t8;\n    o[9] = t9;\n    o[10] = t10;\n    o[11] = t11;\n    o[12] = t12;\n    o[13] = t13;\n    o[14] = t14;\n    o[15] = t15;\n}\n\nfunction square(o: GF, a: GF) {\n    mul(o, a, a);\n}\n\nfunction inv25519(o: GF, i: GF) {\n    const c = gf();\n    let a: number;\n    for (a = 0; a < 16; a++) {\n        c[a] = i[a];\n    }\n    for (a = 253; a >= 0; a--) {\n        square(c, c);\n        if (a !== 2 && a !== 4) {\n            mul(c, c, i);\n        }\n    }\n    for (a = 0; a < 16; a++) {\n        o[a] = c[a];\n    }\n}\n\nfunction pow2523(o: GF, i: GF) {\n    const c = gf();\n    let a: number;\n    for (a = 0; a < 16; a++) {\n        c[a] = i[a];\n    }\n    for (a = 250; a >= 0; a--) {\n        square(c, c);\n        if (a !== 1) {\n            mul(c, c, i);\n        }\n    }\n    for (a = 0; a < 16; a++) {\n        o[a] = c[a];\n    }\n}\n\n\nfunction edadd(p: GF[], q: GF[]) {\n    const a = gf(), b = gf(), c = gf(),\n        d = gf(), e = gf(), f = gf(),\n        g = gf(), h = gf(), t = gf();\n\n    sub(a, p[1], p[0]);\n    sub(t, q[1], q[0]);\n    mul(a, a, t);\n    add(b, p[0], p[1]);\n    add(t, q[0], q[1]);\n    mul(b, b, t);\n    mul(c, p[3], q[3]);\n    mul(c, c, D2);\n    mul(d, p[2], q[2]);\n    add(d, d, d);\n    sub(e, b, a);\n    sub(f, d, c);\n    add(g, d, c);\n    add(h, b, a);\n\n    mul(p[0], e, f);\n    mul(p[1], h, g);\n    mul(p[2], g, f);\n    mul(p[3], e, h);\n}\n\nfunction cswap(p: GF[], q: GF[], b: number) {\n    for (let i = 0; i < 4; i++) {\n        sel25519(p[i], q[i], b);\n    }\n}\n\nfunction pack(r: Uint8Array, p: GF[]) {\n    const tx = gf(), ty = gf(), zi = gf();\n    inv25519(zi, p[2]);\n    mul(tx, p[0], zi);\n    mul(ty, p[1], zi);\n    pack25519(r, ty);\n    r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p: GF[], q: GF[], s: Uint8Array) {\n    set25519(p[0], gf0);\n    set25519(p[1], gf1);\n    set25519(p[2], gf1);\n    set25519(p[3], gf0);\n    for (let i = 255; i >= 0; --i) {\n        const b = (s[(i / 8) | 0] >> (i & 7)) & 1;\n        cswap(p, q, b);\n        edadd(q, p);\n        edadd(p, p);\n        cswap(p, q, b);\n    }\n}\n\nfunction scalarbase(p: GF[], s: Uint8Array) {\n    const q = [gf(), gf(), gf(), gf()];\n    set25519(q[0], X);\n    set25519(q[1], Y);\n    set25519(q[2], gf1);\n    mul(q[3], X, Y);\n    scalarmult(p, q, s);\n}\n\nexport interface KeyPair {\n    publicKey: Uint8Array;\n    secretKey: Uint8Array;\n}\n\n// Generates key pair from secret 32-byte seed.\nexport function generateKeyPairFromSeed(seed: Uint8Array): KeyPair {\n    if (seed.length !== SEED_LENGTH) {\n        throw new Error(`ed25519: seed must be ${SEED_LENGTH} bytes`);\n    }\n\n    const d = hash(seed);\n    d[0] &= 248;\n    d[31] &= 127;\n    d[31] |= 64;\n\n    const publicKey = new Uint8Array(32);\n    const p = [gf(), gf(), gf(), gf()];\n    scalarbase(p, d);\n    pack(publicKey, p);\n\n    const secretKey = new Uint8Array(64);\n    secretKey.set(seed);\n    secretKey.set(publicKey, 32);\n\n    return {\n        publicKey,\n        secretKey\n    };\n}\n\nexport function generateKeyPair(prng?: RandomSource): KeyPair {\n    const seed = randomBytes(32, prng);\n    const result = generateKeyPairFromSeed(seed);\n    wipe(seed);\n    return result;\n}\n\nexport function extractPublicKeyFromSecretKey(secretKey: Uint8Array): Uint8Array {\n    if (secretKey.length !== SECRET_KEY_LENGTH) {\n        throw new Error(`ed25519: secret key must be ${SECRET_KEY_LENGTH} bytes`);\n    }\n    return new Uint8Array(secretKey.subarray(32));\n}\n\nconst L = new Float64Array([\n    0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2,\n    0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10\n]);\n\nfunction modL(r: Uint8Array, x: Float64Array) {\n    let carry: number;\n    let i: number;\n    let j: number;\n    let k: number;\n    for (i = 63; i >= 32; --i) {\n        carry = 0;\n        for (j = i - 32, k = i - 12; j < k; ++j) {\n            x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n            carry = Math.floor((x[j] + 128) / 256);\n            x[j] -= carry * 256;\n        }\n        x[j] += carry;\n        x[i] = 0;\n    }\n    carry = 0;\n    for (j = 0; j < 32; j++) {\n        x[j] += carry - (x[31] >> 4) * L[j];\n        carry = x[j] >> 8;\n        x[j] &= 255;\n    }\n    for (j = 0; j < 32; j++) {\n        x[j] -= carry * L[j];\n    }\n    for (i = 0; i < 32; i++) {\n        x[i + 1] += x[i] >> 8;\n        r[i] = x[i] & 255;\n    }\n}\n\nfunction reduce(r: Uint8Array) {\n    const x = new Float64Array(64);\n    for (let i = 0; i < 64; i++) {\n        x[i] = r[i];\n    }\n    for (let i = 0; i < 64; i++) {\n        r[i] = 0;\n    }\n    modL(r, x);\n}\n\n// Returns 64-byte signature of the message under the 64-byte secret key.\nexport function sign(secretKey: Uint8Array, message: Uint8Array): Uint8Array {\n    const x = new Float64Array(64);\n    const p = [gf(), gf(), gf(), gf()];\n\n    const d = hash(secretKey.subarray(0, 32));\n    d[0] &= 248;\n    d[31] &= 127;\n    d[31] |= 64;\n\n    const signature = new Uint8Array(64);\n    signature.set(d.subarray(32), 32);\n\n    const hs = new SHA512();\n    hs.update(signature.subarray(32));\n    hs.update(message);\n    const r = hs.digest();\n    hs.clean();\n    reduce(r);\n    scalarbase(p, r);\n    pack(signature, p);\n\n    hs.reset();\n    hs.update(signature.subarray(0, 32));\n    hs.update(secretKey.subarray(32));\n    hs.update(message);\n    const h = hs.digest();\n    reduce(h);\n\n    for (let i = 0; i < 32; i++) {\n        x[i] = r[i];\n    }\n    for (let i = 0; i < 32; i++) {\n        for (let j = 0; j < 32; j++) {\n            x[i + j] += h[i] * d[j];\n        }\n    }\n    modL(signature.subarray(32), x);\n\n    return signature;\n}\n\nfunction unpackneg(r: GF[], p: Uint8Array) {\n    const t = gf(), chk = gf(), num = gf(),\n        den = gf(), den2 = gf(), den4 = gf(),\n        den6 = gf();\n\n    set25519(r[2], gf1);\n    unpack25519(r[1], p);\n    square(num, r[1]);\n    mul(den, num, D);\n    sub(num, num, r[2]);\n    add(den, r[2], den);\n\n    square(den2, den);\n    square(den4, den2);\n    mul(den6, den4, den2);\n    mul(t, den6, num);\n    mul(t, t, den);\n\n    pow2523(t, t);\n    mul(t, t, num);\n    mul(t, t, den);\n    mul(t, t, den);\n    mul(r[0], t, den);\n\n    square(chk, r[0]);\n    mul(chk, chk, den);\n    if (neq25519(chk, num)) {\n        mul(r[0], r[0], I);\n    }\n\n    square(chk, r[0]);\n    mul(chk, chk, den);\n    if (neq25519(chk, num)) {\n        return -1;\n    }\n\n    if (par25519(r[0]) === (p[31] >> 7)) {\n        sub(r[0], gf0, r[0]);\n    }\n\n    mul(r[3], r[0], r[1]);\n    return 0;\n}\n\nexport function verify(publicKey: Uint8Array, message: Uint8Array, signature: Uint8Array): boolean {\n    const t = new Uint8Array(32);\n    const p = [gf(), gf(), gf(), gf()];\n    const q = [gf(), gf(), gf(), gf()];\n\n    if (signature.length !== SIGNATURE_LENGTH) {\n        throw new Error(`ed25519: signature must be ${SIGNATURE_LENGTH} bytes`);\n    }\n\n    if (unpackneg(q, publicKey)) {\n        return false;\n    }\n\n    const hs = new SHA512();\n    hs.update(signature.subarray(0, 32));\n    hs.update(publicKey);\n    hs.update(message);\n    const h = hs.digest();\n    reduce(h);\n    scalarmult(p, q, h);\n\n    scalarbase(q, signature.subarray(32));\n    edadd(p, q);\n    pack(t, p);\n\n    if (verify32(signature, t)) {\n        return false;\n    }\n    return true;\n}\n\n/**\n * Convert Ed25519 public key to X25519 public key.\n *\n * Throws if given an invalid public key.\n */\nexport function convertPublicKeyToX25519(publicKey: Uint8Array): Uint8Array {\n    let q = [gf(), gf(), gf(), gf()];\n\n    if (unpackneg(q, publicKey)) {\n        throw new Error(\"Ed25519: invalid public key\");\n    }\n\n    // Formula: montgomeryX = (edwardsY + 1)*inverse(1 - edwardsY) mod p\n    let a = gf();\n    let b = gf();\n    let y = q[1];\n    add(a, gf1, y);\n    sub(b, gf1, y);\n    inv25519(b, b);\n    mul(a, a, b);\n\n    let z = new Uint8Array(32);\n    pack25519(z, a);\n    return z;\n}\n\n/**\n *  Convert Ed25519 secret (private) key to X25519 secret key.\n */\nexport function convertSecretKeyToX25519(secretKey: Uint8Array): Uint8Array {\n    const d = hash(secretKey.subarray(0, 32));\n    d[0] &= 248;\n    d[31] &= 127;\n    d[31] |= 64;\n    const o = new Uint8Array(d.subarray(0, 32));\n    wipe(d);\n    return o;\n}\n", "// Copyright (C) 2017 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package blake2b implements BLAKE2b cryptographic hash function.\n */\n\nimport { SerializableHash } from \"@stablelib/hash\";\nimport { readUint32LE, writeUint32LE } from \"@stablelib/binary\";\nimport { wipe } from \"@stablelib/wipe\";\n\nexport const BLOCK_SIZE = 128;\nexport const DIGEST_LENGTH = 64;\nexport const KEY_LENGTH = 64;\nexport const PERSONALIZATION_LENGTH = 16;\nexport const SALT_LENGTH = 16;\n\nexport const MAX_LEAF_SIZE = Math.pow(2, 32) - 1;\nexport const MAX_FANOUT = 255;\nexport const MAX_MAX_DEPTH = 255; // not a typo\n\n/**\n * Configuration for hash function.\n */\nexport type Config = {\n    key?: Uint8Array;\n    salt?: Uint8Array;\n    personalization?: Uint8Array;\n    tree?: Tree;\n};\n\n/**\n * Tree hashing parameters.\n */\nexport type Tree = {\n    fanout: number; // fanout\n    maxDepth: number; // maximal depth\n    leafSize: number; // leaf maximal byte length (0 for unlimited)\n    nodeOffsetHighBits: number; // high bits of node offset\n    nodeOffsetLowBits: number; // low bits of node offset (0 for first, leftmost or leaf)\n    nodeDepth: number; // node depth (0 for leaves)\n    innerDigestLength: number; // inner digest length\n    lastNode: boolean; // indicates processing of the last node of layer\n};\n\nconst IV = new Uint32Array([\n    // low bits // high bits\n    0xf3bcc908, 0x6a09e667,\n    0x84caa73b, 0xbb67ae85,\n    0xfe94f82b, 0x3c6ef372,\n    0x5f1d36f1, 0xa54ff53a,\n    0xade682d1, 0x510e527f,\n    0x2b3e6c1f, 0x9b05688c,\n    0xfb41bd6b, 0x1f83d9ab,\n    0x137e2179, 0x5be0cd19,\n]);\n\n// Note: sigma values are doubled since we store\n// 64-bit ints as two 32-bit ints in arrays.\nconst SIGMA = [\n    [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30],\n    [28, 20, 8, 16, 18, 30, 26, 12, 2, 24, 0, 4, 22, 14, 10, 6],\n    [22, 16, 24, 0, 10, 4, 30, 26, 20, 28, 6, 12, 14, 2, 18, 8],\n    [14, 18, 6, 2, 26, 24, 22, 28, 4, 12, 10, 20, 8, 0, 30, 16],\n    [18, 0, 10, 14, 4, 8, 20, 30, 28, 2, 22, 24, 12, 16, 6, 26],\n    [4, 24, 12, 20, 0, 22, 16, 6, 8, 26, 14, 10, 30, 28, 2, 18],\n    [24, 10, 2, 30, 28, 26, 8, 20, 0, 14, 12, 6, 18, 4, 16, 22],\n    [26, 22, 14, 28, 24, 2, 6, 18, 10, 0, 30, 8, 16, 12, 4, 20],\n    [12, 30, 28, 18, 22, 6, 0, 16, 24, 4, 26, 14, 2, 8, 20, 10],\n    [20, 4, 16, 8, 14, 12, 2, 10, 30, 22, 18, 28, 6, 24, 26, 0],\n    [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30],\n    [28, 20, 8, 16, 18, 30, 26, 12, 2, 24, 0, 4, 22, 14, 10, 6]\n];\n\n/**\n * BLAKE2b hash function.\n */\nexport class BLAKE2b implements SerializableHash {\n    readonly blockSize = BLOCK_SIZE;\n\n    // Note: Int32Arrays for state and message are used for performance reasons.\n    private _state = new Int32Array(IV); // hash state, initialized with IV\n    private _buffer = new Uint8Array(BLOCK_SIZE); // buffer for data\n    private _bufferLength = 0; // number of bytes in buffer\n    private _ctr = new Uint32Array(4);\n    private _flag = new Uint32Array(4);\n    private _lastNode = false;\n    private _finished = false;\n\n    private _vtmp = new Uint32Array(32);\n    private _mtmp = new Uint32Array(32);\n\n    private _paddedKey: Uint8Array | undefined; // copy of zero-padded key if present\n    private _initialState: Uint32Array; // initial state after initialization\n\n    constructor(public digestLength = 64, config?: Config) {\n        // Validate digest length.\n        if (digestLength < 1 || digestLength > DIGEST_LENGTH) {\n            throw new Error(\"blake2b: wrong digest length\");\n        }\n\n        // Validate config, if present.\n        if (config) {\n            this.validateConfig(config);\n        }\n\n        // Get key length from config.\n        let keyLength = 0;\n        if (config && config.key) {\n            keyLength = config.key.length;\n        }\n\n        // Get tree fanout and maxDepth from config.\n        let fanout = 1;\n        let maxDepth = 1;\n        if (config && config.tree) {\n            fanout = config.tree.fanout;\n            maxDepth = config.tree.maxDepth;\n        }\n\n        // Xor common parameters into state.\n        this._state[0] ^= digestLength | (keyLength << 8) | (fanout << 16) | (maxDepth << 24);\n\n        // Xor tree parameters into state.\n        if (config && config.tree) {\n            this._state[1] ^= config.tree.leafSize;\n\n            this._state[2] ^= config.tree.nodeOffsetLowBits;\n            this._state[3] ^= config.tree.nodeOffsetHighBits;\n            this._state[4] ^= config.tree.nodeDepth | (config.tree.innerDigestLength << 8);\n\n            this._lastNode = config.tree.lastNode;\n        }\n\n        // Xor salt into state.\n        if (config && config.salt) {\n            this._state[8] ^= readUint32LE(config.salt, 0);\n            this._state[9] ^= readUint32LE(config.salt, 4);\n            this._state[10] ^= readUint32LE(config.salt, 8);\n            this._state[11] ^= readUint32LE(config.salt, 12);\n        }\n\n        // Xor personalization into state.\n        if (config && config.personalization) {\n            this._state[12] ^= readUint32LE(config.personalization, 0);\n            this._state[13] ^= readUint32LE(config.personalization, 4);\n            this._state[14] ^= readUint32LE(config.personalization, 8);\n            this._state[15] ^= readUint32LE(config.personalization, 12);\n        }\n\n        // Save a copy of initialized state for reset.\n        this._initialState = new Uint32Array(this._state);\n\n        // Process key.\n        if (config && config.key && keyLength > 0) {\n            this._paddedKey = new Uint8Array(BLOCK_SIZE);\n            this._paddedKey.set(config.key);\n\n            // Put padded key into buffer.\n            this._buffer.set(this._paddedKey);\n            this._bufferLength = BLOCK_SIZE;\n        }\n    }\n\n    reset(): this {\n        // Restore initial state.\n        this._state.set(this._initialState);\n\n        if (this._paddedKey) {\n            // Put padded key into buffer.\n            this._buffer.set(this._paddedKey);\n            this._bufferLength = BLOCK_SIZE;\n        } else {\n            this._bufferLength = 0;\n        }\n\n        // Clear counters and flags.\n        wipe(this._ctr);\n        wipe(this._flag);\n        this._finished = false;\n\n        return this;\n    }\n\n    validateConfig(config: Config) {\n        if (config.key && config.key.length > KEY_LENGTH) {\n            throw new Error(\"blake2b: wrong key length\");\n        }\n        if (config.salt && config.salt.length !== SALT_LENGTH) {\n            throw new Error(\"blake2b: wrong salt length\");\n        }\n        if (config.personalization &&\n            config.personalization.length !== PERSONALIZATION_LENGTH) {\n            throw new Error(\"blake2b: wrong personalization length\");\n        }\n        if (config.tree) {\n            if (config.tree.fanout < 0 || config.tree.fanout > MAX_FANOUT) {\n                throw new Error(\"blake2b: wrong tree fanout\");\n            }\n            if (config.tree.maxDepth < 0 || config.tree.maxDepth > MAX_MAX_DEPTH) {\n                throw new Error(\"blake2b: wrong tree depth\");\n            }\n            if (config.tree.leafSize < 0 || config.tree.leafSize > MAX_LEAF_SIZE) {\n                throw new Error(\"blake2b: wrong leaf size\");\n            }\n            if (config.tree.innerDigestLength < 0 ||\n                config.tree.innerDigestLength > DIGEST_LENGTH) {\n                throw new Error(\"blake2b: wrong tree inner digest length\");\n            }\n        }\n    }\n\n    update(data: Uint8Array, dataLength = data.length): this {\n        if (this._finished) {\n            throw new Error(\"blake2b: can't update because hash was finished.\");\n        }\n\n        const left = BLOCK_SIZE - this._bufferLength;\n        let dataPos = 0;\n\n        if (dataLength === 0) {\n            return this;\n        }\n\n        // Finish buffer.\n        if (dataLength > left) {\n            for (let i = 0; i < left; i++) {\n                this._buffer[this._bufferLength + i] = data[dataPos + i];\n            }\n            this._processBlock(BLOCK_SIZE);\n            dataPos += left;\n            dataLength -= left;\n            this._bufferLength = 0;\n        }\n\n        // Process data blocks.\n        while (dataLength > BLOCK_SIZE) {\n            for (let i = 0; i < BLOCK_SIZE; i++) {\n                this._buffer[i] = data[dataPos + i];\n            }\n            this._processBlock(BLOCK_SIZE);\n            dataPos += BLOCK_SIZE;\n            dataLength -= BLOCK_SIZE;\n            this._bufferLength = 0;\n        }\n\n        // Copy leftovers to buffer.\n        for (let i = 0; i < dataLength; i++) {\n            this._buffer[this._bufferLength + i] = data[dataPos + i];\n        }\n        this._bufferLength += dataLength;\n\n        return this;\n    }\n\n    finish(out: Uint8Array): this {\n        if (!this._finished) {\n            for (let i = this._bufferLength; i < BLOCK_SIZE; i++) {\n                this._buffer[i] = 0;\n            }\n\n            // Set last block flag.\n            this._flag[0] = 0xffffffff;\n            this._flag[1] = 0xffffffff;\n\n            // Set last node flag if last node in tree.\n            if (this._lastNode) {\n                this._flag[2] = 0xffffffff;\n                this._flag[3] = 0xffffffff;\n            }\n\n            this._processBlock(this._bufferLength);\n            this._finished = true;\n        }\n        // Reuse buffer as temporary space for digest.\n        const tmp = this._buffer.subarray(0, 64);\n        for (let i = 0; i < 16; i++) {\n            writeUint32LE(this._state[i], tmp, i * 4);\n        }\n        out.set(tmp.subarray(0, out.length));\n        return this;\n    }\n\n    digest(): Uint8Array {\n        const out = new Uint8Array(this.digestLength);\n        this.finish(out);\n        return out;\n    }\n\n    clean() {\n        wipe(this._vtmp);\n        wipe(this._mtmp);\n        wipe(this._state);\n        wipe(this._buffer);\n        wipe(this._initialState);\n        if (this._paddedKey) {\n            wipe(this._paddedKey);\n        }\n        this._bufferLength = 0;\n        wipe(this._ctr);\n        wipe(this._flag);\n        this._lastNode = false;\n        this._finished = false;\n    }\n\n    saveState(): SavedState {\n        if (this._finished) {\n            throw new Error(\"blake2b: cannot save finished state\");\n        }\n        return {\n            state: new Uint32Array(this._state),\n            buffer: new Uint8Array(this._buffer),\n            bufferLength: this._bufferLength,\n            ctr: new Uint32Array(this._ctr),\n            flag: new Uint32Array(this._flag),\n            lastNode: this._lastNode,\n            paddedKey: this._paddedKey ? new Uint8Array(this._paddedKey) : undefined,\n            initialState: new Uint32Array(this._initialState)\n        };\n    }\n\n    restoreState(savedState: SavedState): this {\n        this._state.set(savedState.state);\n        this._buffer.set(savedState.buffer);\n        this._bufferLength = savedState.bufferLength;\n        this._ctr.set(savedState.ctr);\n        this._flag.set(savedState.flag);\n        this._lastNode = savedState.lastNode;\n        if (this._paddedKey) {\n            wipe(this._paddedKey);\n        }\n        this._paddedKey = savedState.paddedKey ? new Uint8Array(savedState.paddedKey) : undefined;\n        this._initialState.set(savedState.initialState);\n        return this;\n    }\n\n    cleanSavedState(savedState: SavedState): void {\n        wipe(savedState.state);\n        wipe(savedState.buffer);\n        wipe(savedState.initialState);\n        if (savedState.paddedKey) {\n            wipe(savedState.paddedKey);\n        }\n        savedState.bufferLength = 0;\n        wipe(savedState.ctr);\n        wipe(savedState.flag);\n        savedState.lastNode = false;\n    }\n\n    private _G(v: Uint32Array,\n                al: number, bl: number, cl: number, dl: number,\n                ah: number, bh: number, ch: number, dh: number,\n                ml0: number, mh0: number,\n                ml1: number, mh1: number) {\n        let vla = v[al],\n            vha = v[ah],\n            vlb = v[bl],\n            vhb = v[bh],\n            vlc = v[cl],\n            vhc = v[ch],\n            vld = v[dl],\n            vhd = v[dh];\n\n        // 64-bit: va += vb\n        let w = vla & 0xffff,\n            x = vla >>> 16,\n            y = vha & 0xffff,\n            z = vha >>> 16;\n\n        w += vlb & 0xffff; x += vlb >>> 16;\n        y += vhb & 0xffff; z += vhb >>> 16;\n\n        x += w >>> 16;\n        y += x >>> 16;\n        z += y >>> 16;\n\n        vha = (y & 0xffff) | (z << 16);\n        vla = (w & 0xffff) | (x << 16);\n\n        // 64-bit: va += m[sigma[r][2 * i + 0]]\n        w = vla & 0xffff; x = vla >>> 16;\n        y = vha & 0xffff; z = vha >>> 16;\n\n        w += ml0 & 0xffff; x += ml0 >>> 16;\n        y += mh0 & 0xffff; z += mh0 >>> 16;\n\n        x += w >>> 16;\n        y += x >>> 16;\n        z += y >>> 16;\n\n        vha = (y & 0xffff) | (z << 16);\n        vla = (w & 0xffff) | (x << 16);\n\n        // 64-bit: vd ^= va\n        vld ^= vla; vhd ^= vha;\n\n        // 64-bit: rot(vd, 32)\n        w = vhd; vhd = vld; vld = w;\n\n        // 64-bit: vc += vd\n        w = vlc & 0xffff; x = vlc >>> 16;\n        y = vhc & 0xffff; z = vhc >>> 16;\n\n        w += vld & 0xffff; x += vld >>> 16;\n        y += vhd & 0xffff; z += vhd >>> 16;\n\n        x += w >>> 16;\n        y += x >>> 16;\n        z += y >>> 16;\n\n        vhc = (y & 0xffff) | (z << 16);\n        vlc = (w & 0xffff) | (x << 16);\n\n        // 64-bit: vb ^= vc\n        vlb ^= vlc; vhb ^= vhc;\n\n        // 64-bit: rot(vb, 24)\n        w = vlb << 8 | vhb >>> 24;\n        vlb = vhb << 8 | vlb >>> 24;\n        vhb = w;\n\n        // 64-bit: va += vb\n        w = vla & 0xffff; x = vla >>> 16;\n        y = vha & 0xffff; z = vha >>> 16;\n\n        w += vlb & 0xffff; x += vlb >>> 16;\n        y += vhb & 0xffff; z += vhb >>> 16;\n\n        x += w >>> 16;\n        y += x >>> 16;\n        z += y >>> 16;\n\n        vha = (y & 0xffff) | (z << 16);\n        vla = (w & 0xffff) | (x << 16);\n\n        // 64-bit: va += m[sigma[r][2 * i + 1]\n        w = vla & 0xffff; x = vla >>> 16;\n        y = vha & 0xffff; z = vha >>> 16;\n\n        w += ml1 & 0xffff; x += ml1 >>> 16;\n        y += mh1 & 0xffff; z += mh1 >>> 16;\n\n        x += w >>> 16;\n        y += x >>> 16;\n        z += y >>> 16;\n\n        vha = (y & 0xffff) | (z << 16);\n        vla = (w & 0xffff) | (x << 16);\n\n        // 64-bit: vd ^= va\n        vld ^= vla; vhd ^= vha;\n\n        // 64-bit: rot(vd, 16)\n        w = vld << 16 | vhd >>> 16;\n        vld = vhd << 16 | vld >>> 16;\n        vhd = w;\n\n        // 64-bit: vc += vd\n        w = vlc & 0xffff; x = vlc >>> 16;\n        y = vhc & 0xffff; z = vhc >>> 16;\n\n        w += vld & 0xffff; x += vld >>> 16;\n        y += vhd & 0xffff; z += vhd >>> 16;\n\n        x += w >>> 16;\n        y += x >>> 16;\n        z += y >>> 16;\n\n        vhc = (y & 0xffff) | (z << 16);\n        vlc = (w & 0xffff) | (x << 16);\n\n        // 64-bit: vb ^= vc\n        vlb ^= vlc; vhb ^= vhc;\n\n        // 64-bit: rot(vb, 63)\n        w = vhb << 1 | vlb >>> 31;\n        vlb = vlb << 1 | vhb >>> 31;\n        vhb = w;\n\n        v[al] = vla;\n        v[ah] = vha;\n        v[bl] = vlb;\n        v[bh] = vhb;\n        v[cl] = vlc;\n        v[ch] = vhc;\n        v[dl] = vld;\n        v[dh] = vhd;\n    }\n\n    private _incrementCounter(n: number) {\n        for (let i = 0; i < 3; i++) {\n            let a = this._ctr[i] + n;\n            this._ctr[i] = a >>> 0;\n            if (this._ctr[i] === a) {\n                return;\n            }\n            n = 1;\n        }\n    }\n\n    private _processBlock(length: number) {\n        this._incrementCounter(length);\n        let v = this._vtmp;\n        v.set(this._state);\n        v.set(IV, 16);\n        v[12 * 2 + 0] ^= this._ctr[0];\n        v[12 * 2 + 1] ^= this._ctr[1];\n        v[13 * 2 + 0] ^= this._ctr[2];\n        v[13 * 2 + 1] ^= this._ctr[3];\n        v[14 * 2 + 0] ^= this._flag[0];\n        v[14 * 2 + 1] ^= this._flag[1];\n        v[15 * 2 + 0] ^= this._flag[2];\n        v[15 * 2 + 1] ^= this._flag[3];\n\n        let m = this._mtmp;\n        for (let i = 0; i < 32; i++) {\n            m[i] = readUint32LE(this._buffer, i * 4);\n        }\n\n        for (let r = 0; r < 12; r++) {\n            this._G(v,\n                0, 8, 16, 24,\n                1, 9, 17, 25,\n                m[SIGMA[r][0]], m[SIGMA[r][0] + 1],\n                m[SIGMA[r][1]], m[SIGMA[r][1] + 1]\n            );\n\n            this._G(v,\n                2, 10, 18, 26,\n                3, 11, 19, 27,\n                m[SIGMA[r][2]], m[SIGMA[r][2] + 1],\n                m[SIGMA[r][3]], m[SIGMA[r][3] + 1]\n            );\n\n            this._G(v,\n                4, 12, 20, 28,\n                5, 13, 21, 29,\n                m[SIGMA[r][4]], m[SIGMA[r][4] + 1],\n                m[SIGMA[r][5]], m[SIGMA[r][5] + 1]\n            );\n\n            this._G(v,\n                6, 14, 22, 30,\n                7, 15, 23, 31,\n                m[SIGMA[r][6]], m[SIGMA[r][6] + 1],\n                m[SIGMA[r][7]], m[SIGMA[r][7] + 1]\n            );\n\n            this._G(v,\n                0, 10, 20, 30,\n                1, 11, 21, 31,\n                m[SIGMA[r][8]], m[SIGMA[r][8] + 1],\n                m[SIGMA[r][9]], m[SIGMA[r][9] + 1]\n            );\n\n            this._G(v,\n                2, 12, 22, 24,\n                3, 13, 23, 25,\n                m[SIGMA[r][10]], m[SIGMA[r][10] + 1],\n                m[SIGMA[r][11]], m[SIGMA[r][11] + 1]\n            );\n\n            this._G(v,\n                4, 14, 16, 26,\n                5, 15, 17, 27,\n                m[SIGMA[r][12]], m[SIGMA[r][12] + 1],\n                m[SIGMA[r][13]], m[SIGMA[r][13] + 1]\n            );\n\n            this._G(v,\n                6, 8, 18, 28,\n                7, 9, 19, 29,\n                m[SIGMA[r][14]], m[SIGMA[r][14] + 1],\n                m[SIGMA[r][15]], m[SIGMA[r][15] + 1]\n            );\n        }\n\n        for (let i = 0; i < 16; i++) {\n            this._state[i] ^= v[i] ^ v[i + 16];\n        }\n    }\n}\n\nexport type SavedState = {\n    state: Uint32Array;\n    buffer: Uint8Array;\n    bufferLength: number;\n    ctr: Uint32Array;\n    flag: Uint32Array;\n    lastNode: boolean;\n    paddedKey: Uint8Array | undefined;\n    initialState: Uint32Array;\n};\n\nexport function hash(data: Uint8Array, digestLength = DIGEST_LENGTH, config?: Config): Uint8Array {\n    const h = new BLAKE2b(digestLength, config);\n    h.update(data);\n    const digest = h.digest();\n    h.clean();\n    return digest;\n}\n", "const ERROR_MSG_INPUT = 'Input must be an string, Buffer or Uint8Array'\n\n// For convenience, let people hash a string, not just a Uint8Array\nfunction normalizeInput (input) {\n  let ret\n  if (input instanceof Uint8Array) {\n    ret = input\n  } else if (typeof input === 'string') {\n    const encoder = new TextEncoder()\n    ret = encoder.encode(input)\n  } else {\n    throw new Error(ERROR_MSG_INPUT)\n  }\n  return ret\n}\n\n// Converts a Uint8Array to a hexadecimal string\n// For example, toHex([255, 0, 255]) returns \"ff00ff\"\nfunction toHex (bytes) {\n  return Array.prototype.map\n    .call(bytes, function (n) {\n      return (n < 16 ? '0' : '') + n.toString(16)\n    })\n    .join('')\n}\n\n// Converts any value in [0...2^32-1] to an 8-character hex string\nfunction uint32ToHex (val) {\n  return (0x100000000 + val).toString(16).substring(1)\n}\n\n// For debugging: prints out hash state in the same format as the RFC\n// sample computation exactly, so that you can diff\nfunction debugPrint (label, arr, size) {\n  let msg = '\\n' + label + ' = '\n  for (let i = 0; i < arr.length; i += 2) {\n    if (size === 32) {\n      msg += uint32ToHex(arr[i]).toUpperCase()\n      msg += ' '\n      msg += uint32ToHex(arr[i + 1]).toUpperCase()\n    } else if (size === 64) {\n      msg += uint32ToHex(arr[i + 1]).toUpperCase()\n      msg += uint32ToHex(arr[i]).toUpperCase()\n    } else throw new Error('Invalid size ' + size)\n    if (i % 6 === 4) {\n      msg += '\\n' + new Array(label.length + 4).join(' ')\n    } else if (i < arr.length - 2) {\n      msg += ' '\n    }\n  }\n  console.log(msg)\n}\n\n// For performance testing: generates N bytes of input, hashes M times\n// Measures and prints MB/second hash performance each time\nfunction testSpeed (hashFn, N, M) {\n  let startMs = new Date().getTime()\n\n  const input = new Uint8Array(N)\n  for (let i = 0; i < N; i++) {\n    input[i] = i % 256\n  }\n  const genMs = new Date().getTime()\n  console.log('Generated random input in ' + (genMs - startMs) + 'ms')\n  startMs = genMs\n\n  for (let i = 0; i < M; i++) {\n    const hashHex = hashFn(input)\n    const hashMs = new Date().getTime()\n    const ms = hashMs - startMs\n    startMs = hashMs\n    console.log('Hashed in ' + ms + 'ms: ' + hashHex.substring(0, 20) + '...')\n    console.log(\n      Math.round((N / (1 << 20) / (ms / 1000)) * 100) / 100 + ' MB PER SECOND'\n    )\n  }\n}\n\nmodule.exports = {\n  normalizeInput: normalizeInput,\n  toHex: toHex,\n  debugPrint: debugPrint,\n  testSpeed: testSpeed\n}\n", "// Blake2B in pure Javascript\n// Adapted from the reference implementation in RFC7693\n// Ported to Javascript by DC - https://github.com/dcposch\n\nconst util = require('./util')\n\n// 64-bit unsigned addition\n// Sets v[a,a+1] += v[b,b+1]\n// v should be a Uint32Array\nfunction ADD64AA (v, a, b) {\n  const o0 = v[a] + v[b]\n  let o1 = v[a + 1] + v[b + 1]\n  if (o0 >= 0x100000000) {\n    o1++\n  }\n  v[a] = o0\n  v[a + 1] = o1\n}\n\n// 64-bit unsigned addition\n// Sets v[a,a+1] += b\n// b0 is the low 32 bits of b, b1 represents the high 32 bits\nfunction ADD64AC (v, a, b0, b1) {\n  let o0 = v[a] + b0\n  if (b0 < 0) {\n    o0 += 0x100000000\n  }\n  let o1 = v[a + 1] + b1\n  if (o0 >= 0x100000000) {\n    o1++\n  }\n  v[a] = o0\n  v[a + 1] = o1\n}\n\n// Little-endian byte access\nfunction B2B_GET32 (arr, i) {\n  return arr[i] ^ (arr[i + 1] << 8) ^ (arr[i + 2] << 16) ^ (arr[i + 3] << 24)\n}\n\n// G Mixing function\n// The ROTRs are inlined for speed\nfunction B2B_G (a, b, c, d, ix, iy) {\n  const x0 = m[ix]\n  const x1 = m[ix + 1]\n  const y0 = m[iy]\n  const y1 = m[iy + 1]\n\n  ADD64AA(v, a, b) // v[a,a+1] += v[b,b+1] ... in JS we must store a uint64 as two uint32s\n  ADD64AC(v, a, x0, x1) // v[a, a+1] += x ... x0 is the low 32 bits of x, x1 is the high 32 bits\n\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated to the right by 32 bits\n  let xor0 = v[d] ^ v[a]\n  let xor1 = v[d + 1] ^ v[a + 1]\n  v[d] = xor1\n  v[d + 1] = xor0\n\n  ADD64AA(v, c, d)\n\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 24 bits\n  xor0 = v[b] ^ v[c]\n  xor1 = v[b + 1] ^ v[c + 1]\n  v[b] = (xor0 >>> 24) ^ (xor1 << 8)\n  v[b + 1] = (xor1 >>> 24) ^ (xor0 << 8)\n\n  ADD64AA(v, a, b)\n  ADD64AC(v, a, y0, y1)\n\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated right by 16 bits\n  xor0 = v[d] ^ v[a]\n  xor1 = v[d + 1] ^ v[a + 1]\n  v[d] = (xor0 >>> 16) ^ (xor1 << 16)\n  v[d + 1] = (xor1 >>> 16) ^ (xor0 << 16)\n\n  ADD64AA(v, c, d)\n\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 63 bits\n  xor0 = v[b] ^ v[c]\n  xor1 = v[b + 1] ^ v[c + 1]\n  v[b] = (xor1 >>> 31) ^ (xor0 << 1)\n  v[b + 1] = (xor0 >>> 31) ^ (xor1 << 1)\n}\n\n// Initialization Vector\nconst BLAKE2B_IV32 = new Uint32Array([\n  0xf3bcc908, 0x6a09e667, 0x84caa73b, 0xbb67ae85, 0xfe94f82b, 0x3c6ef372,\n  0x5f1d36f1, 0xa54ff53a, 0xade682d1, 0x510e527f, 0x2b3e6c1f, 0x9b05688c,\n  0xfb41bd6b, 0x1f83d9ab, 0x137e2179, 0x5be0cd19\n])\n\nconst SIGMA8 = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13,\n  6, 1, 12, 0, 2, 11, 7, 5, 3, 11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1,\n  9, 4, 7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8, 9, 0, 5, 7, 2, 4,\n  10, 15, 14, 1, 11, 12, 6, 8, 3, 13, 2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5,\n  15, 14, 1, 9, 12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11, 13, 11, 7,\n  14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10, 6, 15, 14, 9, 11, 3, 0, 8, 12, 2,\n  13, 7, 1, 4, 10, 5, 10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0, 0,\n  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6,\n  1, 12, 0, 2, 11, 7, 5, 3\n]\n\n// These are offsets into a uint64 buffer.\n// Multiply them all by 2 to make them offsets into a uint32 buffer,\n// because this is Javascript and we don't have uint64s\nconst SIGMA82 = new Uint8Array(\n  SIGMA8.map(function (x) {\n    return x * 2\n  })\n)\n\n// Compression function. 'last' flag indicates last block.\n// Note we're representing 16 uint64s as 32 uint32s\nconst v = new Uint32Array(32)\nconst m = new Uint32Array(32)\nfunction blake2bCompress (ctx, last) {\n  let i = 0\n\n  // init work variables\n  for (i = 0; i < 16; i++) {\n    v[i] = ctx.h[i]\n    v[i + 16] = BLAKE2B_IV32[i]\n  }\n\n  // low 64 bits of offset\n  v[24] = v[24] ^ ctx.t\n  v[25] = v[25] ^ (ctx.t / 0x100000000)\n  // high 64 bits not supported, offset may not be higher than 2**53-1\n\n  // last block flag set ?\n  if (last) {\n    v[28] = ~v[28]\n    v[29] = ~v[29]\n  }\n\n  // get little-endian words\n  for (i = 0; i < 32; i++) {\n    m[i] = B2B_GET32(ctx.b, 4 * i)\n  }\n\n  // twelve rounds of mixing\n  // uncomment the DebugPrint calls to log the computation\n  // and match the RFC sample documentation\n  // util.debugPrint('          m[16]', m, 64)\n  for (i = 0; i < 12; i++) {\n    // util.debugPrint('   (i=' + (i < 10 ? ' ' : '') + i + ') v[16]', v, 64)\n    B2B_G(0, 8, 16, 24, SIGMA82[i * 16 + 0], SIGMA82[i * 16 + 1])\n    B2B_G(2, 10, 18, 26, SIGMA82[i * 16 + 2], SIGMA82[i * 16 + 3])\n    B2B_G(4, 12, 20, 28, SIGMA82[i * 16 + 4], SIGMA82[i * 16 + 5])\n    B2B_G(6, 14, 22, 30, SIGMA82[i * 16 + 6], SIGMA82[i * 16 + 7])\n    B2B_G(0, 10, 20, 30, SIGMA82[i * 16 + 8], SIGMA82[i * 16 + 9])\n    B2B_G(2, 12, 22, 24, SIGMA82[i * 16 + 10], SIGMA82[i * 16 + 11])\n    B2B_G(4, 14, 16, 26, SIGMA82[i * 16 + 12], SIGMA82[i * 16 + 13])\n    B2B_G(6, 8, 18, 28, SIGMA82[i * 16 + 14], SIGMA82[i * 16 + 15])\n  }\n  // util.debugPrint('   (i=12) v[16]', v, 64)\n\n  for (i = 0; i < 16; i++) {\n    ctx.h[i] = ctx.h[i] ^ v[i] ^ v[i + 16]\n  }\n  // util.debugPrint('h[8]', ctx.h, 64)\n}\n\n// reusable parameterBlock\nconst parameterBlock = new Uint8Array([\n  0,\n  0,\n  0,\n  0, //  0: outlen, keylen, fanout, depth\n  0,\n  0,\n  0,\n  0, //  4: leaf length, sequential mode\n  0,\n  0,\n  0,\n  0, //  8: node offset\n  0,\n  0,\n  0,\n  0, // 12: node offset\n  0,\n  0,\n  0,\n  0, // 16: node depth, inner length, rfu\n  0,\n  0,\n  0,\n  0, // 20: rfu\n  0,\n  0,\n  0,\n  0, // 24: rfu\n  0,\n  0,\n  0,\n  0, // 28: rfu\n  0,\n  0,\n  0,\n  0, // 32: salt\n  0,\n  0,\n  0,\n  0, // 36: salt\n  0,\n  0,\n  0,\n  0, // 40: salt\n  0,\n  0,\n  0,\n  0, // 44: salt\n  0,\n  0,\n  0,\n  0, // 48: personal\n  0,\n  0,\n  0,\n  0, // 52: personal\n  0,\n  0,\n  0,\n  0, // 56: personal\n  0,\n  0,\n  0,\n  0 // 60: personal\n])\n\n// Creates a BLAKE2b hashing context\n// Requires an output length between 1 and 64 bytes\n// Takes an optional Uint8Array key\n// Takes an optinal Uint8Array salt\n// Takes an optinal Uint8Array personal\nfunction blake2bInit (outlen, key, salt, personal) {\n  if (outlen === 0 || outlen > 64) {\n    throw new Error('Illegal output length, expected 0 < length <= 64')\n  }\n  if (key && key.length > 64) {\n    throw new Error('Illegal key, expected Uint8Array with 0 < length <= 64')\n  }\n  if (salt && salt.length !== 16) {\n    throw new Error('Illegal salt, expected Uint8Array with length is 16')\n  }\n  if (personal && personal.length !== 16) {\n    throw new Error('Illegal personal, expected Uint8Array with length is 16')\n  }\n\n  // state, 'param block'\n  const ctx = {\n    b: new Uint8Array(128),\n    h: new Uint32Array(16),\n    t: 0, // input count\n    c: 0, // pointer within buffer\n    outlen: outlen // output length in bytes\n  }\n\n  // initialize parameterBlock before usage\n  parameterBlock.fill(0)\n  parameterBlock[0] = outlen\n  if (key) parameterBlock[1] = key.length\n  parameterBlock[2] = 1 // fanout\n  parameterBlock[3] = 1 // depth\n  if (salt) parameterBlock.set(salt, 32)\n  if (personal) parameterBlock.set(personal, 48)\n\n  // initialize hash state\n  for (let i = 0; i < 16; i++) {\n    ctx.h[i] = BLAKE2B_IV32[i] ^ B2B_GET32(parameterBlock, i * 4)\n  }\n\n  // key the hash, if applicable\n  if (key) {\n    blake2bUpdate(ctx, key)\n    // at the end\n    ctx.c = 128\n  }\n\n  return ctx\n}\n\n// Updates a BLAKE2b streaming hash\n// Requires hash context and Uint8Array (byte array)\nfunction blake2bUpdate (ctx, input) {\n  for (let i = 0; i < input.length; i++) {\n    if (ctx.c === 128) {\n      // buffer full ?\n      ctx.t += ctx.c // add counters\n      blake2bCompress(ctx, false) // compress (not last)\n      ctx.c = 0 // counter to zero\n    }\n    ctx.b[ctx.c++] = input[i]\n  }\n}\n\n// Completes a BLAKE2b streaming hash\n// Returns a Uint8Array containing the message digest\nfunction blake2bFinal (ctx) {\n  ctx.t += ctx.c // mark last block offset\n\n  while (ctx.c < 128) {\n    // fill up with zeros\n    ctx.b[ctx.c++] = 0\n  }\n  blake2bCompress(ctx, true) // final block flag = 1\n\n  // little endian convert and store\n  const out = new Uint8Array(ctx.outlen)\n  for (let i = 0; i < ctx.outlen; i++) {\n    out[i] = ctx.h[i >> 2] >> (8 * (i & 3))\n  }\n  return out\n}\n\n// Computes the BLAKE2B hash of a string or byte array, and returns a Uint8Array\n//\n// Returns a n-byte Uint8Array\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer or Uint8Array\n// - key - optional key Uint8Array, up to 64 bytes\n// - outlen - optional output length in bytes, default 64\n// - salt - optional salt bytes, string, Buffer or Uint8Array\n// - personal - optional personal bytes, string, Buffer or Uint8Array\nfunction blake2b (input, key, outlen, salt, personal) {\n  // preprocess inputs\n  outlen = outlen || 64\n  input = util.normalizeInput(input)\n  if (salt) {\n    salt = util.normalizeInput(salt)\n  }\n  if (personal) {\n    personal = util.normalizeInput(personal)\n  }\n\n  // do the math\n  const ctx = blake2bInit(outlen, key, salt, personal)\n  blake2bUpdate(ctx, input)\n  return blake2bFinal(ctx)\n}\n\n// Computes the BLAKE2B hash of a string or byte array\n//\n// Returns an n-byte hash in hex, all lowercase\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer, or Uint8Array\n// - key - optional key Uint8Array, up to 64 bytes\n// - outlen - optional output length in bytes, default 64\n// - salt - optional salt bytes, string, Buffer or Uint8Array\n// - personal - optional personal bytes, string, Buffer or Uint8Array\nfunction blake2bHex (input, key, outlen, salt, personal) {\n  const output = blake2b(input, key, outlen, salt, personal)\n  return util.toHex(output)\n}\n\nmodule.exports = {\n  blake2b: blake2b,\n  blake2bHex: blake2bHex,\n  blake2bInit: blake2bInit,\n  blake2bUpdate: blake2bUpdate,\n  blake2bFinal: blake2bFinal\n}\n", "// BLAKE2s hash function in pure Javascript\n// Adapted from the reference implementation in RFC7693\n// Ported to Javascript by DC - https://github.com/dcposch\n\nconst util = require('./util')\n\n// Little-endian byte access.\n// Expects a Uint8Array and an index\n// Returns the little-endian uint32 at v[i..i+3]\nfunction B2S_GET32 (v, i) {\n  return v[i] ^ (v[i + 1] << 8) ^ (v[i + 2] << 16) ^ (v[i + 3] << 24)\n}\n\n// Mixing function G.\nfunction B2S_G (a, b, c, d, x, y) {\n  v[a] = v[a] + v[b] + x\n  v[d] = ROTR32(v[d] ^ v[a], 16)\n  v[c] = v[c] + v[d]\n  v[b] = ROTR32(v[b] ^ v[c], 12)\n  v[a] = v[a] + v[b] + y\n  v[d] = ROTR32(v[d] ^ v[a], 8)\n  v[c] = v[c] + v[d]\n  v[b] = ROTR32(v[b] ^ v[c], 7)\n}\n\n// 32-bit right rotation\n// x should be a uint32\n// y must be between 1 and 31, inclusive\nfunction ROTR32 (x, y) {\n  return (x >>> y) ^ (x << (32 - y))\n}\n\n// Initialization Vector.\nconst BLAKE2S_IV = new Uint32Array([\n  0x6a09e667,\n  0xbb67ae85,\n  0x3c6ef372,\n  0xa54ff53a,\n  0x510e527f,\n  0x9b05688c,\n  0x1f83d9ab,\n  0x5be0cd19\n])\n\nconst SIGMA = new Uint8Array([\n  0,\n  1,\n  2,\n  3,\n  4,\n  5,\n  6,\n  7,\n  8,\n  9,\n  10,\n  11,\n  12,\n  13,\n  14,\n  15,\n  14,\n  10,\n  4,\n  8,\n  9,\n  15,\n  13,\n  6,\n  1,\n  12,\n  0,\n  2,\n  11,\n  7,\n  5,\n  3,\n  11,\n  8,\n  12,\n  0,\n  5,\n  2,\n  15,\n  13,\n  10,\n  14,\n  3,\n  6,\n  7,\n  1,\n  9,\n  4,\n  7,\n  9,\n  3,\n  1,\n  13,\n  12,\n  11,\n  14,\n  2,\n  6,\n  5,\n  10,\n  4,\n  0,\n  15,\n  8,\n  9,\n  0,\n  5,\n  7,\n  2,\n  4,\n  10,\n  15,\n  14,\n  1,\n  11,\n  12,\n  6,\n  8,\n  3,\n  13,\n  2,\n  12,\n  6,\n  10,\n  0,\n  11,\n  8,\n  3,\n  4,\n  13,\n  7,\n  5,\n  15,\n  14,\n  1,\n  9,\n  12,\n  5,\n  1,\n  15,\n  14,\n  13,\n  4,\n  10,\n  0,\n  7,\n  6,\n  3,\n  9,\n  2,\n  8,\n  11,\n  13,\n  11,\n  7,\n  14,\n  12,\n  1,\n  3,\n  9,\n  5,\n  0,\n  15,\n  4,\n  8,\n  6,\n  2,\n  10,\n  6,\n  15,\n  14,\n  9,\n  11,\n  3,\n  0,\n  8,\n  12,\n  2,\n  13,\n  7,\n  1,\n  4,\n  10,\n  5,\n  10,\n  2,\n  8,\n  4,\n  7,\n  6,\n  1,\n  5,\n  15,\n  11,\n  9,\n  14,\n  3,\n  12,\n  13,\n  0\n])\n\n// Compression function. \"last\" flag indicates last block\nconst v = new Uint32Array(16)\nconst m = new Uint32Array(16)\nfunction blake2sCompress (ctx, last) {\n  let i = 0\n  for (i = 0; i < 8; i++) {\n    // init work variables\n    v[i] = ctx.h[i]\n    v[i + 8] = BLAKE2S_IV[i]\n  }\n\n  v[12] ^= ctx.t // low 32 bits of offset\n  v[13] ^= ctx.t / 0x100000000 // high 32 bits\n  if (last) {\n    // last block flag set ?\n    v[14] = ~v[14]\n  }\n\n  for (i = 0; i < 16; i++) {\n    // get little-endian words\n    m[i] = B2S_GET32(ctx.b, 4 * i)\n  }\n\n  // ten rounds of mixing\n  // uncomment the DebugPrint calls to log the computation\n  // and match the RFC sample documentation\n  // util.debugPrint('          m[16]', m, 32)\n  for (i = 0; i < 10; i++) {\n    // util.debugPrint('   (i=' + i + ')  v[16]', v, 32)\n    B2S_G(0, 4, 8, 12, m[SIGMA[i * 16 + 0]], m[SIGMA[i * 16 + 1]])\n    B2S_G(1, 5, 9, 13, m[SIGMA[i * 16 + 2]], m[SIGMA[i * 16 + 3]])\n    B2S_G(2, 6, 10, 14, m[SIGMA[i * 16 + 4]], m[SIGMA[i * 16 + 5]])\n    B2S_G(3, 7, 11, 15, m[SIGMA[i * 16 + 6]], m[SIGMA[i * 16 + 7]])\n    B2S_G(0, 5, 10, 15, m[SIGMA[i * 16 + 8]], m[SIGMA[i * 16 + 9]])\n    B2S_G(1, 6, 11, 12, m[SIGMA[i * 16 + 10]], m[SIGMA[i * 16 + 11]])\n    B2S_G(2, 7, 8, 13, m[SIGMA[i * 16 + 12]], m[SIGMA[i * 16 + 13]])\n    B2S_G(3, 4, 9, 14, m[SIGMA[i * 16 + 14]], m[SIGMA[i * 16 + 15]])\n  }\n  // util.debugPrint('   (i=10) v[16]', v, 32)\n\n  for (i = 0; i < 8; i++) {\n    ctx.h[i] ^= v[i] ^ v[i + 8]\n  }\n  // util.debugPrint('h[8]', ctx.h, 32)\n}\n\n// Creates a BLAKE2s hashing context\n// Requires an output length between 1 and 32 bytes\n// Takes an optional Uint8Array key\nfunction blake2sInit (outlen, key) {\n  if (!(outlen > 0 && outlen <= 32)) {\n    throw new Error('Incorrect output length, should be in [1, 32]')\n  }\n  const keylen = key ? key.length : 0\n  if (key && !(keylen > 0 && keylen <= 32)) {\n    throw new Error('Incorrect key length, should be in [1, 32]')\n  }\n\n  const ctx = {\n    h: new Uint32Array(BLAKE2S_IV), // hash state\n    b: new Uint8Array(64), // input block\n    c: 0, // pointer within block\n    t: 0, // input count\n    outlen: outlen // output length in bytes\n  }\n  ctx.h[0] ^= 0x01010000 ^ (keylen << 8) ^ outlen\n\n  if (keylen > 0) {\n    blake2sUpdate(ctx, key)\n    ctx.c = 64 // at the end\n  }\n\n  return ctx\n}\n\n// Updates a BLAKE2s streaming hash\n// Requires hash context and Uint8Array (byte array)\nfunction blake2sUpdate (ctx, input) {\n  for (let i = 0; i < input.length; i++) {\n    if (ctx.c === 64) {\n      // buffer full ?\n      ctx.t += ctx.c // add counters\n      blake2sCompress(ctx, false) // compress (not last)\n      ctx.c = 0 // counter to zero\n    }\n    ctx.b[ctx.c++] = input[i]\n  }\n}\n\n// Completes a BLAKE2s streaming hash\n// Returns a Uint8Array containing the message digest\nfunction blake2sFinal (ctx) {\n  ctx.t += ctx.c // mark last block offset\n  while (ctx.c < 64) {\n    // fill up with zeros\n    ctx.b[ctx.c++] = 0\n  }\n  blake2sCompress(ctx, true) // final block flag = 1\n\n  // little endian convert and store\n  const out = new Uint8Array(ctx.outlen)\n  for (let i = 0; i < ctx.outlen; i++) {\n    out[i] = (ctx.h[i >> 2] >> (8 * (i & 3))) & 0xff\n  }\n  return out\n}\n\n// Computes the BLAKE2S hash of a string or byte array, and returns a Uint8Array\n//\n// Returns a n-byte Uint8Array\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer, or Uint8Array\n// - key - optional key Uint8Array, up to 32 bytes\n// - outlen - optional output length in bytes, default 64\nfunction blake2s (input, key, outlen) {\n  // preprocess inputs\n  outlen = outlen || 32\n  input = util.normalizeInput(input)\n\n  // do the math\n  const ctx = blake2sInit(outlen, key)\n  blake2sUpdate(ctx, input)\n  return blake2sFinal(ctx)\n}\n\n// Computes the BLAKE2S hash of a string or byte array\n//\n// Returns an n-byte hash in hex, all lowercase\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer, or Uint8Array\n// - key - optional key Uint8Array, up to 32 bytes\n// - outlen - optional output length in bytes, default 64\nfunction blake2sHex (input, key, outlen) {\n  const output = blake2s(input, key, outlen)\n  return util.toHex(output)\n}\n\nmodule.exports = {\n  blake2s: blake2s,\n  blake2sHex: blake2sHex,\n  blake2sInit: blake2sInit,\n  blake2sUpdate: blake2sUpdate,\n  blake2sFinal: blake2sFinal\n}\n", "const b2b = require('./blake2b')\nconst b2s = require('./blake2s')\n\nmodule.exports = {\n  blake2b: b2b.blake2b,\n  blake2bHex: b2b.blake2bHex,\n  blake2bInit: b2b.blake2bInit,\n  blake2bUpdate: b2b.blake2bUpdate,\n  blake2bFinal: b2b.blake2bFinal,\n  blake2s: b2s.blake2s,\n  blake2sHex: b2s.blake2sHex,\n  blake2sInit: b2s.blake2sInit,\n  blake2sUpdate: b2s.blake2sUpdate,\n  blake2sFinal: b2s.blake2sFinal\n}\n", "function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`Wrong positive integer: ${n}`);\n}\n\nfunction bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`Expected boolean, not ${b}`);\n}\n\n// copied from utils\nfunction isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array')\n  );\n}\n\nfunction bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!isBytes(b)) throw new Error('Expected Uint8Array');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nfunction hash(hash: Hash) {\n  if (typeof hash !== 'function' || typeof hash.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(hash.outputLen);\n  number(hash.blockLen);\n}\n\nfunction exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nfunction output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nexport { number, bool, bytes, hash, exists, output };\n\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n", "// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// See utils.ts for details.\ndeclare const globalThis: Record<string, any> | undefined;\nexport const crypto =\n  typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n", "/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\nfunction isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array')\n  );\n}\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\n// Other libraries would silently corrupt the data instead of throwing an error,\n// when they don't support it.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\n\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  if (!isBytes(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 } as const;\nfunction asciiToBase16(char: number): number | undefined {\n  if (char >= asciis._0 && char <= asciis._9) return char - asciis._0;\n  if (char >= asciis._A && char <= asciis._F) return char - (asciis._A - 10);\n  if (char >= asciis._a && char <= asciis._f) return char - (asciis._a - 10);\n  return;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\nexport type Input = Uint8Array | string;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!isBytes(data)) throw new Error(`expected Uint8Array, got ${typeof data}`);\n  return data;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  let sum = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    if (!isBytes(a)) throw new Error('Uint8Array expected');\n    sum += a.length;\n  }\n  const res = new Uint8Array(sum);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\nconst toStr = {}.toString;\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n    throw new Error('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashCons: () => Hash<T>) {\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\nexport function wrapXOFConstructorWithOpts<H extends HashXOF<H>, T extends Object>(\n  hashCons: (opts?: T) => HashXOF<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n", "import { exists, output } from './_assert.js';\nimport { Hash, createView, Input, toBytes } from './utils.js';\n\n// Polyfill for Safari 14\nfunction setBigUint64(view: DataView, byteOffset: number, value: bigint, isLE: boolean): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n// Base SHA2 class (RFC 6234)\nexport abstract class SHA2<T extends SHA2<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    readonly padOffset: number,\n    readonly isLE: boolean\n  ) {\n    super();\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    exists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    exists(this);\n    output(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest() {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n", "import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n\n// Choice: a ? b : c\nconst Chi = (a: number, b: number, c: number) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a: number, b: number, c: number) => (a & b) ^ (a & c) ^ (b & c);\n\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = /* @__PURE__ */new Uint32Array([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends SHA2<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  A = IV[0] | 0;\n  B = IV[1] | 0;\n  C = IV[2] | 0;\n  D = IV[3] | 0;\n  E = IV[4] | 0;\n  F = IV[5] | 0;\n  G = IV[6] | 0;\n  H = IV[7] | 0;\n\n  constructor() {\n    super(64, 32, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ) {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean() {\n    SHA256_W.fill(0);\n  }\n  destroy() {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    this.buffer.fill(0);\n  }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n  A = 0xc1059ed8 | 0;\n  B = 0x367cd507 | 0;\n  C = 0x3070dd17 | 0;\n  D = 0xf70e5939 | 0;\n  E = 0xffc00b31 | 0;\n  F = 0x68581511 | 0;\n  G = 0x64f98fa7 | 0;\n  H = 0xbefa4fa4 | 0;\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n", "'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) {\n    } else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength)\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source)\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = new Uint8Array(zeroes + (size - it4))\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n", "const basex = require('base-x')\nconst ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n", "'use strict'\n\nvar base58 = require('bs58')\n\nmodule.exports = function (checksumFn) {\n  // Encode a buffer as a base58-check encoded string\n  function encode (payload) {\n    var payloadU8 = Uint8Array.from(payload)\n    var checksum = checksumFn(payloadU8)\n    var length = payloadU8.length + 4\n    var both = new Uint8Array(length)\n    both.set(payloadU8, 0)\n    both.set(checksum.subarray(0, 4), payloadU8.length)\n    return base58.encode(both, length)\n  }\n\n  function decodeRaw (buffer) {\n    var payload = buffer.slice(0, -4)\n    var checksum = buffer.slice(-4)\n    var newChecksum = checksumFn(payload)\n\n    if (checksum[0] ^ newChecksum[0] |\n        checksum[1] ^ newChecksum[1] |\n        checksum[2] ^ newChecksum[2] |\n        checksum[3] ^ newChecksum[3]) return\n\n    return payload\n  }\n\n  // Decode a base58-check encoded string to a buffer, no result if checksum is wrong\n  function decodeUnsafe (string) {\n    var buffer = base58.decodeUnsafe(string)\n    if (!buffer) return\n\n    return decodeRaw(buffer)\n  }\n\n  function decode (string) {\n    var buffer = base58.decode(string)\n    var payload = decodeRaw(buffer, checksumFn)\n    if (!payload) throw new Error('Invalid checksum')\n    return payload\n  }\n\n  return {\n    encode: encode,\n    decode: decode,\n    decodeUnsafe: decodeUnsafe\n  }\n}\n", "'use strict'\n\nvar { sha256 } = require('@noble/hashes/sha256')\nvar bs58checkBase = require('./base')\n\n// SHA256(SHA256(buffer))\nfunction sha256x2 (buffer) {\n  return sha256(sha256(buffer))\n}\n\nmodule.exports = bs58checkBase(sha256x2)\n", "/*! typedarray-to-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/**\n * Convert a typed array to a Buffer without a copy\n *\n * Author:   Feross Aboukhadijeh <https://feross.org>\n * License:  MIT\n *\n * `npm install typedarray-to-buffer`\n */\n\nmodule.exports = function typedarrayToBuffer (arr) {\n  return ArrayBuffer.isView(arr)\n    // To avoid a copy, use the typed array's underlying ArrayBuffer to back\n    // new Buffer, respecting the \"view\", i.e. byteOffset and byteLength\n    ? Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength)\n    // Pass through all other types to `Buffer.from`\n    : Buffer.from(arr)\n}\n", "'use strict';\n\nmodule.exports = function (data, opts) {\n    if (!opts) opts = {};\n    if (typeof opts === 'function') opts = { cmp: opts };\n    var cycles = (typeof opts.cycles === 'boolean') ? opts.cycles : false;\n\n    var cmp = opts.cmp && (function (f) {\n        return function (node) {\n            return function (a, b) {\n                var aobj = { key: a, value: node[a] };\n                var bobj = { key: b, value: node[b] };\n                return f(aobj, bobj);\n            };\n        };\n    })(opts.cmp);\n\n    var seen = [];\n    return (function stringify (node) {\n        if (node && node.toJSON && typeof node.toJSON === 'function') {\n            node = node.toJSON();\n        }\n\n        if (node === undefined) return;\n        if (typeof node == 'number') return isFinite(node) ? '' + node : 'null';\n        if (typeof node !== 'object') return JSON.stringify(node);\n\n        var i, out;\n        if (Array.isArray(node)) {\n            out = '[';\n            for (i = 0; i < node.length; i++) {\n                if (i) out += ',';\n                out += stringify(node[i]) || 'null';\n            }\n            return out + ']';\n        }\n\n        if (node === null) return 'null';\n\n        if (seen.indexOf(node) !== -1) {\n            if (cycles) return JSON.stringify('__cycle__');\n            throw new TypeError('Converting circular structure to JSON');\n        }\n\n        var seenIndex = seen.push(node) - 1;\n        var keys = Object.keys(node).sort(cmp && cmp(node));\n        out = '';\n        for (i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            var value = stringify(node[key]);\n\n            if (!value) continue;\n            if (out) out += ',';\n            out += JSON.stringify(key) + ':' + value;\n        }\n        seen.splice(seenIndex, 1);\n        return '{' + out + '}';\n    })(data);\n};\n", "import axios from 'axios';\nimport { NetworkError } from '@taquito/core';\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\n/* eslint-disable @typescript-eslint/no-var-requires */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst settle = require('axios/lib/core/settle');\nconst buildURL = require('axios/lib/helpers/buildURL');\nconst buildFullPath = require('axios/lib/core/buildFullPath');\nconst { isUndefined, isStandardBrowserEnv, isFormData } = require('axios/lib/utils');\n/**\n * - Create a request object\n * - Get response body\n * - Check if timeout\n */\nfunction fetchAdapter(config) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const request = createRequest(config);\n        const promiseChain = [getResponse(request, config)];\n        if (config.timeout && config.timeout > 0) {\n            promiseChain.push(new Promise((res) => {\n                setTimeout(() => {\n                    const message = config.timeoutErrorMessage\n                        ? config.timeoutErrorMessage\n                        : 'timeout of ' + config.timeout + 'ms exceeded';\n                    res(createError(message, config, 'ECONNABORTED', request));\n                }, config.timeout);\n            }));\n        }\n        const data = yield Promise.race(promiseChain);\n        return new Promise((resolve, reject) => {\n            if (data instanceof Error) {\n                reject(data);\n            }\n            else {\n                const c = config;\n                'settle' in c && Object.prototype.toString.call(c.settle) === '[object Function]'\n                    ? c.settle(resolve, reject, data)\n                    : settle(resolve, reject, data);\n            }\n        });\n    });\n}\n/**\n * Fetch API stage two is to get response body. This function tries to retrieve\n * response body based on response's type\n */\nfunction getResponse(request, config) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            const stageOne = yield fetch(request);\n            let response = {\n                ok: stageOne.ok,\n                status: stageOne.status,\n                statusText: stageOne.statusText,\n                headers: new Headers(stageOne.headers),\n                config: config,\n                request,\n            };\n            if (stageOne.status >= 400) {\n                return createError('Response Error', config, 'ERR_NETWORK', request, response);\n            }\n            response = {\n                ok: stageOne.ok,\n                status: stageOne.status,\n                statusText: stageOne.statusText,\n                headers: new Headers(stageOne.headers),\n                config: config,\n                request,\n            };\n            if (stageOne.status >= 200 && stageOne.status !== 204) {\n                switch (config.responseType) {\n                    case 'arraybuffer':\n                        response.data = yield stageOne.arrayBuffer();\n                        break;\n                    case 'blob':\n                        response.data = yield stageOne.blob();\n                        break;\n                    case 'json':\n                        response.data = yield stageOne.json();\n                        break;\n                    // TODO: the next option does not exist in response type\n                    // case 'formData':\n                    //     response.data = await stageOne.formData();\n                    //     break;\n                    default:\n                        response.data = yield stageOne.text();\n                        break;\n                }\n            }\n            return response;\n        }\n        catch (e) {\n            return createError('Network Error', config, 'ERR_NETWORK', request);\n        }\n    });\n}\n/**\n * This function will create a Request object based on configuration's axios\n */\nfunction createRequest(config) {\n    var _a;\n    const headers = new Headers(config.headers);\n    // HTTP basic authentication\n    if (config.auth) {\n        const username = config.auth.username || '';\n        const password = config.auth.password\n            ? decodeURI(encodeURIComponent(config.auth.password))\n            : '';\n        headers.set('Authorization', `Basic ${btoa(username + ':' + password)}`);\n    }\n    const method = (_a = config.method) === null || _a === void 0 ? void 0 : _a.toUpperCase();\n    const options = {\n        headers: headers,\n        method,\n    };\n    if (method !== 'GET' && method !== 'HEAD') {\n        options.body = config.data;\n        // In these cases the browser will automatically set the correct Content-Type,\n        // but only if that header hasn't been set yet. So that's why we're deleting it.\n        if (isFormData(options.body) && isStandardBrowserEnv()) {\n            headers.delete('Content-Type');\n        }\n    }\n    const c = config;\n    if ('mode' in c) {\n        options.mode = c.mode;\n    }\n    if ('cache' in c) {\n        options.cache = c.cache;\n    }\n    if ('integrity' in c) {\n        options.integrity = c.integrity;\n    }\n    if ('redirect' in c) {\n        options.redirect = c.redirect;\n    }\n    if ('referrer' in c) {\n        options.referrer = c.referrer;\n    }\n    // This config is similar to XHR’s withCredentials flag, but with three available values instead of two.\n    // So if withCredentials is not set, default value 'same-origin' will be used\n    if (!isUndefined(c.withCredentials)) {\n        options.credentials = c.withCredentials ? 'include' : 'omit';\n    }\n    const fullPath = buildFullPath(c.baseURL, c.url);\n    const url = buildURL(fullPath, c.params, c.paramsSerializer);\n    // Expected browser to throw error if there is any wrong configuration value\n    return new Request(url, options);\n}\n/**\n * Note:\n *\n *   From version >= 0.27.0, createError function is replaced by AxiosError class.\n *   So I copy the old createError function here for backward compatible.\n *\n *\n *\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nfunction createError(message, config, code, request, response) {\n    // TODO: this code never runs\n    // if ('AxiosError' in axios && axios.AxiosError && typeof axios.AxiosError === 'function' && isConstructor(axios.AxiosError)) {\n    //     return new axios.AxiosError(message, axios.AxiosError[code], config, request, response);\n    // }\n    const error = new Error(message);\n    return enhanceError(error, config, code, request, response);\n}\n/**\n *\n * Note:\n *\n *   This function is for backward compatible.\n *\n *\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nfunction enhanceError(error, config, code, request, response) {\n    error.config = config;\n    if (code) {\n        error.code = code;\n    }\n    error.request = request;\n    error.response = response;\n    error.isAxiosError = true;\n    error.toJSON = function toJSON() {\n        return {\n            // Standard\n            message: this.message,\n            name: this.name,\n            // Microsoft\n            description: 'description' in this ? this.description : undefined,\n            number: 'number' in this ? this.number : undefined,\n            // Mozilla\n            fileName: 'fileName' in this ? this.fileName : undefined,\n            lineNumber: 'lineNumber' in this ? this.lineNumber : undefined,\n            columnNumber: 'columnNumber' in this ? this.columnNumber : undefined,\n            stack: this.stack,\n            // Axios\n            config: this.config,\n            code: this.code,\n            status: this.response && this.response.status ? this.response.status : null,\n        };\n    };\n    return error;\n}\n\n/**\n *  @category Error\n *  @description Error that indicates a general failure in making the HTTP request\n */\nclass HttpRequestFailed extends NetworkError {\n    constructor(method, url, cause) {\n        super();\n        this.method = method;\n        this.url = url;\n        this.cause = cause;\n        this.name = 'HttpRequestFailed';\n        this.message = `${method} ${url} ${String(cause)}`;\n    }\n}\n/**\n *  @category Error\n *  @description Error thrown when the endpoint returns an HTTP error to the client\n */\nclass HttpResponseError extends NetworkError {\n    constructor(message, status, statusText, body, url) {\n        super();\n        this.message = message;\n        this.status = status;\n        this.statusText = statusText;\n        this.body = body;\n        this.url = url;\n        this.name = 'HttpResponse';\n    }\n}\n\n/**\n * Hypertext Transfer Protocol (HTTP) response status codes.\n * @see {@link https://en.wikipedia.org/wiki/List_of_HTTP_status_codes}\n */\nvar STATUS_CODE;\n(function (STATUS_CODE) {\n    /**\n     * The server has received the request headers and the client should proceed to send the request body\n     * (in the case of a request for which a body needs to be sent; for example, a POST request).\n     * Sending a large request body to a server after a request has been rejected for inappropriate headers would be inefficient.\n     * To have a server check the request's headers, a client must send Expect: 100-continue as a header in its initial request\n     * and receive a 100 Continue status code in response before sending the body. The response 417 Expectation Failed indicates the request should not be continued.\n     */\n    STATUS_CODE[STATUS_CODE[\"CONTINUE\"] = 100] = \"CONTINUE\";\n    /**\n     * The requester has asked the server to switch protocols and the server has agreed to do so.\n     */\n    STATUS_CODE[STATUS_CODE[\"SWITCHING_PROTOCOLS\"] = 101] = \"SWITCHING_PROTOCOLS\";\n    /**\n     * A WebDAV request may contain many sub-requests involving file operations, requiring a long time to complete the request.\n     * This code indicates that the server has received and is processing the request, but no response is available yet.\n     * This prevents the client from timing out and assuming the request was lost.\n     */\n    STATUS_CODE[STATUS_CODE[\"PROCESSING\"] = 102] = \"PROCESSING\";\n    /**\n     * Standard response for successful HTTP requests.\n     * The actual response will depend on the request method used.\n     * In a GET request, the response will contain an entity corresponding to the requested resource.\n     * In a POST request, the response will contain an entity describing or containing the result of the action.\n     */\n    STATUS_CODE[STATUS_CODE[\"OK\"] = 200] = \"OK\";\n    /**\n     * The request has been fulfilled, resulting in the creation of a new resource.\n     */\n    STATUS_CODE[STATUS_CODE[\"CREATED\"] = 201] = \"CREATED\";\n    /**\n     * The request has been accepted for processing, but the processing has not been completed.\n     * The request might or might not be eventually acted upon, and may be disallowed when processing occurs.\n     */\n    STATUS_CODE[STATUS_CODE[\"ACCEPTED\"] = 202] = \"ACCEPTED\";\n    /**\n     * SINCE HTTP/1.1\n     * The server is a transforming proxy that received a 200 OK from its origin,\n     * but is returning a modified version of the origin's response.\n     */\n    STATUS_CODE[STATUS_CODE[\"NON_AUTHORITATIVE_INFORMATION\"] = 203] = \"NON_AUTHORITATIVE_INFORMATION\";\n    /**\n     * The server successfully processed the request and is not returning any content.\n     */\n    STATUS_CODE[STATUS_CODE[\"NO_CONTENT\"] = 204] = \"NO_CONTENT\";\n    /**\n     * The server successfully processed the request, but is not returning any content.\n     * Unlike a 204 response, this response requires that the requester reset the document view.\n     */\n    STATUS_CODE[STATUS_CODE[\"RESET_CONTENT\"] = 205] = \"RESET_CONTENT\";\n    /**\n     * The server is delivering only part of the resource (byte serving) due to a range header sent by the client.\n     * The range header is used by HTTP clients to enable resuming of interrupted downloads,\n     * or split a download into multiple simultaneous streams.\n     */\n    STATUS_CODE[STATUS_CODE[\"PARTIAL_CONTENT\"] = 206] = \"PARTIAL_CONTENT\";\n    /**\n     * The message body that follows is an XML message and can contain a number of separate response codes,\n     * depending on how many sub-requests were made.\n     */\n    STATUS_CODE[STATUS_CODE[\"MULTI_STATUS\"] = 207] = \"MULTI_STATUS\";\n    /**\n     * The members of a DAV binding have already been enumerated in a preceding part of the (multistatus) response,\n     * and are not being included again.\n     */\n    STATUS_CODE[STATUS_CODE[\"ALREADY_REPORTED\"] = 208] = \"ALREADY_REPORTED\";\n    /**\n     * The server has fulfilled a request for the resource,\n     * and the response is a representation of the result of one or more instance-manipulations applied to the current instance.\n     */\n    STATUS_CODE[STATUS_CODE[\"IM_USED\"] = 226] = \"IM_USED\";\n    /**\n     * Indicates multiple options for the resource from which the client may choose (via agent-driven content negotiation).\n     * For example, this code could be used to present multiple video format options,\n     * to list files with different filename extensions, or to suggest word-sense disambiguation.\n     */\n    STATUS_CODE[STATUS_CODE[\"MULTIPLE_CHOICES\"] = 300] = \"MULTIPLE_CHOICES\";\n    /**\n     * This and all future requests should be directed to the given URI.\n     */\n    STATUS_CODE[STATUS_CODE[\"MOVED_PERMANENTLY\"] = 301] = \"MOVED_PERMANENTLY\";\n    /**\n     * This is an example of industry practice contradicting the standard.\n     * The HTTP/1.0 specification (RFC 1945) required the client to perform a temporary redirect\n     * (the original describing phrase was \"Moved Temporarily\"), but popular browsers implemented 302\n     * with the functionality of a 303 See Other. Therefore, HTTP/1.1 added status codes 303 and 307\n     * to distinguish between the two behaviours. However, some Web applications and frameworks\n     * use the 302 status code as if it were the 303.\n     */\n    STATUS_CODE[STATUS_CODE[\"FOUND\"] = 302] = \"FOUND\";\n    /**\n     * SINCE HTTP/1.1\n     * The response to the request can be found under another URI using a GET method.\n     * When received in response to a POST (or PUT/DELETE), the client should presume that\n     * the server has received the data and should issue a redirect with a separate GET message.\n     */\n    STATUS_CODE[STATUS_CODE[\"SEE_OTHER\"] = 303] = \"SEE_OTHER\";\n    /**\n     * Indicates that the resource has not been modified since the version specified by the request headers If-Modified-Since or If-None-Match.\n     * In such case, there is no need to retransmit the resource since the client still has a previously-downloaded copy.\n     */\n    STATUS_CODE[STATUS_CODE[\"NOT_MODIFIED\"] = 304] = \"NOT_MODIFIED\";\n    /**\n     * SINCE HTTP/1.1\n     * The requested resource is available only through a proxy, the address for which is provided in the response.\n     * Many HTTP clients (such as Mozilla and Internet Explorer) do not correctly handle responses with this status code, primarily for security reasons.\n     */\n    STATUS_CODE[STATUS_CODE[\"USE_PROXY\"] = 305] = \"USE_PROXY\";\n    /**\n     * No longer used. Originally meant \"Subsequent requests should use the specified proxy.\"\n     */\n    STATUS_CODE[STATUS_CODE[\"SWITCH_PROXY\"] = 306] = \"SWITCH_PROXY\";\n    /**\n     * SINCE HTTP/1.1\n     * In this case, the request should be repeated with another URI; however, future requests should still use the original URI.\n     * In contrast to how 302 was historically implemented, the request method is not allowed to be changed when reissuing the original request.\n     * For example, a POST request should be repeated using another POST request.\n     */\n    STATUS_CODE[STATUS_CODE[\"TEMPORARY_REDIRECT\"] = 307] = \"TEMPORARY_REDIRECT\";\n    /**\n     * The request and all future requests should be repeated using another URI.\n     * 307 and 308 parallel the behaviors of 302 and 301, but do not allow the HTTP method to change.\n     * So, for example, submitting a form to a permanently redirected resource may continue smoothly.\n     */\n    STATUS_CODE[STATUS_CODE[\"PERMANENT_REDIRECT\"] = 308] = \"PERMANENT_REDIRECT\";\n    /**\n     * The server cannot or will not process the request due to an apparent client error\n     * (e.g., malformed request syntax, too large size, invalid request message framing, or deceptive request routing).\n     */\n    STATUS_CODE[STATUS_CODE[\"BAD_REQUEST\"] = 400] = \"BAD_REQUEST\";\n    /**\n     * Similar to 403 Forbidden, but specifically for use when authentication is required and has failed or has not yet\n     * been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the\n     * requested resource. See Basic access authentication and Digest access authentication. 401 semantically means\n     * \"unauthenticated\",i.e. the user does not have the necessary credentials.\n     */\n    STATUS_CODE[STATUS_CODE[\"UNAUTHORIZED\"] = 401] = \"UNAUTHORIZED\";\n    /**\n     * Reserved for future use. The original intention was that this code might be used as part of some form of digital\n     * cash or micro payment scheme, but that has not happened, and this code is not usually used.\n     * Google Developers API uses this status if a particular developer has exceeded the daily limit on requests.\n     */\n    STATUS_CODE[STATUS_CODE[\"PAYMENT_REQUIRED\"] = 402] = \"PAYMENT_REQUIRED\";\n    /**\n     * The request was valid, but the server is refusing action.\n     * The user might not have the necessary permissions for a resource.\n     */\n    STATUS_CODE[STATUS_CODE[\"FORBIDDEN\"] = 403] = \"FORBIDDEN\";\n    /**\n     * The requested resource could not be found but may be available in the future.\n     * Subsequent requests by the client are permissible.\n     */\n    STATUS_CODE[STATUS_CODE[\"NOT_FOUND\"] = 404] = \"NOT_FOUND\";\n    /**\n     * A request method is not supported for the requested resource;\n     * for example, a GET request on a form that requires data to be presented via POST, or a PUT request on a read-only resource.\n     */\n    STATUS_CODE[STATUS_CODE[\"METHOD_NOT_ALLOWED\"] = 405] = \"METHOD_NOT_ALLOWED\";\n    /**\n     * The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.\n     */\n    STATUS_CODE[STATUS_CODE[\"NOT_ACCEPTABLE\"] = 406] = \"NOT_ACCEPTABLE\";\n    /**\n     * The client must first authenticate itself with the proxy.\n     */\n    STATUS_CODE[STATUS_CODE[\"PROXY_AUTHENTICATION_REQUIRED\"] = 407] = \"PROXY_AUTHENTICATION_REQUIRED\";\n    /**\n     * The server timed out waiting for the request.\n     * According to HTTP specifications:\n     * \"The client did not produce a request within the time that the server was prepared to wait. The client MAY repeat the request without modifications at any later time.\"\n     */\n    STATUS_CODE[STATUS_CODE[\"REQUEST_TIMEOUT\"] = 408] = \"REQUEST_TIMEOUT\";\n    /**\n     * Indicates that the request could not be processed because of conflict in the request,\n     * such as an edit conflict between multiple simultaneous updates.\n     */\n    STATUS_CODE[STATUS_CODE[\"CONFLICT\"] = 409] = \"CONFLICT\";\n    /**\n     * Indicates that the resource requested is no longer available and will not be available again.\n     * This should be used when a resource has been intentionally removed and the resource should be purged.\n     * Upon receiving a 410 status code, the client should not request the resource in the future.\n     * Clients such as search engines should remove the resource from their indices.\n     * Most use cases do not require clients and search engines to purge the resource, and a \"404 Not Found\" may be used instead.\n     */\n    STATUS_CODE[STATUS_CODE[\"GONE\"] = 410] = \"GONE\";\n    /**\n     * The request did not specify the length of its content, which is required by the requested resource.\n     */\n    STATUS_CODE[STATUS_CODE[\"LENGTH_REQUIRED\"] = 411] = \"LENGTH_REQUIRED\";\n    /**\n     * The server does not meet one of the preconditions that the requester put on the request.\n     */\n    STATUS_CODE[STATUS_CODE[\"PRECONDITION_FAILED\"] = 412] = \"PRECONDITION_FAILED\";\n    /**\n     * The request is larger than the server is willing or able to process. Previously called \"Request Entity Too Large\".\n     */\n    STATUS_CODE[STATUS_CODE[\"PAYLOAD_TOO_LARGE\"] = 413] = \"PAYLOAD_TOO_LARGE\";\n    /**\n     * The URI provided was too long for the server to process. Often the result of too much data being encoded as a query-string of a GET request,\n     * in which case it should be converted to a POST request.\n     * Called \"Request-URI Too Long\" previously.\n     */\n    STATUS_CODE[STATUS_CODE[\"URI_TOO_LONG\"] = 414] = \"URI_TOO_LONG\";\n    /**\n     * The request entity has a media type which the server or resource does not support.\n     * For example, the client uploads an image as image/svg+xml, but the server requires that images use a different format.\n     */\n    STATUS_CODE[STATUS_CODE[\"UNSUPPORTED_MEDIA_TYPE\"] = 415] = \"UNSUPPORTED_MEDIA_TYPE\";\n    /**\n     * The client has asked for a portion of the file (byte serving), but the server cannot supply that portion.\n     * For example, if the client asked for a part of the file that lies beyond the end of the file.\n     * Called \"Requested Range Not Satisfiable\" previously.\n     */\n    STATUS_CODE[STATUS_CODE[\"RANGE_NOT_SATISFIABLE\"] = 416] = \"RANGE_NOT_SATISFIABLE\";\n    /**\n     * The server cannot meet the requirements of the Expect request-header field.\n     */\n    STATUS_CODE[STATUS_CODE[\"EXPECTATION_FAILED\"] = 417] = \"EXPECTATION_FAILED\";\n    /**\n     * This code was defined in 1998 as one of the traditional IETF April Fools' jokes, in RFC 2324, Hyper Text Coffee Pot Control Protocol,\n     * and is not expected to be implemented by actual HTTP servers. The RFC specifies this code should be returned by\n     * teapots requested to brew coffee. This HTTP status is used as an Easter egg in some websites, including Google.com.\n     */\n    STATUS_CODE[STATUS_CODE[\"I_AM_A_TEAPOT\"] = 418] = \"I_AM_A_TEAPOT\";\n    /**\n     * The request was directed at a server that is not able to produce a response (for example because a connection reuse).\n     */\n    STATUS_CODE[STATUS_CODE[\"MISDIRECTED_REQUEST\"] = 421] = \"MISDIRECTED_REQUEST\";\n    /**\n     * The request was well-formed but was unable to be followed due to semantic errors.\n     */\n    STATUS_CODE[STATUS_CODE[\"UNPROCESSABLE_ENTITY\"] = 422] = \"UNPROCESSABLE_ENTITY\";\n    /**\n     * The resource that is being accessed is locked.\n     */\n    STATUS_CODE[STATUS_CODE[\"LOCKED\"] = 423] = \"LOCKED\";\n    /**\n     * The request failed due to failure of a previous request (e.g., a PROPPATCH).\n     */\n    STATUS_CODE[STATUS_CODE[\"FAILED_DEPENDENCY\"] = 424] = \"FAILED_DEPENDENCY\";\n    /**\n     * The client should switch to a different protocol such as TLS/1.0, given in the Upgrade header field.\n     */\n    STATUS_CODE[STATUS_CODE[\"UPGRADE_REQUIRED\"] = 426] = \"UPGRADE_REQUIRED\";\n    /**\n     * The origin server requires the request to be conditional.\n     * Intended to prevent \"the 'lost update' problem, where a client\n     * GETs a resource's state, modifies it, and PUTs it back to the server,\n     * when meanwhile a third party has modified the state on the server, leading to a conflict.\"\n     */\n    STATUS_CODE[STATUS_CODE[\"PRECONDITION_REQUIRED\"] = 428] = \"PRECONDITION_REQUIRED\";\n    /**\n     * The user has sent too many requests in a given amount of time. Intended for use with rate-limiting schemes.\n     */\n    STATUS_CODE[STATUS_CODE[\"TOO_MANY_REQUESTS\"] = 429] = \"TOO_MANY_REQUESTS\";\n    /**\n     * The server is unwilling to process the request because either an individual header field,\n     * or all the header fields collectively, are too large.\n     */\n    STATUS_CODE[STATUS_CODE[\"REQUEST_HEADER_FIELDS_TOO_LARGE\"] = 431] = \"REQUEST_HEADER_FIELDS_TOO_LARGE\";\n    /**\n     * A server operator has received a legal demand to deny access to a resource or to a set of resources\n     * that includes the requested resource. The code 451 was chosen as a reference to the novel Fahrenheit 451.\n     */\n    STATUS_CODE[STATUS_CODE[\"UNAVAILABLE_FOR_LEGAL_REASONS\"] = 451] = \"UNAVAILABLE_FOR_LEGAL_REASONS\";\n    /**\n     * A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.\n     */\n    STATUS_CODE[STATUS_CODE[\"INTERNAL_SERVER_ERROR\"] = 500] = \"INTERNAL_SERVER_ERROR\";\n    /**\n     * The server either does not recognize the request method, or it lacks the ability to fulfill the request.\n     * Usually this implies future availability (e.g., a new feature of a web-service API).\n     */\n    STATUS_CODE[STATUS_CODE[\"NOT_IMPLEMENTED\"] = 501] = \"NOT_IMPLEMENTED\";\n    /**\n     * The server was acting as a gateway or proxy and received an invalid response from the upstream server.\n     */\n    STATUS_CODE[STATUS_CODE[\"BAD_GATEWAY\"] = 502] = \"BAD_GATEWAY\";\n    /**\n     * The server is currently unavailable (because it is overloaded or down for maintenance).\n     * Generally, this is a temporary state.\n     */\n    STATUS_CODE[STATUS_CODE[\"SERVICE_UNAVAILABLE\"] = 503] = \"SERVICE_UNAVAILABLE\";\n    /**\n     * The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.\n     */\n    STATUS_CODE[STATUS_CODE[\"GATEWAY_TIMEOUT\"] = 504] = \"GATEWAY_TIMEOUT\";\n    /**\n     * The server does not support the HTTP protocol version used in the request\n     */\n    STATUS_CODE[STATUS_CODE[\"HTTP_VERSION_NOT_SUPPORTED\"] = 505] = \"HTTP_VERSION_NOT_SUPPORTED\";\n    /**\n     * Transparent content negotiation for the request results in a circular reference.\n     */\n    STATUS_CODE[STATUS_CODE[\"VARIANT_ALSO_NEGOTIATES\"] = 506] = \"VARIANT_ALSO_NEGOTIATES\";\n    /**\n     * The server is unable to store the representation needed to complete the request.\n     */\n    STATUS_CODE[STATUS_CODE[\"INSUFFICIENT_STORAGE\"] = 507] = \"INSUFFICIENT_STORAGE\";\n    /**\n     * The server detected an infinite loop while processing the request.\n     */\n    STATUS_CODE[STATUS_CODE[\"LOOP_DETECTED\"] = 508] = \"LOOP_DETECTED\";\n    /**\n     * Further extensions to the request are required for the server to fulfill it.\n     */\n    STATUS_CODE[STATUS_CODE[\"NOT_EXTENDED\"] = 510] = \"NOT_EXTENDED\";\n    /**\n     * The client needs to authenticate to gain network access.\n     * Intended for use by intercepting proxies used to control access to the network (e.g., \"captive portals\" used\n     * to require agreement to Terms of Service before granting full Internet access via a Wi-Fi hotspot).\n     */\n    STATUS_CODE[STATUS_CODE[\"NETWORK_AUTHENTICATION_REQUIRED\"] = 511] = \"NETWORK_AUTHENTICATION_REQUIRED\";\n})(STATUS_CODE || (STATUS_CODE = {}));\n\n// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\nconst VERSION = {\n    \"commitHash\": \"a908ab176a8c52c025fd43e7acd452415396f54e\",\n    \"version\": \"17.4.0\"\n};\n\n/**\n * @packageDocumentation\n * @module @taquito/http-utils\n */\nvar _a;\nconst isNode = typeof process !== 'undefined' && !!((_a = process === null || process === void 0 ? void 0 : process.versions) === null || _a === void 0 ? void 0 : _a.node);\nconst adapter = isNode ? undefined : fetchAdapter;\nvar ResponseType;\n(function (ResponseType) {\n    ResponseType[\"TEXT\"] = \"text\";\n    ResponseType[\"JSON\"] = \"json\";\n})(ResponseType || (ResponseType = {}));\nclass HttpBackend {\n    constructor(timeout = 30000) {\n        this.timeout = timeout;\n    }\n    serialize(obj) {\n        if (!obj) {\n            return '';\n        }\n        const str = [];\n        for (const p in obj) {\n            // eslint-disable-next-line no-prototype-builtins\n            if (obj.hasOwnProperty(p) && typeof obj[p] !== 'undefined') {\n                const prop = typeof obj[p].toJSON === 'function' ? obj[p].toJSON() : obj[p];\n                // query arguments can have no value so we need some way of handling that\n                // example https://domain.com/query?all\n                if (prop === null) {\n                    str.push(encodeURIComponent(p));\n                    continue;\n                }\n                // another use case is multiple arguments with the same name\n                // they are passed as array\n                if (Array.isArray(prop)) {\n                    prop.forEach((item) => {\n                        str.push(encodeURIComponent(p) + '=' + encodeURIComponent(item));\n                    });\n                    continue;\n                }\n                str.push(encodeURIComponent(p) + '=' + encodeURIComponent(prop));\n            }\n        }\n        const serialized = str.join('&');\n        if (serialized) {\n            return `?${serialized}`;\n        }\n        else {\n            return '';\n        }\n    }\n    /**\n     *\n     * @param options contains options to be passed for the HTTP request (url, method and timeout)\n     * @throws {@link HttpRequestFailed} | {@link HttpResponseError}\n     */\n    createRequest({ url, method, timeout = this.timeout, query, headers = {}, json = true }, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const urlWithQuery = url + this.serialize(query);\n            let resType;\n            let transformResponse = undefined;\n            if (!headers['Content-Type']) {\n                headers['Content-Type'] = 'application/json';\n            }\n            if (!json) {\n                resType = ResponseType.TEXT;\n                transformResponse = [(v) => v];\n            }\n            else {\n                resType = ResponseType.JSON;\n            }\n            try {\n                const response = yield axios.request({\n                    url: urlWithQuery,\n                    method: method !== null && method !== void 0 ? method : 'GET',\n                    headers: headers,\n                    responseType: resType,\n                    transformResponse,\n                    timeout: timeout,\n                    data: data,\n                    adapter,\n                });\n                return response.data;\n            }\n            catch (err) {\n                if ((axios.isAxiosError(err) && err.response) || (!isNode && err.response)) {\n                    let errorData;\n                    if (typeof err.response.data === 'object') {\n                        errorData = JSON.stringify(err.response.data);\n                    }\n                    else {\n                        errorData = err.response.data;\n                    }\n                    throw new HttpResponseError(`Http error response: (${err.response.status}) ${errorData}`, err.response.status, err.response.statusText, errorData, urlWithQuery);\n                }\n                else {\n                    throw new HttpRequestFailed(String(method), urlWithQuery, err);\n                }\n            }\n        });\n    }\n}\n\nexport { HttpBackend, HttpRequestFailed, HttpResponseError, STATUS_CODE, VERSION };\n//# sourceMappingURL=taquito-http-utils.es6.js.map\n", "// ==========================================================================================\n// parent error classes for Taquito\n// ==========================================================================================\n/**\n *  @category Error\n *  @description Parent error class all taquito errors to extend from\n */\nclass TaquitoError extends Error {\n}\n/**\n *  @category Error\n *  @description Error that indicates invalid user inputs\n */\nclass ParameterValidationError extends TaquitoError {\n}\n/**\n *  @category Error\n *  @description Error returned by RPC node\n */\nclass RpcError extends TaquitoError {\n}\n/**\n *  @category Error\n *  @description Error that indicates TezosToolKit has not been configured appropriately\n */\nclass TezosToolkitConfigError extends TaquitoError {\n}\n/**\n *  @category Error\n *  @description Error that indicates a requested action is not supported by Taquito\n */\nclass UnsupportedActionError extends TaquitoError {\n}\n/**\n *  @category Error\n *  @description Error during a network operation\n */\nclass NetworkError extends TaquitoError {\n}\n/**\n *  @category Error\n *  @description Error that indicates user attempts an action without necessary permissions\n */\nclass PermissionDeniedError extends TaquitoError {\n}\n// ==========================================================================================\n// common error classes for Taquito\n// ==========================================================================================\n/**\n *  @category Error\n *  @description Error that indicates an invalid originated or implicit address being passed or used\n */\nclass InvalidAddressError extends ParameterValidationError {\n    constructor(address, errorDetail) {\n        super();\n        this.address = address;\n        this.errorDetail = errorDetail;\n        this.name = 'InvalidAddressError';\n        this.message = `Invalid address \"${address}\"`;\n        this.message += errorDetail ? ` ${errorDetail}.` : '.';\n    }\n}\n/**\n *  @category Error\n *  @description Error that indicates an invalid block hash being passed or used\n */\nclass InvalidBlockHashError extends ParameterValidationError {\n    constructor(blockHash, errorDetail) {\n        super();\n        this.blockHash = blockHash;\n        this.errorDetail = errorDetail;\n        this.name = 'InvalidBlockHashError';\n        this.message = `Invalid block hash \"${blockHash}\"`;\n        this.message += errorDetail ? ` ${errorDetail}.` : '.';\n    }\n}\n/**\n * @category Error\n * @description Error that indicates an invalid amount of tez being passed as a parameter\n */\nclass InvalidAmountError extends ParameterValidationError {\n    constructor(amount) {\n        super();\n        this.amount = amount;\n        this.name = 'InvalidAmountError';\n        this.message = `Invalid amount \"${amount}\"`;\n    }\n}\n/**\n *  @category Error\n *  @description Error that indicates an invalid derivation path being passed or used\n */\nclass InvalidDerivationPathError extends ParameterValidationError {\n    constructor(derivationPath, errorDetail) {\n        super();\n        this.derivationPath = derivationPath;\n        this.errorDetail = errorDetail;\n        this.name = 'InvalidDerivationPathError';\n        this.message = `Invalid derivation path \"${derivationPath}\"`;\n        this.message += errorDetail ? ` ${errorDetail}.` : '.';\n    }\n}\n/**\n *  @category Error\n *  @description Error that indicates an invalid hex string have been passed or used\n */\nclass InvalidHexStringError extends ParameterValidationError {\n    constructor(hexString, errorDetail) {\n        super();\n        this.hexString = hexString;\n        this.errorDetail = errorDetail;\n        this.name = 'InvalidHexStringError';\n        this.message = `Invalid hex string \"${hexString}\"`;\n        this.message += errorDetail ? ` ${errorDetail}.` : '.';\n    }\n}\n/**\n *  @category Error\n *  @description Error that indicates an invalid message being passed or used\n */\nclass InvalidMessageError extends ParameterValidationError {\n    constructor(msg, errorDetail) {\n        super();\n        this.msg = msg;\n        this.errorDetail = errorDetail;\n        this.name = 'InvalidMessageError';\n        this.message = `Invalid message \"${msg}\"`;\n        this.message += errorDetail ? ` ${errorDetail}.` : '.';\n    }\n}\n/**\n *  @category Error\n *  @description Error that indicates invalid view parameter of a smart contract\n */\nclass InvalidViewParameterError extends ParameterValidationError {\n    constructor(viewName, sigs, args, cause) {\n        super();\n        this.viewName = viewName;\n        this.sigs = sigs;\n        this.args = args;\n        this.cause = cause;\n        this.name = 'InvalidViewParameterError';\n        this.message = `Invalid view arguments ${JSON.stringify(args)} received for name \"${viewName}\" expecting one of the following signatures ${JSON.stringify(sigs)}.`;\n    }\n}\n/**\n *  @category Error\n *  @description Error that indicates an invalid private key being passed or used\n */\nclass InvalidKeyError extends ParameterValidationError {\n    constructor(errorDetail) {\n        super();\n        this.errorDetail = errorDetail;\n        this.name = 'InvalidKeyError';\n        this.message = `Invalid private key`;\n        this.message += errorDetail ? ` ${errorDetail}.` : '.';\n    }\n}\n/**\n *  @category Error\n *  @description Error that indicates an Invalid Public Key being passed or used\n */\nclass InvalidPublicKeyError extends ParameterValidationError {\n    constructor(publicKey, errorDetail) {\n        super();\n        this.publicKey = publicKey;\n        this.errorDetail = errorDetail;\n        this.name = 'InvalidPublicKeyError';\n        this.message = `Invalid public key \"${publicKey}\"`;\n        this.message += errorDetail ? ` ${errorDetail}.` : '.';\n    }\n}\n/**\n *  @category Error\n *  @description Error that indicates an invalid signature being passed or used\n */\nclass InvalidSignatureError extends ParameterValidationError {\n    constructor(signature, errorDetail) {\n        super();\n        this.signature = signature;\n        this.errorDetail = errorDetail;\n        this.name = 'InvalidSignatureError';\n        this.message = `Invalid signature \"${signature}\"`;\n        this.message += errorDetail ? ` ${errorDetail}.` : '.';\n    }\n}\n/**\n *  @category Error\n *  @description Error that indicates an invalid contract address being passed or used\n */\nclass InvalidContractAddressError extends ParameterValidationError {\n    constructor(contractAddress, errorDetail) {\n        super();\n        this.contractAddress = contractAddress;\n        this.errorDetail = errorDetail;\n        this.name = 'InvalidContractAddressError';\n        this.message = `Invalid contract address \"${contractAddress}\"`;\n        this.message += errorDetail ? ` ${errorDetail}.` : '.';\n    }\n}\n/**\n *  @category Error\n *  @description Error that indicates an invalid chain id being passed or used\n */\nclass InvalidChainIdError extends ParameterValidationError {\n    constructor(chainId, errorDetail) {\n        super();\n        this.chainId = chainId;\n        this.errorDetail = errorDetail;\n        this.name = 'InvalidChainIdError';\n        this.message = `Invalid chain id \"${chainId}\"`;\n        this.message += errorDetail ? ` ${errorDetail}.` : '.';\n    }\n}\n/**\n *  @category Error\n *  @description Error that indicates an invalid public key hash being passed or used\n */\nclass InvalidKeyHashError extends ParameterValidationError {\n    constructor(keyHash, errorDetail) {\n        super();\n        this.keyHash = keyHash;\n        this.errorDetail = errorDetail;\n        this.name = 'InvalidKeyHashError';\n        this.message = `Invalid public key hash \"${keyHash}\"`;\n        this.message += errorDetail ? ` ${errorDetail}.` : '.';\n    }\n}\n/**\n *  @category Error\n *  @description Error that indicates an invalid operation hash being passed or used\n */\nclass InvalidOperationHashError extends ParameterValidationError {\n    constructor(operationHash, errorDetail) {\n        super();\n        this.operationHash = operationHash;\n        this.errorDetail = errorDetail;\n        this.name = 'InvalidOperationHashError';\n        this.message = `Invalid operation hash \"${operationHash}\"`;\n        this.message += errorDetail ? ` ${errorDetail}.` : '.';\n    }\n}\n/**\n *  @category Error\n *  @description Error that indicates an invalid operation kind being passed or used\n */\nclass InvalidOperationKindError extends ParameterValidationError {\n    constructor(operationKind, errorDetail) {\n        super();\n        this.operationKind = operationKind;\n        this.errorDetail = errorDetail;\n        this.name = 'InvalidOperationKindError';\n        this.message = `Invalid operation kind \"${operationKind}\"`;\n        this.message += errorDetail ? ` ${errorDetail}.` : '.';\n    }\n}\n/**\n *  @category Error\n *  @description General error that indicates something is no longer supported and/or deprecated\n */\nclass DeprecationError extends UnsupportedActionError {\n    constructor(message) {\n        super();\n        this.message = message;\n        this.name = 'DeprecationError';\n    }\n}\n/**\n *  @category Error\n *  @description General error that indicates an action is prohibited or not allowed\n */\nclass ProhibitedActionError extends UnsupportedActionError {\n    constructor(message) {\n        super();\n        this.message = message;\n        this.name = 'ProhibitedActionError';\n    }\n}\n/**\n *  @category Error\n *  @description Error that indicates a failure in grabbing the public key\n */\nclass PublicKeyNotFoundError extends TaquitoError {\n    constructor(pkh, cause) {\n        super();\n        this.pkh = pkh;\n        this.cause = cause;\n        this.name = 'PublicKeyNotFoundError';\n        this.message = `Public key not found of this address \"${pkh}\" in either wallet or contract API.`;\n    }\n}\n\nexport { DeprecationError, InvalidAddressError, InvalidAmountError, InvalidBlockHashError, InvalidChainIdError, InvalidContractAddressError, InvalidDerivationPathError, InvalidHexStringError, InvalidKeyError, InvalidKeyHashError, InvalidMessageError, InvalidOperationHashError, InvalidOperationKindError, InvalidPublicKeyError, InvalidSignatureError, InvalidViewParameterError, NetworkError, ParameterValidationError, PermissionDeniedError, ProhibitedActionError, PublicKeyNotFoundError, RpcError, TaquitoError, TezosToolkitConfigError, UnsupportedActionError };\n//# sourceMappingURL=taquito-core.es6.js.map\n", "import { Buffer } from 'buffer';\nimport { verify } from '@stablelib/ed25519';\nimport { hash } from '@stablelib/blake2b';\nimport blake from 'blakejs';\nimport bs58check from 'bs58check';\nimport { InvalidMessageError, InvalidPublicKeyError, InvalidSignatureError, ParameterValidationError, UnsupportedActionError, InvalidHexStringError } from '@taquito/core';\nexport { DeprecationError, InvalidAddressError, InvalidBlockHashError, InvalidChainIdError, InvalidContractAddressError, InvalidHexStringError, InvalidKeyError, InvalidKeyHashError, InvalidMessageError, InvalidOperationHashError, InvalidOperationKindError, InvalidPublicKeyError, InvalidSignatureError, ProhibitedActionError } from '@taquito/core';\nimport BigNumber from 'bignumber.js';\nimport elliptic from 'elliptic';\nimport toBuffer from 'typedarray-to-buffer';\n\nvar Prefix;\n(function (Prefix) {\n    Prefix[\"TZ1\"] = \"tz1\";\n    Prefix[\"TZ2\"] = \"tz2\";\n    Prefix[\"TZ3\"] = \"tz3\";\n    Prefix[\"TZ4\"] = \"tz4\";\n    Prefix[\"KT\"] = \"KT\";\n    Prefix[\"KT1\"] = \"KT1\";\n    Prefix[\"EDSK2\"] = \"edsk2\";\n    Prefix[\"SPSK\"] = \"spsk\";\n    Prefix[\"P2SK\"] = \"p2sk\";\n    Prefix[\"EDPK\"] = \"edpk\";\n    Prefix[\"SPPK\"] = \"sppk\";\n    Prefix[\"P2PK\"] = \"p2pk\";\n    Prefix[\"BLPK\"] = \"BLpk\";\n    Prefix[\"EDESK\"] = \"edesk\";\n    Prefix[\"SPESK\"] = \"spesk\";\n    Prefix[\"P2ESK\"] = \"p2esk\";\n    Prefix[\"EDSK\"] = \"edsk\";\n    Prefix[\"EDSIG\"] = \"edsig\";\n    Prefix[\"SPSIG\"] = \"spsig\";\n    Prefix[\"P2SIG\"] = \"p2sig\";\n    Prefix[\"SIG\"] = \"sig\";\n    Prefix[\"NET\"] = \"Net\";\n    Prefix[\"NCE\"] = \"nce\";\n    Prefix[\"B\"] = \"B\";\n    Prefix[\"O\"] = \"o\";\n    Prefix[\"LO\"] = \"Lo\";\n    Prefix[\"LLO\"] = \"LLo\";\n    Prefix[\"P\"] = \"P\";\n    Prefix[\"CO\"] = \"Co\";\n    Prefix[\"ID\"] = \"id\";\n    Prefix[\"EXPR\"] = \"expr\";\n    Prefix[\"TZ\"] = \"TZ\";\n    Prefix[\"VH\"] = \"vh\";\n    Prefix[\"SASK\"] = \"sask\";\n    Prefix[\"ZET1\"] = \"zet1\";\n    //rollups\n    Prefix[\"TXR1\"] = \"txr1\";\n    Prefix[\"TXI\"] = \"txi\";\n    Prefix[\"TXM\"] = \"txm\";\n    Prefix[\"TXC\"] = \"txc\";\n    Prefix[\"TXMR\"] = \"txmr\";\n    Prefix[\"TXRL\"] = \"txM\";\n    Prefix[\"TXW\"] = \"txw\";\n    Prefix[\"SR1\"] = \"sr1\";\n    Prefix[\"SRC1\"] = \"src1\";\n})(Prefix || (Prefix = {}));\nconst prefix = {\n    [Prefix.TZ1]: new Uint8Array([6, 161, 159]),\n    [Prefix.TZ2]: new Uint8Array([6, 161, 161]),\n    [Prefix.TZ3]: new Uint8Array([6, 161, 164]),\n    [Prefix.TZ4]: new Uint8Array([6, 161, 166]),\n    [Prefix.KT]: new Uint8Array([2, 90, 121]),\n    [Prefix.KT1]: new Uint8Array([2, 90, 121]),\n    [Prefix.EDSK]: new Uint8Array([43, 246, 78, 7]),\n    [Prefix.EDSK2]: new Uint8Array([13, 15, 58, 7]),\n    [Prefix.SPSK]: new Uint8Array([17, 162, 224, 201]),\n    [Prefix.P2SK]: new Uint8Array([16, 81, 238, 189]),\n    [Prefix.EDPK]: new Uint8Array([13, 15, 37, 217]),\n    [Prefix.SPPK]: new Uint8Array([3, 254, 226, 86]),\n    [Prefix.P2PK]: new Uint8Array([3, 178, 139, 127]),\n    [Prefix.BLPK]: new Uint8Array([6, 149, 135, 204]),\n    [Prefix.EDESK]: new Uint8Array([7, 90, 60, 179, 41]),\n    [Prefix.SPESK]: new Uint8Array([0x09, 0xed, 0xf1, 0xae, 0x96]),\n    [Prefix.P2ESK]: new Uint8Array([0x09, 0x30, 0x39, 0x73, 0xab]),\n    [Prefix.EDSIG]: new Uint8Array([9, 245, 205, 134, 18]),\n    [Prefix.SPSIG]: new Uint8Array([13, 115, 101, 19, 63]),\n    [Prefix.P2SIG]: new Uint8Array([54, 240, 44, 52]),\n    [Prefix.SIG]: new Uint8Array([4, 130, 43]),\n    [Prefix.NET]: new Uint8Array([87, 82, 0]),\n    [Prefix.NCE]: new Uint8Array([69, 220, 169]),\n    [Prefix.B]: new Uint8Array([1, 52]),\n    [Prefix.O]: new Uint8Array([5, 116]),\n    [Prefix.LO]: new Uint8Array([133, 233]),\n    [Prefix.LLO]: new Uint8Array([29, 159, 109]),\n    [Prefix.P]: new Uint8Array([2, 170]),\n    [Prefix.CO]: new Uint8Array([79, 179]),\n    [Prefix.ID]: new Uint8Array([153, 103]),\n    [Prefix.EXPR]: new Uint8Array([13, 44, 64, 27]),\n    // Legacy prefix\n    [Prefix.TZ]: new Uint8Array([2, 90, 121]),\n    [Prefix.VH]: new Uint8Array([1, 106, 242]),\n    [Prefix.SASK]: new Uint8Array([11, 237, 20, 92]),\n    [Prefix.ZET1]: new Uint8Array([18, 71, 40, 223]),\n    [Prefix.TXR1]: new Uint8Array([1, 128, 120, 31]),\n    [Prefix.TXI]: new Uint8Array([79, 148, 196]),\n    [Prefix.TXM]: new Uint8Array([79, 149, 30]),\n    [Prefix.TXC]: new Uint8Array([79, 148, 17]),\n    [Prefix.TXMR]: new Uint8Array([18, 7, 206, 87]),\n    [Prefix.TXRL]: new Uint8Array([79, 146, 82]),\n    [Prefix.TXW]: new Uint8Array([79, 150, 72]),\n    [Prefix.SR1]: new Uint8Array([6, 124, 117]),\n    [Prefix.SRC1]: new Uint8Array([17, 165, 134, 138]),\n};\nconst prefixLength = {\n    [Prefix.TZ1]: 20,\n    [Prefix.TZ2]: 20,\n    [Prefix.TZ3]: 20,\n    [Prefix.TZ4]: 20,\n    [Prefix.KT]: 20,\n    [Prefix.KT1]: 20,\n    [Prefix.EDPK]: 32,\n    [Prefix.SPPK]: 33,\n    [Prefix.P2PK]: 33,\n    //working with value in comment for base58.ml line 445 but not consistent with the three above\n    [Prefix.BLPK]: 48,\n    [Prefix.EDSIG]: 64,\n    [Prefix.SPSIG]: 64,\n    [Prefix.P2SIG]: 64,\n    [Prefix.SIG]: 64,\n    [Prefix.NET]: 4,\n    [Prefix.B]: 32,\n    [Prefix.P]: 32,\n    [Prefix.O]: 32,\n    [Prefix.VH]: 32,\n    [Prefix.SASK]: 169,\n    [Prefix.ZET1]: 43,\n    [Prefix.TXR1]: 20,\n    [Prefix.TXI]: 32,\n    [Prefix.TXM]: 32,\n    [Prefix.TXC]: 32,\n    [Prefix.TXMR]: 32,\n    [Prefix.TXRL]: 32,\n    [Prefix.TXW]: 32,\n    [Prefix.SR1]: 20,\n    [Prefix.SRC1]: 32,\n};\n\n/**\n * @description Verify signature of a payload\n *\n * @param messageBytes The forged message including the magic byte (11 for block,\n *        12 for preendorsement, 13 for endorsement, 3 for generic, 5 for the PACK format of michelson)\n * @param publicKey The public key to verify the signature against\n * @param signature The signature to verify\n * @returns A boolean indicating if the signature matches\n * @throws {@link InvalidPublicKeyError} | {@link InvalidSignatureError} | {@link InvalidMessageError}\n * @example\n * ```\n * const message = '03d0c10e3ed11d7c6e3357f6ef335bab9e8f2bd54d0ce20c482e241191a6e4b8ce6c01be917311d9ac46959750e405d57e268e2ed9e174a80794fbd504e12a4a000141eb3781afed2f69679ff2bbe1c5375950b0e40d00ff000000005e05050505050507070100000024747a32526773486e74516b72794670707352466261313652546656503539684b72654a4d07070100000024747a315a6672455263414c42776d4171776f6e525859565142445439426a4e6a42484a750001';\n * const pk = 'sppk7c7hkPj47yjYFEHX85q46sFJGw6RBrqoVSHwAJAT4e14KJwzoey';\n * const sig = 'spsig1cdLkp1RLgUHAp13aRFkZ6MQDPp7xCnjAExGL3MBSdMDmT6JgQSX8cufyDgJRM3sinFtiCzLbsyP6d365EHoNevxhT47nx'\n *\n * const response = verifySignature(message, pk, sig);\n * ```\n *\n */\nfunction verifySignature(messageBytes, publicKey, signature, watermark) {\n    const pkPrefix = validatePkAndExtractPrefix(publicKey);\n    const sigPrefix = validateSigAndExtractPrefix(signature);\n    const decodedPublicKey = b58cdecode(publicKey, prefix[pkPrefix]);\n    const decodedSig = b58cdecode(signature, prefix[sigPrefix]);\n    let messageBuf = hex2buf(validateMessageNotEmpty(messageBytes));\n    if (typeof watermark !== 'undefined') {\n        messageBuf = mergebuf(watermark, messageBuf);\n    }\n    const bytesHash = hash(messageBuf, 32);\n    if (pkPrefix === Prefix.EDPK) {\n        return verifyEdSignature(decodedSig, bytesHash, decodedPublicKey);\n    }\n    else if (pkPrefix === Prefix.SPPK) {\n        return verifySpSignature(decodedSig, bytesHash, decodedPublicKey);\n    }\n    else if (pkPrefix === Prefix.P2PK) {\n        return verifyP2Signature(decodedSig, bytesHash, decodedPublicKey);\n    }\n    else {\n        return false;\n    }\n}\nfunction validateMessageNotEmpty(message) {\n    if (message === '') {\n        throw new InvalidMessageError(message, `can't be empty`);\n    }\n    return message;\n}\nfunction validatePkAndExtractPrefix(publicKey) {\n    if (publicKey === '') {\n        throw new InvalidPublicKeyError(publicKey, `can't be empty`);\n    }\n    const pkPrefix = publicKey.substring(0, 4);\n    const publicKeyValidation = validatePublicKey(publicKey);\n    if (publicKeyValidation !== ValidationResult.VALID) {\n        throw new InvalidPublicKeyError(publicKey, invalidDetail(publicKeyValidation));\n    }\n    return pkPrefix;\n}\nfunction validateSigAndExtractPrefix(signature) {\n    const signaturePrefix = signature.startsWith('sig')\n        ? signature.substring(0, 3)\n        : signature.substring(0, 5);\n    const validation = validateSignature(signature);\n    if (validation !== ValidationResult.VALID) {\n        throw new InvalidSignatureError(signature, invalidDetail(validation));\n    }\n    return signaturePrefix;\n}\nfunction verifyEdSignature(decodedSig, bytesHash, decodedPublicKey) {\n    try {\n        return verify(decodedPublicKey, bytesHash, decodedSig);\n    }\n    catch (e) {\n        return false;\n    }\n}\nfunction verifySpSignature(decodedSig, bytesHash, decodedPublicKey) {\n    const key = new elliptic.ec('secp256k1').keyFromPublic(decodedPublicKey);\n    return verifySpOrP2Sig(decodedSig, bytesHash, key);\n}\nfunction verifyP2Signature(decodedSig, bytesHash, decodedPublicKey) {\n    const key = new elliptic.ec('p256').keyFromPublic(decodedPublicKey);\n    return verifySpOrP2Sig(decodedSig, bytesHash, key);\n}\nfunction verifySpOrP2Sig(decodedSig, bytesHash, key) {\n    const hexSig = buf2hex(toBuffer(decodedSig));\n    const match = hexSig.match(/([a-f\\d]{64})/gi);\n    if (match) {\n        try {\n            const [r, s] = match;\n            return key.verify(bytesHash, { r, s });\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    return false;\n}\n\n/**\n *  @category Error\n *  @description Error that indicates invalid protocol hash being passed or used\n */\nclass InvalidProtocolHashError extends ParameterValidationError {\n    constructor(protocolHash, errorDetails) {\n        super();\n        this.protocolHash = protocolHash;\n        this.errorDetails = errorDetails;\n        this.name = 'InvalidProtocolHashError';\n        this.name = 'InvalidProtocolHashError';\n        this.message = `The protocol hash '${protocolHash}' is invalid`;\n        errorDetails ? (this.message += `: ${errorDetails}`) : null;\n    }\n}\n/**\n *  @category Error\n *  @description Error that indicates unable to convert data type from one to another\n */\nclass ValueConversionError extends UnsupportedActionError {\n    constructor(value, desiredType) {\n        super();\n        this.value = value;\n        this.desiredType = desiredType;\n        this.name = 'ValueConversionError';\n        this.message = `Unable to convert ${value} to a ${desiredType}`;\n    }\n}\n\nvar ValidationResult;\n(function (ValidationResult) {\n    ValidationResult[ValidationResult[\"NO_PREFIX_MATCHED\"] = 0] = \"NO_PREFIX_MATCHED\";\n    ValidationResult[ValidationResult[\"INVALID_CHECKSUM\"] = 1] = \"INVALID_CHECKSUM\";\n    ValidationResult[ValidationResult[\"INVALID_LENGTH\"] = 2] = \"INVALID_LENGTH\";\n    ValidationResult[ValidationResult[\"VALID\"] = 3] = \"VALID\";\n})(ValidationResult || (ValidationResult = {}));\nfunction isValidPrefix(value) {\n    if (typeof value !== 'string') {\n        return false;\n    }\n    return value in prefix;\n}\n/**\n * @description This function is called by the validation functions ([[validateAddress]], [[validateChain]], [[validateContractAddress]], [[validateKeyHash]], [[validateSignature]], [[validatePublicKey]]).\n * Verify if the value has the right prefix or return `NO_PREFIX_MATCHED`,\n * decode the value using base58 and return `INVALID_CHECKSUM` if it fails,\n * check if the length of the value matches the prefix type or return `INVALID_LENGTH`.\n * If all checks pass, return `VALID`.\n *\n * @param value Value to validate\n * @param prefixes prefix the value should have\n */\nfunction validatePrefixedValue(value, prefixes) {\n    const match = new RegExp(`^(${prefixes.join('|')})`).exec(value);\n    if (!match || match.length === 0) {\n        return ValidationResult.NO_PREFIX_MATCHED;\n    }\n    const prefixKey = match[0];\n    if (!isValidPrefix(prefixKey)) {\n        return ValidationResult.NO_PREFIX_MATCHED;\n    }\n    // Check whether annotation exist before starting validation\n    if (value.includes('%')) {\n        value = value.split('%')[0];\n    }\n    const kt1Regex = /^(KT1\\w{33})$/;\n    if (!kt1Regex.test(value) && prefixKey === 'KT1') {\n        return ValidationResult.INVALID_CHECKSUM;\n    }\n    // decodeUnsafe return undefined if decoding fail\n    let decoded = bs58check.decodeUnsafe(value);\n    if (!decoded) {\n        return ValidationResult.INVALID_CHECKSUM;\n    }\n    decoded = decoded.slice(prefix[prefixKey].length);\n    if (decoded.length !== prefixLength[prefixKey]) {\n        return ValidationResult.INVALID_LENGTH;\n    }\n    return ValidationResult.VALID;\n}\nconst implicitPrefix = [Prefix.TZ1, Prefix.TZ2, Prefix.TZ3, Prefix.TZ4];\nconst contractPrefix = [Prefix.KT1, Prefix.TXR1];\nconst signaturePrefix = [Prefix.EDSIG, Prefix.P2SIG, Prefix.SPSIG, Prefix.SIG];\nconst pkPrefix = [Prefix.EDPK, Prefix.SPPK, Prefix.P2PK, Prefix.BLPK];\nconst operationPrefix = [Prefix.O];\nconst protocolPrefix = [Prefix.P];\nconst blockPrefix = [Prefix.B];\nconst smartRollupPrefix = [Prefix.SR1];\n/**\n * @description Used to check if an address or a contract address is valid.\n *\n * @returns\n * 0 (NO_PREFIX_MATCHED), 1 (INVALID_CHECKSUM), 2 (INVALID_LENGTH) or 3 (VALID).\n *\n * @example\n * ```\n * import { validateAddress } from '@taquito/utils';\n * const pkh = 'tz1L9r8mWmRPndRhuvMCWESLGSVeFzQ9NAWx'\n * const validation = validateAddress(pkh)\n * console.log(validation)\n * // This example return 3 which correspond to VALID\n * ```\n */\nfunction validateAddress(value) {\n    return validatePrefixedValue(value, [...implicitPrefix, ...contractPrefix, ...smartRollupPrefix]);\n}\n/**\n * @description Used to check if a chain id is valid.\n *\n * @returns\n * 0 (NO_PREFIX_MATCHED), 1 (INVALID_CHECKSUM), 2 (INVALID_LENGTH) or 3 (VALID).\n *\n * @example\n * ```\n * import { validateChain } from '@taquito/utils';\n * const chainId = 'NetXdQprcVkpaWU'\n * const validation = validateChain(chainId)\n * console.log(validation)\n * // This example return 3 which correspond to VALID\n * ```\n */\nfunction validateChain(value) {\n    return validatePrefixedValue(value, [Prefix.NET]);\n}\n/**\n * @description Used to check if a contract address is valid.\n *\n * @returns\n * 0 (NO_PREFIX_MATCHED), 1 (INVALID_CHECKSUM), 2 (INVALID_LENGTH) or 3 (VALID).\n *\n * @example\n * ```\n * import { validateContractAddress } from '@taquito/utils';\n * const contractAddress = 'KT1JVErLYTgtY8uGGZ4mso2npTSxqVLDRVbC'\n * const validation = validateContractAddress(contractAddress)\n * console.log(validation)\n * // This example return 3 which correspond to VALID\n * ```\n */\nfunction validateContractAddress(value) {\n    return validatePrefixedValue(value, contractPrefix);\n}\n/**\n * @description Used to check if a key hash is valid.\n *\n * @returns\n * 0 (NO_PREFIX_MATCHED), 1 (INVALID_CHECKSUM), 2 (INVALID_LENGTH) or 3 (VALID).\n *\n * @example\n * ```\n * import { validateKeyHash } from '@taquito/utils';\n * const keyHashWithoutPrefix = '1L9r8mWmRPndRhuvMCWESLGSVeFzQ9NAWx'\n * const validation = validateKeyHash(keyHashWithoutPrefix)\n * console.log(validation)\n * // This example return 0 which correspond to NO_PREFIX_MATCHED\n * ```\n */\nfunction validateKeyHash(value) {\n    return validatePrefixedValue(value, implicitPrefix);\n}\n/**\n * @description Used to check if a signature is valid.\n *\n * @returns\n * 0 (NO_PREFIX_MATCHED), 1 (INVALID_CHECKSUM), 2 (INVALID_LENGTH) or 3 (VALID).\n *\n * @example\n * ```\n * import { validateSignature } from '@taquito/utils';\n * const signature = 'edsigtkpiSSschcaCt9pUVrpNPf7TTcgvgDEDD6NCEHMy8NNQJCGnMfLZzYoQj74yLjo9wx6MPVV29CvVzgi7qEcEUok3k7AuMg'\n * const validation = validateSignature(signature)\n * console.log(validation)\n * // This example return 3 which correspond to VALID\n * ```\n */\nfunction validateSignature(value) {\n    return validatePrefixedValue(value, signaturePrefix);\n}\n/**\n * @description Used to check if a public key is valid.\n *\n * @returns\n * 0 (NO_PREFIX_MATCHED), 1 (INVALID_CHECKSUM), 2 (INVALID_LENGTH) or 3 (VALID).\n *\n * @example\n * ```\n * import { validatePublicKey } from '@taquito/utils';\n * const publicKey = 'edpkvS5QFv7KRGfa3b87gg9DBpxSm3NpSwnjhUjNBQrRUUR66F7C9g'\n * const validation = validatePublicKey(publicKey)\n * console.log(validation)\n * // This example return 3 which correspond to VALID\n * ```\n */\nfunction validatePublicKey(value) {\n    return validatePrefixedValue(value, pkPrefix);\n}\n/**\n * @description Used to check if an operation hash is valid.\n *\n * @returns\n * 0 (NO_PREFIX_MATCHED), 1 (INVALID_CHECKSUM), 2 (INVALID_LENGTH) or 3 (VALID).\n *\n * @example\n * ```\n * import { validateOperation } from '@taquito/utils';\n * const operationHash = 'oo6JPEAy8VuMRGaFuMmLNFFGdJgiaKfnmT1CpHJfKP3Ye5ZahiP'\n * const validation = validateOperation(operationHash)\n * console.log(validation)\n * // This example return 3 which correspond to VALID\n * ```\n */\nfunction validateOperation(value) {\n    return validatePrefixedValue(value, operationPrefix);\n}\n/**\n * @description Used to check if a protocol hash is valid.\n *\n * @returns\n * 0 (NO_PREFIX_MATCHED), 1 (INVALID_CHECKSUM), 2 (INVALID_LENGTH) or 3 (VALID).\n *\n * @example\n * ```\n * import { validateProtocol } from '@taquito/utils';\n * const protocolHash = 'PtHangz2aRngywmSRGGvrcTyMbbdpWdpFKuS4uMWxg2RaH9i1qx'\n * const validation = validateProtocol(protocolHash)\n * console.log(validation)\n * // This example return 3 which correspond to VALID\n * ```\n */\nfunction validateProtocol(value) {\n    return validatePrefixedValue(value, protocolPrefix);\n}\n/**\n * @description Used to check if a block hash is valid.\n *\n * @returns\n * 0 (NO_PREFIX_MATCHED), 1 (INVALID_CHECKSUM), 2 (INVALID_LENGTH) or 3 (VALID).\n *\n * @example\n * ```\n * import { validateBlock } from '@taquito/utils';\n * const blockHash = 'PtHangz2aRngywmSRGGvrcTyMbbdpWdpFKuS4uMWxg2RaH9i1qx'\n * const validation = validateBlock(blockHash)\n * console.log(validation)\n * // This example return 3 which correspond to VALID\n * ```\n */\nfunction validateBlock(value) {\n    return validatePrefixedValue(value, blockPrefix);\n}\n/**\n * @description Used to check if a spending key is valid.\n * @returns 0 (NO_PREFIX_MATCHED), 1 (INVALID_CHECKSUM), 2 (INVALID_LENGTH) or 3 (VALID).\n *\n */\nfunction validateSpendingKey(value) {\n    return validatePrefixedValue(value, [Prefix.SASK]);\n}\nfunction invalidDetail(validation) {\n    switch (validation) {\n        case ValidationResult.NO_PREFIX_MATCHED:\n            return 'with unsupported prefix';\n        case ValidationResult.INVALID_CHECKSUM:\n            return 'failed checksum';\n        case ValidationResult.INVALID_LENGTH:\n            return 'with incorrect length';\n        default:\n            return '';\n    }\n}\nfunction validateSmartRollupAddress(value) {\n    return validatePrefixedValue(value, [...smartRollupPrefix]);\n}\n\n// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\nconst VERSION = {\n    \"commitHash\": \"a908ab176a8c52c025fd43e7acd452415396f54e\",\n    \"version\": \"17.4.0\"\n};\n\nconst TZ_DECIMALS = 6;\nconst MTZ_DECIMALS = 3;\nfunction getDecimal(format) {\n    switch (format) {\n        case 'tz':\n            return TZ_DECIMALS;\n        case 'mtz':\n            return MTZ_DECIMALS;\n        case 'mutez':\n        default:\n            return 0;\n    }\n}\nfunction format(from = 'mutez', to = 'mutez', amount) {\n    const bigNum = new BigNumber(amount);\n    if (bigNum.isNaN()) {\n        return amount;\n    }\n    return bigNum\n        .multipliedBy(Math.pow(10, getDecimal(from)))\n        .dividedBy(Math.pow(10, getDecimal(to)));\n}\n\n/**\n * @packageDocumentation\n * @module @taquito/utils\n */\n/*\n * Some code in this file is originally from sotez and eztz\n * Copyright (c) 2018 Andrew Kishino\n * Copyright (c) 2017 Stephen Andrews\n */\n/**\n *\n * @description Hash a string using the BLAKE2b algorithm, base58 encode the hash obtained and appends the prefix 'expr' to it\n *\n * @param value Value in hex\n */\nfunction encodeExpr(value) {\n    const blakeHash = blake.blake2b(hex2buf(value), undefined, 32);\n    return b58cencode(blakeHash, prefix['expr']);\n}\n/**\n *\n * @description Return the operation hash of a signed operation\n * @param value Value in hex of a signed operation\n */\nfunction encodeOpHash(value) {\n    const blakeHash = blake.blake2b(hex2buf(value), undefined, 32);\n    return b58cencode(blakeHash, prefix.o);\n}\n/**\n *\n * @description Base58 encode a string or a Uint8Array and append a prefix to it\n *\n * @param value Value to base58 encode\n * @param prefix prefix to append to the encoded string\n */\nfunction b58cencode(value, prefix) {\n    const payloadAr = typeof value === 'string' ? Uint8Array.from(Buffer.from(value, 'hex')) : value;\n    const n = new Uint8Array(prefix.length + payloadAr.length);\n    n.set(prefix);\n    n.set(payloadAr, prefix.length);\n    return bs58check.encode(Buffer.from(n.buffer));\n}\n/**\n *\n * @description Base58 decode a string and remove the prefix from it\n *\n * @param value Value to base58 decode\n * @param prefix prefix to remove from the decoded string\n */\nconst b58cdecode = (enc, prefixArg) => bs58check.decode(enc).slice(prefixArg.length);\n/**\n *\n * @description Base58 decode a string with predefined prefix\n *\n * @param value Value to base58 decode\n */\nfunction b58decode(payload) {\n    const buf = bs58check.decode(payload);\n    const prefixMap = {\n        [prefix.tz1.toString()]: '0000',\n        [prefix.tz2.toString()]: '0001',\n        [prefix.tz3.toString()]: '0002',\n    };\n    const rollupPrefMap = {\n        [prefix.txr1.toString()]: '02',\n    };\n    const pref = prefixMap[new Uint8Array(buf.slice(0, 3)).toString()];\n    const rollupPref = rollupPrefMap[new Uint8Array(buf.slice(0, 4)).toString()];\n    if (pref) {\n        // tz addresses\n        const hex = buf2hex(buf.slice(3));\n        return pref + hex;\n    }\n    else if (rollupPref) {\n        const hex = buf2hex(buf.slice(4));\n        return rollupPref + hex + '00';\n    }\n    else {\n        // other (kt addresses)\n        return '01' + buf2hex(buf.slice(3, 42)) + '00';\n    }\n}\n/**\n *\n * @description b58 decode a string without predefined prefix\n * @param value\n * @returns string of bytes\n */\nfunction b58decodeL2Address(payload) {\n    const buf = bs58check.decode(payload);\n    // tz4 address currently\n    return buf2hex(buf.slice(3, 42));\n}\n/**\n *\n * @description Base58 encode an address using predefined prefix\n *\n * @param value Address to base58 encode (tz1, tz2, tz3 or KT1)\n */\nfunction encodePubKey(value) {\n    if (value.substring(0, 2) === '00') {\n        const pref = {\n            '0000': prefix.tz1,\n            '0001': prefix.tz2,\n            '0002': prefix.tz3,\n        };\n        return b58cencode(value.substring(4), pref[value.substring(0, 4)]);\n    }\n    else if (value.substring(0, 2) === '02') {\n        // 42 also works but the removes the 00 padding at the end\n        return b58cencode(value.substring(2, value.length - 2), prefix.txr1);\n    }\n    return b58cencode(value.substring(2, 42), prefix.KT);\n}\n/**\n *\n * @description Base58 encode an address without predefined prefix\n * @param value Address to base58 encode (tz4) hex dec\n * @returns return address\n */\nfunction encodeL2Address(value) {\n    return b58cencode(value, prefix.tz4);\n}\n/**\n *\n * @description Base58 encode a key according to its prefix\n *\n * @param value Key to base58 encode\n */\nfunction encodeKey(value) {\n    if (value[0] === '0') {\n        const pref = {\n            '00': new Uint8Array([13, 15, 37, 217]),\n            '01': new Uint8Array([3, 254, 226, 86]),\n            '02': new Uint8Array([3, 178, 139, 127]),\n        };\n        return b58cencode(value.substring(2), pref[value.substring(0, 2)]);\n    }\n}\n/**\n *\n * @description Base58 encode a key hash according to its prefix\n *\n * @param value Key hash to base58 encode\n */\nfunction encodeKeyHash(value) {\n    if (value[0] === '0') {\n        const pref = {\n            '00': new Uint8Array([6, 161, 159]),\n            '01': new Uint8Array([6, 161, 161]),\n            '02': new Uint8Array([6, 161, 164]),\n        };\n        return b58cencode(value.substring(2), pref[value.substring(0, 2)]);\n    }\n}\n/**\n *\n * @description Convert an hex string to a Uint8Array\n *\n * @param hex Hex string to convert\n * @throws {@link ValueConversionError}\n */\nconst hex2buf = (hex) => {\n    if (hex.length % 2 !== 0) {\n        throw new InvalidHexStringError(hex, `: Expecting even number of characters`);\n    }\n    const hexDigits = stripHexPrefix(hex);\n    if (!hexDigits.match(/^([\\da-f]{2})*$/gi)) {\n        throw new InvalidHexStringError(hex, `: Only characters 0-9, a-f and A-F are expected. Optionally, it can be prefixed with '0x'`);\n    }\n    const out = new Uint8Array(hexDigits.length / 2);\n    let j = 0;\n    for (let i = 0; i < hexDigits.length; i += 2) {\n        const v = parseInt(hexDigits.slice(i, i + 2), 16);\n        if (Number.isNaN(v)) {\n            throw new ValueConversionError(hex, 'Uint8Array');\n        }\n        out[j++] = v;\n    }\n    return out;\n};\n/**\n *\n * @description Merge 2 buffers together\n *\n * @param b1 First buffer\n * @param b2 Second buffer\n */\nconst mergebuf = (b1, b2) => {\n    const r = new Uint8Array(b1.length + b2.length);\n    r.set(b1);\n    r.set(b2, b1.length);\n    return r;\n};\n/**\n *\n * @description Flatten a michelson json representation to an array\n *\n * @param s michelson json\n */\nconst mic2arr = function me2(s) {\n    let ret = [];\n    if (Object.prototype.hasOwnProperty.call(s, 'prim')) {\n        if (s.prim === 'Pair') {\n            ret.push(me2(s.args[0]));\n            ret = ret.concat(me2(s.args[1]));\n        }\n        else if (s.prim === 'Elt') {\n            ret = {\n                key: me2(s.args[0]),\n                val: me2(s.args[1]),\n            };\n        }\n        else if (s.prim === 'True') {\n            ret = true;\n        }\n        else if (s.prim === 'False') {\n            ret = false;\n        }\n    }\n    else if (Array.isArray(s)) {\n        const sc = s.length;\n        for (let i = 0; i < sc; i++) {\n            const n = me2(s[i]);\n            if (typeof n.key !== 'undefined') {\n                if (Array.isArray(ret)) {\n                    ret = {\n                        keys: [],\n                        vals: [],\n                    };\n                }\n                ret.keys.push(n.key);\n                ret.vals.push(n.val);\n            }\n            else {\n                ret.push(n);\n            }\n        }\n    }\n    else if (Object.prototype.hasOwnProperty.call(s, 'string')) {\n        ret = s.string;\n    }\n    else if (Object.prototype.hasOwnProperty.call(s, 'int')) {\n        ret = parseInt(s.int, 10);\n    }\n    else {\n        ret = s;\n    }\n    return ret;\n};\n/**\n *\n * @description Convert a Uint8Array to an hex string\n *\n * @param buffer Uint8Array to convert\n */\nconst buf2hex = (buffer) => {\n    const hexParts = [];\n    buffer.forEach((byte) => {\n        const hex = byte.toString(16);\n        const paddedHex = `00${hex}`.slice(-2);\n        hexParts.push(paddedHex);\n    });\n    return hexParts.join('');\n};\n/**\n *\n *  @description Gets Tezos address (PKH) from Public Key\n *\n *  @param publicKey Public Key\n *  @returns A string of the Tezos address (PKH) that was derived from the given Public Key\n */\nconst getPkhfromPk = (publicKey) => {\n    let encodingPrefix;\n    let prefixLen;\n    const keyPrefix = validatePkAndExtractPrefix(publicKey);\n    const decoded = b58cdecode(publicKey, prefix[keyPrefix]);\n    switch (keyPrefix) {\n        case Prefix.EDPK:\n            encodingPrefix = prefix[Prefix.TZ1];\n            prefixLen = prefixLength[Prefix.TZ1];\n            break;\n        case Prefix.SPPK:\n            encodingPrefix = prefix[Prefix.TZ2];\n            prefixLen = prefixLength[Prefix.TZ2];\n            break;\n        case Prefix.P2PK:\n            encodingPrefix = prefix[Prefix.TZ3];\n            prefixLen = prefixLength[Prefix.TZ3];\n            break;\n        case Prefix.BLPK:\n            encodingPrefix = prefix[Prefix.TZ4];\n            prefixLen = prefixLength[Prefix.TZ4];\n    }\n    const hashed = hash(decoded, prefixLen);\n    const result = b58cencode(hashed, encodingPrefix);\n    return result;\n};\n/**\n *\n * @description Convert a string to bytes\n *\n * @param str String to convert\n */\nfunction char2Bytes(str) {\n    return Buffer.from(str, 'utf8').toString('hex');\n}\n/**\n *\n * @description Convert bytes to a string\n *\n * @param str Bytes to convert\n */\nfunction bytes2Char(hex) {\n    return Buffer.from(hex2buf(hex)).toString('utf8');\n}\n/**\n *\n * @description Convert hex string/UintArray/Buffer to bytes\n *\n * @param hex String value to convert to bytes\n */\nfunction hex2Bytes(hex) {\n    const hexDigits = stripHexPrefix(hex);\n    if (!hexDigits.match(/^(0x)?([\\da-f]{2})*$/gi)) {\n        throw new InvalidHexStringError(hex, `: Expecting even number of characters: 0-9, a-z, A-Z, optionally prefixed with 0x`);\n    }\n    return Buffer.from(hexDigits, 'hex');\n}\n/**\n *\n * @description Converts a number or Bignumber to hexadecimal  string\n *\n * @param val The value  that will be converted to a hexadecimal string value\n */\nfunction toHexBuf(val, bitLength = 8) {\n    return Buffer.from(num2PaddedHex(val, bitLength), 'hex');\n}\n/**\n *\n * @description Converts a number or BigNumber to a padded hexadecimal string\n * @param val The value that will be converted into a padded hexadecimal string value\n * @param bitLength The length of bits\n *\n */\nfunction num2PaddedHex(val, bitLength = 8) {\n    if (new BigNumber(val).isPositive()) {\n        const nibbleLength = Math.ceil(bitLength / 4);\n        const hex = val.toString(16);\n        // check whether nibble (4 bits) length is higher or lower than the current hex string length\n        let targetLength = hex.length >= nibbleLength ? hex.length : nibbleLength;\n        // make sure the hex string target length is even\n        targetLength = targetLength % 2 == 0 ? targetLength : targetLength + 1;\n        return padHexWithZero(hex, targetLength);\n    }\n    else {\n        const twosCompliment = new BigNumber(2)\n            .pow(bitLength)\n            .minus(new BigNumber(val).abs());\n        return twosCompliment.toString(16);\n    }\n}\nfunction padHexWithZero(hex, targetLength) {\n    const padString = '0';\n    if (hex.length >= targetLength) {\n        return hex;\n    }\n    else {\n        const padLength = targetLength - hex.length;\n        return padString.repeat(padLength) + hex;\n    }\n}\n/**\n *\n * @description Strips the first 2 characters of a hex string (0x)\n *\n * @param hex string to strip prefix from\n */\nfunction stripHexPrefix(hex) {\n    return hex.startsWith('0x') ? hex.slice(2) : hex;\n}\n\nexport { InvalidProtocolHashError, Prefix, VERSION, ValidationResult, ValueConversionError, b58cdecode, b58cencode, b58decode, b58decodeL2Address, buf2hex, bytes2Char, char2Bytes, encodeExpr, encodeKey, encodeKeyHash, encodeL2Address, encodeOpHash, encodePubKey, format, getPkhfromPk, hex2Bytes, hex2buf, invalidDetail, isValidPrefix, mergebuf, mic2arr, num2PaddedHex, prefix, prefixLength, stripHexPrefix, toHexBuf, validateAddress, validateBlock, validateChain, validateContractAddress, validateKeyHash, validateOperation, validatePkAndExtractPrefix, validateProtocol, validatePublicKey, validateSignature, validateSmartRollupAddress, validateSpendingKey, verifySignature };\n//# sourceMappingURL=taquito-utils.es6.js.map\n", "import { HttpBackend, HttpResponseError, STATUS_CODE } from '@taquito/http-utils';\nimport BigNumber from 'bignumber.js';\nimport { validateAddress, ValidationResult, invalidDetail, validateContractAddress } from '@taquito/utils';\nimport { InvalidAddressError, InvalidContractAddressError } from '@taquito/core';\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\nconst defaultChain = 'main';\nconst defaultRPCOptions = { block: 'head' };\nvar RPCMethodName;\n(function (RPCMethodName) {\n    RPCMethodName[\"GET_BAKING_RIGHTS\"] = \"getBakingRights\";\n    RPCMethodName[\"GET_BALLOTS\"] = \"getBallots\";\n    RPCMethodName[\"GET_BALLOT_LIST\"] = \"getBallotList\";\n    RPCMethodName[\"GET_BIG_MAP_KEY\"] = \"getBigMapKey\";\n    RPCMethodName[\"GET_BIG_MAP_EXPR\"] = \"getBigMapExpr\";\n    RPCMethodName[\"GET_BLOCK_HASH\"] = \"getBlockHash\";\n    RPCMethodName[\"GET_BLOCK\"] = \"getBlock\";\n    RPCMethodName[\"GET_BLOCK_HEADER\"] = \"getBlockHeader\";\n    RPCMethodName[\"GET_BLOCK_METADATA\"] = \"getBlockMetadata\";\n    RPCMethodName[\"GET_BALANCE\"] = \"getBalance\";\n    RPCMethodName[\"GET_CHAIN_ID\"] = \"getChainId\";\n    RPCMethodName[\"GET_CONSTANTS\"] = \"getConstants\";\n    RPCMethodName[\"GET_CONTRACT\"] = \"getContract\";\n    RPCMethodName[\"GET_CURRENT_PERIOD\"] = \"getCurrentPeriod\";\n    RPCMethodName[\"GET_CURRENT_PROPOSAL\"] = \"getCurrentProposal\";\n    RPCMethodName[\"GET_CURRENT_QUORUM\"] = \"getCurrentQuorum\";\n    RPCMethodName[\"GET_DELEGATE\"] = \"getDelegate\";\n    RPCMethodName[\"GET_DELEGATES\"] = \"getDelegates\";\n    RPCMethodName[\"GET_VOTING_INFO\"] = \"getVotingInfo\";\n    RPCMethodName[\"GET_ENDORSING_RIGHTS\"] = \"getEndorsingRights\";\n    RPCMethodName[\"GET_ENTRYPOINTS\"] = \"getEntrypoints\";\n    RPCMethodName[\"GET_LIVE_BLOCKS\"] = \"getLiveBlocks\";\n    RPCMethodName[\"GET_MANAGER_KEY\"] = \"getManagerKey\";\n    RPCMethodName[\"GET_NORMALIZED_SCRIPT\"] = \"getNormalizedScript\";\n    RPCMethodName[\"GET_PROPOSALS\"] = \"getProposals\";\n    RPCMethodName[\"GET_PROTOCOLS\"] = \"getProtocols\";\n    RPCMethodName[\"GET_SAPLING_DIFF_BY_CONTRACT\"] = \"getSaplingDiffByContract\";\n    RPCMethodName[\"GET_SAPLING_DIFF_BY_ID\"] = \"getSaplingDiffById\";\n    RPCMethodName[\"GET_SCRIPT\"] = \"getScript\";\n    RPCMethodName[\"GET_STORAGE\"] = \"getStorage\";\n    RPCMethodName[\"GET_SUCCESSOR_PERIOD\"] = \"getSuccessorPeriod\";\n    RPCMethodName[\"GET_TX_ROLLUP_INBOX\"] = \"getTxRollupInbox\";\n    RPCMethodName[\"GET_TX_ROLLUP_STATE\"] = \"getTxRollupState\";\n    RPCMethodName[\"GET_VOTES_LISTINGS\"] = \"getVotesListings\";\n    RPCMethodName[\"PACK_DATA\"] = \"packData\";\n    RPCMethodName[\"GET_STORAGE_USED_SPACE\"] = \"getStorageUsedSpace\";\n    RPCMethodName[\"GET_STORAGE_PAID_SPACE\"] = \"getStoragePaidSpace\";\n    RPCMethodName[\"GET_TICKET_BALANCE\"] = \"getTicketBalance\";\n    RPCMethodName[\"GET_ALL_TICKET_BALANCES\"] = \"getAllTicketBalances\";\n    RPCMethodName[\"GET_PENDING_OPERATIONS\"] = \"getPendingOperations\";\n    RPCMethodName[\"GET_ORIGINATION_PROOF\"] = \"getOriginationProof\";\n})(RPCMethodName || (RPCMethodName = {}));\n\n/**\n * Casts object/array items to BigNumber\n * @param data input object or array\n * @param keys keys for processing or all items if not defined\n *\n */\nfunction castToBigNumber(data, keys) {\n    const returnArray = Array.isArray(data);\n    if (typeof keys === 'undefined') {\n        keys = Object.keys(data);\n    }\n    const response = returnArray ? [] : {};\n    keys.forEach((key) => {\n        const item = data[key];\n        let res;\n        if (typeof item === 'undefined') {\n            return;\n        }\n        if (Array.isArray(item)) {\n            res = castToBigNumber(item);\n            response[key] = res;\n            return;\n        }\n        res = new BigNumber(item);\n        response[key] = res;\n    });\n    return response;\n}\n\nconst defaultTtl = 1000;\n/***\n * @description RpcClientCache acts as a decorator over the RpcClient instance by caching responses for the period defined by the ttl.\n */\nclass RpcClientCache {\n    /**\n     *\n     * @param rpcClient rpcClient responsible of the interaction with Tezos network through an rpc node\n     * @param ttl number representing the time to live (default 1000 milliseconds)\n     *\n     * @example new RpcClientCache(new RpcClient('https://mainnet.ecadinfra.com/'))\n     */\n    constructor(rpcClient, ttl = defaultTtl) {\n        this.rpcClient = rpcClient;\n        this.ttl = ttl;\n        this._cache = {};\n    }\n    getAllCachedData() {\n        return this._cache;\n    }\n    /**\n     * @description Remove all the data in the cache.\n     *\n     */\n    deleteAllCachedData() {\n        for (const key in this._cache) {\n            delete this._cache[key];\n        }\n    }\n    formatCacheKey(rpcUrl, rpcMethodName, rpcMethodParams, rpcMethodData) {\n        let paramsToString = '';\n        rpcMethodParams.forEach((param) => {\n            paramsToString =\n                typeof param === 'object'\n                    ? paramsToString + JSON.stringify(param) + '/'\n                    : paramsToString + param + '/';\n        });\n        return rpcMethodData\n            ? `${rpcUrl}/${rpcMethodName}/${paramsToString}${JSON.stringify(rpcMethodData)}/`\n            : `${rpcUrl}/${rpcMethodName}/${paramsToString}`;\n    }\n    has(key) {\n        return key in this._cache;\n    }\n    get(key) {\n        return this._cache[key].response;\n    }\n    put(key, response) {\n        const handle = setTimeout(() => {\n            return this.remove(key);\n        }, this.ttl);\n        Object.assign(this._cache, { [key]: { handle, response } });\n    }\n    remove(key) {\n        if (key in this._cache) {\n            delete this._cache[key];\n        }\n    }\n    validateAddress(address) {\n        const addressValidation = validateAddress(address);\n        if (addressValidation !== ValidationResult.VALID) {\n            throw new InvalidAddressError(address, invalidDetail(addressValidation));\n        }\n    }\n    validateContract(address) {\n        const addressValidation = validateContractAddress(address);\n        if (addressValidation !== ValidationResult.VALID) {\n            throw new InvalidContractAddressError(address, invalidDetail(addressValidation));\n        }\n    }\n    /**\n     *\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Get the block's hash, its unique identifier.\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-hash\n     */\n    getBlockHash({ block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const key = this.formatCacheKey(this.rpcClient.getRpcUrl(), RPCMethodName.GET_BLOCK_HASH, [\n                block,\n            ]);\n            if (this.has(key)) {\n                return this.get(key);\n            }\n            else {\n                const response = this.rpcClient.getBlockHash({ block });\n                this.put(key, response);\n                return response;\n            }\n        });\n    }\n    /**\n     *\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description List the ancestors of the given block which, if referred to as the branch in an operation header, are recent enough for that operation to be included in the current block.\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-live-blocks\n     */\n    getLiveBlocks({ block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const key = this.formatCacheKey(this.rpcClient.getRpcUrl(), RPCMethodName.GET_LIVE_BLOCKS, [\n                block,\n            ]);\n            if (this.has(key)) {\n                return this.get(key);\n            }\n            else {\n                const response = this.rpcClient.getLiveBlocks({ block });\n                this.put(key, response);\n                return response;\n            }\n        });\n    }\n    /**\n     *\n     * @param address address from which we want to retrieve the balance\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Access the balance of a contract.\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-context-contracts-contract-id-balance\n     */\n    getBalance(address, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.validateAddress(address);\n            const key = this.formatCacheKey(this.rpcClient.getRpcUrl(), RPCMethodName.GET_BALANCE, [\n                block,\n                address,\n            ]);\n            if (this.has(key)) {\n                return this.get(key);\n            }\n            else {\n                const response = this.rpcClient.getBalance(address, { block });\n                this.put(key, response);\n                return response;\n            }\n        });\n    }\n    /**\n     *\n     * @param address contract address from which we want to retrieve the storage\n     * @param options contains generic configuration for rpc calls\n     * @throws {@link InvalidContractAddressError}\n     * @description Access the data of the contract.\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-context-contracts-contract-id-storage\n     */\n    getStorage(address, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.validateContract(address);\n            const key = this.formatCacheKey(this.rpcClient.getRpcUrl(), RPCMethodName.GET_STORAGE, [\n                block,\n                address,\n            ]);\n            if (this.has(key)) {\n                return this.get(key);\n            }\n            else {\n                const response = this.rpcClient.getStorage(address, { block });\n                this.put(key, response);\n                return response;\n            }\n        });\n    }\n    /**\n     *\n     * @param address contract address from which we want to retrieve the script\n     * @param options contains generic configuration for rpc calls\n     * @throws {@link InvalidContractAddressError}\n     * @description Access the code and data of the contract.\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-context-contracts-contract-id-script\n     */\n    getScript(address, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.validateContract(address);\n            const key = this.formatCacheKey(this.rpcClient.getRpcUrl(), RPCMethodName.GET_SCRIPT, [\n                block,\n                address,\n            ]);\n            if (this.has(key)) {\n                return this.get(key);\n            }\n            else {\n                const response = this.rpcClient.getScript(address, { block });\n                this.put(key, response);\n                return response;\n            }\n        });\n    }\n    /**\n     *\n     * @param address contract address from which we want to retrieve the script\n     * @param unparsingMode default is { unparsing_mode: \"Readable\" }\n     * @param options contains generic configuration for rpc calls\n     * @throws {@link InvalidContractAddressError}\n     * @description Access the script of the contract and normalize it using the requested unparsing mode.\n     *\n     */\n    getNormalizedScript(address, unparsingMode = { unparsing_mode: 'Readable' }, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.validateContract(address);\n            const key = this.formatCacheKey(this.rpcClient.getRpcUrl(), RPCMethodName.GET_NORMALIZED_SCRIPT, [block, address], unparsingMode);\n            if (this.has(key)) {\n                return this.get(key);\n            }\n            else {\n                const response = this.rpcClient.getNormalizedScript(address, unparsingMode, { block });\n                this.put(key, response);\n                return response;\n            }\n        });\n    }\n    /**\n     *\n     * @param address contract address from which we want to retrieve\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Access the complete status of a contract.\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-context-contracts-contract-id\n     */\n    getContract(address, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.validateAddress(address);\n            const key = this.formatCacheKey(this.rpcClient.getRpcUrl(), RPCMethodName.GET_CONTRACT, [\n                block,\n                address,\n            ]);\n            if (this.has(key)) {\n                return this.get(key);\n            }\n            else {\n                const response = this.rpcClient.getContract(address, { block });\n                this.put(key, response);\n                return response;\n            }\n        });\n    }\n    /**\n     *\n     * @param address contract address from which we want to retrieve the manager\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Access the manager key of a contract.\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-context-contracts-contract-id-manager-key\n     */\n    getManagerKey(address, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.validateAddress(address);\n            const key = this.formatCacheKey(this.rpcClient.getRpcUrl(), RPCMethodName.GET_MANAGER_KEY, [\n                block,\n                address,\n            ]);\n            if (this.has(key)) {\n                return this.get(key);\n            }\n            else {\n                const response = this.rpcClient.getManagerKey(address, { block });\n                this.put(key, response);\n                return response;\n            }\n        });\n    }\n    /**\n     *\n     * @param address contract address from which we want to retrieve the delegate (baker)\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Access the delegate of a contract, if any.\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-context-contracts-contract-id-delegate\n     */\n    getDelegate(address, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.validateAddress(address);\n            const key = this.formatCacheKey(this.rpcClient.getRpcUrl(), RPCMethodName.GET_DELEGATE, [\n                block,\n                address,\n            ]);\n            if (this.has(key)) {\n                return this.get(key);\n            }\n            else {\n                const response = this.rpcClient.getDelegate(address, { block });\n                this.put(key, response);\n                return response;\n            }\n        });\n    }\n    /**\n     *\n     * @param address contract address from which we want to retrieve the big map key\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Access the value associated with a key in the big map storage of the contract.\n     *\n     * @deprecated Deprecated in favor of getBigMapKeyByID\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#post-block-id-context-contracts-contract-id-big-map-get\n     */\n    getBigMapKey(address, key, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.validateAddress(address);\n            const keyUrl = this.formatCacheKey(this.rpcClient.getRpcUrl(), RPCMethodName.GET_BIG_MAP_KEY, [block, address], key);\n            if (this.has(keyUrl)) {\n                return this.get(keyUrl);\n            }\n            else {\n                const response = this.rpcClient.getBigMapKey(address, key, { block });\n                this.put(keyUrl, response);\n                return response;\n            }\n        });\n    }\n    /**\n     *\n     * @param id Big Map ID\n     * @param expr Expression hash to query (A b58check encoded Blake2b hash of the expression (The expression can be packed using the pack_data method))\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Access the value associated with a key in a big map.\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-context-big-maps-big-map-id-script-expr\n     */\n    getBigMapExpr(id, expr, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const key = this.formatCacheKey(this.rpcClient.getRpcUrl(), RPCMethodName.GET_BIG_MAP_EXPR, [\n                block,\n                id,\n                expr,\n            ]);\n            if (this.has(key)) {\n                return this.get(key);\n            }\n            else {\n                const response = this.rpcClient.getBigMapExpr(id, expr, { block });\n                this.put(key, response);\n                return response;\n            }\n        });\n    }\n    /**\n     *\n     * @param address delegate address which we want to retrieve\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Fetches information about a delegate from RPC.\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-context-delegates-pkh\n     */\n    getDelegates(address, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.validateAddress(address);\n            const key = this.formatCacheKey(this.rpcClient.getRpcUrl(), RPCMethodName.GET_DELEGATES, [\n                block,\n                address,\n            ]);\n            if (this.has(key)) {\n                return this.get(key);\n            }\n            else {\n                const response = this.rpcClient.getDelegates(address, { block });\n                this.put(key, response);\n                return response;\n            }\n        });\n    }\n    /**\n     *\n     * @param address delegate address which we want to retrieve\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Returns the delegate info (e.g. voting power) found in the listings of the current voting period.\n     *\n     * @see https://tezos.gitlab.io/kathmandu/rpc.html#get-block-id-context-delegates-pkh-voting-info\n     */\n    getVotingInfo(address, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.validateAddress(address);\n            const key = this.formatCacheKey(this.rpcClient.getRpcUrl(), RPCMethodName.GET_VOTING_INFO, [\n                block,\n                address,\n            ]);\n            if (this.has(key)) {\n                return this.get(key);\n            }\n            else {\n                const response = this.rpcClient.getVotingInfo(address, { block });\n                this.put(key, response);\n                return response;\n            }\n        });\n    }\n    /**\n     *\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description All constants\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-context-constants\n     */\n    getConstants({ block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const key = this.formatCacheKey(this.rpcClient.getRpcUrl(), RPCMethodName.GET_CONSTANTS, [\n                block,\n            ]);\n            if (this.has(key)) {\n                return this.get(key);\n            }\n            else {\n                const response = this.rpcClient.getConstants({ block });\n                this.put(key, response);\n                return response;\n            }\n        });\n    }\n    /**\n     *\n     * @param options contains generic configuration for rpc calls. See examples for various available sytaxes.\n     *\n     * @description All the information about a block\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id\n     * @example getBlock() will default to /main/chains/block/head.\n     * @example getBlock({ block: head~2 }) will return an offset of 2 blocks.\n     * @example getBlock({ block: BL8fTiWcSxWCjiMVnDkbh6EuhqVPZzgWheJ2dqwrxYRm9AephXh~2 }) will return an offset of 2 blocks from given block hash..\n     */\n    getBlock({ block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const key = this.formatCacheKey(this.rpcClient.getRpcUrl(), RPCMethodName.GET_BLOCK, [block]);\n            if (this.has(key)) {\n                return this.get(key);\n            }\n            else {\n                const response = this.rpcClient.getBlock({ block });\n                this.put(key, response);\n                return response;\n            }\n        });\n    }\n    /**\n     *\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description The whole block header\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-header\n     */\n    getBlockHeader({ block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const key = this.formatCacheKey(this.rpcClient.getRpcUrl(), RPCMethodName.GET_BLOCK_HEADER, [\n                block,\n            ]);\n            if (this.has(key)) {\n                return this.get(key);\n            }\n            else {\n                const response = this.rpcClient.getBlockHeader({ block });\n                this.put(key, response);\n                return response;\n            }\n        });\n    }\n    /**\n     *\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description All the metadata associated to the block\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-metadata\n     */\n    getBlockMetadata({ block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const key = this.formatCacheKey(this.rpcClient.getRpcUrl(), RPCMethodName.GET_BLOCK_METADATA, [\n                block,\n            ]);\n            if (this.has(key)) {\n                return this.get(key);\n            }\n            else {\n                const response = this.rpcClient.getBlockMetadata({ block });\n                this.put(key, response);\n                return response;\n            }\n        });\n    }\n    /**\n     *\n     * @param args contains optional query arguments\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Retrieves the list of delegates allowed to bake a block.\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-helpers-baking-rights\n     */\n    getBakingRights(args = {}, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const key = this.formatCacheKey(this.rpcClient.getRpcUrl(), RPCMethodName.GET_BAKING_RIGHTS, [\n                block,\n                args,\n            ]);\n            if (this.has(key)) {\n                return this.get(key);\n            }\n            else {\n                const response = this.rpcClient.getBakingRights(args, { block });\n                this.put(key, response);\n                return response;\n            }\n        });\n    }\n    /**\n     *\n     * @param args contains optional query arguments\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Retrieves the list of delegates allowed to bake a block.\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-helpers-endorsing-rights\n     */\n    getEndorsingRights(args = {}, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const key = this.formatCacheKey(this.rpcClient.getRpcUrl(), RPCMethodName.GET_ENDORSING_RIGHTS, [block, args]);\n            if (this.has(key)) {\n                return this.get(key);\n            }\n            else {\n                const response = this.rpcClient.getEndorsingRights(args, { block });\n                this.put(key, response);\n                return response;\n            }\n        });\n    }\n    /**\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Ballots casted so far during a voting period\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-votes-ballot-list\n     */\n    getBallotList({ block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const key = this.formatCacheKey(this.rpcClient.getRpcUrl(), RPCMethodName.GET_BALLOT_LIST, [\n                block,\n            ]);\n            if (this.has(key)) {\n                return this.get(key);\n            }\n            else {\n                const response = this.rpcClient.getBallotList({ block });\n                this.put(key, response);\n                return response;\n            }\n        });\n    }\n    /**\n     *\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Sum of ballots casted so far during a voting period.\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-votes-ballots\n     */\n    getBallots({ block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const key = this.formatCacheKey(this.rpcClient.getRpcUrl(), RPCMethodName.GET_BALLOTS, [block]);\n            if (this.has(key)) {\n                return this.get(key);\n            }\n            else {\n                const response = this.rpcClient.getBallots({ block });\n                this.put(key, response);\n                return response;\n            }\n        });\n    }\n    /**\n     *\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Current proposal under evaluation.\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-votes-current-proposal\n     */\n    getCurrentProposal({ block, } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const key = this.formatCacheKey(this.rpcClient.getRpcUrl(), RPCMethodName.GET_CURRENT_PROPOSAL, [block]);\n            if (this.has(key)) {\n                return this.get(key);\n            }\n            else {\n                const response = this.rpcClient.getCurrentProposal({ block });\n                this.put(key, response);\n                return response;\n            }\n        });\n    }\n    /**\n     *\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Current expected quorum.\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-votes-current-quorum\n     */\n    getCurrentQuorum({ block, } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const key = this.formatCacheKey(this.rpcClient.getRpcUrl(), RPCMethodName.GET_CURRENT_QUORUM, [\n                block,\n            ]);\n            if (this.has(key)) {\n                return this.get(key);\n            }\n            else {\n                const response = this.rpcClient.getCurrentQuorum({ block });\n                this.put(key, response);\n                return response;\n            }\n        });\n    }\n    /**\n     *\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description List of delegates with their voting weight, in number of rolls.\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-votes-listings\n     */\n    getVotesListings({ block, } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const key = this.formatCacheKey(this.rpcClient.getRpcUrl(), RPCMethodName.GET_VOTES_LISTINGS, [\n                block,\n            ]);\n            if (this.has(key)) {\n                return this.get(key);\n            }\n            else {\n                const response = this.rpcClient.getVotesListings({ block });\n                this.put(key, response);\n                return response;\n            }\n        });\n    }\n    /**\n     *\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description List of proposals with number of supporters.\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-votes-proposals\n     */\n    getProposals({ block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const key = this.formatCacheKey(this.rpcClient.getRpcUrl(), RPCMethodName.GET_PROPOSALS, [\n                block,\n            ]);\n            if (this.has(key)) {\n                return this.get(key);\n            }\n            else {\n                const response = this.rpcClient.getProposals({ block });\n                this.put(key, response);\n                return response;\n            }\n        });\n    }\n    /**\n     *\n     * @param data operation contents to forge\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Forge an operation returning the unsigned bytes\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#post-block-id-helpers-forge-operations\n     */\n    forgeOperations(data, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.rpcClient.forgeOperations(data, { block });\n        });\n    }\n    /**\n     *\n     * @param signedOpBytes signed bytes to inject\n     *\n     * @description Inject an operation in node and broadcast it. Returns the ID of the operation. The `signedOperationContents` should be constructed using a contextual RPCs from the latest block and signed by the client. By default, the RPC will wait for the operation to be (pre-)validated before answering. See RPCs under /blocks/prevalidation for more details on the prevalidation context.\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#post-injection-operation\n     */\n    injectOperation(signedOpBytes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.rpcClient.injectOperation(signedOpBytes);\n        });\n    }\n    /**\n     *\n     * @param ops Operations to apply\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Simulate the validation of an operation\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#post-block-id-helpers-preapply-operations\n     */\n    preapplyOperations(ops, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.rpcClient.preapplyOperations(ops, { block });\n        });\n    }\n    /**\n     *\n     * @param contract address of the contract we want to get the entrypoints of\n     *\n     * @description Return the list of entrypoints of the contract\n     * @throws {@link InvalidContractAddressError}\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-context-contracts-contract-id-entrypoints\n     *\n     * @version 005_PsBABY5H\n     */\n    getEntrypoints(contract, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.validateContract(contract);\n            const key = this.formatCacheKey(this.rpcClient.getRpcUrl(), RPCMethodName.GET_ENTRYPOINTS, [\n                block,\n                contract,\n            ]);\n            if (this.has(key)) {\n                return this.get(key);\n            }\n            else {\n                const response = this.rpcClient.getEntrypoints(contract, { block });\n                this.put(key, response);\n                return response;\n            }\n        });\n    }\n    /**\n     * @param op Operation to run\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Run an operation without signature checks\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#post-block-id-helpers-scripts-run-operation\n     */\n    runOperation(op, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.rpcClient.runOperation(op, { block });\n        });\n    }\n    /**\n     * @param op Operation to simulate\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Simulate an operation\n     *\n     * @see https://gitlab.com/tezos/tezos/-/blob/master/docs/api/nairobi-openapi.json\n     */\n    simulateOperation(op, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.rpcClient.simulateOperation(op, { block });\n        });\n    }\n    /**\n     * @param code Code to run\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Run a piece of code in the current context\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#post-block-id-helpers-scripts-run-code\n     */\n    runCode(code, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.rpcClient.runCode(code, { block });\n        });\n    }\n    /**\n     * @param viewScriptParams Parameters of the script view to run\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Simulate a call to a michelson view\n     *\n     */\n    runScriptView(_a, _b) {\n        var { unparsing_mode = 'Readable' } = _a, rest = __rest(_a, [\"unparsing_mode\"]);\n        var _c = _b === void 0 ? defaultRPCOptions : _b, block = _c.block;\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.rpcClient.runScriptView(Object.assign({ unparsing_mode }, rest), { block });\n        });\n    }\n    /**\n     * @param viewParams Parameters of the view to run\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Simulate a call to a view following the TZIP-4 standard. See https://gitlab.com/tzip/tzip/-/blob/master/proposals/tzip-4/tzip-4.md#view-entrypoints.\n     *\n     */\n    runView(_a, _b) {\n        var { unparsing_mode = 'Readable' } = _a, rest = __rest(_a, [\"unparsing_mode\"]);\n        var _c = _b === void 0 ? defaultRPCOptions : _b, block = _c.block;\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.rpcClient.runView(Object.assign({ unparsing_mode }, rest), { block });\n        });\n    }\n    getChainId() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const key = this.formatCacheKey(this.rpcClient.getRpcUrl(), RPCMethodName.GET_CHAIN_ID, []);\n            if (this.has(key)) {\n                return this.get(key);\n            }\n            else {\n                const response = this.rpcClient.getChainId();\n                this.put(key, response);\n                return response;\n            }\n        });\n    }\n    /**\n     *\n     * @param data Data to pack\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Computes the serialized version of a data expression using the same algorithm as script instruction PACK\n     *\n     * @example packData({ data: { string: \"test\" }, type: { prim: \"string\" } })\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#post-block-id-helpers-scripts-pack-data\n     */\n    packData(data, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const key = this.formatCacheKey(this.rpcClient.getRpcUrl(), RPCMethodName.PACK_DATA, [block], data);\n            if (this.has(key)) {\n                return this.get(key);\n            }\n            else {\n                const response = this.rpcClient.packData(data, { block });\n                this.put(key, response);\n                return response;\n            }\n        });\n    }\n    /**\n     *\n     * @description Return rpc root url\n     */\n    getRpcUrl() {\n        return this.rpcClient.getRpcUrl();\n    }\n    /**\n     *\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Voting period of current block.\n     *\n     * @example getCurrentPeriod() will default to current voting period for /main/chains/block/head.\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-votes-current-period\n     */\n    getCurrentPeriod({ block, } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const key = this.formatCacheKey(this.rpcClient.getRpcUrl(), RPCMethodName.GET_CURRENT_PERIOD, [\n                block,\n            ]);\n            if (this.has(key)) {\n                return this.get(key);\n            }\n            else {\n                const response = this.rpcClient.getCurrentPeriod({ block });\n                this.put(key, response);\n                return response;\n            }\n        });\n    }\n    /**\n     *\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Voting period of next block.\n     *\n     * @example getSuccessorPeriod() will default to successor voting period for /main/chains/block/head.\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-votes-successor-period\n     */\n    getSuccessorPeriod({ block, } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const key = this.formatCacheKey(this.rpcClient.getRpcUrl(), RPCMethodName.GET_SUCCESSOR_PERIOD, [block]);\n            if (this.has(key)) {\n                return this.get(key);\n            }\n            else {\n                const response = this.rpcClient.getSuccessorPeriod({ block });\n                this.put(key, response);\n                return response;\n            }\n        });\n    }\n    /**\n     *\n     * @param id Sapling state ID\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Access the value associated with a sapling state ID.\n     *\n     * @see https://tezos.gitlab.io/active/rpc.html#get-block-id-context-sapling-sapling-state-id-get-diff\n     */\n    getSaplingDiffById(id, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const key = this.formatCacheKey(this.rpcClient.getRpcUrl(), RPCMethodName.GET_SAPLING_DIFF_BY_ID, [block, id]);\n            if (this.has(key)) {\n                return this.get(key);\n            }\n            else {\n                const response = this.rpcClient.getSaplingDiffById(id, { block });\n                this.put(key, response);\n                return response;\n            }\n        });\n    }\n    /**\n     *\n     * @param contract address of the contract we want to get the sapling diff\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Access the value associated with a sapling state.\n     *\n     * @see https://tezos.gitlab.io/active/rpc.html#get-block-id-context-contracts-contract-id-single-sapling-get-diff\n     */\n    getSaplingDiffByContract(contract, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const key = this.formatCacheKey(this.rpcClient.getRpcUrl(), RPCMethodName.GET_SAPLING_DIFF_BY_CONTRACT, [block, contract]);\n            if (this.has(key)) {\n                return this.get(key);\n            }\n            else {\n                const response = this.rpcClient.getSaplingDiffByContract(contract, { block });\n                this.put(key, response);\n                return response;\n            }\n        });\n    }\n    getProtocols({ block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const key = this.formatCacheKey(this.rpcClient.getRpcUrl(), RPCMethodName.GET_PROTOCOLS, [\n                block,\n            ]);\n            if (this.has(key)) {\n                return this.get(key);\n            }\n            else {\n                const response = this.rpcClient.getProtocols({ block });\n                this.put(key, response);\n                return response;\n            }\n        });\n    }\n    getTxRollupState(txRollupId, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const key = this.formatCacheKey(this.rpcClient.getRpcUrl(), RPCMethodName.GET_TX_ROLLUP_STATE, [\n                block,\n                txRollupId,\n            ]);\n            if (this.has(key)) {\n                return this.get(key);\n            }\n            else {\n                const response = this.rpcClient.getTxRollupState(txRollupId, { block });\n                this.put(key, response);\n                return response;\n            }\n        });\n    }\n    getTxRollupInbox(txRollupId, blockLevel, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const key = this.formatCacheKey(this.rpcClient.getRpcUrl(), RPCMethodName.GET_TX_ROLLUP_INBOX, [\n                block,\n                txRollupId,\n                blockLevel,\n            ]);\n            if (this.has(key)) {\n                return this.get(key);\n            }\n            else {\n                const response = this.rpcClient.getTxRollupInbox(txRollupId, blockLevel, { block });\n                this.put(key, response);\n                return response;\n            }\n        });\n    }\n    /**\n     *\n     * @param contract address of the contract we want to retrieve storage information of\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Access the amount of used space used in a contract's storage\n     *\n     * @see https://tezos.gitlab.io/lima/rpc.html#get-block-id-context-contracts-contract-id-storage\n     */\n    getStorageUsedSpace(contract, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const key = this.formatCacheKey(this.rpcClient.getRpcUrl(), RPCMethodName.GET_STORAGE_USED_SPACE, [block, contract]);\n            if (this.has(key)) {\n                return this.get(key);\n            }\n            else {\n                const response = this.rpcClient.getStorageUsedSpace(contract, { block });\n                this.put(key, response);\n                return response;\n            }\n        });\n    }\n    /**\n     *\n     * @param contract address of the contract we want to retrieve storage information of\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Access the amount of paid space in a contract's storage\n     *\n     * @see https://tezos.gitlab.io/lima/rpc.html#get-block-id-context-contracts-contract-id-storage\n     */\n    getStoragePaidSpace(contract, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const key = this.formatCacheKey(this.rpcClient.getRpcUrl(), RPCMethodName.GET_STORAGE_PAID_SPACE, [block, contract]);\n            if (this.has(key)) {\n                return this.get(key);\n            }\n            else {\n                const response = this.rpcClient.getStoragePaidSpace(contract, { block });\n                this.put(key, response);\n                return response;\n            }\n        });\n    }\n    /**\n     *\n     * @param contract address of the contract we want to retrieve ticket balance of\n     * @param ticket Ticket token parameter object that contains ticketer, content type, and content\n     * @param options contains generic configuration for rpc calls\n     * @description Access the contract's balance of ticket with specified ticketer, content type, and content.\n     * @example ticket{ ticketer: 'address', content_type: { prim: \"string\" }, content: { string: 'ticket1' } }\n     * @see https://tezos.gitlab.io/protocols/016_mumbai.html#rpc-changes\n     */\n    getTicketBalance(contract, ticket, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const key = this.formatCacheKey(this.rpcClient.getRpcUrl(), RPCMethodName.GET_TICKET_BALANCE, [block, contract], ticket);\n            if (this.has(key)) {\n                return this.get(key);\n            }\n            else {\n                const response = this.rpcClient.getTicketBalance(contract, ticket, { block });\n                this.put(key, response);\n                return response;\n            }\n        });\n    }\n    /**\n     *\n     * @param contract address of the contract to retrieve all ticket balances from\n     * @param options contains generic configuration for rpc calls\n     * @description Access the complete list of tickets owned by the given contract by scanning the contract's storage.\n     * @see https://tezos.gitlab.io/protocols/016_mumbai.html#rpc-changes\n     */\n    getAllTicketBalances(contract, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const key = this.formatCacheKey(this.rpcClient.getRpcUrl(), RPCMethodName.GET_ALL_TICKET_BALANCES, [block, contract]);\n            if (this.has(key)) {\n                return this.get(key);\n            }\n            else {\n                const response = this.rpcClient.getAllTicketBalances(contract, { block });\n                this.put(key, response);\n                return response;\n            }\n        });\n    }\n    /**\n     * @description List the prevalidated operations in mempool (accessibility of mempool depends on each rpc endpoint)\n     * @param args has 5 optional properties. We support version 1 with new encoding as version 0 will be deprecated soon. The rest of the properties is to filter pending operations response\n     * @default args { version: '1', applied: true, refused: true, outdated, true, branchRefused: true, branchDelayed: true, validationPass: undefined }\n     * @see https://tezos.gitlab.io/CHANGES.html?highlight=pending_operations#id4\n     */\n    getPendingOperations(args = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const key = this.formatCacheKey(this.rpcClient.getRpcUrl(), RPCMethodName.GET_PENDING_OPERATIONS, [args]);\n            if (this.has(key)) {\n                return this.get(key);\n            }\n            else {\n                const response = this.rpcClient.getPendingOperations(args);\n                this.put(key, response);\n                return response;\n            }\n        });\n    }\n    /**\n     *\n     * @param params contains the PVM kind and kernel to generate the origination proof from\n     * @description rpc call to generate the origination proof needed for the smart rollup originate operation\n     * @see https://tezos.gitlab.io/protocols/016_mumbai.html#rpc-changes\n     */\n    getOriginationProof(params, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const key = this.formatCacheKey(this.rpcClient.getRpcUrl(), RPCMethodName.GET_ORIGINATION_PROOF, [block, params]);\n            if (this.has(key)) {\n                return this.get(key);\n            }\n            else {\n                const response = this.rpcClient.getOriginationProof(params, { block });\n                this.put(key, response);\n                return response;\n            }\n        });\n    }\n}\n\nvar OPERATION_METADATA;\n(function (OPERATION_METADATA) {\n    OPERATION_METADATA[\"TOO_LARGE\"] = \"too large\";\n})(OPERATION_METADATA || (OPERATION_METADATA = {}));\nvar METADATA_BALANCE_UPDATES_CATEGORY;\n(function (METADATA_BALANCE_UPDATES_CATEGORY) {\n    METADATA_BALANCE_UPDATES_CATEGORY[\"BAKING_REWARDS\"] = \"baking rewards\";\n    METADATA_BALANCE_UPDATES_CATEGORY[\"REWARDS\"] = \"rewards\";\n    METADATA_BALANCE_UPDATES_CATEGORY[\"FEES\"] = \"fees\";\n    METADATA_BALANCE_UPDATES_CATEGORY[\"DEPOSITS\"] = \"deposits\";\n    METADATA_BALANCE_UPDATES_CATEGORY[\"LEGACY_REWARDS\"] = \"legacy_rewards\";\n    METADATA_BALANCE_UPDATES_CATEGORY[\"LEGACY_FEES\"] = \"legacy_fees\";\n    METADATA_BALANCE_UPDATES_CATEGORY[\"LEGACY_DEPOSITS\"] = \"legacy_deposits\";\n    METADATA_BALANCE_UPDATES_CATEGORY[\"BLOCK_FEES\"] = \"block fees\";\n    METADATA_BALANCE_UPDATES_CATEGORY[\"NONCE_REVELATION_REWARDS\"] = \"nonce revelation rewards\";\n    METADATA_BALANCE_UPDATES_CATEGORY[\"DOUBLE_SIGNING_EVIDENCE_REWARDS\"] = \"double signing evidence rewards\";\n    METADATA_BALANCE_UPDATES_CATEGORY[\"ENDORSING_REWARDS\"] = \"endorsing rewards\";\n    METADATA_BALANCE_UPDATES_CATEGORY[\"BAKING_BONUSES\"] = \"baking bonuses\";\n    METADATA_BALANCE_UPDATES_CATEGORY[\"STORAGE_FEES\"] = \"storage fees\";\n    METADATA_BALANCE_UPDATES_CATEGORY[\"PUNISHMENTS\"] = \"punishments\";\n    METADATA_BALANCE_UPDATES_CATEGORY[\"LOST_ENDORSING_REWARDS\"] = \"lost endorsing rewards\";\n    METADATA_BALANCE_UPDATES_CATEGORY[\"SUBSIDY\"] = \"subsidy\";\n    METADATA_BALANCE_UPDATES_CATEGORY[\"BURNED\"] = \"burned\";\n    METADATA_BALANCE_UPDATES_CATEGORY[\"COMMITMENT\"] = \"commitment\";\n    METADATA_BALANCE_UPDATES_CATEGORY[\"BOOTSTRAP\"] = \"bootstrap\";\n    METADATA_BALANCE_UPDATES_CATEGORY[\"INVOICE\"] = \"invoice\";\n    METADATA_BALANCE_UPDATES_CATEGORY[\"MINTED\"] = \"minted\";\n    METADATA_BALANCE_UPDATES_CATEGORY[\"TX_ROLLUP_REJECTION_REWARDS\"] = \"tx_rollup_rejection_rewards\";\n    METADATA_BALANCE_UPDATES_CATEGORY[\"TX_ROLLUP_REJECTION_PUNISHMENTS\"] = \"tx_rollup_rejection_punishments\";\n    METADATA_BALANCE_UPDATES_CATEGORY[\"BONDS\"] = \"bonds\";\n})(METADATA_BALANCE_UPDATES_CATEGORY || (METADATA_BALANCE_UPDATES_CATEGORY = {}));\nvar PvmKind;\n(function (PvmKind) {\n    PvmKind[\"WASM2\"] = \"wasm_2_0_0\";\n    PvmKind[\"ARITH\"] = \"arith\";\n})(PvmKind || (PvmKind = {}));\nvar SmartRollupRefutationOptions;\n(function (SmartRollupRefutationOptions) {\n    SmartRollupRefutationOptions[\"START\"] = \"start\";\n    SmartRollupRefutationOptions[\"MOVE\"] = \"move\";\n})(SmartRollupRefutationOptions || (SmartRollupRefutationOptions = {}));\nvar SmartRollupInputProofKind;\n(function (SmartRollupInputProofKind) {\n    SmartRollupInputProofKind[\"INBOX_PROOF\"] = \"inbox_proof\";\n    SmartRollupInputProofKind[\"REVEAL_PROOF\"] = \"reveal_proof\";\n    SmartRollupInputProofKind[\"FIRST_INPUT\"] = \"first_input\";\n})(SmartRollupInputProofKind || (SmartRollupInputProofKind = {}));\nvar SmartRollupRefuteRevealProofKind;\n(function (SmartRollupRefuteRevealProofKind) {\n    SmartRollupRefuteRevealProofKind[\"RAW_DATA_PROOF\"] = \"raw_data_proof\";\n    SmartRollupRefuteRevealProofKind[\"METADATA_PROOF\"] = \"metadata_proof\";\n    SmartRollupRefuteRevealProofKind[\"DAL_PAGE_PROOF\"] = \"dal_page_proof\";\n})(SmartRollupRefuteRevealProofKind || (SmartRollupRefuteRevealProofKind = {}));\nvar SmartRollupRefuteGameStatusOptions;\n(function (SmartRollupRefuteGameStatusOptions) {\n    SmartRollupRefuteGameStatusOptions[\"ONGOING\"] = \"ongoing\";\n    SmartRollupRefuteGameStatusOptions[\"ENDED\"] = \"ended\";\n})(SmartRollupRefuteGameStatusOptions || (SmartRollupRefuteGameStatusOptions = {}));\nvar SmartRollupRefuteGameEndedPlayerOutcomes;\n(function (SmartRollupRefuteGameEndedPlayerOutcomes) {\n    SmartRollupRefuteGameEndedPlayerOutcomes[\"LOSER\"] = \"loser\";\n    SmartRollupRefuteGameEndedPlayerOutcomes[\"DRAW\"] = \"draw\";\n})(SmartRollupRefuteGameEndedPlayerOutcomes || (SmartRollupRefuteGameEndedPlayerOutcomes = {}));\nvar SmartRollupRefuteGameEndedReason;\n(function (SmartRollupRefuteGameEndedReason) {\n    SmartRollupRefuteGameEndedReason[\"CONFLICT_RESOLVED\"] = \"conflict_resolved\";\n    SmartRollupRefuteGameEndedReason[\"TIMEOUT\"] = \"timeout\";\n})(SmartRollupRefuteGameEndedReason || (SmartRollupRefuteGameEndedReason = {}));\n\nvar OpKind;\n(function (OpKind) {\n    OpKind[\"ORIGINATION\"] = \"origination\";\n    OpKind[\"DELEGATION\"] = \"delegation\";\n    OpKind[\"REVEAL\"] = \"reveal\";\n    OpKind[\"TRANSACTION\"] = \"transaction\";\n    OpKind[\"ACTIVATION\"] = \"activate_account\";\n    OpKind[\"ENDORSEMENT\"] = \"endorsement\";\n    OpKind[\"PREENDORSEMENT\"] = \"preendorsement\";\n    OpKind[\"SET_DEPOSITS_LIMIT\"] = \"set_deposits_limit\";\n    OpKind[\"DOUBLE_PREENDORSEMENT_EVIDENCE\"] = \"double_preendorsement_evidence\";\n    OpKind[\"ENDORSEMENT_WITH_SLOT\"] = \"endorsement_with_slot\";\n    OpKind[\"SEED_NONCE_REVELATION\"] = \"seed_nonce_revelation\";\n    OpKind[\"DOUBLE_ENDORSEMENT_EVIDENCE\"] = \"double_endorsement_evidence\";\n    OpKind[\"DOUBLE_BAKING_EVIDENCE\"] = \"double_baking_evidence\";\n    OpKind[\"PROPOSALS\"] = \"proposals\";\n    OpKind[\"BALLOT\"] = \"ballot\";\n    OpKind[\"FAILING_NOOP\"] = \"failing_noop\";\n    OpKind[\"REGISTER_GLOBAL_CONSTANT\"] = \"register_global_constant\";\n    OpKind[\"TX_ROLLUP_ORIGINATION\"] = \"tx_rollup_origination\";\n    OpKind[\"TX_ROLLUP_SUBMIT_BATCH\"] = \"tx_rollup_submit_batch\";\n    OpKind[\"TX_ROLLUP_COMMIT\"] = \"tx_rollup_commit\";\n    OpKind[\"TX_ROLLUP_RETURN_BOND\"] = \"tx_rollup_return_bond\";\n    OpKind[\"TX_ROLLUP_FINALIZE_COMMITMENT\"] = \"tx_rollup_finalize_commitment\";\n    OpKind[\"TX_ROLLUP_REMOVE_COMMITMENT\"] = \"tx_rollup_remove_commitment\";\n    OpKind[\"TX_ROLLUP_REJECTION\"] = \"tx_rollup_rejection\";\n    OpKind[\"TX_ROLLUP_DISPATCH_TICKETS\"] = \"tx_rollup_dispatch_tickets\";\n    OpKind[\"TRANSFER_TICKET\"] = \"transfer_ticket\";\n    OpKind[\"INCREASE_PAID_STORAGE\"] = \"increase_paid_storage\";\n    OpKind[\"UPDATE_CONSENSUS_KEY\"] = \"update_consensus_key\";\n    OpKind[\"DRAIN_DELEGATE\"] = \"drain_delegate\";\n    OpKind[\"VDF_REVELATION\"] = \"vdf_revelation\";\n    OpKind[\"EVENT\"] = \"event\";\n    OpKind[\"TICKET_UPDATES\"] = \"ticket_updates\";\n    OpKind[\"SMART_ROLLUP_ORIGINATE\"] = \"smart_rollup_originate\";\n    OpKind[\"SMART_ROLLUP_ADD_MESSAGES\"] = \"smart_rollup_add_messages\";\n    OpKind[\"SMART_ROLLUP_EXECUTE_OUTBOX_MESSAGE\"] = \"smart_rollup_execute_outbox_message\";\n    OpKind[\"SMART_ROLLUP_PUBLISH\"] = \"smart_rollup_publish\";\n    OpKind[\"SMART_ROLLUP_CEMENT\"] = \"smart_rollup_cement\";\n    OpKind[\"SMART_ROLLUP_RECOVER_BOND\"] = \"smart_rollup_recover_bond\";\n    OpKind[\"SMART_ROLLUP_REFUTE\"] = \"smart_rollup_refute\";\n    OpKind[\"SMART_ROLLUP_TIMEOUT\"] = \"smart_rollup_timeout\";\n})(OpKind || (OpKind = {}));\n\n// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\nconst VERSION = {\n    \"commitHash\": \"a908ab176a8c52c025fd43e7acd452415396f54e\",\n    \"version\": \"17.4.0\"\n};\n\n/***\n * @description RpcClient allows interaction with Tezos network through an rpc node\n */\nclass RpcClient {\n    /**\n     *\n     * @param url rpc root url\n     * @param chain chain (default main)\n     * @param httpBackend Http backend that issue http request.\n     * You can override it by providing your own if you which to hook in the request/response\n     *\n     * @example new RpcClient('https://mainnet.ecadinfra.com/', 'main') this will use https://mainnet.ecadinfra.com//chains/main\n     */\n    constructor(url, chain = defaultChain, httpBackend = new HttpBackend()) {\n        this.url = url;\n        this.chain = chain;\n        this.httpBackend = httpBackend;\n    }\n    createURL(path) {\n        // Trim trailing slashes because it is assumed to be included in path\n        // the regex solution is prone to ReDoS. Please see: https://stackoverflow.com/questions/6680825/return-string-without-trailing-slash#comment124306698_6680877\n        // We also got a CodeQL error for the regex based solution\n        let rootUrl = this.url;\n        while (rootUrl.endsWith('/')) {\n            rootUrl = rootUrl.slice(0, -1);\n        }\n        return `${rootUrl}${path}`;\n    }\n    validateAddress(address) {\n        const addressValidation = validateAddress(address);\n        if (addressValidation !== ValidationResult.VALID) {\n            throw new InvalidAddressError(address, invalidDetail(addressValidation));\n        }\n    }\n    validateContract(address) {\n        const addressValidation = validateContractAddress(address);\n        if (addressValidation !== ValidationResult.VALID) {\n            throw new InvalidContractAddressError(address, invalidDetail(addressValidation));\n        }\n    }\n    /**\n     *\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Get the block's hash, its unique identifier.\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-hash\n     */\n    getBlockHash({ block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const hash = yield this.httpBackend.createRequest({\n                url: this.createURL(`/chains/${this.chain}/blocks/${block}/hash`),\n                method: 'GET',\n            });\n            return hash;\n        });\n    }\n    /**\n     *\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description List the ancestors of the given block which, if referred to as the branch in an operation header, are recent enough for that operation to be included in the current block.\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-live-blocks\n     */\n    getLiveBlocks({ block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const blocks = yield this.httpBackend.createRequest({\n                url: this.createURL(`/chains/${this.chain}/blocks/${block}/live_blocks`),\n                method: 'GET',\n            });\n            return blocks;\n        });\n    }\n    /**\n     *\n     * @param address address from which we want to retrieve the balance\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Access the balance of a contract.\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-context-contracts-contract-id-balance\n     */\n    getBalance(address, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.validateAddress(address);\n            const balance = yield this.httpBackend.createRequest({\n                url: this.createURL(`/chains/${this.chain}/blocks/${block}/context/contracts/${address}/balance`),\n                method: 'GET',\n            });\n            return new BigNumber(balance);\n        });\n    }\n    /**\n     *\n     * @param address contract address from which we want to retrieve the storage\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Access the data of the contract.\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-context-contracts-contract-id-storage\n     */\n    getStorage(address, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.validateContract(address);\n            return this.httpBackend.createRequest({\n                url: this.createURL(`/chains/${this.chain}/blocks/${block}/context/contracts/${address}/storage`),\n                method: 'GET',\n            });\n        });\n    }\n    /**\n     *\n     * @param address contract address from which we want to retrieve the script\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Access the code and data of the contract.\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-context-contracts-contract-id-script\n     */\n    getScript(address, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.validateContract(address);\n            return this.httpBackend.createRequest({\n                url: this.createURL(`/chains/${this.chain}/blocks/${block}/context/contracts/${address}/script`),\n                method: 'GET',\n            });\n        });\n    }\n    /**\n     *\n     * @param address contract address from which we want to retrieve the script\n     * @param unparsingMode default is { unparsing_mode: \"Readable\" }\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Access the script of the contract and normalize it using the requested unparsing mode.\n     *\n     */\n    getNormalizedScript(address, unparsingMode = { unparsing_mode: 'Readable' }, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.validateContract(address);\n            return this.httpBackend.createRequest({\n                url: this.createURL(`/chains/${this.chain}/blocks/${block}/context/contracts/${address}/script/normalized`),\n                method: 'POST',\n            }, unparsingMode);\n        });\n    }\n    /**\n     *\n     * @param address contract address from which we want to retrieve\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Access the complete status of a contract.\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-context-contracts-contract-id\n     */\n    getContract(address, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.validateAddress(address);\n            const contractResponse = yield this.httpBackend.createRequest({\n                url: this.createURL(`/chains/${this.chain}/blocks/${block}/context/contracts/${address}`),\n                method: 'GET',\n            });\n            return Object.assign(Object.assign({}, contractResponse), { balance: new BigNumber(contractResponse.balance) });\n        });\n    }\n    /**\n     *\n     * @param address contract address from which we want to retrieve the manager\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Access the manager key of a contract.\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-context-contracts-contract-id-manager-key\n     */\n    getManagerKey(address, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.validateAddress(address);\n            return this.httpBackend.createRequest({\n                url: this.createURL(`/chains/${this.chain}/blocks/${block}/context/contracts/${address}/manager_key`),\n                method: 'GET',\n            });\n        });\n    }\n    /**\n     *\n     * @param address contract address from which we want to retrieve the delegate (baker)\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Access the delegate of a contract, if any.\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-context-contracts-contract-id-delegate\n     */\n    getDelegate(address, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.validateAddress(address);\n            let delegate;\n            try {\n                delegate = yield this.httpBackend.createRequest({\n                    url: this.createURL(`/chains/${this.chain}/blocks/${block}/context/contracts/${address}/delegate`),\n                    method: 'GET',\n                });\n            }\n            catch (ex) {\n                if (ex instanceof HttpResponseError && ex.status === STATUS_CODE.NOT_FOUND) {\n                    delegate = null;\n                }\n                else {\n                    throw ex;\n                }\n            }\n            return delegate;\n        });\n    }\n    /**\n     *\n     * @param address contract address from which we want to retrieve the big map key\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Access the value associated with a key in the big map storage of the contract.\n     *\n     * @deprecated Deprecated in favor of getBigMapKeyByID\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#post-block-id-context-contracts-contract-id-big-map-get\n     */\n    getBigMapKey(address, key, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.validateAddress(address);\n            return this.httpBackend.createRequest({\n                url: this.createURL(`/chains/${this.chain}/blocks/${block}/context/contracts/${address}/big_map_get`),\n                method: 'POST',\n            }, key);\n        });\n    }\n    /**\n     *\n     * @param id Big Map ID\n     * @param expr Expression hash to query (A b58check encoded Blake2b hash of the expression (The expression can be packed using the pack_data method))\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Access the value associated with a key in a big map.\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-context-big-maps-big-map-id-script-expr\n     */\n    getBigMapExpr(id, expr, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.httpBackend.createRequest({\n                url: this.createURL(`/chains/${this.chain}/blocks/${block}/context/big_maps/${id}/${expr}`),\n                method: 'GET',\n            });\n        });\n    }\n    /**\n     *\n     * @param address delegate address which we want to retrieve\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Fetches information about a delegate from RPC.\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-context-delegates-pkh\n     */\n    getDelegates(address, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.validateAddress(address);\n            const response = yield this.httpBackend.createRequest({\n                url: this.createURL(`/chains/${this.chain}/blocks/${block}/context/delegates/${address}`),\n                method: 'GET',\n            });\n            const castedResponse = castToBigNumber(response, [\n                'balance',\n                'full_balance',\n                'current_frozen_deposits',\n                'frozen_deposits',\n                'frozen_balance',\n                'frozen_deposits_limit',\n                'staking_balance',\n                'delegated_balance',\n                'voting_power',\n            ]);\n            return Object.assign(Object.assign(Object.assign({}, response), castedResponse), { frozen_balance_by_cycle: response.frozen_balance_by_cycle\n                    ? response.frozen_balance_by_cycle.map((_a) => {\n                        var { deposit, deposits, fees, rewards } = _a, rest = __rest(_a, [\"deposit\", \"deposits\", \"fees\", \"rewards\"]);\n                        const castedToBigNumber = castToBigNumber({ deposit, deposits, fees, rewards }, [\n                            'deposit',\n                            'deposits',\n                            'fees',\n                            'rewards',\n                        ]);\n                        return Object.assign(Object.assign({}, rest), { deposit: castedToBigNumber.deposit, deposits: castedToBigNumber.deposits, fees: castedToBigNumber.fees, rewards: castedToBigNumber.rewards });\n                    })\n                    : undefined });\n        });\n    }\n    /**\n     *\n     * @param address delegate address which we want to retrieve\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Returns the delegate info (e.g. voting power) found in the listings of the current voting period.\n     *\n     * @see https://tezos.gitlab.io/kathmandu/rpc.html#get-block-id-context-delegates-pkh-voting-info\n     */\n    getVotingInfo(address, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.validateAddress(address);\n            return yield this.httpBackend.createRequest({\n                url: this.createURL(`/chains/${this.chain}/blocks/${block}/context/delegates/${address}/voting_info`),\n                method: 'GET',\n            });\n        });\n    }\n    /**\n     *\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description All constants\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-context-constants\n     */\n    getConstants({ block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.httpBackend.createRequest({\n                url: this.createURL(`/chains/${this.chain}/blocks/${block}/context/constants`),\n                method: 'GET',\n            });\n            const castedResponse = castToBigNumber(response, [\n                'time_between_blocks',\n                'hard_gas_limit_per_operation',\n                'hard_gas_limit_per_block',\n                'proof_of_work_threshold',\n                'tokens_per_roll',\n                'seed_nonce_revelation_tip',\n                'block_security_deposit',\n                'endorsement_security_deposit',\n                'block_reward',\n                'endorsement_reward',\n                'cost_per_byte',\n                'hard_storage_limit_per_operation',\n                'test_chain_duration',\n                'baking_reward_per_endorsement',\n                'delay_per_missing_endorsement',\n                'minimal_block_delay',\n                'liquidity_baking_subsidy',\n                'cache_layout',\n                'baking_reward_fixed_portion',\n                'baking_reward_bonus_per_slot',\n                'endorsing_reward_per_slot',\n                'double_baking_punishment',\n                'delay_increment_per_round',\n                'tx_rollup_commitment_bond',\n                'vdf_difficulty',\n                'sc_rollup_stake_amount',\n                'minimal_stake',\n            ]);\n            return Object.assign(Object.assign({}, response), castedResponse);\n        });\n    }\n    /**\n     *\n     * @param options contains generic configuration for rpc calls. See examples for various available syntaxes.\n     *\n     * @description All the information about a block\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id\n     * @example getBlock() will default to /main/chains/block/head.\n     * @example getBlock({ block: head~2 }) will return an offset of 2 blocks.\n     * @example getBlock({ block: BL8fTiWcSxWCjiMVnDkbh6EuhqVPZzgWheJ2dqwrxYRm9AephXh~2 }) will return an offset of 2 blocks from given block hash..\n     */\n    getBlock({ block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.httpBackend.createRequest({\n                url: this.createURL(`/chains/${this.chain}/blocks/${block}`),\n                method: 'GET',\n            });\n            return response;\n        });\n    }\n    /**\n     *\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description The whole block header\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-header\n     */\n    getBlockHeader({ block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.httpBackend.createRequest({\n                url: this.createURL(`/chains/${this.chain}/blocks/${block}/header`),\n                method: 'GET',\n            });\n            return response;\n        });\n    }\n    /**\n     *\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description All the metadata associated to the block\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-metadata\n     */\n    getBlockMetadata({ block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.httpBackend.createRequest({\n                url: this.createURL(`/chains/${this.chain}/blocks/${block}/metadata`),\n                method: 'GET',\n            });\n            return response;\n        });\n    }\n    /**\n     *\n     * @param args contains optional query arguments\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Retrieves the list of delegates allowed to bake a block.\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-helpers-baking-rights\n     */\n    getBakingRights(args = {}, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.httpBackend.createRequest({\n                url: this.createURL(`/chains/${this.chain}/blocks/${block}/helpers/baking_rights`),\n                method: 'GET',\n                query: args,\n            });\n            return response;\n        });\n    }\n    /**\n     *\n     * @param args contains optional query arguments\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Retrieves the list of delegates allowed to bake a block.\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-helpers-endorsing-rights\n     */\n    getEndorsingRights(args = {}, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.httpBackend.createRequest({\n                url: this.createURL(`/chains/${this.chain}/blocks/${block}/helpers/endorsing_rights`),\n                method: 'GET',\n                query: args,\n            });\n            return response;\n        });\n    }\n    /**\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Ballots casted so far during a voting period\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-votes-ballot-list\n     */\n    getBallotList({ block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.httpBackend.createRequest({\n                url: this.createURL(`/chains/${this.chain}/blocks/${block}/votes/ballot_list`),\n                method: 'GET',\n            });\n            return response;\n        });\n    }\n    /**\n     *\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Sum of ballots casted so far during a voting period.\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-votes-ballots\n     */\n    getBallots({ block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.httpBackend.createRequest({\n                url: this.createURL(`/chains/${this.chain}/blocks/${block}/votes/ballots`),\n                method: 'GET',\n            });\n            const casted = castToBigNumber(response, ['yay', 'nay', 'pass']);\n            return casted;\n        });\n    }\n    /**\n     *\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Current proposal under evaluation.\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-votes-current-proposal\n     */\n    getCurrentProposal({ block, } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.httpBackend.createRequest({\n                url: this.createURL(`/chains/${this.chain}/blocks/${block}/votes/current_proposal`),\n                method: 'GET',\n            });\n            return response;\n        });\n    }\n    /**\n     *\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Current expected quorum.\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-votes-current-quorum\n     */\n    getCurrentQuorum({ block, } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.httpBackend.createRequest({\n                url: this.createURL(`/chains/${this.chain}/blocks/${block}/votes/current_quorum`),\n                method: 'GET',\n            });\n            return response;\n        });\n    }\n    /**\n     *\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description List of delegates with their voting weight, in number of rolls.\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-votes-listings\n     */\n    getVotesListings({ block, } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.httpBackend.createRequest({\n                url: this.createURL(`/chains/${this.chain}/blocks/${block}/votes/listings`),\n                method: 'GET',\n            });\n            response.map((item) => {\n                if (item.voting_power) {\n                    item.voting_power = new BigNumber(item.voting_power);\n                }\n                return item;\n            });\n            return response;\n        });\n    }\n    /**\n     *\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description List of proposals with number of supporters.\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-votes-proposals\n     */\n    getProposals({ block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.httpBackend.createRequest({\n                url: this.createURL(`/chains/${this.chain}/blocks/${block}/votes/proposals`),\n                method: 'GET',\n            });\n            response.map((item) => {\n                return (item[1] = new BigNumber(item[1]));\n            });\n            return response;\n        });\n    }\n    /**\n     *\n     * @param data operation contents to forge\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Forge an operation returning the unsigned bytes\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#post-block-id-helpers-forge-operations\n     */\n    forgeOperations(data, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.httpBackend.createRequest({\n                url: this.createURL(`/chains/${this.chain}/blocks/${block}/helpers/forge/operations`),\n                method: 'POST',\n            }, data);\n        });\n    }\n    /**\n     *\n     * @param signedOpBytes signed bytes to inject\n     *\n     * @description Inject an operation in node and broadcast it. Returns the ID of the operation. The `signedOperationContents` should be constructed using a contextual RPCs from the latest block and signed by the client. By default, the RPC will wait for the operation to be (pre-)validated before answering. See RPCs under /blocks/prevalidation for more details on the prevalidation context.\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#post-injection-operation\n     */\n    injectOperation(signedOpBytes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.httpBackend.createRequest({\n                url: this.createURL(`/injection/operation`),\n                method: 'POST',\n            }, signedOpBytes);\n        });\n    }\n    /**\n     *\n     * @param ops Operations to apply\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Simulate the validation of an operation\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#post-block-id-helpers-preapply-operations\n     */\n    preapplyOperations(ops, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.httpBackend.createRequest({\n                url: this.createURL(`/chains/${this.chain}/blocks/${block}/helpers/preapply/operations`),\n                method: 'POST',\n            }, ops);\n            return response;\n        });\n    }\n    /**\n     *\n     * @param contract address of the contract we want to get the entrypoints of\n     *\n     * @description Return the list of entrypoints of the contract\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-context-contracts-contract-id-entrypoints\n     *\n     * @version 005_PsBABY5H\n     */\n    getEntrypoints(contract, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.validateContract(contract);\n            const contractResponse = yield this.httpBackend.createRequest({\n                url: this.createURL(`/chains/${this.chain}/blocks/${block}/context/contracts/${contract}/entrypoints`),\n                method: 'GET',\n            });\n            return contractResponse;\n        });\n    }\n    /**\n     * @param op Operation to run\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Run an operation without signature checks\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#post-block-id-helpers-scripts-run-operation\n     */\n    runOperation(op, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.httpBackend.createRequest({\n                url: this.createURL(`/chains/${this.chain}/blocks/${block}/helpers/scripts/run_operation`),\n                method: 'POST',\n            }, op);\n            return response;\n        });\n    }\n    /**\n     * @param op Operation to simulate\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Simulate an operation on the blockchain\n     *\n     * @see https://gitlab.com/tezos/tezos/-/blob/master/docs/api/nairobi-openapi.json\n     */\n    simulateOperation(op, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.httpBackend.createRequest({\n                url: this.createURL(`/chains/${this.chain}/blocks/${block}/helpers/scripts/simulate_operation`),\n                method: 'POST',\n            }, op);\n            return response;\n        });\n    }\n    /**\n     * @param code Code to run\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Run a piece of code in the current context\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#post-block-id-helpers-scripts-run-code\n     */\n    runCode(code, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.httpBackend.createRequest({\n                url: this.createURL(`/chains/${this.chain}/blocks/${block}/helpers/scripts/run_code`),\n                method: 'POST',\n            }, code);\n            return response;\n        });\n    }\n    /**\n     * @param viewScriptParams Parameters of the script view to run\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Simulate a call to a michelson view\n     *\n     */\n    runScriptView(_a, _b) {\n        var { unparsing_mode = 'Readable' } = _a, rest = __rest(_a, [\"unparsing_mode\"]);\n        var _c = _b === void 0 ? defaultRPCOptions : _b, block = _c.block;\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.httpBackend.createRequest({\n                url: this.createURL(`/chains/${this.chain}/blocks/${block}/helpers/scripts/run_script_view`),\n                method: 'POST',\n            }, Object.assign({ unparsing_mode }, rest));\n        });\n    }\n    /**\n     * @param viewParams Parameters of the view to run\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Simulate a call to a view following the TZIP-4 standard. See https://gitlab.com/tzip/tzip/-/blob/master/proposals/tzip-4/tzip-4.md#view-entrypoints.\n     *\n     */\n    runView(_a, _b) {\n        var { unparsing_mode = 'Readable' } = _a, rest = __rest(_a, [\"unparsing_mode\"]);\n        var _c = _b === void 0 ? defaultRPCOptions : _b, block = _c.block;\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.httpBackend.createRequest({\n                url: this.createURL(`/chains/${this.chain}/blocks/${block}/helpers/scripts/run_view`),\n                method: 'POST',\n            }, Object.assign({ unparsing_mode }, rest));\n        });\n    }\n    getChainId() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.httpBackend.createRequest({\n                url: this.createURL(`/chains/${this.chain}/chain_id`),\n                method: 'GET',\n            });\n        });\n    }\n    /**\n     *\n     * @param data Data to pack\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Computes the serialized version of a data expression using the same algorithm as script instruction PACK\n     * Note: You should always verify the packed bytes before signing or requesting that they be signed when using the the RPC to pack.\n     * This precaution helps protect you and your applications users from RPC nodes that have been compromised.\n     * A node that is operated by a bad actor, or compromised by a bad actor could return a fully formed operation that does not correspond to the input provided to the RPC endpoint.\n     * A safer solution to pack and sign data would be to use the `packDataBytes` function available in the `@taquito/michel-codec` package.\n     *\n     * @example packData({ data: { string: \"test\" }, type: { prim: \"string\" } })\n     *\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#post-block-id-helpers-scripts-pack-data\n     */\n    packData(data, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const _a = yield this.httpBackend.createRequest({\n                url: this.createURL(`/chains/${this.chain}/blocks/${block}/helpers/scripts/pack_data`),\n                method: 'POST',\n            }, data), { gas } = _a, rest = __rest(_a, [\"gas\"]);\n            let formattedGas = gas;\n            const tryBigNumber = new BigNumber(gas || '');\n            if (!tryBigNumber.isNaN()) {\n                formattedGas = tryBigNumber;\n            }\n            return Object.assign({ gas: formattedGas }, rest);\n        });\n    }\n    /**\n     *\n     * @description Return rpc root url\n     */\n    getRpcUrl() {\n        return this.url;\n    }\n    /**\n     *\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Voting period of current block.\n     *\n     * @example getCurrentPeriod() will default to current voting period for /main/chains/block/head.\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-votes-current-period\n     */\n    getCurrentPeriod({ block, } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.httpBackend.createRequest({\n                url: this.createURL(`/chains/${this.chain}/blocks/${block}/votes/current_period`),\n                method: 'GET',\n            });\n            return response;\n        });\n    }\n    /**\n     *\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Voting period of next block.\n     *\n     * @example getSuccessorPeriod() will default to successor voting period for /main/chains/block/head.\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-votes-successor-period\n     */\n    getSuccessorPeriod({ block, } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.httpBackend.createRequest({\n                url: this.createURL(`/chains/${this.chain}/blocks/${block}/votes/successor_period`),\n                method: 'GET',\n            });\n            return response;\n        });\n    }\n    /**\n     *\n     * @param id Sapling state ID\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Access the value associated with a sapling state ID.\n     *\n     * @see https://tezos.gitlab.io/active/rpc.html#get-block-id-context-sapling-sapling-state-id-get-diff\n     */\n    getSaplingDiffById(id, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.httpBackend.createRequest({\n                url: this.createURL(`/chains/${this.chain}/blocks/${block}/context/sapling/${id}/get_diff`),\n                method: 'GET',\n            });\n        });\n    }\n    /**\n     *\n     * @param contract address of the contract we want to get the sapling diff\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Access the value associated with a sapling state.\n     *\n     * @see https://tezos.gitlab.io/active/rpc.html#get-block-id-context-contracts-contract-id-single-sapling-get-diff\n     */\n    getSaplingDiffByContract(contract, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.httpBackend.createRequest({\n                url: this.createURL(`/chains/${this.chain}/blocks/${block}/context/contracts/${contract}/single_sapling_get_diff`),\n                method: 'GET',\n            });\n        });\n    }\n    getProtocols({ block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.httpBackend.createRequest({\n                url: this.createURL(`/chains/${this.chain}/blocks/${block}/protocols`),\n                method: 'GET',\n            });\n        });\n    }\n    /**\n     *\n     * @param tx_rollup_id the transaction rollup ID\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Access the state of a rollup\n     *\n     * @see https://tezos.gitlab.io/jakarta/rpc.html#get-block-id-context-tx-rollup-tx-rollup-id-state\n     */\n    getTxRollupState(txRollupId, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.httpBackend.createRequest({\n                url: this.createURL(`/chains/${this.chain}/blocks/${block}/context/tx_rollup/${txRollupId}/state`),\n                method: 'GET',\n            });\n        });\n    }\n    /**\n     *\n     * @param tx_rollup_id the transaction rollup ID\n     * @param block_level the block level\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Access the inbox of a transaction rollup\n     *\n     * @see https://tezos.gitlab.io/jakarta/rpc.html#get-block-id-context-tx-rollup-tx-rollup-id-inbox-block-level\n     */\n    getTxRollupInbox(txRollupId, blockLevel, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.httpBackend.createRequest({\n                url: this.createURL(`/chains/${this.chain}/blocks/${block}/context/tx_rollup/${txRollupId}/inbox/${blockLevel}`),\n                method: 'GET',\n            });\n        });\n    }\n    /**\n     *\n     * @param contract address of the contract we want to retrieve storage information of\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Access the amount of used space in a contract's storage\n     *\n     * @see https://tezos.gitlab.io/lima/rpc.html#get-block-id-context-contracts-contract-id-storage\n     */\n    getStorageUsedSpace(contract, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.httpBackend.createRequest({\n                url: this.createURL(`/chains/${this.chain}/blocks/${block}/context/contracts/${contract}/storage/used_space`),\n                method: 'GET',\n            });\n        });\n    }\n    /**\n     *\n     * @param contract address of the contract we want to retrieve storage information of\n     * @param options contains generic configuration for rpc calls\n     *\n     * @description Access the amount of paid space in a contract's storage\n     *\n     * @see https://tezos.gitlab.io/lima/rpc.html#get-block-id-context-contracts-contract-id-storage\n     */\n    getStoragePaidSpace(contract, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.httpBackend.createRequest({\n                url: this.createURL(`/chains/${this.chain}/blocks/${block}/context/contracts/${contract}/storage/paid_space`),\n                method: 'GET',\n            });\n        });\n    }\n    /**\n     *\n     * @param contract implicit or originated address we want to retrieve ticket balance of\n     * @param ticket object to specify a ticket by ticketer, content type and content\n     * @param options contains generic configuration for rpc calls\n     * @description Access the contract's balance of ticket with specified ticketer, content type, and content.\n     * @example ticket { ticketer: 'address', content_type: { prim: \"string\" }, content: { string: 'ticket1' } }\n     * @see https://tezos.gitlab.io/protocols/016_mumbai.html#rpc-changes\n     */\n    getTicketBalance(contract, ticket, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.httpBackend.createRequest({\n                url: this.createURL(`/chains/${this.chain}/blocks/${block}/context/contracts/${contract}/ticket_balance`),\n                method: 'POST',\n            }, ticket);\n        });\n    }\n    /**\n     *\n     * @param contract originated address we want to retrieve ticket balances of\n     * @param options contains generic configuration for rpc calls\n     * @description Access the complete list of tickets owned by the given contract by scanning the contract's storage.\n     * @see https://tezos.gitlab.io/protocols/016_mumbai.html#rpc-changes\n     */\n    getAllTicketBalances(contract, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.httpBackend.createRequest({\n                url: this.createURL(`/chains/${this.chain}/blocks/${block}/context/contracts/${contract}/all_ticket_balances`),\n                method: 'GET',\n            });\n        });\n    }\n    /**\n     * @description List the prevalidated operations in mempool (accessibility of mempool depends on each rpc endpoint)\n     * @param args has 5 optional properties. We support version 1 with new encoding as version 0 will be deprecated soon. The rest of the properties is to filter pending operations response\n     * @default args { version: '1', applied: true, refused: true, outdated, true, branchRefused: true, branchDelayed: true, validationPass: undefined }\n     * @see https://tezos.gitlab.io/CHANGES.html?highlight=pending_operations#id4\n     */\n    getPendingOperations(args = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.httpBackend.createRequest({\n                url: this.createURL(`/chains/${this.chain}/mempool/pending_operations`),\n                method: 'GET',\n                query: args,\n            });\n        });\n    }\n    /**\n     *\n     * @param params contains the PVM kind and kernel to generate the origination proof from\n     * @description rpc call to generate the origination proof needed for a smart rollup originate operation\n     * @see https://tezos.gitlab.io/protocols/016_mumbai.html#rpc-changes\n     */\n    getOriginationProof(params, { block } = defaultRPCOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.httpBackend.createRequest({\n                url: this.createURL(`/chains/${this.chain}/blocks/${block}/context/smart_rollups/all/origination_proof`),\n                method: 'POST',\n            }, params);\n        });\n    }\n}\n\nexport { METADATA_BALANCE_UPDATES_CATEGORY, OPERATION_METADATA, OpKind, PvmKind, RpcClient, RpcClientCache, SmartRollupInputProofKind, SmartRollupRefutationOptions, SmartRollupRefuteGameEndedPlayerOutcomes, SmartRollupRefuteGameEndedReason, SmartRollupRefuteGameStatusOptions, SmartRollupRefuteRevealProofKind, VERSION, castToBigNumber, defaultChain, defaultRPCOptions };\n//# sourceMappingURL=taquito-rpc.es6.js.map\n", "/**\n * Returns true if the object is a function.\n * @param value The value to check\n */\nexport function isFunction(value: any): value is (...args: any[]) => any {\n  return typeof value === 'function';\n}\n", "/**\n * Used to create Error subclasses until the community moves away from ES5.\n *\n * This is because compiling from TypeScript down to ES5 has issues with subclassing Errors\n * as well as other built-in types: https://github.com/Microsoft/TypeScript/issues/12123\n *\n * @param createImpl A factory function to create the actual constructor implementation. The returned\n * function should be a named function that calls `_super` internally.\n */\nexport function createErrorClass<T>(createImpl: (_super: any) => any): T {\n  const _super = (instance: any) => {\n    Error.call(instance);\n    instance.stack = new Error().stack;\n  };\n\n  const ctorFunc = createImpl(_super);\n  ctorFunc.prototype = Object.create(Error.prototype);\n  ctorFunc.prototype.constructor = ctorFunc;\n  return ctorFunc;\n}\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface UnsubscriptionError extends Error {\n  readonly errors: any[];\n}\n\nexport interface UnsubscriptionErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (errors: any[]): UnsubscriptionError;\n}\n\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport const UnsubscriptionError: UnsubscriptionErrorCtor = createErrorClass(\n  (_super) =>\n    function UnsubscriptionErrorImpl(this: any, errors: (Error | string)[]) {\n      _super(this);\n      this.message = errors\n        ? `${errors.length} errors occurred during unsubscription:\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}`\n        : '';\n      this.name = 'UnsubscriptionError';\n      this.errors = errors;\n    }\n);\n", "/**\n * Removes an item from an array, mutating it.\n * @param arr The array to remove the item from\n * @param item The item to remove\n */\nexport function arrRemove<T>(arr: T[] | undefined | null, item: T) {\n  if (arr) {\n    const index = arr.indexOf(item);\n    0 <= index && arr.splice(index, 1);\n  }\n}\n", "import { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { SubscriptionLike, TeardownLogic, Unsubscribable } from './types';\nimport { arrRemove } from './util/arrRemove';\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements SubscriptionLike {\n  /** @nocollapse */\n  public static EMPTY = (() => {\n    const empty = new Subscription();\n    empty.closed = true;\n    return empty;\n  })();\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   */\n  public closed = false;\n\n  private _parentage: Subscription[] | Subscription | null = null;\n\n  /**\n   * The list of registered finalizers to execute upon unsubscription. Adding and removing from this\n   * list occurs in the {@link #add} and {@link #remove} methods.\n   */\n  private _finalizers: Exclude<TeardownLogic, void>[] | null = null;\n\n  /**\n   * @param initialTeardown A function executed first as part of the finalization\n   * process that is kicked off when {@link #unsubscribe} is called.\n   */\n  constructor(private initialTeardown?: () => void) {}\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let errors: any[] | undefined;\n\n    if (!this.closed) {\n      this.closed = true;\n\n      // Remove this from it's parents.\n      const { _parentage } = this;\n      if (_parentage) {\n        this._parentage = null;\n        if (Array.isArray(_parentage)) {\n          for (const parent of _parentage) {\n            parent.remove(this);\n          }\n        } else {\n          _parentage.remove(this);\n        }\n      }\n\n      const { initialTeardown: initialFinalizer } = this;\n      if (isFunction(initialFinalizer)) {\n        try {\n          initialFinalizer();\n        } catch (e) {\n          errors = e instanceof UnsubscriptionError ? e.errors : [e];\n        }\n      }\n\n      const { _finalizers } = this;\n      if (_finalizers) {\n        this._finalizers = null;\n        for (const finalizer of _finalizers) {\n          try {\n            execFinalizer(finalizer);\n          } catch (err) {\n            errors = errors ?? [];\n            if (err instanceof UnsubscriptionError) {\n              errors = [...errors, ...err.errors];\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n\n      if (errors) {\n        throw new UnsubscriptionError(errors);\n      }\n    }\n  }\n\n  /**\n   * Adds a finalizer to this subscription, so that finalization will be unsubscribed/called\n   * when this subscription is unsubscribed. If this subscription is already {@link #closed},\n   * because it has already been unsubscribed, then whatever finalizer is passed to it\n   * will automatically be executed (unless the finalizer itself is also a closed subscription).\n   *\n   * Closed Subscriptions cannot be added as finalizers to any subscription. Adding a closed\n   * subscription to a any subscription will result in no operation. (A noop).\n   *\n   * Adding a subscription to itself, or adding `null` or `undefined` will not perform any\n   * operation at all. (A noop).\n   *\n   * `Subscription` instances that are added to this instance will automatically remove themselves\n   * if they are unsubscribed. Functions and {@link Unsubscribable} objects that you wish to remove\n   * will need to be removed manually with {@link #remove}\n   *\n   * @param teardown The finalization logic to add to this subscription.\n   */\n  add(teardown: TeardownLogic): void {\n    // Only add the finalizer if it's not undefined\n    // and don't add a subscription to itself.\n    if (teardown && teardown !== this) {\n      if (this.closed) {\n        // If this subscription is already closed,\n        // execute whatever finalizer is handed to it automatically.\n        execFinalizer(teardown);\n      } else {\n        if (teardown instanceof Subscription) {\n          // We don't add closed subscriptions, and we don't add the same subscription\n          // twice. Subscription unsubscribe is idempotent.\n          if (teardown.closed || teardown._hasParent(this)) {\n            return;\n          }\n          teardown._addParent(this);\n        }\n        (this._finalizers = this._finalizers ?? []).push(teardown);\n      }\n    }\n  }\n\n  /**\n   * Checks to see if a this subscription already has a particular parent.\n   * This will signal that this subscription has already been added to the parent in question.\n   * @param parent the parent to check for\n   */\n  private _hasParent(parent: Subscription) {\n    const { _parentage } = this;\n    return _parentage === parent || (Array.isArray(_parentage) && _parentage.includes(parent));\n  }\n\n  /**\n   * Adds a parent to this subscription so it can be removed from the parent if it\n   * unsubscribes on it's own.\n   *\n   * NOTE: THIS ASSUMES THAT {@link _hasParent} HAS ALREADY BEEN CHECKED.\n   * @param parent The parent subscription to add\n   */\n  private _addParent(parent: Subscription) {\n    const { _parentage } = this;\n    this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;\n  }\n\n  /**\n   * Called on a child when it is removed via {@link #remove}.\n   * @param parent The parent to remove\n   */\n  private _removeParent(parent: Subscription) {\n    const { _parentage } = this;\n    if (_parentage === parent) {\n      this._parentage = null;\n    } else if (Array.isArray(_parentage)) {\n      arrRemove(_parentage, parent);\n    }\n  }\n\n  /**\n   * Removes a finalizer from this subscription that was previously added with the {@link #add} method.\n   *\n   * Note that `Subscription` instances, when unsubscribed, will automatically remove themselves\n   * from every other `Subscription` they have been added to. This means that using the `remove` method\n   * is not a common thing and should be used thoughtfully.\n   *\n   * If you add the same finalizer instance of a function or an unsubscribable object to a `Subscription` instance\n   * more than once, you will need to call `remove` the same number of times to remove all instances.\n   *\n   * All finalizer instances are removed to free up memory upon unsubscription.\n   *\n   * @param teardown The finalizer to remove from this subscription\n   */\n  remove(teardown: Exclude<TeardownLogic, void>): void {\n    const { _finalizers } = this;\n    _finalizers && arrRemove(_finalizers, teardown);\n\n    if (teardown instanceof Subscription) {\n      teardown._removeParent(this);\n    }\n  }\n}\n\nexport const EMPTY_SUBSCRIPTION = Subscription.EMPTY;\n\nexport function isSubscription(value: any): value is Subscription {\n  return (\n    value instanceof Subscription ||\n    (value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe))\n  );\n}\n\nfunction execFinalizer(finalizer: Unsubscribable | (() => void)) {\n  if (isFunction(finalizer)) {\n    finalizer();\n  } else {\n    finalizer.unsubscribe();\n  }\n}\n", "import { Subscriber } from './Subscriber';\nimport { ObservableNotification } from './types';\n\n/**\n * The {@link GlobalConfig} object for RxJS. It is used to configure things\n * like how to react on unhandled errors.\n */\nexport const config: GlobalConfig = {\n  onUnhandledError: null,\n  onStoppedNotification: null,\n  Promise: undefined,\n  useDeprecatedSynchronousErrorHandling: false,\n  useDeprecatedNextContext: false,\n};\n\n/**\n * The global configuration object for RxJS, used to configure things\n * like how to react on unhandled errors. Accessible via {@link config}\n * object.\n */\nexport interface GlobalConfig {\n  /**\n   * A registration point for unhandled errors from RxJS. These are errors that\n   * cannot were not handled by consuming code in the usual subscription path. For\n   * example, if you have this configured, and you subscribe to an observable without\n   * providing an error handler, errors from that subscription will end up here. This\n   * will _always_ be called asynchronously on another job in the runtime. This is because\n   * we do not want errors thrown in this user-configured handler to interfere with the\n   * behavior of the library.\n   */\n  onUnhandledError: ((err: any) => void) | null;\n\n  /**\n   * A registration point for notifications that cannot be sent to subscribers because they\n   * have completed, errored or have been explicitly unsubscribed. By default, next, complete\n   * and error notifications sent to stopped subscribers are noops. However, sometimes callers\n   * might want a different behavior. For example, with sources that attempt to report errors\n   * to stopped subscribers, a caller can configure RxJS to throw an unhandled error instead.\n   * This will _always_ be called asynchronously on another job in the runtime. This is because\n   * we do not want errors thrown in this user-configured handler to interfere with the\n   * behavior of the library.\n   */\n  onStoppedNotification: ((notification: ObservableNotification<any>, subscriber: Subscriber<any>) => void) | null;\n\n  /**\n   * The promise constructor used by default for {@link Observable#toPromise toPromise} and {@link Observable#forEach forEach}\n   * methods.\n   *\n   * @deprecated As of version 8, RxJS will no longer support this sort of injection of a\n   * Promise constructor. If you need a Promise implementation other than native promises,\n   * please polyfill/patch Promise as you see appropriate. Will be removed in v8.\n   */\n  Promise?: PromiseConstructorLike;\n\n  /**\n   * If true, turns on synchronous error rethrowing, which is a deprecated behavior\n   * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\n   * call in a try/catch block. It also enables producer interference, a nasty bug\n   * where a multicast can be broken for all observers by a downstream consumer with\n   * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BUY TIME\n   * FOR MIGRATION REASONS.\n   *\n   * @deprecated As of version 8, RxJS will no longer support synchronous throwing\n   * of unhandled errors. All errors will be thrown on a separate call stack to prevent bad\n   * behaviors described above. Will be removed in v8.\n   */\n  useDeprecatedSynchronousErrorHandling: boolean;\n\n  /**\n   * If true, enables an as-of-yet undocumented feature from v5: The ability to access\n   * `unsubscribe()` via `this` context in `next` functions created in observers passed\n   * to `subscribe`.\n   *\n   * This is being removed because the performance was severely problematic, and it could also cause\n   * issues when types other than POJOs are passed to subscribe as subscribers, as they will likely have\n   * their `this` context overwritten.\n   *\n   * @deprecated As of version 8, RxJS will no longer support altering the\n   * context of next functions provided as part of an observer to Subscribe. Instead,\n   * you will have access to a subscription or a signal or token that will allow you to do things like\n   * unsubscribe and test closed status. Will be removed in v8.\n   */\n  useDeprecatedNextContext: boolean;\n}\n", "import type { TimerHandle } from './timerHandle';\ntype SetTimeoutFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;\ntype ClearTimeoutFunction = (handle: TimerHandle) => void;\n\ninterface TimeoutProvider {\n  setTimeout: SetTimeoutFunction;\n  clearTimeout: ClearTimeoutFunction;\n  delegate:\n    | {\n        setTimeout: SetTimeoutFunction;\n        clearTimeout: ClearTimeoutFunction;\n      }\n    | undefined;\n}\n\nexport const timeoutProvider: TimeoutProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setTimeout(handler: () => void, timeout?: number, ...args) {\n    const { delegate } = timeoutProvider;\n    if (delegate?.setTimeout) {\n      return delegate.setTimeout(handler, timeout, ...args);\n    }\n    return setTimeout(handler, timeout, ...args);\n  },\n  clearTimeout(handle) {\n    const { delegate } = timeoutProvider;\n    return (delegate?.clearTimeout || clearTimeout)(handle as any);\n  },\n  delegate: undefined,\n};\n", "import { config } from '../config';\nimport { timeoutProvider } from '../scheduler/timeoutProvider';\n\n/**\n * Handles an error on another job either with the user-configured {@link onUnhandledError},\n * or by throwing it on that new job so it can be picked up by `window.onerror`, `process.on('error')`, etc.\n *\n * This should be called whenever there is an error that is out-of-band with the subscription\n * or when an error hits a terminal boundary of the subscription and no error handler was provided.\n *\n * @param err the error to report\n */\nexport function reportUnhandledError(err: any) {\n  timeoutProvider.setTimeout(() => {\n    const { onUnhandledError } = config;\n    if (onUnhandledError) {\n      // Execute the user-configured error handler.\n      onUnhandledError(err);\n    } else {\n      // Throw so it is picked up by the runtime's uncaught error mechanism.\n      throw err;\n    }\n  });\n}\n", "/* tslint:disable:no-empty */\nexport function noop() { }\n", "import { CompleteNotification, NextNotification, ErrorNotification } from './types';\n\n/**\n * A completion object optimized for memory use and created to be the\n * same \"shape\" as other notifications in v8.\n * @internal\n */\nexport const COMPLETE_NOTIFICATION = (() => createNotification('C', undefined, undefined) as CompleteNotification)();\n\n/**\n * Internal use only. Creates an optimized error notification that is the same \"shape\"\n * as other notifications.\n * @internal\n */\nexport function errorNotification(error: any): ErrorNotification {\n  return createNotification('E', undefined, error) as any;\n}\n\n/**\n * Internal use only. Creates an optimized next notification that is the same \"shape\"\n * as other notifications.\n * @internal\n */\nexport function nextNotification<T>(value: T) {\n  return createNotification('N', value, undefined) as NextNotification<T>;\n}\n\n/**\n * Ensures that all notifications created internally have the same \"shape\" in v8.\n *\n * TODO: This is only exported to support a crazy legacy test in `groupBy`.\n * @internal\n */\nexport function createNotification(kind: 'N' | 'E' | 'C', value: any, error: any) {\n  return {\n    kind,\n    value,\n    error,\n  };\n}\n", "import { config } from '../config';\n\nlet context: { errorThrown: boolean; error: any } | null = null;\n\n/**\n * Handles dealing with errors for super-gross mode. Creates a context, in which\n * any synchronously thrown errors will be passed to {@link captureError}. Which\n * will record the error such that it will be rethrown after the call back is complete.\n * TODO: Remove in v8\n * @param cb An immediately executed function.\n */\nexport function errorContext(cb: () => void) {\n  if (config.useDeprecatedSynchronousErrorHandling) {\n    const isRoot = !context;\n    if (isRoot) {\n      context = { errorThrown: false, error: null };\n    }\n    cb();\n    if (isRoot) {\n      const { errorThrown, error } = context!;\n      context = null;\n      if (errorThrown) {\n        throw error;\n      }\n    }\n  } else {\n    // This is the general non-deprecated path for everyone that\n    // isn't crazy enough to use super-gross mode (useDeprecatedSynchronousErrorHandling)\n    cb();\n  }\n}\n\n/**\n * Captures errors only in super-gross mode.\n * @param err the error to capture\n */\nexport function captureError(err: any) {\n  if (config.useDeprecatedSynchronousErrorHandling && context) {\n    context.errorThrown = true;\n    context.error = err;\n  }\n}\n", "import { isFunction } from './util/isFunction';\nimport { Observer, ObservableNotification } from './types';\nimport { isSubscription, Subscription } from './Subscription';\nimport { config } from './config';\nimport { reportUnhandledError } from './util/reportUnhandledError';\nimport { noop } from './util/noop';\nimport { nextNotification, errorNotification, COMPLETE_NOTIFICATION } from './NotificationFactories';\nimport { timeoutProvider } from './scheduler/timeoutProvider';\nimport { captureError } from './util/errorContext';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param next The `next` callback of an Observer.\n   * @param error The `error` callback of an\n   * Observer.\n   * @param complete The `complete` callback of an\n   * Observer.\n   * @return A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   * @nocollapse\n   * @deprecated Do not use. Will be removed in v8. There is no replacement for this\n   * method, and there is no reason to be creating instances of `Subscriber` directly.\n   * If you have a specific use case, please file an issue.\n   */\n  static create<T>(next?: (x?: T) => void, error?: (e?: any) => void, complete?: () => void): Subscriber<T> {\n    return new SafeSubscriber(next, error, complete);\n  }\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  protected isStopped: boolean = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  protected destination: Subscriber<any> | Observer<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   * There is no reason to directly create an instance of Subscriber. This type is exported for typings reasons.\n   */\n  constructor(destination?: Subscriber<any> | Observer<any>) {\n    super();\n    if (destination) {\n      this.destination = destination;\n      // Automatically chain subscriptions together here.\n      // if destination is a Subscription, then it is a Subscriber.\n      if (isSubscription(destination)) {\n        destination.add(this);\n      }\n    } else {\n      this.destination = EMPTY_OBSERVER;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (this.isStopped) {\n      handleStoppedNotification(nextNotification(value), this);\n    } else {\n      this._next(value!);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached `Error`. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (this.isStopped) {\n      handleStoppedNotification(errorNotification(err), this);\n    } else {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (this.isStopped) {\n      handleStoppedNotification(COMPLETE_NOTIFICATION, this);\n    } else {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (!this.closed) {\n      this.isStopped = true;\n      super.unsubscribe();\n      this.destination = null!;\n    }\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    try {\n      this.destination.error(err);\n    } finally {\n      this.unsubscribe();\n    }\n  }\n\n  protected _complete(): void {\n    try {\n      this.destination.complete();\n    } finally {\n      this.unsubscribe();\n    }\n  }\n}\n\n/**\n * This bind is captured here because we want to be able to have\n * compatibility with monoid libraries that tend to use a method named\n * `bind`. In particular, a library called Monio requires this.\n */\nconst _bind = Function.prototype.bind;\n\nfunction bind<Fn extends (...args: any[]) => any>(fn: Fn, thisArg: any): Fn {\n  return _bind.call(fn, thisArg);\n}\n\n/**\n * Internal optimization only, DO NOT EXPOSE.\n * @internal\n */\nclass ConsumerObserver<T> implements Observer<T> {\n  constructor(private partialObserver: Partial<Observer<T>>) {}\n\n  next(value: T): void {\n    const { partialObserver } = this;\n    if (partialObserver.next) {\n      try {\n        partialObserver.next(value);\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    }\n  }\n\n  error(err: any): void {\n    const { partialObserver } = this;\n    if (partialObserver.error) {\n      try {\n        partialObserver.error(err);\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    } else {\n      handleUnhandledError(err);\n    }\n  }\n\n  complete(): void {\n    const { partialObserver } = this;\n    if (partialObserver.complete) {\n      try {\n        partialObserver.complete();\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    }\n  }\n}\n\nexport class SafeSubscriber<T> extends Subscriber<T> {\n  constructor(\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\n    error?: ((e?: any) => void) | null,\n    complete?: (() => void) | null\n  ) {\n    super();\n\n    let partialObserver: Partial<Observer<T>>;\n    if (isFunction(observerOrNext) || !observerOrNext) {\n      // The first argument is a function, not an observer. The next\n      // two arguments *could* be observers, or they could be empty.\n      partialObserver = {\n        next: (observerOrNext ?? undefined) as (((value: T) => void) | undefined),\n        error: error ?? undefined,\n        complete: complete ?? undefined,\n      };\n    } else {\n      // The first argument is a partial observer.\n      let context: any;\n      if (this && config.useDeprecatedNextContext) {\n        // This is a deprecated path that made `this.unsubscribe()` available in\n        // next handler functions passed to subscribe. This only exists behind a flag\n        // now, as it is *very* slow.\n        context = Object.create(observerOrNext);\n        context.unsubscribe = () => this.unsubscribe();\n        partialObserver = {\n          next: observerOrNext.next && bind(observerOrNext.next, context),\n          error: observerOrNext.error && bind(observerOrNext.error, context),\n          complete: observerOrNext.complete && bind(observerOrNext.complete, context),\n        };\n      } else {\n        // The \"normal\" path. Just use the partial observer directly.\n        partialObserver = observerOrNext;\n      }\n    }\n\n    // Wrap the partial observer to ensure it's a full observer, and\n    // make sure proper error handling is accounted for.\n    this.destination = new ConsumerObserver(partialObserver);\n  }\n}\n\nfunction handleUnhandledError(error: any) {\n  if (config.useDeprecatedSynchronousErrorHandling) {\n    captureError(error);\n  } else {\n    // Ideal path, we report this as an unhandled error,\n    // which is thrown on a new call stack.\n    reportUnhandledError(error);\n  }\n}\n\n/**\n * An error handler used when no error handler was supplied\n * to the SafeSubscriber -- meaning no error handler was supplied\n * do the `subscribe` call on our observable.\n * @param err The error to handle\n */\nfunction defaultErrorHandler(err: any) {\n  throw err;\n}\n\n/**\n * A handler for notifications that cannot be sent to a stopped subscriber.\n * @param notification The notification being sent\n * @param subscriber The stopped subscriber\n */\nfunction handleStoppedNotification(notification: ObservableNotification<any>, subscriber: Subscriber<any>) {\n  const { onStoppedNotification } = config;\n  onStoppedNotification && timeoutProvider.setTimeout(() => onStoppedNotification(notification, subscriber));\n}\n\n/**\n * The observer used as a stub for subscriptions where the user did not\n * pass any arguments to `subscribe`. Comes with the default error handling\n * behavior.\n */\nexport const EMPTY_OBSERVER: Readonly<Observer<any>> & { closed: true } = {\n  closed: true,\n  next: noop,\n  error: defaultErrorHandler,\n  complete: noop,\n};\n", "/**\n * Symbol.observable or a string \"@@observable\". Used for interop\n *\n * @deprecated We will no longer be exporting this symbol in upcoming versions of RxJS.\n * Instead polyfill and use Symbol.observable directly *or* use https://www.npmjs.com/package/symbol-observable\n */\nexport const observable: string | symbol = (() => (typeof Symbol === 'function' && Symbol.observable) || '@@observable')();\n", "/**\n * This function takes one parameter and just returns it. Simply put,\n * this is like `<T>(x: T): T => x`.\n *\n * ## Examples\n *\n * This is useful in some cases when using things like `mergeMap`\n *\n * ```ts\n * import { interval, take, map, range, mergeMap, identity } from 'rxjs';\n *\n * const source$ = interval(1000).pipe(take(5));\n *\n * const result$ = source$.pipe(\n *   map(i => range(i)),\n *   mergeMap(identity) // same as mergeMap(x => x)\n * );\n *\n * result$.subscribe({\n *   next: console.log\n * });\n * ```\n *\n * Or when you want to selectively apply an operator\n *\n * ```ts\n * import { interval, take, identity } from 'rxjs';\n *\n * const shouldLimit = () => Math.random() < 0.5;\n *\n * const source$ = interval(1000);\n *\n * const result$ = source$.pipe(shouldLimit() ? take(5) : identity);\n *\n * result$.subscribe({\n *   next: console.log\n * });\n * ```\n *\n * @param x Any value that is returned by this function\n * @returns The value passed as the first parameter to this function\n */\nexport function identity<T>(x: T): T {\n  return x;\n}\n", "import { identity } from './identity';\nimport { UnaryFunction } from '../types';\n\nexport function pipe(): typeof identity;\nexport function pipe<T, A>(fn1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>\n): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>\n): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>\n): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>\n): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>\n): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>,\n  fn9: UnaryFunction<H, I>\n): UnaryFunction<T, I>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>,\n  fn9: UnaryFunction<H, I>,\n  ...fns: UnaryFunction<any, any>[]\n): UnaryFunction<T, unknown>;\n\n/**\n * pipe() can be called on one or more functions, each of which can take one argument (\"UnaryFunction\")\n * and uses it to return a value.\n * It returns a function that takes one argument, passes it to the first UnaryFunction, and then\n * passes the result to the next one, passes that result to the next one, and so on.  \n */\nexport function pipe(...fns: Array<UnaryFunction<any, any>>): UnaryFunction<any, any> {\n  return pipeFromArray(fns);\n}\n\n/** @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (fns.length === 0) {\n    return identity as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);\n  };\n}\n", "import { Operator } from './Operator';\nimport { SafeSubscriber, Subscriber } from './Subscriber';\nimport { isSubscription, Subscription } from './Subscription';\nimport { TeardownLogic, OperatorFunction, Subscribable, Observer } from './types';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nimport { isFunction } from './util/isFunction';\nimport { errorContext } from './util/errorContext';\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  source: Observable<any> | undefined;\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  operator: Operator<any, T> | undefined;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new Observable by calling the Observable constructor\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new observable\n   * @nocollapse\n   * @deprecated Use `new Observable()` instead. Will be removed in v8.\n   */\n  static create: (...args: any[]) => any = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  };\n\n  /**\n   * Creates a new Observable, with this Observable instance as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param operator the operator defining the operation to take on the observable\n   * @return a new observable with the Operator applied\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   * If you have implemented an operator using `lift`, it is recommended that you create an\n   * operator by simply returning `new Observable()` directly. See \"Creating new operators from\n   * scratch\" section here: https://rxjs.dev/guide/operators\n   */\n  lift<R>(operator?: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observerOrNext?: Partial<Observer<T>> | ((value: T) => void)): Subscription;\n  /** @deprecated Instead of passing separate callback arguments, use an observer argument. Signatures taking separate callback arguments will be removed in v8. Details: https://rxjs.dev/deprecations/subscribe-arguments */\n  subscribe(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to Observable's constructor, but most of the time it is\n   * a library implementation, which defines what will be emitted by an Observable, and when it be will emitted. This means\n   * that calling `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * the thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * of the following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular, do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, if the `error` method is not provided and an error happens,\n   * it will be thrown asynchronously. Errors thrown asynchronously cannot be caught using `try`/`catch`. Instead,\n   * use the {@link onUnhandledError} configuration option or use a runtime handler (like `window.onerror` or\n   * `process.on('error)`) to be notified of unhandled errors. Because of this, it's recommended that you provide\n   * an `error` method to avoid missing thrown errors.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where the first function is equivalent\n   * of a `next` method, the second of an `error` method and the third of a `complete` method. Just as in case of an Observer,\n   * if you do not need to listen for something, you can omit a function by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to the `error` function, as with an Observer, if not provided, errors emitted by an Observable will be thrown asynchronously.\n   *\n   * You can, however, subscribe with no parameters at all. This may be the case where you're not interested in terminal events\n   * and you also handled emissions internally by using operators (e.g. using `tap`).\n   *\n   * Whichever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop the work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a `scheduler`.\n   *\n   * #### Examples\n   *\n   * Subscribe with an {@link guide/observer Observer}\n   *\n   * ```ts\n   * import { of } from 'rxjs';\n   *\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() {\n   *     // We actually could just remove this method,\n   *     // since we do not really care about errors right now.\n   *   },\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   *   .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // 'Adding: 1'\n   * // 'Adding: 2'\n   * // 'Adding: 3'\n   * // 'Sum equals: 6'\n   * ```\n   *\n   * Subscribe with functions ({@link deprecations/subscribe-arguments deprecated})\n   *\n   * ```ts\n   * import { of } from 'rxjs'\n   *\n   * let sum = 0;\n   *\n   * of(1, 2, 3).subscribe(\n   *   value => {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   () => console.log('Sum equals: ' + sum)\n   * );\n   *\n   * // Logs:\n   * // 'Adding: 1'\n   * // 'Adding: 2'\n   * // 'Adding: 3'\n   * // 'Sum equals: 6'\n   * ```\n   *\n   * Cancel a subscription\n   *\n   * ```ts\n   * import { interval } from 'rxjs';\n   *\n   * const subscription = interval(1000).subscribe({\n   *   next(num) {\n   *     console.log(num)\n   *   },\n   *   complete() {\n   *     // Will not be called, even when cancelling subscription.\n   *     console.log('completed!');\n   *   }\n   * });\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // 'unsubscribed!' after 2.5s\n   * ```\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   * or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   * Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   * the error will be thrown asynchronously as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {Subscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\n    error?: ((error: any) => void) | null,\n    complete?: (() => void) | null\n  ): Subscription {\n    const subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);\n\n    errorContext(() => {\n      const { operator, source } = this;\n      subscriber.add(\n        operator\n          ? // We're dealing with a subscription in the\n            // operator chain to one of our lifted operators.\n            operator.call(subscriber, source)\n          : source\n          ? // If `source` has a value, but `operator` does not, something that\n            // had intimate knowledge of our API, like our `Subject`, must have\n            // set it. We're going to just call `_subscribe` directly.\n            this._subscribe(subscriber)\n          : // In all other cases, we're likely wrapping a user-provided initializer\n            // function, so we need to catch errors and handle them appropriately.\n            this._trySubscribe(subscriber)\n      );\n    });\n\n    return subscriber;\n  }\n\n  /** @internal */\n  protected _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      // We don't need to return anything in this case,\n      // because it's just going to try to `add()` to a subscription\n      // above.\n      sink.error(err);\n    }\n  }\n\n  /**\n   * Used as a NON-CANCELLABLE means of subscribing to an observable, for use with\n   * APIs that expect promises, like `async/await`. You cannot unsubscribe from this.\n   *\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\n   * observable does not complete, you will end up with a promise that is hung up, and\n   * potentially all of the state of an async function hanging out in memory. To avoid\n   * this situation, look into adding something like {@link timeout}, {@link take},\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\n   *\n   * #### Example\n   *\n   * ```ts\n   * import { interval, take } from 'rxjs';\n   *\n   * const source$ = interval(1000).pipe(take(4));\n   *\n   * async function getTotal() {\n   *   let total = 0;\n   *\n   *   await source$.forEach(value => {\n   *     total += value;\n   *     console.log('observable -> ' + value);\n   *   });\n   *\n   *   return total;\n   * }\n   *\n   * getTotal().then(\n   *   total => console.log('Total: ' + total)\n   * );\n   *\n   * // Expected:\n   * // 'observable -> 0'\n   * // 'observable -> 1'\n   * // 'observable -> 2'\n   * // 'observable -> 3'\n   * // 'Total: 6'\n   * ```\n   *\n   * @param next a handler for each value emitted by the observable\n   * @return a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void): Promise<void>;\n\n  /**\n   * @param next a handler for each value emitted by the observable\n   * @param promiseCtor a constructor function used to instantiate the Promise\n   * @return a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   * @deprecated Passing a Promise constructor will no longer be available\n   * in upcoming versions of RxJS. This is because it adds weight to the library, for very\n   * little benefit. If you need this functionality, it is recommended that you either\n   * polyfill Promise, or you create an adapter to convert the returned native promise\n   * to whatever promise implementation you wanted. Will be removed in v8.\n   */\n  forEach(next: (value: T) => void, promiseCtor: PromiseConstructorLike): Promise<void>;\n\n  forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise<void> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor<void>((resolve, reject) => {\n      const subscriber = new SafeSubscriber<T>({\n        next: (value) => {\n          try {\n            next(value);\n          } catch (err) {\n            reject(err);\n            subscriber.unsubscribe();\n          }\n        },\n        error: reject,\n        complete: resolve,\n      });\n      this.subscribe(subscriber);\n    }) as Promise<void>;\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    return this.source?.subscribe(subscriber);\n  }\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>;\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>;\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>;\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>;\n  pipe<A, B, C, D>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>\n  ): Observable<D>;\n  pipe<A, B, C, D, E>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>\n  ): Observable<E>;\n  pipe<A, B, C, D, E, F>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>\n  ): Observable<F>;\n  pipe<A, B, C, D, E, F, G>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>\n  ): Observable<G>;\n  pipe<A, B, C, D, E, F, G, H>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>\n  ): Observable<H>;\n  pipe<A, B, C, D, E, F, G, H, I>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>,\n    op9: OperatorFunction<H, I>\n  ): Observable<I>;\n  pipe<A, B, C, D, E, F, G, H, I>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>,\n    op9: OperatorFunction<H, I>,\n    ...operations: OperatorFunction<any, any>[]\n  ): Observable<unknown>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * ## Example\n   *\n   * ```ts\n   * import { interval, filter, map, scan } from 'rxjs';\n   *\n   * interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x));\n   * ```\n   */\n  pipe(...operations: OperatorFunction<any, any>[]): Observable<any> {\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(): Promise<T | undefined>;\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(PromiseCtor: typeof Promise): Promise<T | undefined>;\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(PromiseCtor: PromiseConstructorLike): Promise<T | undefined>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Subscribe to this Observable and get a Promise resolving on\n   * `complete` with the last emission (if any).\n   *\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\n   * observable does not complete, you will end up with a promise that is hung up, and\n   * potentially all of the state of an async function hanging out in memory. To avoid\n   * this situation, look into adding something like {@link timeout}, {@link take},\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\n   *\n   * @method toPromise\n   * @param [promiseCtor] a constructor function used to instantiate\n   * the Promise\n   * @return A Promise that resolves with the last value emit, or\n   * rejects on an error. If there were no emissions, Promise\n   * resolves with undefined.\n   * @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise\n   */\n  toPromise(promiseCtor?: PromiseConstructorLike): Promise<T | undefined> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor((resolve, reject) => {\n      let value: T | undefined;\n      this.subscribe(\n        (x: T) => (value = x),\n        (err: any) => reject(err),\n        () => resolve(value)\n      );\n    }) as Promise<T | undefined>;\n  }\n}\n\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor: PromiseConstructorLike | undefined) {\n  return promiseCtor ?? config.Promise ?? Promise;\n}\n\nfunction isObserver<T>(value: any): value is Observer<T> {\n  return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);\n}\n\nfunction isSubscriber<T>(value: any): value is Subscriber<T> {\n  return (value && value instanceof Subscriber) || (isObserver(value) && isSubscription(value));\n}\n", "import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../types';\nimport { isFunction } from './isFunction';\n\n/**\n * Used to determine if an object is an Observable with a lift function.\n */\nexport function hasLift(source: any): source is { lift: InstanceType<typeof Observable>['lift'] } {\n  return isFunction(source?.lift);\n}\n\n/**\n * Creates an `OperatorFunction`. Used to define operators throughout the library in a concise way.\n * @param init The logic to connect the liftedSource to the subscriber at the moment of subscription.\n */\nexport function operate<T, R>(\n  init: (liftedSource: Observable<T>, subscriber: Subscriber<R>) => (() => void) | void\n): OperatorFunction<T, R> {\n  return (source: Observable<T>) => {\n    if (hasLift(source)) {\n      return source.lift(function (this: Subscriber<R>, liftedSource: Observable<T>) {\n        try {\n          return init(liftedSource, this);\n        } catch (err) {\n          this.error(err);\n        }\n      });\n    }\n    throw new TypeError('Unable to lift unknown Observable type');\n  };\n}\n", "import { Subscriber } from '../Subscriber';\n\n/**\n * Creates an instance of an `OperatorSubscriber`.\n * @param destination The downstream subscriber.\n * @param onNext Handles next values, only called if this subscriber is not stopped or closed. Any\n * error that occurs in this function is caught and sent to the `error` method of this subscriber.\n * @param onError Handles errors from the subscription, any errors that occur in this handler are caught\n * and send to the `destination` error handler.\n * @param onComplete Handles completion notification from the subscription. Any errors that occur in\n * this handler are sent to the `destination` error handler.\n * @param onFinalize Additional teardown logic here. This will only be called on teardown if the\n * subscriber itself is not already closed. This is called after all other teardown logic is executed.\n */\nexport function createOperatorSubscriber<T>(\n  destination: Subscriber<any>,\n  onNext?: (value: T) => void,\n  onComplete?: () => void,\n  onError?: (err: any) => void,\n  onFinalize?: () => void\n): Subscriber<T> {\n  return new OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize);\n}\n\n/**\n * A generic helper for allowing operators to be created with a Subscriber and\n * use closures to capture necessary state from the operator function itself.\n */\nexport class OperatorSubscriber<T> extends Subscriber<T> {\n  /**\n   * Creates an instance of an `OperatorSubscriber`.\n   * @param destination The downstream subscriber.\n   * @param onNext Handles next values, only called if this subscriber is not stopped or closed. Any\n   * error that occurs in this function is caught and sent to the `error` method of this subscriber.\n   * @param onError Handles errors from the subscription, any errors that occur in this handler are caught\n   * and send to the `destination` error handler.\n   * @param onComplete Handles completion notification from the subscription. Any errors that occur in\n   * this handler are sent to the `destination` error handler.\n   * @param onFinalize Additional finalization logic here. This will only be called on finalization if the\n   * subscriber itself is not already closed. This is called after all other finalization logic is executed.\n   * @param shouldUnsubscribe An optional check to see if an unsubscribe call should truly unsubscribe.\n   * NOTE: This currently **ONLY** exists to support the strange behavior of {@link groupBy}, where unsubscription\n   * to the resulting observable does not actually disconnect from the source if there are active subscriptions\n   * to any grouped observable. (DO NOT EXPOSE OR USE EXTERNALLY!!!)\n   */\n  constructor(\n    destination: Subscriber<any>,\n    onNext?: (value: T) => void,\n    onComplete?: () => void,\n    onError?: (err: any) => void,\n    private onFinalize?: () => void,\n    private shouldUnsubscribe?: () => boolean\n  ) {\n    // It's important - for performance reasons - that all of this class's\n    // members are initialized and that they are always initialized in the same\n    // order. This will ensure that all OperatorSubscriber instances have the\n    // same hidden class in V8. This, in turn, will help keep the number of\n    // hidden classes involved in property accesses within the base class as\n    // low as possible. If the number of hidden classes involved exceeds four,\n    // the property accesses will become megamorphic and performance penalties\n    // will be incurred - i.e. inline caches won't be used.\n    //\n    // The reasons for ensuring all instances have the same hidden class are\n    // further discussed in this blog post from Benedikt Meurer:\n    // https://benediktmeurer.de/2018/03/23/impact-of-polymorphism-on-component-based-frameworks-like-react/\n    super(destination);\n    this._next = onNext\n      ? function (this: OperatorSubscriber<T>, value: T) {\n          try {\n            onNext(value);\n          } catch (err) {\n            destination.error(err);\n          }\n        }\n      : super._next;\n    this._error = onError\n      ? function (this: OperatorSubscriber<T>, err: any) {\n          try {\n            onError(err);\n          } catch (err) {\n            // Send any errors that occur down stream.\n            destination.error(err);\n          } finally {\n            // Ensure finalization.\n            this.unsubscribe();\n          }\n        }\n      : super._error;\n    this._complete = onComplete\n      ? function (this: OperatorSubscriber<T>) {\n          try {\n            onComplete();\n          } catch (err) {\n            // Send any errors that occur down stream.\n            destination.error(err);\n          } finally {\n            // Ensure finalization.\n            this.unsubscribe();\n          }\n        }\n      : super._complete;\n  }\n\n  unsubscribe() {\n    if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {\n      const { closed } = this;\n      super.unsubscribe();\n      // Execute additional teardown if we have any and we didn't already do so.\n      !closed && this.onFinalize?.();\n    }\n  }\n}\n", "import { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Make a {@link ConnectableObservable} behave like a ordinary observable and automates the way\n * you can connect to it.\n *\n * Internally it counts the subscriptions to the observable and subscribes (only once) to the source if\n * the number of subscriptions is larger than 0. If the number of subscriptions is smaller than 1, it\n * unsubscribes from the source. This way you can make sure that everything before the *published*\n * refCount has only a single subscription independently of the number of subscribers to the target\n * observable.\n *\n * Note that using the {@link share} operator is exactly the same as using the `multicast(() => new Subject())` operator\n * (making the observable hot) and the *refCount* operator in a sequence.\n *\n * ![](refCount.png)\n *\n * ## Example\n *\n * In the following example there are two intervals turned into connectable observables\n * by using the *publish* operator. The first one uses the *refCount* operator, the\n * second one does not use it. You will notice that a connectable observable does nothing\n * until you call its connect function.\n *\n * ```ts\n * import { interval, tap, publish, refCount } from 'rxjs';\n *\n * // Turn the interval observable into a ConnectableObservable (hot)\n * const refCountInterval = interval(400).pipe(\n *   tap(num => console.log(`refCount ${ num }`)),\n *   publish(),\n *   refCount()\n * );\n *\n * const publishedInterval = interval(400).pipe(\n *   tap(num => console.log(`publish ${ num }`)),\n *   publish()\n * );\n *\n * refCountInterval.subscribe();\n * refCountInterval.subscribe();\n * // 'refCount 0' -----> 'refCount 1' -----> etc\n * // All subscriptions will receive the same value and the tap (and\n * // every other operator) before the `publish` operator will be executed\n * // only once per event independently of the number of subscriptions.\n *\n * publishedInterval.subscribe();\n * // Nothing happens until you call .connect() on the observable.\n * ```\n *\n * @return A function that returns an Observable that automates the connection\n * to ConnectableObservable.\n * @see {@link ConnectableObservable}\n * @see {@link share}\n * @see {@link publish}\n * @deprecated Replaced with the {@link share} operator. How `share` is used\n * will depend on the connectable observable you created just prior to the\n * `refCount` operator.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function refCount<T>(): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let connection: Subscription | null = null;\n\n    (source as any)._refCount++;\n\n    const refCounter = createOperatorSubscriber(subscriber, undefined, undefined, undefined, () => {\n      if (!source || (source as any)._refCount <= 0 || 0 < --(source as any)._refCount) {\n        connection = null;\n        return;\n      }\n\n      ///\n      // Compare the local RefCountSubscriber's connection Subscription to the\n      // connection Subscription on the shared ConnectableObservable. In cases\n      // where the ConnectableObservable source synchronously emits values, and\n      // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n      // execution continues to here before the RefCountOperator has a chance to\n      // supply the RefCountSubscriber with the shared connection Subscription.\n      // For example:\n      // ```\n      // range(0, 10).pipe(\n      //   publish(),\n      //   refCount(),\n      //   take(5),\n      // )\n      // .subscribe();\n      // ```\n      // In order to account for this case, RefCountSubscriber should only dispose\n      // the ConnectableObservable's shared connection Subscription if the\n      // connection Subscription exists, *and* either:\n      //   a. RefCountSubscriber doesn't have a reference to the shared connection\n      //      Subscription yet, or,\n      //   b. RefCountSubscriber's connection Subscription reference is identical\n      //      to the shared connection Subscription\n      ///\n\n      const sharedConnection = (source as any)._connection;\n      const conn = connection;\n      connection = null;\n\n      if (sharedConnection && (!conn || sharedConnection === conn)) {\n        sharedConnection.unsubscribe();\n      }\n\n      subscriber.unsubscribe();\n    });\n\n    source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      connection = (source as ConnectableObservable<T>).connect();\n    }\n  });\n}\n", "import { Subject } from '../Subject';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { hasLift } from '../util/lift';\n\n/**\n * @class ConnectableObservable<T>\n * @deprecated Will be removed in v8. Use {@link connectable} to create a connectable observable.\n * If you are using the `refCount` method of `ConnectableObservable`, use the {@link share} operator\n * instead.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport class ConnectableObservable<T> extends Observable<T> {\n  protected _subject: Subject<T> | null = null;\n  protected _refCount: number = 0;\n  protected _connection: Subscription | null = null;\n\n  /**\n   * @param source The source observable\n   * @param subjectFactory The factory that creates the subject used internally.\n   * @deprecated Will be removed in v8. Use {@link connectable} to create a connectable observable.\n   * `new ConnectableObservable(source, factory)` is equivalent to\n   * `connectable(source, { connector: factory })`.\n   * When the `refCount()` method is needed, the {@link share} operator should be used instead:\n   * `new ConnectableObservable(source, factory).refCount()` is equivalent to\n   * `source.pipe(share({ connector: factory }))`.\n   * Details: https://rxjs.dev/deprecations/multicasting\n   */\n  constructor(public source: Observable<T>, protected subjectFactory: () => Subject<T>) {\n    super();\n    // If we have lift, monkey patch that here. This is done so custom observable\n    // types will compose through multicast. Otherwise the resulting observable would\n    // simply be an instance of `ConnectableObservable`.\n    if (hasLift(source)) {\n      this.lift = source.lift;\n    }\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>) {\n    return this.getSubject().subscribe(subscriber);\n  }\n\n  protected getSubject(): Subject<T> {\n    const subject = this._subject;\n    if (!subject || subject.isStopped) {\n      this._subject = this.subjectFactory();\n    }\n    return this._subject!;\n  }\n\n  protected _teardown() {\n    this._refCount = 0;\n    const { _connection } = this;\n    this._subject = this._connection = null;\n    _connection?.unsubscribe();\n  }\n\n  /**\n   * @deprecated {@link ConnectableObservable} will be removed in v8. Use {@link connectable} instead.\n   * Details: https://rxjs.dev/deprecations/multicasting\n   */\n  connect(): Subscription {\n    let connection = this._connection;\n    if (!connection) {\n      connection = this._connection = new Subscription();\n      const subject = this.getSubject();\n      connection.add(\n        this.source.subscribe(\n          createOperatorSubscriber(\n            subject as any,\n            undefined,\n            () => {\n              this._teardown();\n              subject.complete();\n            },\n            (err) => {\n              this._teardown();\n              subject.error(err);\n            },\n            () => this._teardown()\n          )\n        )\n      );\n\n      if (connection.closed) {\n        this._connection = null;\n        connection = Subscription.EMPTY;\n      }\n    }\n    return connection;\n  }\n\n  /**\n   * @deprecated {@link ConnectableObservable} will be removed in v8. Use the {@link share} operator instead.\n   * Details: https://rxjs.dev/deprecations/multicasting\n   */\n  refCount(): Observable<T> {\n    return higherOrderRefCount()(this) as Observable<T>;\n  }\n}\n", "import { TimestampProvider } from '../types';\n\ninterface PerformanceTimestampProvider extends TimestampProvider {\n  delegate: TimestampProvider | undefined;\n}\n\nexport const performanceTimestampProvider: PerformanceTimestampProvider = {\n  now() {\n    // Use the variable rather than `this` so that the function can be called\n    // without being bound to the provider.\n    return (performanceTimestampProvider.delegate || performance).now();\n  },\n  delegate: undefined,\n};\n", "import { Subscription } from '../Subscription';\n\ninterface AnimationFrameProvider {\n  schedule(callback: FrameRequestCallback): Subscription;\n  requestAnimationFrame: typeof requestAnimationFrame;\n  cancelAnimationFrame: typeof cancelAnimationFrame;\n  delegate:\n    | {\n        requestAnimationFrame: typeof requestAnimationFrame;\n        cancelAnimationFrame: typeof cancelAnimationFrame;\n      }\n    | undefined;\n}\n\nexport const animationFrameProvider: AnimationFrameProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  schedule(callback) {\n    let request = requestAnimationFrame;\n    let cancel: typeof cancelAnimationFrame | undefined = cancelAnimationFrame;\n    const { delegate } = animationFrameProvider;\n    if (delegate) {\n      request = delegate.requestAnimationFrame;\n      cancel = delegate.cancelAnimationFrame;\n    }\n    const handle = request((timestamp) => {\n      // Clear the cancel function. The request has been fulfilled, so\n      // attempting to cancel the request upon unsubscription would be\n      // pointless.\n      cancel = undefined;\n      callback(timestamp);\n    });\n    return new Subscription(() => cancel?.(handle));\n  },\n  requestAnimationFrame(...args) {\n    const { delegate } = animationFrameProvider;\n    return (delegate?.requestAnimationFrame || requestAnimationFrame)(...args);\n  },\n  cancelAnimationFrame(...args) {\n    const { delegate } = animationFrameProvider;\n    return (delegate?.cancelAnimationFrame || cancelAnimationFrame)(...args);\n  },\n  delegate: undefined,\n};\n", "import { Observable } from '../../Observable';\nimport { TimestampProvider } from '../../types';\nimport { performanceTimestampProvider } from '../../scheduler/performanceTimestampProvider';\nimport { animationFrameProvider } from '../../scheduler/animationFrameProvider';\n\n/**\n * An observable of animation frames\n *\n * Emits the amount of time elapsed since subscription and the timestamp on each animation frame.\n * Defaults to milliseconds provided to the requestAnimationFrame's callback. Does not end on its own.\n *\n * Every subscription will start a separate animation loop. Since animation frames are always scheduled\n * by the browser to occur directly before a repaint, scheduling more than one animation frame synchronously\n * should not be much different or have more overhead than looping over an array of events during\n * a single animation frame. However, if for some reason the developer would like to ensure the\n * execution of animation-related handlers are all executed during the same task by the engine,\n * the `share` operator can be used.\n *\n * This is useful for setting up animations with RxJS.\n *\n * ## Examples\n *\n * Tweening a div to move it on the screen\n *\n * ```ts\n * import { animationFrames, map, takeWhile, endWith } from 'rxjs';\n *\n * function tween(start: number, end: number, duration: number) {\n *   const diff = end - start;\n *   return animationFrames().pipe(\n *     // Figure out what percentage of time has passed\n *     map(({ elapsed }) => elapsed / duration),\n *     // Take the vector while less than 100%\n *     takeWhile(v => v < 1),\n *     // Finish with 100%\n *     endWith(1),\n *     // Calculate the distance traveled between start and end\n *     map(v => v * diff + start)\n *   );\n * }\n *\n * // Setup a div for us to move around\n * const div = document.createElement('div');\n * document.body.appendChild(div);\n * div.style.position = 'absolute';\n * div.style.width = '40px';\n * div.style.height = '40px';\n * div.style.backgroundColor = 'lime';\n * div.style.transform = 'translate3d(10px, 0, 0)';\n *\n * tween(10, 200, 4000).subscribe(x => {\n *   div.style.transform = `translate3d(${ x }px, 0, 0)`;\n * });\n * ```\n *\n * Providing a custom timestamp provider\n *\n * ```ts\n * import { animationFrames, TimestampProvider } from 'rxjs';\n *\n * // A custom timestamp provider\n * let now = 0;\n * const customTSProvider: TimestampProvider = {\n *   now() { return now++; }\n * };\n *\n * const source$ = animationFrames(customTSProvider);\n *\n * // Log increasing numbers 0...1...2... on every animation frame.\n * source$.subscribe(({ elapsed }) => console.log(elapsed));\n * ```\n *\n * @param timestampProvider An object with a `now` method that provides a numeric timestamp\n */\nexport function animationFrames(timestampProvider?: TimestampProvider) {\n  return timestampProvider ? animationFramesFactory(timestampProvider) : DEFAULT_ANIMATION_FRAMES;\n}\n\n/**\n * Does the work of creating the observable for `animationFrames`.\n * @param timestampProvider The timestamp provider to use to create the observable\n */\nfunction animationFramesFactory(timestampProvider?: TimestampProvider) {\n  return new Observable<{ timestamp: number; elapsed: number }>((subscriber) => {\n    // If no timestamp provider is specified, use performance.now() - as it\n    // will return timestamps 'compatible' with those passed to the run\n    // callback and won't be affected by NTP adjustments, etc.\n    const provider = timestampProvider || performanceTimestampProvider;\n\n    // Capture the start time upon subscription, as the run callback can remain\n    // queued for a considerable period of time and the elapsed time should\n    // represent the time elapsed since subscription - not the time since the\n    // first rendered animation frame.\n    const start = provider.now();\n\n    let id = 0;\n    const run = () => {\n      if (!subscriber.closed) {\n        id = animationFrameProvider.requestAnimationFrame((timestamp: DOMHighResTimeStamp | number) => {\n          id = 0;\n          // Use the provider's timestamp to calculate the elapsed time. Note that\n          // this means - if the caller hasn't passed a provider - that\n          // performance.now() will be used instead of the timestamp that was\n          // passed to the run callback. The reason for this is that the timestamp\n          // passed to the callback can be earlier than the start time, as it\n          // represents the time at which the browser decided it would render any\n          // queued frames - and that time can be earlier the captured start time.\n          const now = provider.now();\n          subscriber.next({\n            timestamp: timestampProvider ? now : timestamp,\n            elapsed: now - start,\n          });\n          run();\n        });\n      }\n    };\n\n    run();\n\n    return () => {\n      if (id) {\n        animationFrameProvider.cancelAnimationFrame(id);\n      }\n    };\n  });\n}\n\n/**\n * In the common case, where the timestamp provided by the rAF API is used,\n * we use this shared observable to reduce overhead.\n */\nconst DEFAULT_ANIMATION_FRAMES = animationFramesFactory();\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface ObjectUnsubscribedError extends Error {}\n\nexport interface ObjectUnsubscribedErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): ObjectUnsubscribedError;\n}\n\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport const ObjectUnsubscribedError: ObjectUnsubscribedErrorCtor = createErrorClass(\n  (_super) =>\n    function ObjectUnsubscribedErrorImpl(this: any) {\n      _super(this);\n      this.name = 'ObjectUnsubscribedError';\n      this.message = 'object unsubscribed';\n    }\n);\n", "import { Operator } from './Operator';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription, EMPTY_SUBSCRIPTION } from './Subscription';\nimport { Observer, SubscriptionLike, TeardownLogic } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { arrRemove } from './util/arrRemove';\nimport { errorContext } from './util/errorContext';\n\n/**\n * A Subject is a special type of Observable that allows values to be\n * multicasted to many Observers. Subjects are like EventEmitters.\n *\n * Every Subject is an Observable and an Observer. You can subscribe to a\n * Subject, and you can call next to feed values as well as error and complete.\n */\nexport class Subject<T> extends Observable<T> implements SubscriptionLike {\n  closed = false;\n\n  private currentObservers: Observer<T>[] | null = null;\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  observers: Observer<T>[] = [];\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  isStopped = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  hasError = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  thrownError: any = null;\n\n  /**\n   * Creates a \"subject\" by basically gluing an observer to an observable.\n   *\n   * @nocollapse\n   * @deprecated Recommended you do not use. Will be removed at some point in the future. Plans for replacement still under discussion.\n   */\n  static create: (...args: any[]) => any = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  };\n\n  constructor() {\n    // NOTE: This must be here to obscure Observable's constructor.\n    super();\n  }\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = operator as any;\n    return subject as any;\n  }\n\n  /** @internal */\n  protected _throwIfClosed() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n  }\n\n  next(value: T) {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        if (!this.currentObservers) {\n          this.currentObservers = Array.from(this.observers);\n        }\n        for (const observer of this.currentObservers) {\n          observer.next(value);\n        }\n      }\n    });\n  }\n\n  error(err: any) {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        this.hasError = this.isStopped = true;\n        this.thrownError = err;\n        const { observers } = this;\n        while (observers.length) {\n          observers.shift()!.error(err);\n        }\n      }\n    });\n  }\n\n  complete() {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        this.isStopped = true;\n        const { observers } = this;\n        while (observers.length) {\n          observers.shift()!.complete();\n        }\n      }\n    });\n  }\n\n  unsubscribe() {\n    this.isStopped = this.closed = true;\n    this.observers = this.currentObservers = null!;\n  }\n\n  get observed() {\n    return this.observers?.length > 0;\n  }\n\n  /** @internal */\n  protected _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    this._throwIfClosed();\n    return super._trySubscribe(subscriber);\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    this._throwIfClosed();\n    this._checkFinalizedStatuses(subscriber);\n    return this._innerSubscribe(subscriber);\n  }\n\n  /** @internal */\n  protected _innerSubscribe(subscriber: Subscriber<any>) {\n    const { hasError, isStopped, observers } = this;\n    if (hasError || isStopped) {\n      return EMPTY_SUBSCRIPTION;\n    }\n    this.currentObservers = null;\n    observers.push(subscriber);\n    return new Subscription(() => {\n      this.currentObservers = null;\n      arrRemove(observers, subscriber);\n    });\n  }\n\n  /** @internal */\n  protected _checkFinalizedStatuses(subscriber: Subscriber<any>) {\n    const { hasError, thrownError, isStopped } = this;\n    if (hasError) {\n      subscriber.error(thrownError);\n    } else if (isStopped) {\n      subscriber.complete();\n    }\n  }\n\n  /**\n   * Creates a new Observable with this Subject as the source. You can do this\n   * to create custom Observer-side logic of the Subject and conceal it from\n   * code that uses the Observable.\n   * @return {Observable} Observable that the Subject casts to\n   */\n  asObservable(): Observable<T> {\n    const observable: any = new Observable<T>();\n    observable.source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(\n    /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n    public destination?: Observer<T>,\n    source?: Observable<T>\n  ) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    this.destination?.next?.(value);\n  }\n\n  error(err: any) {\n    this.destination?.error?.(err);\n  }\n\n  complete() {\n    this.destination?.complete?.();\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    return this.source?.subscribe(subscriber) ?? EMPTY_SUBSCRIPTION;\n  }\n}\n", "import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\n\n/**\n * A variant of Subject that requires an initial value and emits its current\n * value whenever it is subscribed to.\n *\n * @class BehaviorSubject<T>\n */\nexport class BehaviorSubject<T> extends Subject<T> {\n  constructor(private _value: T) {\n    super();\n  }\n\n  get value(): T {\n    return this.getValue();\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    const subscription = super._subscribe(subscriber);\n    !subscription.closed && subscriber.next(this._value);\n    return subscription;\n  }\n\n  getValue(): T {\n    const { hasError, thrownError, _value } = this;\n    if (hasError) {\n      throw thrownError;\n    }\n    this._throwIfClosed();\n    return _value;\n  }\n\n  next(value: T): void {\n    super.next((this._value = value));\n  }\n}\n", "import { TimestampProvider } from '../types';\n\ninterface DateTimestampProvider extends TimestampProvider {\n  delegate: TimestampProvider | undefined;\n}\n\nexport const dateTimestampProvider: DateTimestampProvider = {\n  now() {\n    // Use the variable rather than `this` so that the function can be called\n    // without being bound to the provider.\n    return (dateTimestampProvider.delegate || Date).now();\n  },\n  delegate: undefined,\n};\n", "import { Subject } from './Subject';\nimport { TimestampProvider } from './types';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\n\n/**\n * A variant of {@link Subject} that \"replays\" old values to new subscribers by emitting them when they first subscribe.\n *\n * `ReplaySubject` has an internal buffer that will store a specified number of values that it has observed. Like `Subject`,\n * `ReplaySubject` \"observes\" values by having them passed to its `next` method. When it observes a value, it will store that\n * value for a time determined by the configuration of the `ReplaySubject`, as passed to its constructor.\n *\n * When a new subscriber subscribes to the `ReplaySubject` instance, it will synchronously emit all values in its buffer in\n * a First-In-First-Out (FIFO) manner. The `ReplaySubject` will also complete, if it has observed completion; and it will\n * error if it has observed an error.\n *\n * There are two main configuration items to be concerned with:\n *\n * 1. `bufferSize` - This will determine how many items are stored in the buffer, defaults to infinite.\n * 2. `windowTime` - The amount of time to hold a value in the buffer before removing it from the buffer.\n *\n * Both configurations may exist simultaneously. So if you would like to buffer a maximum of 3 values, as long as the values\n * are less than 2 seconds old, you could do so with a `new ReplaySubject(3, 2000)`.\n *\n * ### Differences with BehaviorSubject\n *\n * `BehaviorSubject` is similar to `new ReplaySubject(1)`, with a couple of exceptions:\n *\n * 1. `BehaviorSubject` comes \"primed\" with a single value upon construction.\n * 2. `ReplaySubject` will replay values, even after observing an error, where `BehaviorSubject` will not.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n * @see {@link shareReplay}\n */\nexport class ReplaySubject<T> extends Subject<T> {\n  private _buffer: (T | number)[] = [];\n  private _infiniteTimeWindow = true;\n\n  /**\n   * @param bufferSize The size of the buffer to replay on subscription\n   * @param windowTime The amount of time the buffered items will stay buffered\n   * @param timestampProvider An object with a `now()` method that provides the current timestamp. This is used to\n   * calculate the amount of time something has been buffered.\n   */\n  constructor(\n    private _bufferSize = Infinity,\n    private _windowTime = Infinity,\n    private _timestampProvider: TimestampProvider = dateTimestampProvider\n  ) {\n    super();\n    this._infiniteTimeWindow = _windowTime === Infinity;\n    this._bufferSize = Math.max(1, _bufferSize);\n    this._windowTime = Math.max(1, _windowTime);\n  }\n\n  next(value: T): void {\n    const { isStopped, _buffer, _infiniteTimeWindow, _timestampProvider, _windowTime } = this;\n    if (!isStopped) {\n      _buffer.push(value);\n      !_infiniteTimeWindow && _buffer.push(_timestampProvider.now() + _windowTime);\n    }\n    this._trimBuffer();\n    super.next(value);\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    this._throwIfClosed();\n    this._trimBuffer();\n\n    const subscription = this._innerSubscribe(subscriber);\n\n    const { _infiniteTimeWindow, _buffer } = this;\n    // We use a copy here, so reentrant code does not mutate our array while we're\n    // emitting it to a new subscriber.\n    const copy = _buffer.slice();\n    for (let i = 0; i < copy.length && !subscriber.closed; i += _infiniteTimeWindow ? 1 : 2) {\n      subscriber.next(copy[i] as T);\n    }\n\n    this._checkFinalizedStatuses(subscriber);\n\n    return subscription;\n  }\n\n  private _trimBuffer() {\n    const { _bufferSize, _timestampProvider, _buffer, _infiniteTimeWindow } = this;\n    // If we don't have an infinite buffer size, and we're over the length,\n    // use splice to truncate the old buffer values off. Note that we have to\n    // double the size for instances where we're not using an infinite time window\n    // because we're storing the values and the timestamps in the same array.\n    const adjustedBufferSize = (_infiniteTimeWindow ? 1 : 2) * _bufferSize;\n    _bufferSize < Infinity && adjustedBufferSize < _buffer.length && _buffer.splice(0, _buffer.length - adjustedBufferSize);\n\n    // Now, if we're not in an infinite time window, remove all values where the time is\n    // older than what is allowed.\n    if (!_infiniteTimeWindow) {\n      const now = _timestampProvider.now();\n      let last = 0;\n      // Search the array for the first timestamp that isn't expired and\n      // truncate the buffer up to that point.\n      for (let i = 1; i < _buffer.length && (_buffer[i] as number) <= now; i += 2) {\n        last = i;\n      }\n      last && _buffer.splice(0, last + 1);\n    }\n  }\n}\n", "import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\n\n/**\n * A variant of Subject that only emits a value when it completes. It will emit\n * its latest value to all its observers on completion.\n *\n * @class AsyncSubject<T>\n */\nexport class AsyncSubject<T> extends Subject<T> {\n  private _value: T | null = null;\n  private _hasValue = false;\n  private _isComplete = false;\n\n  /** @internal */\n  protected _checkFinalizedStatuses(subscriber: Subscriber<T>) {\n    const { hasError, _hasValue, _value, thrownError, isStopped, _isComplete } = this;\n    if (hasError) {\n      subscriber.error(thrownError);\n    } else if (isStopped || _isComplete) {\n      _hasValue && subscriber.next(_value!);\n      subscriber.complete();\n    }\n  }\n\n  next(value: T): void {\n    if (!this.isStopped) {\n      this._value = value;\n      this._hasValue = true;\n    }\n  }\n\n  complete(): void {\n    const { _hasValue, _value, _isComplete } = this;\n    if (!_isComplete) {\n      this._isComplete = true;\n      _hasValue && super.next(_value!);\n      super.complete();\n    }\n  }\n}\n", "import { Scheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\nimport { SchedulerAction } from '../types';\n\n/**\n * A unit of work to be executed in a `scheduler`. An action is typically\n * created from within a {@link SchedulerLike} and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport class Action<T> extends Subscription {\n  constructor(scheduler: Scheduler, work: (this: SchedulerAction<T>, state?: T) => void) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent {@link SchedulerLike} for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n", "import type { TimerHandle } from './timerHandle';\ntype SetIntervalFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;\ntype ClearIntervalFunction = (handle: TimerHandle) => void;\n\ninterface IntervalProvider {\n  setInterval: SetIntervalFunction;\n  clearInterval: ClearIntervalFunction;\n  delegate:\n    | {\n        setInterval: SetIntervalFunction;\n        clearInterval: ClearIntervalFunction;\n      }\n    | undefined;\n}\n\nexport const intervalProvider: IntervalProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setInterval(handler: () => void, timeout?: number, ...args) {\n    const { delegate } = intervalProvider;\n    if (delegate?.setInterval) {\n      return delegate.setInterval(handler, timeout, ...args);\n    }\n    return setInterval(handler, timeout, ...args);\n  },\n  clearInterval(handle) {\n    const { delegate } = intervalProvider;\n    return (delegate?.clearInterval || clearInterval)(handle as any);\n  },\n  delegate: undefined,\n};\n", "import { Action } from './Action';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nimport { intervalProvider } from './intervalProvider';\nimport { arrRemove } from '../util/arrRemove';\nimport { TimerHandle } from './timerHandle';\n\nexport class AsyncAction<T> extends Action<T> {\n  public id: TimerHandle | undefined;\n  public state?: T;\n  // @ts-ignore: Property has no initializer and is not definitely assigned\n  public delay: number;\n  protected pending: boolean = false;\n\n  constructor(protected scheduler: AsyncScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (this.closed) {\n      return this;\n    }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id ?? this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(scheduler: AsyncScheduler, _id?: TimerHandle, delay: number = 0): TimerHandle {\n    return intervalProvider.setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(_scheduler: AsyncScheduler, id?: TimerHandle, delay: number | null = 0): TimerHandle | undefined {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay != null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n    if (id != null) {\n      intervalProvider.clearInterval(id);\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n  public execute(state: T, delay: number): any {\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, _delay: number): any {\n    let errored: boolean = false;\n    let errorValue: any;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      // HACK: Since code elsewhere is relying on the \"truthiness\" of the\n      // return here, we can't have it return \"\" or 0 or false.\n      // TODO: Clean this up when we refactor schedulers mid-version-8 or so.\n      errorValue = e ? e : new Error('Scheduled action threw falsy error');\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  unsubscribe() {\n    if (!this.closed) {\n      const { id, scheduler } = this;\n      const { actions } = scheduler;\n\n      this.work = this.state = this.scheduler = null!;\n      this.pending = false;\n\n      arrRemove(actions, this);\n      if (id != null) {\n        this.id = this.recycleAsyncId(scheduler, id, null);\n      }\n\n      this.delay = null!;\n      super.unsubscribe();\n    }\n  }\n}\n", "let nextHandle = 1;\n// The promise needs to be created lazily otherwise it won't be patched by Zones\nlet resolved: Promise<any>;\nconst activeHandles: { [key: number]: any } = {};\n\n/**\n * Finds the handle in the list of active handles, and removes it.\n * Returns `true` if found, `false` otherwise. Used both to clear\n * Immediate scheduled tasks, and to identify if a task should be scheduled.\n */\nfunction findAndClearHandle(handle: number): boolean {\n  if (handle in activeHandles) {\n    delete activeHandles[handle];\n    return true;\n  }\n  return false;\n}\n\n/**\n * Helper functions to schedule and unschedule microtasks.\n */\nexport const Immediate = {\n  setImmediate(cb: () => void): number {\n    const handle = nextHandle++;\n    activeHandles[handle] = true;\n    if (!resolved) {\n      resolved = Promise.resolve();\n    }\n    resolved.then(() => findAndClearHandle(handle) && cb());\n    return handle;\n  },\n\n  clearImmediate(handle: number): void {\n    findAndClearHandle(handle);\n  },\n};\n\n/**\n * Used for internal testing purposes only. Do not export from library.\n */\nexport const TestTools = {\n  pending() {\n    return Object.keys(activeHandles).length;\n  }\n};\n", "import { Immediate } from '../util/Immediate';\nimport type { TimerHandle } from './timerHandle';\nconst { setImmediate, clearImmediate } = Immediate;\n\ntype SetImmediateFunction = (handler: () => void, ...args: any[]) => TimerHandle;\ntype ClearImmediateFunction = (handle: TimerHandle) => void;\n\ninterface ImmediateProvider {\n  setImmediate: SetImmediateFunction;\n  clearImmediate: ClearImmediateFunction;\n  delegate:\n    | {\n        setImmediate: SetImmediateFunction;\n        clearImmediate: ClearImmediateFunction;\n      }\n    | undefined;\n}\n\nexport const immediateProvider: ImmediateProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setImmediate(...args) {\n    const { delegate } = immediateProvider;\n    return (delegate?.setImmediate || setImmediate)(...args);\n  },\n  clearImmediate(handle) {\n    const { delegate } = immediateProvider;\n    return (delegate?.clearImmediate || clearImmediate)(handle as any);\n  },\n  delegate: undefined,\n};\n", "import { AsyncAction } from './AsyncAction';\nimport { AsapScheduler } from './AsapScheduler';\nimport { SchedulerAction } from '../types';\nimport { immediateProvider } from './immediateProvider';\nimport { TimerHandle } from './timerHandle';\n\nexport class AsapAction<T> extends AsyncAction<T> {\n  constructor(protected scheduler: AsapScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AsapScheduler, id?: TimerHandle, delay: number = 0): TimerHandle {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If a microtask has already been scheduled, don't schedule another\n    // one. If a microtask hasn't been scheduled yet, schedule one now. Return\n    // the current scheduled microtask id.\n    return scheduler._scheduled || (scheduler._scheduled = immediateProvider.setImmediate(scheduler.flush.bind(scheduler, undefined)));\n  }\n\n  protected recycleAsyncId(scheduler: AsapScheduler, id?: TimerHandle, delay: number = 0): TimerHandle | undefined {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if (delay != null ? delay > 0 : this.delay > 0) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue has no remaining actions with the same async id,\n    // cancel the requested microtask and set the scheduled flag to undefined\n    // so the next AsapAction will request its own.\n    const { actions } = scheduler;\n    if (id != null && actions[actions.length - 1]?.id !== id) {\n      immediateProvider.clearImmediate(id);\n      if (scheduler._scheduled === id) {\n        scheduler._scheduled = undefined;\n      }\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n", "import { Action } from './scheduler/Action';\nimport { Subscription } from './Subscription';\nimport { SchedulerLike, SchedulerAction } from './types';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\n\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an `Action`.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n * @deprecated Scheduler is an internal implementation detail of RxJS, and\n * should not be used directly. Rather, create your own class and implement\n * {@link SchedulerLike}. Will be made internal in v8.\n */\nexport class Scheduler implements SchedulerLike {\n  public static now: () => number = dateTimestampProvider.now;\n\n  constructor(private schedulerActionCtor: typeof Action, now: () => number = Scheduler.now) {\n    this.now = now;\n  }\n\n  /**\n   * A getter method that returns a number representing the current time\n   * (at the time this function was called) according to the scheduler's own\n   * internal clock.\n   * @return {number} A number that represents the current time. May or may not\n   * have a relation to wall-clock time. May or may not refer to a time unit\n   * (e.g. milliseconds).\n   */\n  public now: () => number;\n\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param {function(state: ?T): ?Subscription} work A function representing a\n   * task, or some unit of work to be executed by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler itself.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @return {Subscription} A subscription in order to be able to unsubscribe\n   * the scheduled work.\n   */\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    return new this.schedulerActionCtor<T>(this, work).schedule(state, delay);\n  }\n}\n", "import { Scheduler } from '../Scheduler';\nimport { Action } from './Action';\nimport { AsyncAction } from './AsyncAction';\nimport { TimerHandle } from './timerHandle';\n\nexport class AsyncScheduler extends Scheduler {\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   * @internal\n   */\n  public _active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   * @internal\n   */\n  public _scheduled: TimerHandle | undefined;\n\n  constructor(SchedulerAction: typeof Action, now: () => number = Scheduler.now) {\n    super(SchedulerAction, now);\n  }\n\n  public flush(action: AsyncAction<any>): void {\n    const { actions } = this;\n\n    if (this._active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this._active = true;\n\n    do {\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    } while ((action = actions.shift()!)); // exhaust the scheduler queue\n\n    this._active = false;\n\n    if (error) {\n      while ((action = actions.shift()!)) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n", "import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AsapScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n    this._active = true;\n    // The async id that effects a call to flush is stored in _scheduled.\n    // Before executing an action, it's necessary to check the action's async\n    // id to determine whether it's supposed to be executed in the current\n    // flush.\n    // Previous implementations of this method used a count to determine this,\n    // but that was unsound, as actions that are unsubscribed - i.e. cancelled -\n    // are removed from the actions array and that can shift actions that are\n    // scheduled to be executed in a subsequent flush into positions at which\n    // they are executed within the current flush.\n    const flushId = this._scheduled;\n    this._scheduled = undefined;\n\n    const { actions } = this;\n    let error: any;\n    action = action || actions.shift()!;\n\n    do {\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    } while ((action = actions[0]) && action.id === flushId && actions.shift());\n\n    this._active = false;\n\n    if (error) {\n      while ((action = actions[0]) && action.id === flushId && actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n", "import { AsapAction } from './AsapAction';\nimport { AsapScheduler } from './AsapScheduler';\n\n/**\n *\n * Asap Scheduler\n *\n * <span class=\"informal\">Perform task as fast as it can be performed asynchronously</span>\n *\n * `asap` scheduler behaves the same as {@link asyncScheduler} scheduler when you use it to delay task\n * in time. If however you set delay to `0`, `asap` will wait for current synchronously executing\n * code to end and then it will try to execute given task as fast as possible.\n *\n * `asap` scheduler will do its best to minimize time between end of currently executing code\n * and start of scheduled task. This makes it best candidate for performing so called \"deferring\".\n * Traditionally this was achieved by calling `setTimeout(deferredTask, 0)`, but that technique involves\n * some (although minimal) unwanted delay.\n *\n * Note that using `asap` scheduler does not necessarily mean that your task will be first to process\n * after currently executing code. In particular, if some task was also scheduled with `asap` before,\n * that task will execute first. That being said, if you need to schedule task asynchronously, but\n * as soon as possible, `asap` scheduler is your best bet.\n *\n * ## Example\n * Compare async and asap scheduler<\n * ```ts\n * import { asapScheduler, asyncScheduler } from 'rxjs';\n *\n * asyncScheduler.schedule(() => console.log('async')); // scheduling 'async' first...\n * asapScheduler.schedule(() => console.log('asap'));\n *\n * // Logs:\n * // \"asap\"\n * // \"async\"\n * // ... but 'asap' goes first!\n * ```\n */\n\nexport const asapScheduler = new AsapScheduler(AsapAction);\n\n/**\n * @deprecated Renamed to {@link asapScheduler}. Will be removed in v8.\n */\nexport const asap = asapScheduler;\n", "import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asapScheduler} scheduler.\n *\n * ## Examples\n * Use async scheduler to delay task\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * const task = () => console.log('it works!');\n *\n * asyncScheduler.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n * ```\n *\n * Use async scheduler to repeat task in intervals\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * asyncScheduler.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n * ```\n */\n\nexport const asyncScheduler = new AsyncScheduler(AsyncAction);\n\n/**\n * @deprecated Renamed to {@link asyncScheduler}. Will be removed in v8.\n */\nexport const async = asyncScheduler;\n", "import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { QueueScheduler } from './QueueScheduler';\nimport { SchedulerAction } from '../types';\nimport { TimerHandle } from './timerHandle';\n\nexport class QueueAction<T> extends AsyncAction<T> {\n  constructor(protected scheduler: QueueScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (delay > 0) {\n      return super.schedule(state, delay);\n    }\n    this.delay = delay;\n    this.state = state;\n    this.scheduler.flush(this);\n    return this;\n  }\n\n  public execute(state: T, delay: number): any {\n    return delay > 0 || this.closed ? super.execute(state, delay) : this._execute(state, delay);\n  }\n\n  protected requestAsyncId(scheduler: QueueScheduler, id?: TimerHandle, delay: number = 0): TimerHandle {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n\n    if ((delay != null && delay > 0) || (delay == null && this.delay > 0)) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n\n    // Otherwise flush the scheduler starting with this action.\n    scheduler.flush(this);\n\n    // HACK: In the past, this was returning `void`. However, `void` isn't a valid\n    // `TimerHandle`, and generally the return value here isn't really used. So the\n    // compromise is to return `0` which is both \"falsy\" and a valid `TimerHandle`,\n    // as opposed to refactoring every other instanceo of `requestAsyncId`.\n    return 0;\n  }\n}\n", "import { AsyncScheduler } from './AsyncScheduler';\n\nexport class QueueScheduler extends AsyncScheduler {\n}\n", "import { QueueAction } from './QueueAction';\nimport { QueueScheduler } from './QueueScheduler';\n\n/**\n *\n * Queue Scheduler\n *\n * <span class=\"informal\">Put every next task on a queue, instead of executing it immediately</span>\n *\n * `queue` scheduler, when used with delay, behaves the same as {@link asyncScheduler} scheduler.\n *\n * When used without delay, it schedules given task synchronously - executes it right when\n * it is scheduled. However when called recursively, that is when inside the scheduled task,\n * another task is scheduled with queue scheduler, instead of executing immediately as well,\n * that task will be put on a queue and wait for current one to finish.\n *\n * This means that when you execute task with `queue` scheduler, you are sure it will end\n * before any other task scheduled with that scheduler will start.\n *\n * ## Examples\n * Schedule recursively first, then do something\n * ```ts\n * import { queueScheduler } from 'rxjs';\n *\n * queueScheduler.schedule(() => {\n *   queueScheduler.schedule(() => console.log('second')); // will not happen now, but will be put on a queue\n *\n *   console.log('first');\n * });\n *\n * // Logs:\n * // \"first\"\n * // \"second\"\n * ```\n *\n * Reschedule itself recursively\n * ```ts\n * import { queueScheduler } from 'rxjs';\n *\n * queueScheduler.schedule(function(state) {\n *   if (state !== 0) {\n *     console.log('before', state);\n *     this.schedule(state - 1); // `this` references currently executing Action,\n *                               // which we reschedule with new state\n *     console.log('after', state);\n *   }\n * }, 0, 3);\n *\n * // In scheduler that runs recursively, you would expect:\n * // \"before\", 3\n * // \"before\", 2\n * // \"before\", 1\n * // \"after\", 1\n * // \"after\", 2\n * // \"after\", 3\n *\n * // But with queue it logs:\n * // \"before\", 3\n * // \"after\", 3\n * // \"before\", 2\n * // \"after\", 2\n * // \"before\", 1\n * // \"after\", 1\n * ```\n */\n\nexport const queueScheduler = new QueueScheduler(QueueAction);\n\n/**\n * @deprecated Renamed to {@link queueScheduler}. Will be removed in v8.\n */\nexport const queue = queueScheduler;\n", "import { AsyncAction } from './AsyncAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\nimport { SchedulerAction } from '../types';\nimport { animationFrameProvider } from './animationFrameProvider';\nimport { TimerHandle } from './timerHandle';\n\nexport class AnimationFrameAction<T> extends AsyncAction<T> {\n  constructor(protected scheduler: AnimationFrameScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AnimationFrameScheduler, id?: TimerHandle, delay: number = 0): TimerHandle {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If an animation frame has already been requested, don't request another\n    // one. If an animation frame hasn't been requested yet, request one. Return\n    // the current animation frame request id.\n    return scheduler._scheduled || (scheduler._scheduled = animationFrameProvider.requestAnimationFrame(() => scheduler.flush(undefined)));\n  }\n\n  protected recycleAsyncId(scheduler: AnimationFrameScheduler, id?: TimerHandle, delay: number = 0): TimerHandle | undefined {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if (delay != null ? delay > 0 : this.delay > 0) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue has no remaining actions with the same async id,\n    // cancel the requested animation frame and set the scheduled flag to\n    // undefined so the next AnimationFrameAction will request its own.\n    const { actions } = scheduler;\n    if (id != null && actions[actions.length - 1]?.id !== id) {\n      animationFrameProvider.cancelAnimationFrame(id as number);\n      scheduler._scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n", "import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AnimationFrameScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n    this._active = true;\n    // The async id that effects a call to flush is stored in _scheduled.\n    // Before executing an action, it's necessary to check the action's async\n    // id to determine whether it's supposed to be executed in the current\n    // flush.\n    // Previous implementations of this method used a count to determine this,\n    // but that was unsound, as actions that are unsubscribed - i.e. cancelled -\n    // are removed from the actions array and that can shift actions that are\n    // scheduled to be executed in a subsequent flush into positions at which\n    // they are executed within the current flush.\n    const flushId = this._scheduled;\n    this._scheduled = undefined;\n\n    const { actions } = this;\n    let error: any;\n    action = action || actions.shift()!;\n\n    do {\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    } while ((action = actions[0]) && action.id === flushId && actions.shift());\n\n    this._active = false;\n\n    if (error) {\n      while ((action = actions[0]) && action.id === flushId && actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n", "import { AnimationFrameAction } from './AnimationFrameAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\n\n/**\n *\n * Animation Frame Scheduler\n *\n * <span class=\"informal\">Perform task when `window.requestAnimationFrame` would fire</span>\n *\n * When `animationFrame` scheduler is used with delay, it will fall back to {@link asyncScheduler} scheduler\n * behaviour.\n *\n * Without delay, `animationFrame` scheduler can be used to create smooth browser animations.\n * It makes sure scheduled task will happen just before next browser content repaint,\n * thus performing animations as efficiently as possible.\n *\n * ## Example\n * Schedule div height animation\n * ```ts\n * // html: <div style=\"background: #0ff;\"></div>\n * import { animationFrameScheduler } from 'rxjs';\n *\n * const div = document.querySelector('div');\n *\n * animationFrameScheduler.schedule(function(height) {\n *   div.style.height = height + \"px\";\n *\n *   this.schedule(height + 1);  // `this` references currently executing Action,\n *                               // which we reschedule with new state\n * }, 0, 0);\n *\n * // You will see a div element growing in height\n * ```\n */\n\nexport const animationFrameScheduler = new AnimationFrameScheduler(AnimationFrameAction);\n\n/**\n * @deprecated Renamed to {@link animationFrameScheduler}. Will be removed in v8.\n */\nexport const animationFrame = animationFrameScheduler;\n", "import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nimport { SchedulerAction } from '../types';\nimport { TimerHandle } from './timerHandle';\n\nexport class VirtualTimeScheduler extends AsyncScheduler {\n  /** @deprecated Not used in VirtualTimeScheduler directly. Will be removed in v8. */\n  static frameTimeFactor = 10;\n\n  /**\n   * The current frame for the state of the virtual scheduler instance. The difference\n   * between two \"frames\" is synonymous with the passage of \"virtual time units\". So if\n   * you record `scheduler.frame` to be `1`, then later, observe `scheduler.frame` to be at `11`,\n   * that means `10` virtual time units have passed.\n   */\n  public frame: number = 0;\n\n  /**\n   * Used internally to examine the current virtual action index being processed.\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  public index: number = -1;\n\n  /**\n   * This creates an instance of a `VirtualTimeScheduler`. Experts only. The signature of\n   * this constructor is likely to change in the long run.\n   *\n   * @param schedulerActionCtor The type of Action to initialize when initializing actions during scheduling.\n   * @param maxFrames The maximum number of frames to process before stopping. Used to prevent endless flush cycles.\n   */\n  constructor(schedulerActionCtor: typeof AsyncAction = VirtualAction as any, public maxFrames: number = Infinity) {\n    super(schedulerActionCtor, () => this.frame);\n  }\n\n  /**\n   * Prompt the Scheduler to execute all of its queued actions, therefore\n   * clearing its queue.\n   * @return {void}\n   */\n  public flush(): void {\n    const { actions, maxFrames } = this;\n    let error: any;\n    let action: AsyncAction<any> | undefined;\n\n    while ((action = actions[0]) && action.delay <= maxFrames) {\n      actions.shift();\n      this.frame = action.delay;\n\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    }\n\n    if (error) {\n      while ((action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n\nexport class VirtualAction<T> extends AsyncAction<T> {\n  protected active: boolean = true;\n\n  constructor(\n    protected scheduler: VirtualTimeScheduler,\n    protected work: (this: SchedulerAction<T>, state?: T) => void,\n    protected index: number = (scheduler.index += 1)\n  ) {\n    super(scheduler, work);\n    this.index = scheduler.index = index;\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (Number.isFinite(delay)) {\n      if (!this.id) {\n        return super.schedule(state, delay);\n      }\n      this.active = false;\n      // If an action is rescheduled, we save allocations by mutating its state,\n      // pushing it to the end of the scheduler queue, and recycling the action.\n      // But since the VirtualTimeScheduler is used for testing, VirtualActions\n      // must be immutable so they can be inspected later.\n      const action = new VirtualAction(this.scheduler, this.work);\n      this.add(action);\n      return action.schedule(state, delay);\n    } else {\n      // If someone schedules something with Infinity, it'll never happen. So we\n      // don't even schedule it.\n      return Subscription.EMPTY;\n    }\n  }\n\n  protected requestAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): TimerHandle {\n    this.delay = scheduler.frame + delay;\n    const { actions } = scheduler;\n    actions.push(this);\n    (actions as Array<VirtualAction<T>>).sort(VirtualAction.sortActions);\n    return 1;\n  }\n\n  protected recycleAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): TimerHandle | undefined {\n    return undefined;\n  }\n\n  protected _execute(state: T, delay: number): any {\n    if (this.active === true) {\n      return super._execute(state, delay);\n    }\n  }\n\n  private static sortActions<T>(a: VirtualAction<T>, b: VirtualAction<T>) {\n    if (a.delay === b.delay) {\n      if (a.index === b.index) {\n        return 0;\n      } else if (a.index > b.index) {\n        return 1;\n      } else {\n        return -1;\n      }\n    } else if (a.delay > b.delay) {\n      return 1;\n    } else {\n      return -1;\n    }\n  }\n}\n", "import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\n/**\n * A simple Observable that emits no items to the Observer and immediately\n * emits a complete notification.\n *\n * <span class=\"informal\">Just emits 'complete', and nothing else.</span>\n *\n * ![](empty.png)\n *\n * A simple Observable that only emits the complete notification. It can be used\n * for composing with other Observables, such as in a {@link mergeMap}.\n *\n * ## Examples\n *\n * Log complete notification\n *\n * ```ts\n * import { EMPTY } from 'rxjs';\n *\n * EMPTY.subscribe({\n *   next: () => console.log('Next'),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Outputs\n * // Complete!\n * ```\n *\n * Emit the number 7, then complete\n *\n * ```ts\n * import { EMPTY, startWith } from 'rxjs';\n *\n * const result = EMPTY.pipe(startWith(7));\n * result.subscribe(x => console.log(x));\n *\n * // Outputs\n * // 7\n * ```\n *\n * Map and flatten only odd numbers to the sequence `'a'`, `'b'`, `'c'`\n *\n * ```ts\n * import { interval, mergeMap, of, EMPTY } from 'rxjs';\n *\n * const interval$ = interval(1000);\n * const result = interval$.pipe(\n *   mergeMap(x => x % 2 === 1 ? of('a', 'b', 'c') : EMPTY),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following to the console:\n * // x is equal to the count on the interval, e.g. (0, 1, 2, 3, ...)\n * // x will occur every 1000ms\n * // if x % 2 is equal to 1, print a, b, c (each on its own)\n * // if x % 2 is not equal to 1, nothing will be output\n * ```\n *\n * @see {@link Observable}\n * @see {@link NEVER}\n * @see {@link of}\n * @see {@link throwError}\n */\nexport const EMPTY = new Observable<never>((subscriber) => subscriber.complete());\n\n/**\n * @param scheduler A {@link SchedulerLike} to use for scheduling\n * the emission of the complete notification.\n * @deprecated Replaced with the {@link EMPTY} constant or {@link scheduled} (e.g. `scheduled([], scheduler)`). Will be removed in v8.\n */\nexport function empty(scheduler?: SchedulerLike) {\n  return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\n\nfunction emptyScheduled(scheduler: SchedulerLike) {\n  return new Observable<never>((subscriber) => scheduler.schedule(() => subscriber.complete()));\n}\n", "import { SchedulerLike } from '../types';\nimport { isFunction } from './isFunction';\n\nexport function isScheduler(value: any): value is SchedulerLike {\n  return value && isFunction(value.schedule);\n}\n", "import { SchedulerLike } from '../types';\nimport { isFunction } from './isFunction';\nimport { isScheduler } from './isScheduler';\n\nfunction last<T>(arr: T[]): T | undefined {\n  return arr[arr.length - 1];\n}\n\nexport function popResultSelector(args: any[]): ((...args: unknown[]) => unknown) | undefined {\n  return isFunction(last(args)) ? args.pop() : undefined;\n}\n\nexport function popScheduler(args: any[]): SchedulerLike | undefined {\n  return isScheduler(last(args)) ? args.pop() : undefined;\n}\n\nexport function popNumber(args: any[], defaultValue: number): number {\n  return typeof last(args) === 'number' ? args.pop()! : defaultValue;\n}\n", "export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number' && typeof x !== 'function');", "import { isFunction } from \"./isFunction\";\n\n/**\n * Tests to see if the object is \"thennable\".\n * @param value the object to test\n */\nexport function isPromise(value: any): value is PromiseLike<any> {\n  return isFunction(value?.then);\n}\n", "import { InteropObservable } from '../types';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { isFunction } from './isFunction';\n\n/** Identifies an input as being Observable (but not necessary an Rx Observable) */\nexport function isInteropObservable(input: any): input is InteropObservable<any> {\n  return isFunction(input[Symbol_observable]);\n}\n", "import { isFunction } from './isFunction';\n\nexport function isAsyncIterable<T>(obj: any): obj is AsyncIterable<T> {\n  return Symbol.asyncIterator && isFunction(obj?.[Symbol.asyncIterator]);\n}\n", "/**\n * Creates the TypeError to throw if an invalid object is passed to `from` or `scheduled`.\n * @param input The object that was passed.\n */\nexport function createInvalidObservableTypeError(input: any) {\n  // TODO: We should create error codes that can be looked up, so this can be less verbose.\n  return new TypeError(\n    `You provided ${\n      input !== null && typeof input === 'object' ? 'an invalid object' : `'${input}'`\n    } where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`\n  );\n}\n", "export function getSymbolIterator(): symbol {\n  if (typeof Symbol !== 'function' || !Symbol.iterator) {\n    return '@@iterator' as any;\n  }\n\n  return Symbol.iterator;\n}\n\nexport const iterator = getSymbolIterator();\n", "import { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from './isFunction';\n\n/** Identifies an input as being an Iterable */\nexport function isIterable(input: any): input is Iterable<any> {\n  return isFunction(input?.[Symbol_iterator]);\n}\n", "import { ReadableStreamLike } from '../types';\nimport { isFunction } from './isFunction';\n\nexport async function* readableStreamLikeToAsyncGenerator<T>(readableStream: ReadableStreamLike<T>): AsyncGenerator<T> {\n  const reader = readableStream.getReader();\n  try {\n    while (true) {\n      const { value, done } = await reader.read();\n      if (done) {\n        return;\n      }\n      yield value!;\n    }\n  } finally {\n    reader.releaseLock();\n  }\n}\n\nexport function isReadableStreamLike<T>(obj: any): obj is ReadableStreamLike<T> {\n  // We don't want to use instanceof checks because they would return\n  // false for instances from another Realm, like an <iframe>.\n  return isFunction(obj?.getReader);\n}\n", "import { isArrayLike } from '../util/isArrayLike';\nimport { isPromise } from '../util/isPromise';\nimport { Observable } from '../Observable';\nimport { ObservableInput, ObservedValueOf, ReadableStreamLike } from '../types';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isIterable } from '../util/isIterable';\nimport { isReadableStreamLike, readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\nimport { Subscriber } from '../Subscriber';\nimport { isFunction } from '../util/isFunction';\nimport { reportUnhandledError } from '../util/reportUnhandledError';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\nexport function innerFrom<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\nexport function innerFrom<T>(input: ObservableInput<T>): Observable<T> {\n  if (input instanceof Observable) {\n    return input;\n  }\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return fromInteropObservable(input);\n    }\n    if (isArrayLike(input)) {\n      return fromArrayLike(input);\n    }\n    if (isPromise(input)) {\n      return fromPromise(input);\n    }\n    if (isAsyncIterable(input)) {\n      return fromAsyncIterable(input);\n    }\n    if (isIterable(input)) {\n      return fromIterable(input);\n    }\n    if (isReadableStreamLike(input)) {\n      return fromReadableStreamLike(input);\n    }\n  }\n\n  throw createInvalidObservableTypeError(input);\n}\n\n/**\n * Creates an RxJS Observable from an object that implements `Symbol.observable`.\n * @param obj An object that properly implements `Symbol.observable`.\n */\nexport function fromInteropObservable<T>(obj: any) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    const obs = obj[Symbol_observable]();\n    if (isFunction(obs.subscribe)) {\n      return obs.subscribe(subscriber);\n    }\n    // Should be caught by observable subscribe function error handling.\n    throw new TypeError('Provided object does not correctly implement Symbol.observable');\n  });\n}\n\n/**\n * Synchronously emits the values of an array like and completes.\n * This is exported because there are creation functions and operators that need to\n * make direct use of the same logic, and there's no reason to make them run through\n * `from` conditionals because we *know* they're dealing with an array.\n * @param array The array to emit values from\n */\nexport function fromArrayLike<T>(array: ArrayLike<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    // Loop over the array and emit each value. Note two things here:\n    // 1. We're making sure that the subscriber is not closed on each loop.\n    //    This is so we don't continue looping over a very large array after\n    //    something like a `take`, `takeWhile`, or other synchronous unsubscription\n    //    has already unsubscribed.\n    // 2. In this form, reentrant code can alter that array we're looping over.\n    //    This is a known issue, but considered an edge case. The alternative would\n    //    be to copy the array before executing the loop, but this has\n    //    performance implications.\n    for (let i = 0; i < array.length && !subscriber.closed; i++) {\n      subscriber.next(array[i]);\n    }\n    subscriber.complete();\n  });\n}\n\nexport function fromPromise<T>(promise: PromiseLike<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    promise\n      .then(\n        (value) => {\n          if (!subscriber.closed) {\n            subscriber.next(value);\n            subscriber.complete();\n          }\n        },\n        (err: any) => subscriber.error(err)\n      )\n      .then(null, reportUnhandledError);\n  });\n}\n\nexport function fromIterable<T>(iterable: Iterable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    for (const value of iterable) {\n      subscriber.next(value);\n      if (subscriber.closed) {\n        return;\n      }\n    }\n    subscriber.complete();\n  });\n}\n\nexport function fromAsyncIterable<T>(asyncIterable: AsyncIterable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    process(asyncIterable, subscriber).catch((err) => subscriber.error(err));\n  });\n}\n\nexport function fromReadableStreamLike<T>(readableStream: ReadableStreamLike<T>) {\n  return fromAsyncIterable(readableStreamLikeToAsyncGenerator(readableStream));\n}\n\nasync function process<T>(asyncIterable: AsyncIterable<T>, subscriber: Subscriber<T>) {\n  for await (const value of asyncIterable) {\n    subscriber.next(value);\n    // A side-effect may have closed our subscriber,\n    // check before the next iteration.\n    if (subscriber.closed) {\n      return;\n    }\n  }\n  subscriber.complete();\n}\n", "import { Subscription } from '../Subscription';\nimport { SchedulerAction, SchedulerLike } from '../types';\n\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay: number,\n  repeat: true\n): void;\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay?: number,\n  repeat?: false\n): Subscription;\n\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay = 0,\n  repeat = false\n): Subscription | void {\n  const scheduleSubscription = scheduler.schedule(function (this: SchedulerAction<any>) {\n    work();\n    if (repeat) {\n      parentSubscription.add(this.schedule(null, delay));\n    } else {\n      this.unsubscribe();\n    }\n  }, delay);\n\n  parentSubscription.add(scheduleSubscription);\n\n  if (!repeat) {\n    // Because user-land scheduler implementations are unlikely to properly reuse\n    // Actions for repeat scheduling, we can't trust that the returned subscription\n    // will control repeat subscription scenarios. So we're trying to avoid using them\n    // incorrectly within this library.\n    return scheduleSubscription;\n  }\n}\n", "/** @prettier */\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { executeSchedule } from '../util/executeSchedule';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * ## Example\n *\n * Ensure values in subscribe are called just before browser repaint\n *\n * ```ts\n * import { interval, observeOn, animationFrameScheduler } from 'rxjs';\n *\n * const someDiv = document.createElement('div');\n * someDiv.style.cssText = 'width: 200px;background: #09c';\n * document.body.appendChild(someDiv);\n * const intervals = interval(10);      // Intervals are scheduled\n *                                      // with async scheduler by default...\n * intervals.pipe(\n *   observeOn(animationFrameScheduler) // ...but we will observe on animationFrame\n * )                                    // scheduler to ensure smooth animation.\n * .subscribe(val => {\n *   someDiv.style.height = val + 'px';\n * });\n * ```\n *\n * @see {@link delay}\n *\n * @param scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param delay Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return A function that returns an Observable that emits the same\n * notifications as the source Observable, but with provided scheduler.\n */\nexport function observeOn<T>(scheduler: SchedulerLike, delay = 0): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => executeSchedule(subscriber, scheduler, () => subscriber.next(value), delay),\n        () => executeSchedule(subscriber, scheduler, () => subscriber.complete(), delay),\n        (err) => executeSchedule(subscriber, scheduler, () => subscriber.error(err), delay)\n      )\n    );\n  });\n}\n", "import { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\n\n/**\n * Asynchronously subscribes Observers to this Observable on the specified {@link SchedulerLike}.\n *\n * With `subscribeOn` you can decide what type of scheduler a specific Observable will be using when it is subscribed to.\n *\n * Schedulers control the speed and order of emissions to observers from an Observable stream.\n *\n * ![](subscribeOn.png)\n *\n * ## Example\n *\n * Given the following code:\n *\n * ```ts\n * import { of, merge } from 'rxjs';\n *\n * const a = of(1, 2, 3);\n * const b = of(4, 5, 6);\n *\n * merge(a, b).subscribe(console.log);\n *\n * // Outputs\n * // 1\n * // 2\n * // 3\n * // 4\n * // 5\n * // 6\n * ```\n *\n * Both Observable `a` and `b` will emit their values directly and synchronously once they are subscribed to.\n *\n * If we instead use the `subscribeOn` operator declaring that we want to use the {@link asyncScheduler} for values emitted by Observable `a`:\n *\n * ```ts\n * import { of, subscribeOn, asyncScheduler, merge } from 'rxjs';\n *\n * const a = of(1, 2, 3).pipe(subscribeOn(asyncScheduler));\n * const b = of(4, 5, 6);\n *\n * merge(a, b).subscribe(console.log);\n *\n * // Outputs\n * // 4\n * // 5\n * // 6\n * // 1\n * // 2\n * // 3\n * ```\n *\n * The reason for this is that Observable `b` emits its values directly and synchronously like before\n * but the emissions from `a` are scheduled on the event loop because we are now using the {@link asyncScheduler} for that specific Observable.\n *\n * @param scheduler The {@link SchedulerLike} to perform subscription actions on.\n * @param delay A delay to pass to the scheduler to delay subscriptions\n * @return A function that returns an Observable modified so that its\n * subscriptions happen on the specified {@link SchedulerLike}.\n */\nexport function subscribeOn<T>(scheduler: SchedulerLike, delay: number = 0): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    subscriber.add(scheduler.schedule(() => source.subscribe(subscriber), delay));\n  });\n}\n", "import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nimport { InteropObservable, SchedulerLike } from '../types';\n\nexport function scheduleObservable<T>(input: InteropObservable<T>, scheduler: SchedulerLike) {\n  return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n", "import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nimport { SchedulerLike } from '../types';\n\nexport function schedulePromise<T>(input: PromiseLike<T>, scheduler: SchedulerLike) {\n  return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n", "import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\nexport function scheduleArray<T>(input: ArrayLike<T>, scheduler: SchedulerLike) {\n  return new Observable<T>((subscriber) => {\n    // The current array index.\n    let i = 0;\n    // Start iterating over the array like on a schedule.\n    return scheduler.schedule(function () {\n      if (i === input.length) {\n        // If we have hit the end of the array like in the\n        // previous job, we can complete.\n        subscriber.complete();\n      } else {\n        // Otherwise let's next the value at the current index,\n        // then increment our index.\n        subscriber.next(input[i++]);\n        // If the last emission didn't cause us to close the subscriber\n        // (via take or some side effect), reschedule the job and we'll\n        // make another pass.\n        if (!subscriber.closed) {\n          this.schedule();\n        }\n      }\n    });\n  });\n}\n", "import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from '../util/isFunction';\nimport { executeSchedule } from '../util/executeSchedule';\n\n/**\n * Used in {@link scheduled} to create an observable from an Iterable.\n * @param input The iterable to create an observable from\n * @param scheduler The scheduler to use\n */\nexport function scheduleIterable<T>(input: Iterable<T>, scheduler: SchedulerLike) {\n  return new Observable<T>((subscriber) => {\n    let iterator: Iterator<T, T>;\n\n    // Schedule the initial creation of the iterator from\n    // the iterable. This is so the code in the iterable is\n    // not called until the scheduled job fires.\n    executeSchedule(subscriber, scheduler, () => {\n      // Create the iterator.\n      iterator = (input as any)[Symbol_iterator]();\n\n      executeSchedule(\n        subscriber,\n        scheduler,\n        () => {\n          let value: T;\n          let done: boolean | undefined;\n          try {\n            // Pull the value out of the iterator\n            ({ value, done } = iterator.next());\n          } catch (err) {\n            // We got an error while pulling from the iterator\n            subscriber.error(err);\n            return;\n          }\n\n          if (done) {\n            // If it is \"done\" we just complete. This mimics the\n            // behavior of JavaScript's `for..of` consumption of\n            // iterables, which will not emit the value from an iterator\n            // result of `{ done: true: value: 'here' }`.\n            subscriber.complete();\n          } else {\n            // The iterable is not done, emit the value.\n            subscriber.next(value);\n          }\n        },\n        0,\n        true\n      );\n    });\n\n    // During finalization, if we see this iterator has a `return` method,\n    // then we know it is a Generator, and not just an Iterator. So we call\n    // the `return()` function. This will ensure that any `finally { }` blocks\n    // inside of the generator we can hit will be hit properly.\n    return () => isFunction(iterator?.return) && iterator.return();\n  });\n}\n", "import { SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { executeSchedule } from '../util/executeSchedule';\n\nexport function scheduleAsyncIterable<T>(input: AsyncIterable<T>, scheduler: SchedulerLike) {\n  if (!input) {\n    throw new Error('Iterable cannot be null');\n  }\n  return new Observable<T>((subscriber) => {\n    executeSchedule(subscriber, scheduler, () => {\n      const iterator = input[Symbol.asyncIterator]();\n      executeSchedule(\n        subscriber,\n        scheduler,\n        () => {\n          iterator.next().then((result) => {\n            if (result.done) {\n              // This will remove the subscriptions from\n              // the parent subscription.\n              subscriber.complete();\n            } else {\n              subscriber.next(result.value);\n            }\n          });\n        },\n        0,\n        true\n      );\n    });\n  });\n}\n", "import { SchedulerLike, ReadableStreamLike } from '../types';\nimport { Observable } from '../Observable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\n\nexport function scheduleReadableStreamLike<T>(input: ReadableStreamLike<T>, scheduler: SchedulerLike): Observable<T> {\n  return scheduleAsyncIterable(readableStreamLikeToAsyncGenerator(input), scheduler);\n}\n", "import { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isReadableStreamLike } from '../util/isReadableStreamLike';\nimport { scheduleReadableStreamLike } from './scheduleReadableStreamLike';\n\n/**\n * Converts from a common {@link ObservableInput} type to an observable where subscription and emissions\n * are scheduled on the provided scheduler.\n *\n * @see {@link from}\n * @see {@link of}\n *\n * @param input The observable, array, promise, iterable, etc you would like to schedule\n * @param scheduler The scheduler to use to schedule the subscription and emissions from\n * the returned observable.\n */\nexport function scheduled<T>(input: ObservableInput<T>, scheduler: SchedulerLike): Observable<T> {\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return scheduleObservable(input, scheduler);\n    }\n    if (isArrayLike(input)) {\n      return scheduleArray(input, scheduler);\n    }\n    if (isPromise(input)) {\n      return schedulePromise(input, scheduler);\n    }\n    if (isAsyncIterable(input)) {\n      return scheduleAsyncIterable(input, scheduler);\n    }\n    if (isIterable(input)) {\n      return scheduleIterable(input, scheduler);\n    }\n    if (isReadableStreamLike(input)) {\n      return scheduleReadableStreamLike(input, scheduler);\n    }\n  }\n  throw createInvalidObservableTypeError(input);\n}\n", "import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike, ObservedValueOf } from '../types';\nimport { scheduled } from '../scheduled/scheduled';\nimport { innerFrom } from './innerFrom';\n\nexport function from<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function from<O extends ObservableInput<any>>(input: O, scheduler: SchedulerLike | undefined): Observable<ObservedValueOf<O>>;\n\n/**\n * Creates an Observable from an Array, an array-like object, a Promise, an iterable object, or an Observable-like object.\n *\n * <span class=\"informal\">Converts almost anything to an Observable.</span>\n *\n * ![](from.png)\n *\n * `from` converts various other objects and data types into Observables. It also converts a Promise, an array-like, or an\n * <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable\" target=\"_blank\">iterable</a>\n * object into an Observable that emits the items in that promise, array, or iterable. A String, in this context, is treated\n * as an array of characters. Observable-like objects (contains a function named with the ES2015 Symbol for Observable) can also be\n * converted through this operator.\n *\n * ## Examples\n *\n * Converts an array to an Observable\n *\n * ```ts\n * import { from } from 'rxjs';\n *\n * const array = [10, 20, 30];\n * const result = from(array);\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 10\n * // 20\n * // 30\n * ```\n *\n * Convert an infinite iterable (from a generator) to an Observable\n *\n * ```ts\n * import { from, take } from 'rxjs';\n *\n * function* generateDoubles(seed) {\n *    let i = seed;\n *    while (true) {\n *      yield i;\n *      i = 2 * i; // double it\n *    }\n * }\n *\n * const iterator = generateDoubles(3);\n * const result = from(iterator).pipe(take(10));\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 3\n * // 6\n * // 12\n * // 24\n * // 48\n * // 96\n * // 192\n * // 384\n * // 768\n * // 1536\n * ```\n *\n * With `asyncScheduler`\n *\n * ```ts\n * import { from, asyncScheduler } from 'rxjs';\n *\n * console.log('start');\n *\n * const array = [10, 20, 30];\n * const result = from(array, asyncScheduler);\n *\n * result.subscribe(x => console.log(x));\n *\n * console.log('end');\n *\n * // Logs:\n * // 'start'\n * // 'end'\n * // 10\n * // 20\n * // 30\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link fromEventPattern}\n *\n * @param {ObservableInput<T>} A subscription object, a Promise, an Observable-like,\n * an Array, an iterable, or an array-like object to be converted.\n * @param {SchedulerLike} An optional {@link SchedulerLike} on which to schedule the emission of values.\n * @return {Observable<T>}\n */\nexport function from<T>(input: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T> {\n  return scheduler ? scheduled(input, scheduler) : innerFrom(input);\n}\n", "import { SchedulerLike, ValueFromArray } from '../types';\nimport { Observable } from '../Observable';\nimport { popScheduler } from '../util/args';\nimport { from } from './from';\n\n// Devs are more likely to pass null or undefined than they are a scheduler\n// without accompanying values. To make things easier for (naughty) devs who\n// use the `strictNullChecks: false` TypeScript compiler option, these\n// overloads with explicit null and undefined values are included.\n\nexport function of(value: null): Observable<null>;\nexport function of(value: undefined): Observable<undefined>;\n\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function of(scheduler: SchedulerLike): Observable<never>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function of<A extends readonly unknown[]>(...valuesAndScheduler: [...A, SchedulerLike]): Observable<ValueFromArray<A>>;\n\nexport function of(): Observable<never>;\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\nexport function of<T>(): Observable<T>;\nexport function of<T>(value: T): Observable<T>;\nexport function of<A extends readonly unknown[]>(...values: A): Observable<ValueFromArray<A>>;\n\n/**\n * Converts the arguments to an observable sequence.\n *\n * <span class=\"informal\">Each argument becomes a `next` notification.</span>\n *\n * ![](of.png)\n *\n * Unlike {@link from}, it does not do any flattening and emits each argument in whole\n * as a separate `next` notification.\n *\n * ## Examples\n *\n * Emit the values `10, 20, 30`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of(10, 20, 30)\n *   .subscribe({\n *     next: value => console.log('next:', value),\n *     error: err => console.log('error:', err),\n *     complete: () => console.log('the end'),\n *   });\n *\n * // Outputs\n * // next: 10\n * // next: 20\n * // next: 30\n * // the end\n * ```\n *\n * Emit the array `[1, 2, 3]`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of([1, 2, 3])\n *   .subscribe({\n *     next: value => console.log('next:', value),\n *     error: err => console.log('error:', err),\n *     complete: () => console.log('the end'),\n *   });\n *\n * // Outputs\n * // next: [1, 2, 3]\n * // the end\n * ```\n *\n * @see {@link from}\n * @see {@link range}\n *\n * @param {...T} values A comma separated list of arguments you want to be emitted\n * @return {Observable} An Observable that emits the arguments\n * described above and then completes.\n */\nexport function of<T>(...args: Array<T | SchedulerLike>): Observable<T> {\n  const scheduler = popScheduler(args);\n  return from(args as T[], scheduler);\n}\n", "import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { SchedulerLike } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/**\n * Creates an observable that will create an error instance and push it to the consumer as an error\n * immediately upon subscription.\n *\n * <span class=\"informal\">Just errors and does nothing else</span>\n *\n * ![](throw.png)\n *\n * This creation function is useful for creating an observable that will create an error and error every\n * time it is subscribed to. Generally, inside of most operators when you might want to return an errored\n * observable, this is unnecessary. In most cases, such as in the inner return of {@link concatMap},\n * {@link mergeMap}, {@link defer}, and many others, you can simply throw the error, and RxJS will pick\n * that up and notify the consumer of the error.\n *\n * ## Example\n *\n * Create a simple observable that will create a new error with a timestamp and log it\n * and the message every time you subscribe to it\n *\n * ```ts\n * import { throwError } from 'rxjs';\n *\n * let errorCount = 0;\n *\n * const errorWithTimestamp$ = throwError(() => {\n *   const error: any = new Error(`This is error number ${ ++errorCount }`);\n *   error.timestamp = Date.now();\n *   return error;\n * });\n *\n * errorWithTimestamp$.subscribe({\n *   error: err => console.log(err.timestamp, err.message)\n * });\n *\n * errorWithTimestamp$.subscribe({\n *   error: err => console.log(err.timestamp, err.message)\n * });\n *\n * // Logs the timestamp and a new error message for each subscription\n * ```\n *\n * ### Unnecessary usage\n *\n * Using `throwError` inside of an operator or creation function\n * with a callback, is usually not necessary\n *\n * ```ts\n * import { of, concatMap, timer, throwError } from 'rxjs';\n *\n * const delays$ = of(1000, 2000, Infinity, 3000);\n *\n * delays$.pipe(\n *   concatMap(ms => {\n *     if (ms < 10000) {\n *       return timer(ms);\n *     } else {\n *       // This is probably overkill.\n *       return throwError(() => new Error(`Invalid time ${ ms }`));\n *     }\n *   })\n * )\n * .subscribe({\n *   next: console.log,\n *   error: console.error\n * });\n * ```\n *\n * You can just throw the error instead\n *\n * ```ts\n * import { of, concatMap, timer } from 'rxjs';\n *\n * const delays$ = of(1000, 2000, Infinity, 3000);\n *\n * delays$.pipe(\n *   concatMap(ms => {\n *     if (ms < 10000) {\n *       return timer(ms);\n *     } else {\n *       // Cleaner and easier to read for most folks.\n *       throw new Error(`Invalid time ${ ms }`);\n *     }\n *   })\n * )\n * .subscribe({\n *   next: console.log,\n *   error: console.error\n * });\n * ```\n *\n * @param errorFactory A factory function that will create the error instance that is pushed.\n */\nexport function throwError(errorFactory: () => any): Observable<never>;\n\n/**\n * Returns an observable that will error with the specified error immediately upon subscription.\n *\n * @param error The error instance to emit\n * @deprecated Support for passing an error value will be removed in v8. Instead, pass a factory function to `throwError(() => new Error('test'))`. This is\n * because it will create the error at the moment it should be created and capture a more appropriate stack trace. If\n * for some reason you need to create the error ahead of time, you can still do that: `const err = new Error('test'); throwError(() => err);`.\n */\nexport function throwError(error: any): Observable<never>;\n\n/**\n * Notifies the consumer of an error using a given scheduler by scheduling it at delay `0` upon subscription.\n *\n * @param errorOrErrorFactory An error instance or error factory\n * @param scheduler A scheduler to use to schedule the error notification\n * @deprecated The `scheduler` parameter will be removed in v8.\n * Use `throwError` in combination with {@link observeOn}: `throwError(() => new Error('test')).pipe(observeOn(scheduler));`.\n * Details: https://rxjs.dev/deprecations/scheduler-argument\n */\nexport function throwError(errorOrErrorFactory: any, scheduler: SchedulerLike): Observable<never>;\n\nexport function throwError(errorOrErrorFactory: any, scheduler?: SchedulerLike): Observable<never> {\n  const errorFactory = isFunction(errorOrErrorFactory) ? errorOrErrorFactory : () => errorOrErrorFactory;\n  const init = (subscriber: Subscriber<never>) => subscriber.error(errorFactory());\n  return new Observable(scheduler ? (subscriber) => scheduler.schedule(init as any, 0, subscriber) : init);\n}\n", "import { PartialObserver, ObservableNotification, CompleteNotification, NextNotification, ErrorNotification } from './types';\nimport { Observable } from './Observable';\nimport { EMPTY } from './observable/empty';\nimport { of } from './observable/of';\nimport { throwError } from './observable/throwError';\nimport { isFunction } from './util/isFunction';\n\n// TODO: When this enum is removed, replace it with a type alias. See #4556.\n/**\n * @deprecated Use a string literal instead. `NotificationKind` will be replaced with a type alias in v8.\n * It will not be replaced with a const enum as those are not compatible with isolated modules.\n */\nexport enum NotificationKind {\n  NEXT = 'N',\n  ERROR = 'E',\n  COMPLETE = 'C',\n}\n\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n * @deprecated It is NOT recommended to create instances of `Notification` directly.\n * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\n * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\n * Will be removed in v8.\n */\nexport class Notification<T> {\n  /**\n   * A value signifying that the notification will \"next\" if observed. In truth,\n   * This is really synonymous with just checking `kind === \"N\"`.\n   * @deprecated Will be removed in v8. Instead, just check to see if the value of `kind` is `\"N\"`.\n   */\n  readonly hasValue: boolean;\n\n  /**\n   * Creates a \"Next\" notification object.\n   * @param kind Always `'N'`\n   * @param value The value to notify with if observed.\n   * @deprecated Internal implementation detail. Use {@link Notification#createNext createNext} instead.\n   */\n  constructor(kind: 'N', value?: T);\n  /**\n   * Creates an \"Error\" notification object.\n   * @param kind Always `'E'`\n   * @param value Always `undefined`\n   * @param error The error to notify with if observed.\n   * @deprecated Internal implementation detail. Use {@link Notification#createError createError} instead.\n   */\n  constructor(kind: 'E', value: undefined, error: any);\n  /**\n   * Creates a \"completion\" notification object.\n   * @param kind Always `'C'`\n   * @deprecated Internal implementation detail. Use {@link Notification#createComplete createComplete} instead.\n   */\n  constructor(kind: 'C');\n  constructor(public readonly kind: 'N' | 'E' | 'C', public readonly value?: T, public readonly error?: any) {\n    this.hasValue = kind === 'N';\n  }\n\n  /**\n   * Executes the appropriate handler on a passed `observer` given the `kind` of notification.\n   * If the handler is missing it will do nothing. Even if the notification is an error, if\n   * there is no error handler on the observer, an error will not be thrown, it will noop.\n   * @param observer The observer to notify.\n   */\n  observe(observer: PartialObserver<T>): void {\n    return observeNotification(this as ObservableNotification<T>, observer);\n  }\n\n  /**\n   * Executes a notification on the appropriate handler from a list provided.\n   * If a handler is missing for the kind of notification, nothing is called\n   * and no error is thrown, it will be a noop.\n   * @param next A next handler\n   * @param error An error handler\n   * @param complete A complete handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  do(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;\n  /**\n   * Executes a notification on the appropriate handler from a list provided.\n   * If a handler is missing for the kind of notification, nothing is called\n   * and no error is thrown, it will be a noop.\n   * @param next A next handler\n   * @param error An error handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  do(next: (value: T) => void, error: (err: any) => void): void;\n  /**\n   * Executes the next handler if the Notification is of `kind` `\"N\"`. Otherwise\n   * this will not error, and it will be a noop.\n   * @param next The next handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  do(next: (value: T) => void): void;\n  do(nextHandler: (value: T) => void, errorHandler?: (err: any) => void, completeHandler?: () => void): void {\n    const { kind, value, error } = this;\n    return kind === 'N' ? nextHandler?.(value!) : kind === 'E' ? errorHandler?.(error) : completeHandler?.();\n  }\n\n  /**\n   * Executes a notification on the appropriate handler from a list provided.\n   * If a handler is missing for the kind of notification, nothing is called\n   * and no error is thrown, it will be a noop.\n   * @param next A next handler\n   * @param error An error handler\n   * @param complete A complete handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  accept(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;\n  /**\n   * Executes a notification on the appropriate handler from a list provided.\n   * If a handler is missing for the kind of notification, nothing is called\n   * and no error is thrown, it will be a noop.\n   * @param next A next handler\n   * @param error An error handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  accept(next: (value: T) => void, error: (err: any) => void): void;\n  /**\n   * Executes the next handler if the Notification is of `kind` `\"N\"`. Otherwise\n   * this will not error, and it will be a noop.\n   * @param next The next handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  accept(next: (value: T) => void): void;\n\n  /**\n   * Executes the appropriate handler on a passed `observer` given the `kind` of notification.\n   * If the handler is missing it will do nothing. Even if the notification is an error, if\n   * there is no error handler on the observer, an error will not be thrown, it will noop.\n   * @param observer The observer to notify.\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  accept(observer: PartialObserver<T>): void;\n  accept(nextOrObserver: PartialObserver<T> | ((value: T) => void), error?: (err: any) => void, complete?: () => void) {\n    return isFunction((nextOrObserver as any)?.next)\n      ? this.observe(nextOrObserver as PartialObserver<T>)\n      : this.do(nextOrObserver as (value: T) => void, error as any, complete as any);\n  }\n\n  /**\n   * Returns a simple Observable that just delivers the notification represented\n   * by this Notification instance.\n   *\n   * @deprecated Will be removed in v8. To convert a `Notification` to an {@link Observable},\n   * use {@link of} and {@link dematerialize}: `of(notification).pipe(dematerialize())`.\n   */\n  toObservable(): Observable<T> {\n    const { kind, value, error } = this;\n    // Select the observable to return by `kind`\n    const result =\n      kind === 'N'\n        ? // Next kind. Return an observable of that value.\n          of(value!)\n        : //\n        kind === 'E'\n        ? // Error kind. Return an observable that emits the error.\n          throwError(() => error)\n        : //\n        kind === 'C'\n        ? // Completion kind. Kind is \"C\", return an observable that just completes.\n          EMPTY\n        : // Unknown kind, return falsy, so we error below.\n          0;\n    if (!result) {\n      // TODO: consider removing this check. The only way to cause this would be to\n      // use the Notification constructor directly in a way that is not type-safe.\n      // and direct use of the Notification constructor is deprecated.\n      throw new TypeError(`Unexpected notification kind ${kind}`);\n    }\n    return result;\n  }\n\n  private static completeNotification = new Notification('C') as Notification<never> & CompleteNotification;\n  /**\n   * A shortcut to create a Notification instance of the type `next` from a\n   * given value.\n   * @param {T} value The `next` value.\n   * @return {Notification<T>} The \"next\" Notification representing the\n   * argument.\n   * @nocollapse\n   * @deprecated It is NOT recommended to create instances of `Notification` directly.\n   * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\n   * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\n   * Will be removed in v8.\n   */\n  static createNext<T>(value: T) {\n    return new Notification('N', value) as Notification<T> & NextNotification<T>;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `error` from a\n   * given error.\n   * @param {any} [err] The `error` error.\n   * @return {Notification<T>} The \"error\" Notification representing the\n   * argument.\n   * @nocollapse\n   * @deprecated It is NOT recommended to create instances of `Notification` directly.\n   * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\n   * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\n   * Will be removed in v8.\n   */\n  static createError(err?: any) {\n    return new Notification('E', undefined, err) as Notification<never> & ErrorNotification;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `complete`.\n   * @return {Notification<any>} The valueless \"complete\" Notification.\n   * @nocollapse\n   * @deprecated It is NOT recommended to create instances of `Notification` directly.\n   * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\n   * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\n   * Will be removed in v8.\n   */\n  static createComplete(): Notification<never> & CompleteNotification {\n    return Notification.completeNotification;\n  }\n}\n\n/**\n * Executes the appropriate handler on a passed `observer` given the `kind` of notification.\n * If the handler is missing it will do nothing. Even if the notification is an error, if\n * there is no error handler on the observer, an error will not be thrown, it will noop.\n * @param notification The notification object to observe.\n * @param observer The observer to notify.\n */\nexport function observeNotification<T>(notification: ObservableNotification<T>, observer: PartialObserver<T>) {\n  const { kind, value, error } = notification as any;\n  if (typeof kind !== 'string') {\n    throw new TypeError('Invalid notification, missing \"kind\"');\n  }\n  kind === 'N' ? observer.next?.(value!) : kind === 'E' ? observer.error?.(error) : observer.complete?.();\n}\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface EmptyError extends Error {}\n\nexport interface EmptyErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): EmptyError;\n}\n\n/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n * @see {@link firstValueFrom}\n * @see {@link lastValueFrom}\n *\n * @class EmptyError\n */\nexport const EmptyError: EmptyErrorCtor = createErrorClass((_super) => function EmptyErrorImpl(this: any) {\n  _super(this);\n  this.name = 'EmptyError';\n  this.message = 'no elements in sequence';\n});\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface ArgumentOutOfRangeError extends Error {}\n\nexport interface ArgumentOutOfRangeErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): ArgumentOutOfRangeError;\n}\n\n/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nexport const ArgumentOutOfRangeError: ArgumentOutOfRangeErrorCtor = createErrorClass(\n  (_super) =>\n    function ArgumentOutOfRangeErrorImpl(this: any) {\n      _super(this);\n      this.name = 'ArgumentOutOfRangeError';\n      this.message = 'argument out of range';\n    }\n);\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface NotFoundError extends Error {}\n\nexport interface NotFoundErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (message: string): NotFoundError;\n}\n\n/**\n * An error thrown when a value or values are missing from an\n * observable sequence.\n *\n * @see {@link operators/single}\n *\n * @class NotFoundError\n */\nexport const NotFoundError: NotFoundErrorCtor = createErrorClass(\n  (_super) =>\n    function NotFoundErrorImpl(this: any, message: string) {\n      _super(this);\n      this.name = 'NotFoundError';\n      this.message = message;\n    }\n);\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface SequenceError extends Error {}\n\nexport interface SequenceErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (message: string): SequenceError;\n}\n\n/**\n * An error thrown when something is wrong with the sequence of\n * values arriving on the observable.\n *\n * @see {@link operators/single}\n *\n * @class SequenceError\n */\nexport const SequenceError: SequenceErrorCtor = createErrorClass(\n  (_super) =>\n    function SequenceErrorImpl(this: any, message: string) {\n      _super(this);\n      this.name = 'SequenceError';\n      this.message = message;\n    }\n);\n", "/**\n * Checks to see if a value is not only a `Date` object,\n * but a *valid* `Date` object that can be converted to a\n * number. For example, `new Date('blah')` is indeed an\n * `instanceof Date`, however it cannot be converted to a\n * number.\n */\nexport function isValidDate(value: any): value is Date {\n  return value instanceof Date && !isNaN(value as any);\n}\n", "import { asyncScheduler } from '../scheduler/async';\nimport { MonoTypeOperatorFunction, SchedulerLike, OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\nimport { isValidDate } from '../util/isDate';\nimport { Subscription } from '../Subscription';\nimport { operate } from '../util/lift';\nimport { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createErrorClass } from '../util/createErrorClass';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { executeSchedule } from '../util/executeSchedule';\n\nexport interface TimeoutConfig<T, O extends ObservableInput<unknown> = ObservableInput<T>, M = unknown> {\n  /**\n   * The time allowed between values from the source before timeout is triggered.\n   */\n  each?: number;\n\n  /**\n   * The relative time as a `number` in milliseconds, or a specific time as a `Date` object,\n   * by which the first value must arrive from the source before timeout is triggered.\n   */\n  first?: number | Date;\n\n  /**\n   * The scheduler to use with time-related operations within this operator. Defaults to {@link asyncScheduler}\n   */\n  scheduler?: SchedulerLike;\n\n  /**\n   * A factory used to create observable to switch to when timeout occurs. Provides\n   * a {@link TimeoutInfo} about the source observable's emissions and what delay or\n   * exact time triggered the timeout.\n   */\n  with?: (info: TimeoutInfo<T, M>) => O;\n\n  /**\n   * Optional additional metadata you can provide to code that handles\n   * the timeout, will be provided through the {@link TimeoutError}.\n   * This can be used to help identify the source of a timeout or pass along\n   * other information related to the timeout.\n   */\n  meta?: M;\n}\n\nexport interface TimeoutInfo<T, M = unknown> {\n  /** Optional metadata that was provided to the timeout configuration. */\n  readonly meta: M;\n  /** The number of messages seen before the timeout */\n  readonly seen: number;\n  /** The last message seen */\n  readonly lastValue: T | null;\n}\n\n/**\n * An error emitted when a timeout occurs.\n */\nexport interface TimeoutError<T = unknown, M = unknown> extends Error {\n  /**\n   * The information provided to the error by the timeout\n   * operation that created the error. Will be `null` if\n   * used directly in non-RxJS code with an empty constructor.\n   * (Note that using this constructor directly is not recommended,\n   * you should create your own errors)\n   */\n  info: TimeoutInfo<T, M> | null;\n}\n\nexport interface TimeoutErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new <T = unknown, M = unknown>(info?: TimeoutInfo<T, M>): TimeoutError<T, M>;\n}\n\n/**\n * An error thrown by the {@link timeout} operator.\n *\n * Provided so users can use as a type and do quality comparisons.\n * We recommend you do not subclass this or create instances of this class directly.\n * If you have need of a error representing a timeout, you should\n * create your own error class and use that.\n *\n * @see {@link timeout}\n *\n * @class TimeoutError\n */\nexport const TimeoutError: TimeoutErrorCtor = createErrorClass(\n  (_super) =>\n    function TimeoutErrorImpl(this: any, info: TimeoutInfo<any> | null = null) {\n      _super(this);\n      this.message = 'Timeout has occurred';\n      this.name = 'TimeoutError';\n      this.info = info;\n    }\n);\n\n/**\n * If `with` is provided, this will return an observable that will switch to a different observable if the source\n * does not push values within the specified time parameters.\n *\n * <span class=\"informal\">The most flexible option for creating a timeout behavior.</span>\n *\n * The first thing to know about the configuration is if you do not provide a `with` property to the configuration,\n * when timeout conditions are met, this operator will emit a {@link TimeoutError}. Otherwise, it will use the factory\n * function provided by `with`, and switch your subscription to the result of that. Timeout conditions are provided by\n * the settings in `first` and `each`.\n *\n * The `first` property can be either a `Date` for a specific time, a `number` for a time period relative to the\n * point of subscription, or it can be skipped. This property is to check timeout conditions for the arrival of\n * the first value from the source _only_. The timings of all subsequent values  from the source will be checked\n * against the time period provided by `each`, if it was provided.\n *\n * The `each` property can be either a `number` or skipped. If a value for `each` is provided, it represents the amount of\n * time the resulting observable will wait between the arrival of values from the source before timing out. Note that if\n * `first` is _not_ provided, the value from `each` will be used to check timeout conditions for the arrival of the first\n * value and all subsequent values. If `first` _is_ provided, `each` will only be use to check all values after the first.\n *\n * ## Examples\n *\n * Emit a custom error if there is too much time between values\n *\n * ```ts\n * import { interval, timeout, throwError } from 'rxjs';\n *\n * class CustomTimeoutError extends Error {\n *   constructor() {\n *     super('It was too slow');\n *     this.name = 'CustomTimeoutError';\n *   }\n * }\n *\n * const slow$ = interval(900);\n *\n * slow$.pipe(\n *   timeout({\n *     each: 1000,\n *     with: () => throwError(() => new CustomTimeoutError())\n *   })\n * )\n * .subscribe({\n *   error: console.error\n * });\n * ```\n *\n * Switch to a faster observable if your source is slow.\n *\n * ```ts\n * import { interval, timeout } from 'rxjs';\n *\n * const slow$ = interval(900);\n * const fast$ = interval(500);\n *\n * slow$.pipe(\n *   timeout({\n *     each: 1000,\n *     with: () => fast$,\n *   })\n * )\n * .subscribe(console.log);\n * ```\n * @param config The configuration for the timeout.\n */\nexport function timeout<T, O extends ObservableInput<unknown>, M = unknown>(\n  config: TimeoutConfig<T, O, M> & { with: (info: TimeoutInfo<T, M>) => O }\n): OperatorFunction<T, T | ObservedValueOf<O>>;\n\n/**\n * Returns an observable that will error or switch to a different observable if the source does not push values\n * within the specified time parameters.\n *\n * <span class=\"informal\">The most flexible option for creating a timeout behavior.</span>\n *\n * The first thing to know about the configuration is if you do not provide a `with` property to the configuration,\n * when timeout conditions are met, this operator will emit a {@link TimeoutError}. Otherwise, it will use the factory\n * function provided by `with`, and switch your subscription to the result of that. Timeout conditions are provided by\n * the settings in `first` and `each`.\n *\n * The `first` property can be either a `Date` for a specific time, a `number` for a time period relative to the\n * point of subscription, or it can be skipped. This property is to check timeout conditions for the arrival of\n * the first value from the source _only_. The timings of all subsequent values  from the source will be checked\n * against the time period provided by `each`, if it was provided.\n *\n * The `each` property can be either a `number` or skipped. If a value for `each` is provided, it represents the amount of\n * time the resulting observable will wait between the arrival of values from the source before timing out. Note that if\n * `first` is _not_ provided, the value from `each` will be used to check timeout conditions for the arrival of the first\n * value and all subsequent values. If `first` _is_ provided, `each` will only be use to check all values after the first.\n *\n * ### Handling TimeoutErrors\n *\n * If no `with` property was provided, subscriptions to the resulting observable may emit an error of {@link TimeoutError}.\n * The timeout error provides useful information you can examine when you're handling the error. The most common way to handle\n * the error would be with {@link catchError}, although you could use {@link tap} or just the error handler in your `subscribe` call\n * directly, if your error handling is only a side effect (such as notifying the user, or logging).\n *\n * In this case, you would check the error for `instanceof TimeoutError` to validate that the error was indeed from `timeout`, and\n * not from some other source. If it's not from `timeout`, you should probably rethrow it if you're in a `catchError`.\n *\n * ## Examples\n *\n * Emit a {@link TimeoutError} if the first value, and _only_ the first value, does not arrive within 5 seconds\n *\n * ```ts\n * import { interval, timeout } from 'rxjs';\n *\n * // A random interval that lasts between 0 and 10 seconds per tick\n * const source$ = interval(Math.round(Math.random() * 10_000));\n *\n * source$.pipe(\n *   timeout({ first: 5_000 })\n * )\n * .subscribe({\n *   next: console.log,\n *   error: console.error\n * });\n * ```\n *\n * Emit a {@link TimeoutError} if the source waits longer than 5 seconds between any two values or the first value\n * and subscription.\n *\n * ```ts\n * import { timer, timeout, expand } from 'rxjs';\n *\n * const getRandomTime = () => Math.round(Math.random() * 10_000);\n *\n * // An observable that waits a random amount of time between each delivered value\n * const source$ = timer(getRandomTime())\n *   .pipe(expand(() => timer(getRandomTime())));\n *\n * source$\n *   .pipe(timeout({ each: 5_000 }))\n *   .subscribe({\n *     next: console.log,\n *     error: console.error\n *   });\n * ```\n *\n * Emit a {@link TimeoutError} if the source does not emit before 7 seconds, _or_ if the source waits longer than\n * 5 seconds between any two values after the first.\n *\n * ```ts\n * import { timer, timeout, expand } from 'rxjs';\n *\n * const getRandomTime = () => Math.round(Math.random() * 10_000);\n *\n * // An observable that waits a random amount of time between each delivered value\n * const source$ = timer(getRandomTime())\n *   .pipe(expand(() => timer(getRandomTime())));\n *\n * source$\n *   .pipe(timeout({ first: 7_000, each: 5_000 }))\n *   .subscribe({\n *     next: console.log,\n *     error: console.error\n *   });\n * ```\n */\nexport function timeout<T, M = unknown>(config: Omit<TimeoutConfig<T, any, M>, 'with'>): OperatorFunction<T, T>;\n\n/**\n * Returns an observable that will error if the source does not push its first value before the specified time passed as a `Date`.\n * This is functionally the same as `timeout({ first: someDate })`.\n *\n * <span class=\"informal\">Errors if the first value doesn't show up before the given date and time</span>\n *\n * ![](timeout.png)\n *\n * @param first The date to at which the resulting observable will timeout if the source observable\n * does not emit at least one value.\n * @param scheduler The scheduler to use. Defaults to {@link asyncScheduler}.\n */\nexport function timeout<T>(first: Date, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns an observable that will error if the source does not push a value within the specified time in milliseconds.\n * This is functionally the same as `timeout({ each: milliseconds })`.\n *\n * <span class=\"informal\">Errors if it waits too long between any value</span>\n *\n * ![](timeout.png)\n *\n * @param each The time allowed between each pushed value from the source before the resulting observable\n * will timeout.\n * @param scheduler The scheduler to use. Defaults to {@link asyncScheduler}.\n */\nexport function timeout<T>(each: number, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n\n/**\n *\n * Errors if Observable does not emit a value in given time span.\n *\n * <span class=\"informal\">Timeouts on Observable that doesn't emit values fast enough.</span>\n *\n * ![](timeout.png)\n *\n * @see {@link timeoutWith}\n *\n * @return A function that returns an Observable that mirrors behaviour of the\n * source Observable, unless timeout happens when it throws an error.\n */\nexport function timeout<T, O extends ObservableInput<any>, M>(\n  config: number | Date | TimeoutConfig<T, O, M>,\n  schedulerArg?: SchedulerLike\n): OperatorFunction<T, T | ObservedValueOf<O>> {\n  // Intentionally terse code.\n  // If the first argument is a valid `Date`, then we use it as the `first` config.\n  // Otherwise, if the first argument is a `number`, then we use it as the `each` config.\n  // Otherwise, it can be assumed the first argument is the configuration object itself, and\n  // we destructure that into what we're going to use, setting important defaults as we do.\n  // NOTE: The default for `scheduler` will be the `scheduler` argument if it exists, or\n  // it will default to the `asyncScheduler`.\n  const {\n    first,\n    each,\n    with: _with = timeoutErrorFactory,\n    scheduler = schedulerArg ?? asyncScheduler,\n    meta = null!,\n  } = (isValidDate(config) ? { first: config } : typeof config === 'number' ? { each: config } : config) as TimeoutConfig<T, O, M>;\n\n  if (first == null && each == null) {\n    // Ensure timeout was provided at runtime.\n    throw new TypeError('No timeout provided.');\n  }\n\n  return operate((source, subscriber) => {\n    // This subscription encapsulates our subscription to the\n    // source for this operator. We're capturing it separately,\n    // because if there is a `with` observable to fail over to,\n    // we want to unsubscribe from our original subscription, and\n    // hand of the subscription to that one.\n    let originalSourceSubscription: Subscription;\n    // The subscription for our timeout timer. This changes\n    // every time we get a new value.\n    let timerSubscription: Subscription;\n    // A bit of state we pass to our with and error factories to\n    // tell what the last value we saw was.\n    let lastValue: T | null = null;\n    // A bit of state we pass to the with and error factories to\n    // tell how many values we have seen so far.\n    let seen = 0;\n    const startTimer = (delay: number) => {\n      timerSubscription = executeSchedule(\n        subscriber,\n        scheduler,\n        () => {\n          try {\n            originalSourceSubscription.unsubscribe();\n            innerFrom(\n              _with!({\n                meta,\n                lastValue,\n                seen,\n              })\n            ).subscribe(subscriber);\n          } catch (err) {\n            subscriber.error(err);\n          }\n        },\n        delay\n      );\n    };\n\n    originalSourceSubscription = source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value: T) => {\n          // clear the timer so we can emit and start another one.\n          timerSubscription?.unsubscribe();\n          seen++;\n          // Emit\n          subscriber.next((lastValue = value));\n          // null | undefined are both < 0. Thanks, JavaScript.\n          each! > 0 && startTimer(each!);\n        },\n        undefined,\n        undefined,\n        () => {\n          if (!timerSubscription?.closed) {\n            timerSubscription?.unsubscribe();\n          }\n          // Be sure not to hold the last value in memory after unsubscription\n          // it could be quite large.\n          lastValue = null;\n        }\n      )\n    );\n\n    // Intentionally terse code.\n    // If we've `seen` a value, that means the \"first\" clause was met already, if it existed.\n    //   it also means that a timer was already started for \"each\" (in the next handler above).\n    // If `first` was provided, and it's a number, then use it.\n    // If `first` was provided and it's not a number, it's a Date, and we get the difference between it and \"now\".\n    // If `first` was not provided at all, then our first timer will be the value from `each`.\n    !seen && startTimer(first != null ? (typeof first === 'number' ? first : +first - scheduler!.now()) : each!);\n  });\n}\n\n/**\n * The default function to use to emit an error when timeout occurs and a `with` function\n * is not specified.\n * @param info The information about the timeout to pass along to the error\n */\nfunction timeoutErrorFactory(info: TimeoutInfo<any>): Observable<never> {\n  throw new TimeoutError(info);\n}\n", "import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function map<T, R>(project: (value: T, index: number) => R): OperatorFunction<T, R>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function map<T, R, A>(project: (this: A, value: T, index: number) => R, thisArg: A): OperatorFunction<T, R>;\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * ![](map.png)\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * ## Example\n *\n * Map every click to the `clientX` position of that click\n *\n * ```ts\n * import { fromEvent, map } from 'rxjs';\n *\n * const clicks = fromEvent<PointerEvent>(document, 'click');\n * const positions = clicks.pipe(map(ev => ev.clientX));\n *\n * positions.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return A function that returns an Observable that emits the values from the\n * source Observable transformed by the given `project` function.\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {\n  return operate((source, subscriber) => {\n    // The index of the value from the source. Used with projection.\n    let index = 0;\n    // Subscribe to the source, all errors and completions are sent along\n    // to the consumer.\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value: T) => {\n        // Call the projection function with the appropriate this context,\n        // and send the resulting value to the consumer.\n        subscriber.next(project.call(thisArg, value, index++));\n      })\n    );\n  });\n}\n", "import { OperatorFunction } from \"../types\";\nimport { map } from \"../operators/map\";\n\nconst { isArray } = Array;\n\nfunction callOrApply<T, R>(fn: ((...values: T[]) => R), args: T|T[]): R {\n    return isArray(args) ? fn(...args) : fn(args);\n}\n\n/**\n * Used in several -- mostly deprecated -- situations where we need to \n * apply a list of arguments or a single argument to a result selector.\n */\nexport function mapOneOrManyArgs<T, R>(fn: ((...values: T[]) => R)): OperatorFunction<T|T[], R> {\n    return map(args => callOrApply(fn, args))\n}", "const { isArray } = Array;\nconst { getPrototypeOf, prototype: objectProto, keys: getKeys } = Object;\n\n/**\n * Used in functions where either a list of arguments, a single array of arguments, or a\n * dictionary of arguments can be returned. Returns an object with an `args` property with\n * the arguments in an array, if it is a dictionary, it will also return the `keys` in another\n * property.\n */\nexport function argsArgArrayOrObject<T, O extends Record<string, T>>(args: T[] | [O] | [T[]]): { args: T[]; keys: string[] | null } {\n  if (args.length === 1) {\n    const first = args[0];\n    if (isArray(first)) {\n      return { args: first, keys: null };\n    }\n    if (isPOJO(first)) {\n      const keys = getKeys(first);\n      return {\n        args: keys.map((key) => first[key]),\n        keys,\n      };\n    }\n  }\n\n  return { args: args as T[], keys: null };\n}\n\nfunction isPOJO(obj: any): obj is object {\n  return obj && typeof obj === 'object' && getPrototypeOf(obj) === objectProto;\n}\n", "export function createObject(keys: string[], values: any[]) {\n  return keys.reduce((result, key, i) => ((result[key] = values[i]), result), {} as any);\n}\n", "import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike, ObservedValueOf, ObservableInputTuple } from '../types';\nimport { argsArgArrayOrObject } from '../util/argsArgArrayOrObject';\nimport { Subscriber } from '../Subscriber';\nimport { from } from './from';\nimport { identity } from '../util/identity';\nimport { Subscription } from '../Subscription';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { popResultSelector, popScheduler } from '../util/args';\nimport { createObject } from '../util/createObject';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { AnyCatcher } from '../AnyCatcher';\nimport { executeSchedule } from '../util/executeSchedule';\n\n// combineLatest(any)\n// We put this first because we need to catch cases where the user has supplied\n// _exactly `any`_ as the argument. Since `any` literally matches _anything_,\n// we don't want it to randomly hit one of the other type signatures below,\n// as we have no idea at build-time what type we should be returning when given an any.\n\n/**\n * You have passed `any` here, we can't figure out if it is\n * an array or an object, so you're getting `unknown`. Use better types.\n * @param arg Something typed as `any`\n */\nexport function combineLatest<T extends AnyCatcher>(arg: T): Observable<unknown>;\n\n// combineLatest([a, b, c])\nexport function combineLatest(sources: []): Observable<never>;\nexport function combineLatest<A extends readonly unknown[]>(sources: readonly [...ObservableInputTuple<A>]): Observable<A>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function combineLatest<A extends readonly unknown[], R>(\n  sources: readonly [...ObservableInputTuple<A>],\n  resultSelector: (...values: A) => R,\n  scheduler: SchedulerLike\n): Observable<R>;\nexport function combineLatest<A extends readonly unknown[], R>(\n  sources: readonly [...ObservableInputTuple<A>],\n  resultSelector: (...values: A) => R\n): Observable<R>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function combineLatest<A extends readonly unknown[]>(\n  sources: readonly [...ObservableInputTuple<A>],\n  scheduler: SchedulerLike\n): Observable<A>;\n\n// combineLatest(a, b, c)\n/** @deprecated Pass an array of sources instead. The rest-parameters signature will be removed in v8. Details: https://rxjs.dev/deprecations/array-argument */\nexport function combineLatest<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function combineLatest<A extends readonly unknown[], R>(\n  ...sourcesAndResultSelectorAndScheduler: [...ObservableInputTuple<A>, (...values: A) => R, SchedulerLike]\n): Observable<R>;\n/** @deprecated Pass an array of sources instead. The rest-parameters signature will be removed in v8. Details: https://rxjs.dev/deprecations/array-argument */\nexport function combineLatest<A extends readonly unknown[], R>(\n  ...sourcesAndResultSelector: [...ObservableInputTuple<A>, (...values: A) => R]\n): Observable<R>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function combineLatest<A extends readonly unknown[]>(\n  ...sourcesAndScheduler: [...ObservableInputTuple<A>, SchedulerLike]\n): Observable<A>;\n\n// combineLatest({a, b, c})\nexport function combineLatest(sourcesObject: { [K in any]: never }): Observable<never>;\nexport function combineLatest<T extends Record<string, ObservableInput<any>>>(\n  sourcesObject: T\n): Observable<{ [K in keyof T]: ObservedValueOf<T[K]> }>;\n\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * ![](combineLatest.png)\n *\n * `combineLatest` combines the values from all the Observables passed in the\n * observables array. This is done by subscribing to each Observable in order and,\n * whenever any Observable emits, collecting an array of the most recent\n * values from each Observable. So if you pass `n` Observables to this operator,\n * the returned Observable will always emit an array of `n` values, in an order\n * corresponding to the order of the passed Observables (the value from the first Observable\n * will be at index 0 of the array and so on).\n *\n * Static version of `combineLatest` accepts an array of Observables. Note that an array of\n * Observables is a good choice, if you don't know beforehand how many Observables\n * you will combine. Passing an empty array will result in an Observable that\n * completes immediately.\n *\n * To ensure the output array always has the same length, `combineLatest` will\n * actually wait for all input Observables to emit at least once,\n * before it starts emitting results. This means if some Observable emits\n * values before other Observables started emitting, all these values but the last\n * will be lost. On the other hand, if some Observable does not emit a value but\n * completes, resulting Observable will complete at the same moment without\n * emitting anything, since it will now be impossible to include a value from the\n * completed Observable in the resulting array. Also, if some input Observable does\n * not emit any value and never completes, `combineLatest` will also never emit\n * and never complete, since, again, it will wait for all streams to emit some\n * value.\n *\n * If at least one Observable was passed to `combineLatest` and all passed Observables\n * emitted something, the resulting Observable will complete when all combined\n * streams complete. So even if some Observable completes, the result of\n * `combineLatest` will still emit values when other Observables do. In case\n * of a completed Observable, its value from now on will always be the last\n * emitted value. On the other hand, if any Observable errors, `combineLatest`\n * will error immediately as well, and all other Observables will be unsubscribed.\n *\n * ## Examples\n *\n * Combine two timer Observables\n *\n * ```ts\n * import { timer, combineLatest } from 'rxjs';\n *\n * const firstTimer = timer(0, 1000); // emit 0, 1, 2... after every second, starting from now\n * const secondTimer = timer(500, 1000); // emit 0, 1, 2... after every second, starting 0,5s from now\n * const combinedTimers = combineLatest([firstTimer, secondTimer]);\n * combinedTimers.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0] after 0.5s\n * // [1, 0] after 1s\n * // [1, 1] after 1.5s\n * // [2, 1] after 2s\n * ```\n *\n * Combine a dictionary of Observables\n *\n * ```ts\n * import { of, delay, startWith, combineLatest } from 'rxjs';\n *\n * const observables = {\n *   a: of(1).pipe(delay(1000), startWith(0)),\n *   b: of(5).pipe(delay(5000), startWith(0)),\n *   c: of(10).pipe(delay(10000), startWith(0))\n * };\n * const combined = combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // { a: 0, b: 0, c: 0 } immediately\n * // { a: 1, b: 0, c: 0 } after 1s\n * // { a: 1, b: 5, c: 0 } after 5s\n * // { a: 1, b: 5, c: 10 } after 10s\n * ```\n *\n * Combine an array of Observables\n *\n * ```ts\n * import { of, delay, startWith, combineLatest } from 'rxjs';\n *\n * const observables = [1, 5, 10].map(\n *   n => of(n).pipe(\n *     delay(n * 1000), // emit 0 and then emit n after n seconds\n *     startWith(0)\n *   )\n * );\n * const combined = combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0, 0] immediately\n * // [1, 0, 0] after 1s\n * // [1, 5, 0] after 5s\n * // [1, 5, 10] after 10s\n * ```\n *\n * Use map operator to dynamically calculate the Body-Mass Index\n *\n * ```ts\n * import { of, combineLatest, map } from 'rxjs';\n *\n * const weight = of(70, 72, 76, 79, 75);\n * const height = of(1.76, 1.77, 1.78);\n * const bmi = combineLatest([weight, height]).pipe(\n *   map(([w, h]) => w / (h * h)),\n * );\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} [observables] An array of input Observables to combine with each other.\n * An array of Observables must be given as the first argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for subscribing to\n * each input Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n */\nexport function combineLatest<O extends ObservableInput<any>, R>(...args: any[]): Observable<R> | Observable<ObservedValueOf<O>[]> {\n  const scheduler = popScheduler(args);\n  const resultSelector = popResultSelector(args);\n\n  const { args: observables, keys } = argsArgArrayOrObject(args);\n\n  if (observables.length === 0) {\n    // If no observables are passed, or someone has passed an empty array\n    // of observables, or even an empty object POJO, we need to just\n    // complete (EMPTY), but we have to honor the scheduler provided if any.\n    return from([], scheduler as any);\n  }\n\n  const result = new Observable<ObservedValueOf<O>[]>(\n    combineLatestInit(\n      observables as ObservableInput<ObservedValueOf<O>>[],\n      scheduler,\n      keys\n        ? // A handler for scrubbing the array of args into a dictionary.\n          (values) => createObject(keys, values)\n        : // A passthrough to just return the array\n          identity\n    )\n  );\n\n  return resultSelector ? (result.pipe(mapOneOrManyArgs(resultSelector)) as Observable<R>) : result;\n}\n\nexport function combineLatestInit(\n  observables: ObservableInput<any>[],\n  scheduler?: SchedulerLike,\n  valueTransform: (values: any[]) => any = identity\n) {\n  return (subscriber: Subscriber<any>) => {\n    // The outer subscription. We're capturing this in a function\n    // because we may have to schedule it.\n    maybeSchedule(\n      scheduler,\n      () => {\n        const { length } = observables;\n        // A store for the values each observable has emitted so far. We match observable to value on index.\n        const values = new Array(length);\n        // The number of currently active subscriptions, as they complete, we decrement this number to see if\n        // we are all done combining values, so we can complete the result.\n        let active = length;\n        // The number of inner sources that still haven't emitted the first value\n        // We need to track this because all sources need to emit one value in order\n        // to start emitting values.\n        let remainingFirstValues = length;\n        // The loop to kick off subscription. We're keying everything on index `i` to relate the observables passed\n        // in to the slot in the output array or the key in the array of keys in the output dictionary.\n        for (let i = 0; i < length; i++) {\n          maybeSchedule(\n            scheduler,\n            () => {\n              const source = from(observables[i], scheduler as any);\n              let hasFirstValue = false;\n              source.subscribe(\n                createOperatorSubscriber(\n                  subscriber,\n                  (value) => {\n                    // When we get a value, record it in our set of values.\n                    values[i] = value;\n                    if (!hasFirstValue) {\n                      // If this is our first value, record that.\n                      hasFirstValue = true;\n                      remainingFirstValues--;\n                    }\n                    if (!remainingFirstValues) {\n                      // We're not waiting for any more\n                      // first values, so we can emit!\n                      subscriber.next(valueTransform(values.slice()));\n                    }\n                  },\n                  () => {\n                    if (!--active) {\n                      // We only complete the result if we have no more active\n                      // inner observables.\n                      subscriber.complete();\n                    }\n                  }\n                )\n              );\n            },\n            subscriber\n          );\n        }\n      },\n      subscriber\n    );\n  };\n}\n\n/**\n * A small utility to handle the couple of locations where we want to schedule if a scheduler was provided,\n * but we don't if there was no scheduler.\n */\nfunction maybeSchedule(scheduler: SchedulerLike | undefined, execute: () => void, subscription: Subscription) {\n  if (scheduler) {\n    executeSchedule(subscription, scheduler, execute);\n  } else {\n    execute();\n  }\n}\n", "import { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subscriber } from '../Subscriber';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { executeSchedule } from '../util/executeSchedule';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * A process embodying the general \"merge\" strategy. This is used in\n * `mergeMap` and `mergeScan` because the logic is otherwise nearly identical.\n * @param source The original source observable\n * @param subscriber The consumer subscriber\n * @param project The projection function to get our inner sources\n * @param concurrent The number of concurrent inner subscriptions\n * @param onBeforeNext Additional logic to apply before nexting to our consumer\n * @param expand If `true` this will perform an \"expand\" strategy, which differs only\n * in that it recurses, and the inner subscription must be schedule-able.\n * @param innerSubScheduler A scheduler to use to schedule inner subscriptions,\n * this is to support the expand strategy, mostly, and should be deprecated\n */\nexport function mergeInternals<T, R>(\n  source: Observable<T>,\n  subscriber: Subscriber<R>,\n  project: (value: T, index: number) => ObservableInput<R>,\n  concurrent: number,\n  onBeforeNext?: (innerValue: R) => void,\n  expand?: boolean,\n  innerSubScheduler?: SchedulerLike,\n  additionalFinalizer?: () => void\n) {\n  // Buffered values, in the event of going over our concurrency limit\n  const buffer: T[] = [];\n  // The number of active inner subscriptions.\n  let active = 0;\n  // An index to pass to our accumulator function\n  let index = 0;\n  // Whether or not the outer source has completed.\n  let isComplete = false;\n\n  /**\n   * Checks to see if we can complete our result or not.\n   */\n  const checkComplete = () => {\n    // If the outer has completed, and nothing is left in the buffer,\n    // and we don't have any active inner subscriptions, then we can\n    // Emit the state and complete.\n    if (isComplete && !buffer.length && !active) {\n      subscriber.complete();\n    }\n  };\n\n  // If we're under our concurrency limit, just start the inner subscription, otherwise buffer and wait.\n  const outerNext = (value: T) => (active < concurrent ? doInnerSub(value) : buffer.push(value));\n\n  const doInnerSub = (value: T) => {\n    // If we're expanding, we need to emit the outer values and the inner values\n    // as the inners will \"become outers\" in a way as they are recursively fed\n    // back to the projection mechanism.\n    expand && subscriber.next(value as any);\n\n    // Increment the number of active subscriptions so we can track it\n    // against our concurrency limit later.\n    active++;\n\n    // A flag used to show that the inner observable completed.\n    // This is checked during finalization to see if we should\n    // move to the next item in the buffer, if there is on.\n    let innerComplete = false;\n\n    // Start our inner subscription.\n    innerFrom(project(value, index++)).subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (innerValue) => {\n          // `mergeScan` has additional handling here. For example\n          // taking the inner value and updating state.\n          onBeforeNext?.(innerValue);\n\n          if (expand) {\n            // If we're expanding, then just recurse back to our outer\n            // handler. It will emit the value first thing.\n            outerNext(innerValue as any);\n          } else {\n            // Otherwise, emit the inner value.\n            subscriber.next(innerValue);\n          }\n        },\n        () => {\n          // Flag that we have completed, so we know to check the buffer\n          // during finalization.\n          innerComplete = true;\n        },\n        // Errors are passed to the destination.\n        undefined,\n        () => {\n          // During finalization, if the inner completed (it wasn't errored or\n          // cancelled), then we want to try the next item in the buffer if\n          // there is one.\n          if (innerComplete) {\n            // We have to wrap this in a try/catch because it happens during\n            // finalization, possibly asynchronously, and we want to pass\n            // any errors that happen (like in a projection function) to\n            // the outer Subscriber.\n            try {\n              // INNER SOURCE COMPLETE\n              // Decrement the active count to ensure that the next time\n              // we try to call `doInnerSub`, the number is accurate.\n              active--;\n              // If we have more values in the buffer, try to process those\n              // Note that this call will increment `active` ahead of the\n              // next conditional, if there were any more inner subscriptions\n              // to start.\n              while (buffer.length && active < concurrent) {\n                const bufferedValue = buffer.shift()!;\n                // Particularly for `expand`, we need to check to see if a scheduler was provided\n                // for when we want to start our inner subscription. Otherwise, we just start\n                // are next inner subscription.\n                if (innerSubScheduler) {\n                  executeSchedule(subscriber, innerSubScheduler, () => doInnerSub(bufferedValue));\n                } else {\n                  doInnerSub(bufferedValue);\n                }\n              }\n              // Check to see if we can complete, and complete if so.\n              checkComplete();\n            } catch (err) {\n              subscriber.error(err);\n            }\n          }\n        }\n      )\n    );\n  };\n\n  // Subscribe to our source observable.\n  source.subscribe(\n    createOperatorSubscriber(subscriber, outerNext, () => {\n      // Outer completed, make a note of it, and check to see if we can complete everything.\n      isComplete = true;\n      checkComplete();\n    })\n  );\n\n  // Additional finalization (for when the destination is torn down).\n  // Other finalization is added implicitly via subscription above.\n  return () => {\n    additionalFinalizer?.();\n  };\n}\n", "import { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { mergeInternals } from './mergeInternals';\nimport { isFunction } from '../util/isFunction';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  concurrent?: number\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function mergeMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined,\n  concurrent?: number\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R,\n  concurrent?: number\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * ![](mergeMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * ## Example\n *\n * Map and flatten each letter to an Observable ticking every 1 second\n *\n * ```ts\n * import { of, mergeMap, interval, map } from 'rxjs';\n *\n * const letters = of('a', 'b', 'c');\n * const result = letters.pipe(\n *   mergeMap(x => interval(1000).pipe(map(i => x + i)))\n * );\n *\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a, b, c every second with respective ascending integers\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {number} [concurrent=Infinity] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return A function that returns an Observable that emits the result of\n * applying the projection function (and the optional deprecated\n * `resultSelector`) to each item emitted by the source Observable and merging\n * the results of the Observables obtained from this transformation.\n */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: ((outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Infinity\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  if (isFunction(resultSelector)) {\n    // DEPRECATED PATH\n    return mergeMap((a, i) => map((b: any, ii: number) => resultSelector(a, b, i, ii))(innerFrom(project(a, i))), concurrent);\n  } else if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n\n  return operate((source, subscriber) => mergeInternals(source, subscriber, project, concurrent));\n}\n", "import { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nimport { OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\n\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * ![](mergeAll.png)\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n *\n * Spawn a new interval Observable for each click event, and blend their outputs as one Observable\n *\n * ```ts\n * import { fromEvent, map, interval, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(map(() => interval(1000)));\n * const firstOrder = higherOrder.pipe(mergeAll());\n *\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * Count from 0 to 9 every second for each click, but only allow 2 concurrent timers\n *\n * ```ts\n * import { fromEvent, map, interval, take, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(() => interval(1000).pipe(take(10)))\n * );\n * const firstOrder = higherOrder.pipe(mergeAll(2));\n *\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link concatAll}\n * @see {@link exhaustAll}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Infinity] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return A function that returns an Observable that emits values coming from\n * all the inner Observables emitted by the source Observable.\n */\nexport function mergeAll<O extends ObservableInput<any>>(concurrent: number = Infinity): OperatorFunction<O, ObservedValueOf<O>> {\n  return mergeMap(identity, concurrent);\n}\n", "import { mergeAll } from './mergeAll';\nimport { OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\n\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * ![](concatAll.svg)\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * ## Example\n *\n * For each click event, tick every second from 0 to 3, with no concurrency\n *\n * ```ts\n * import { fromEvent, map, interval, take, concatAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(() => interval(1000).pipe(take(4)))\n * );\n * const firstOrder = higherOrder.pipe(concatAll());\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaustAll}\n * @see {@link mergeAll}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @return A function that returns an Observable emitting values from all the\n * inner Observables concatenated.\n */\nexport function concatAll<O extends ObservableInput<any>>(): OperatorFunction<O, ObservedValueOf<O>> {\n  return mergeAll(1);\n}\n", "import { Observable } from '../Observable';\nimport { ObservableInputTuple, SchedulerLike } from '../types';\nimport { concatAll } from '../operators/concatAll';\nimport { popScheduler } from '../util/args';\nimport { from } from './from';\n\nexport function concat<T extends readonly unknown[]>(...inputs: [...ObservableInputTuple<T>]): Observable<T[number]>;\nexport function concat<T extends readonly unknown[]>(\n  ...inputsAndScheduler: [...ObservableInputTuple<T>, SchedulerLike]\n): Observable<T[number]>;\n\n/**\n * Creates an output Observable which sequentially emits all values from the first given\n * Observable and then moves on to the next.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * ![](concat.png)\n *\n * `concat` joins multiple Observables together, by subscribing to them one at a time and\n * merging their results into the output Observable. You can pass either an array of\n * Observables, or put them directly as arguments. Passing an empty array will result\n * in Observable that completes immediately.\n *\n * `concat` will subscribe to first input Observable and emit all its values, without\n * changing or affecting them in any way. When that Observable completes, it will\n * subscribe to then next Observable passed and, again, emit its values. This will be\n * repeated, until the operator runs out of Observables. When last input Observable completes,\n * `concat` will complete as well. At any given moment only one Observable passed to operator\n * emits values. If you would like to emit values from passed Observables concurrently, check out\n * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\n * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\n *\n * Note that if some input Observable never completes, `concat` will also never complete\n * and Observables following the one that did not complete will never be subscribed. On the other\n * hand, if some Observable simply completes immediately after it is subscribed, it will be\n * invisible for `concat`, which will just move on to the next Observable.\n *\n * If any Observable in chain errors, instead of passing control to the next Observable,\n * `concat` will error immediately as well. Observables that would be subscribed after\n * the one that emitted error, never will.\n *\n * If you pass to `concat` the same Observable many times, its stream of values\n * will be \"replayed\" on every subscription, which means you can repeat given Observable\n * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\n * you can always use {@link repeat}.\n *\n * ## Examples\n *\n * Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10\n *\n * ```ts\n * import { interval, take, range, concat } from 'rxjs';\n *\n * const timer = interval(1000).pipe(take(4));\n * const sequence = range(1, 10);\n * const result = concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n * ```\n *\n * Concatenate 3 Observables\n *\n * ```ts\n * import { interval, take, concat } from 'rxjs';\n *\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n *\n * const result = concat(timer1, timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n * ```\n *\n * Concatenate the same Observable to repeat it\n *\n * ```ts\n * import { interval, take, concat } from 'rxjs';\n *\n * const timer = interval(1000).pipe(take(2));\n *\n * concat(timer, timer) // concatenating the same Observable!\n *   .subscribe({\n *     next: value => console.log(value),\n *     complete: () => console.log('...and it is done!')\n *   });\n *\n * // Logs:\n * // 0 after 1s\n * // 1 after 2s\n * // 0 after 3s\n * // 1 after 4s\n * // '...and it is done!' also after 4s\n * ```\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link startWith}\n * @see {@link endWith}\n *\n * @param args Input Observables to concatenate.\n */\nexport function concat(...args: any[]): Observable<unknown> {\n  return concatAll()(from(args, popScheduler(args)));\n}\n", "import { Observable } from '../Observable';\nimport { ObservedValueOf, ObservableInput } from '../types';\nimport { innerFrom } from './innerFrom';\n\n/**\n * Creates an Observable that, on subscribe, calls an Observable factory to\n * make an Observable for each new Observer.\n *\n * <span class=\"informal\">Creates the Observable lazily, that is, only when it\n * is subscribed.\n * </span>\n *\n * ![](defer.png)\n *\n * `defer` allows you to create an Observable only when the Observer\n * subscribes. It waits until an Observer subscribes to it, calls the given\n * factory function to get an Observable -- where a factory function typically\n * generates a new Observable -- and subscribes the Observer to this Observable.\n * In case the factory function returns a falsy value, then EMPTY is used as\n * Observable instead. Last but not least, an exception during the factory\n * function call is transferred to the Observer by calling `error`.\n *\n * ## Example\n *\n * Subscribe to either an Observable of clicks or an Observable of interval, at random\n *\n * ```ts\n * import { defer, fromEvent, interval } from 'rxjs';\n *\n * const clicksOrInterval = defer(() => {\n *   return Math.random() > 0.5\n *     ? fromEvent(document, 'click')\n *     : interval(1000);\n * });\n * clicksOrInterval.subscribe(x => console.log(x));\n *\n * // Results in the following behavior:\n * // If the result of Math.random() is greater than 0.5 it will listen\n * // for clicks anywhere on the \"document\"; when document is clicked it\n * // will log a MouseEvent object to the console. If the result is less\n * // than 0.5 it will emit ascending numbers, one every second(1000ms).\n * ```\n *\n * @see {@link Observable}\n *\n * @param {function(): ObservableInput} observableFactory The Observable\n * factory function to invoke for each Observer that subscribes to the output\n * Observable. May also return a Promise, which will be converted on the fly\n * to an Observable.\n * @return {Observable} An Observable whose Observers' subscriptions trigger\n * an invocation of the given Observable factory function.\n */\nexport function defer<R extends ObservableInput<any>>(observableFactory: () => R): Observable<ObservedValueOf<R>> {\n  return new Observable<ObservedValueOf<R>>((subscriber) => {\n    innerFrom(observableFactory()).subscribe(subscriber);\n  });\n}\n", "import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { async as asyncScheduler } from '../scheduler/async';\nimport { isScheduler } from '../util/isScheduler';\nimport { isValidDate } from '../util/isDate';\n\n/**\n * Creates an observable that will wait for a specified time period, or exact date, before\n * emitting the number 0.\n *\n * <span class=\"informal\">Used to emit a notification after a delay.</span>\n *\n * This observable is useful for creating delays in code, or racing against other values\n * for ad-hoc timeouts.\n *\n * The `delay` is specified by default in milliseconds, however providing a custom scheduler could\n * create a different behavior.\n *\n * ## Examples\n *\n * Wait 3 seconds and start another observable\n *\n * You might want to use `timer` to delay subscription to an\n * observable by a set amount of time. Here we use a timer with\n * {@link concatMapTo} or {@link concatMap} in order to wait\n * a few seconds and start a subscription to a source.\n *\n * ```ts\n * import { of, timer, concatMap } from 'rxjs';\n *\n * // This could be any observable\n * const source = of(1, 2, 3);\n *\n * timer(3000)\n *   .pipe(concatMap(() => source))\n *   .subscribe(console.log);\n * ```\n *\n * Take all values until the start of the next minute\n *\n * Using a `Date` as the trigger for the first emission, you can\n * do things like wait until midnight to fire an event, or in this case,\n * wait until a new minute starts (chosen so the example wouldn't take\n * too long to run) in order to stop watching a stream. Leveraging\n * {@link takeUntil}.\n *\n * ```ts\n * import { interval, takeUntil, timer } from 'rxjs';\n *\n * // Build a Date object that marks the\n * // next minute.\n * const currentDate = new Date();\n * const startOfNextMinute = new Date(\n *   currentDate.getFullYear(),\n *   currentDate.getMonth(),\n *   currentDate.getDate(),\n *   currentDate.getHours(),\n *   currentDate.getMinutes() + 1\n * );\n *\n * // This could be any observable stream\n * const source = interval(1000);\n *\n * const result = source.pipe(\n *   takeUntil(timer(startOfNextMinute))\n * );\n *\n * result.subscribe(console.log);\n * ```\n *\n * ### Known Limitations\n *\n * - The {@link asyncScheduler} uses `setTimeout` which has limitations for how far in the future it can be scheduled.\n *\n * - If a `scheduler` is provided that returns a timestamp other than an epoch from `now()`, and\n * a `Date` object is passed to the `dueTime` argument, the calculation for when the first emission\n * should occur will be incorrect. In this case, it would be best to do your own calculations\n * ahead of time, and pass a `number` in as the `dueTime`.\n *\n * @param due If a `number`, the amount of time in milliseconds to wait before emitting.\n * If a `Date`, the exact time at which to emit.\n * @param scheduler The scheduler to use to schedule the delay. Defaults to {@link asyncScheduler}.\n */\nexport function timer(due: number | Date, scheduler?: SchedulerLike): Observable<0>;\n\n/**\n * Creates an observable that starts an interval after a specified delay, emitting incrementing numbers -- starting at `0` --\n * on each interval after words.\n *\n * The `delay` and `intervalDuration` are specified by default in milliseconds, however providing a custom scheduler could\n * create a different behavior.\n *\n * ## Example\n *\n * ### Start an interval that starts right away\n *\n * Since {@link interval} waits for the passed delay before starting,\n * sometimes that's not ideal. You may want to start an interval immediately.\n * `timer` works well for this. Here we have both side-by-side so you can\n * see them in comparison.\n *\n * Note that this observable will never complete.\n *\n * ```ts\n * import { timer, interval } from 'rxjs';\n *\n * timer(0, 1000).subscribe(n => console.log('timer', n));\n * interval(1000).subscribe(n => console.log('interval', n));\n * ```\n *\n * ### Known Limitations\n *\n * - The {@link asyncScheduler} uses `setTimeout` which has limitations for how far in the future it can be scheduled.\n *\n * - If a `scheduler` is provided that returns a timestamp other than an epoch from `now()`, and\n * a `Date` object is passed to the `dueTime` argument, the calculation for when the first emission\n * should occur will be incorrect. In this case, it would be best to do your own calculations\n * ahead of time, and pass a `number` in as the `startDue`.\n * @param startDue If a `number`, is the time to wait before starting the interval.\n * If a `Date`, is the exact time at which to start the interval.\n * @param intervalDuration The delay between each value emitted in the interval. Passing a\n * negative number here will result in immediate completion after the first value is emitted, as though\n * no `intervalDuration` was passed at all.\n * @param scheduler The scheduler to use to schedule the delay. Defaults to {@link asyncScheduler}.\n */\nexport function timer(startDue: number | Date, intervalDuration: number, scheduler?: SchedulerLike): Observable<number>;\n\n/**\n * @deprecated The signature allowing `undefined` to be passed for `intervalDuration` will be removed in v8. Use the `timer(dueTime, scheduler?)` signature instead.\n */\nexport function timer(dueTime: number | Date, unused: undefined, scheduler?: SchedulerLike): Observable<0>;\n\nexport function timer(\n  dueTime: number | Date = 0,\n  intervalOrScheduler?: number | SchedulerLike,\n  scheduler: SchedulerLike = asyncScheduler\n): Observable<number> {\n  // Since negative intervalDuration is treated as though no\n  // interval was specified at all, we start with a negative number.\n  let intervalDuration = -1;\n\n  if (intervalOrScheduler != null) {\n    // If we have a second argument, and it's a scheduler,\n    // override the scheduler we had defaulted. Otherwise,\n    // it must be an interval.\n    if (isScheduler(intervalOrScheduler)) {\n      scheduler = intervalOrScheduler;\n    } else {\n      // Note that this *could* be negative, in which case\n      // it's like not passing an intervalDuration at all.\n      intervalDuration = intervalOrScheduler;\n    }\n  }\n\n  return new Observable((subscriber) => {\n    // If a valid date is passed, calculate how long to wait before\n    // executing the first value... otherwise, if it's a number just schedule\n    // that many milliseconds (or scheduler-specified unit size) in the future.\n    let due = isValidDate(dueTime) ? +dueTime - scheduler!.now() : dueTime;\n\n    if (due < 0) {\n      // Ensure we don't schedule in the future.\n      due = 0;\n    }\n\n    // The incrementing value we emit.\n    let n = 0;\n\n    // Start the timer.\n    return scheduler.schedule(function () {\n      if (!subscriber.closed) {\n        // Emit the next value and increment.\n        subscriber.next(n++);\n\n        if (0 <= intervalDuration) {\n          // If we have a interval after the initial timer,\n          // reschedule with the period.\n          this.schedule(undefined, intervalDuration);\n        } else {\n          // We didn't have an interval. So just complete.\n          subscriber.complete();\n        }\n      }\n    }, due);\n  });\n}\n", "import { Observable } from '../Observable';\nimport { noop } from '../util/noop';\n\n/**\n * An Observable that emits no items to the Observer and never completes.\n *\n * ![](never.png)\n *\n * A simple Observable that emits neither values nor errors nor the completion\n * notification. It can be used for testing purposes or for composing with other\n * Observables. Please note that by never emitting a complete notification, this\n * Observable keeps the subscription from being disposed automatically.\n * Subscriptions need to be manually disposed.\n *\n * ##  Example\n *\n * Emit the number 7, then never emit anything else (not even complete)\n *\n * ```ts\n * import { NEVER, startWith } from 'rxjs';\n *\n * const info = () => console.log('Will not be called');\n *\n * const result = NEVER.pipe(startWith(7));\n * result.subscribe({\n *   next: x => console.log(x),\n *   error: info,\n *   complete: info\n * });\n * ```\n *\n * @see {@link Observable}\n * @see {@link EMPTY}\n * @see {@link of}\n * @see {@link throwError}\n */\nexport const NEVER = new Observable<never>(noop);\n\n/**\n * @deprecated Replaced with the {@link NEVER} constant. Will be removed in v8.\n */\nexport function never() {\n  return NEVER;\n}\n", "const { isArray } = Array;\n\n/**\n * Used in operators and functions that accept either a list of arguments, or an array of arguments\n * as a single argument.\n */\nexport function argsOrArgArray<T>(args: (T | T[])[]): T[] {\n  return args.length === 1 && isArray(args[0]) ? args[0] : (args as T[]);\n}\n", "import { OperatorFunction, MonoTypeOperatorFunction, TruthyTypesOf } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function filter<T, S extends T, A>(predicate: (this: A, value: T, index: number) => value is S, thisArg: A): OperatorFunction<T, S>;\nexport function filter<T, S extends T>(predicate: (value: T, index: number) => value is S): OperatorFunction<T, S>;\nexport function filter<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function filter<T, A>(predicate: (this: A, value: T, index: number) => boolean, thisArg: A): MonoTypeOperatorFunction<T>;\nexport function filter<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T>;\n\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * ![](filter.png)\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * ## Example\n *\n * Emit only click events whose target was a DIV element\n *\n * ```ts\n * import { fromEvent, filter } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * const clicks = fromEvent(document, 'click');\n * const clicksOnDivs = clicks.pipe(filter(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\n * clicksOnDivs.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param thisArg An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return A function that returns an Observable that emits items from the\n * source Observable that satisfy the specified `predicate`.\n */\nexport function filter<T>(predicate: (value: T, index: number) => boolean, thisArg?: any): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    // An index passed to our predicate function on each call.\n    let index = 0;\n\n    // Subscribe to the source, all errors and completions are\n    // forwarded to the consumer.\n    source.subscribe(\n      // Call the predicate with the appropriate `this` context,\n      // if the predicate returns `true`, then send the value\n      // to the consumer.\n      createOperatorSubscriber(subscriber, (value) => predicate.call(thisArg, value, index++) && subscriber.next(value))\n    );\n  });\n}\n", "import { SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { EMPTY } from './empty';\n\nexport function range(start: number, count?: number): Observable<number>;\n\n/**\n * @deprecated The `scheduler` parameter will be removed in v8. Use `range(start, count).pipe(observeOn(scheduler))` instead. Details: Details: https://rxjs.dev/deprecations/scheduler-argument\n */\nexport function range(start: number, count: number | undefined, scheduler: SchedulerLike): Observable<number>;\n\n/**\n * Creates an Observable that emits a sequence of numbers within a specified\n * range.\n *\n * <span class=\"informal\">Emits a sequence of numbers in a range.</span>\n *\n * ![](range.png)\n *\n * `range` operator emits a range of sequential integers, in order, where you\n * select the `start` of the range and its `length`. By default, uses no\n * {@link SchedulerLike} and just delivers the notifications synchronously, but may use\n * an optional {@link SchedulerLike} to regulate those deliveries.\n *\n * ## Example\n *\n * Produce a range of numbers\n *\n * ```ts\n * import { range } from 'rxjs';\n *\n * const numbers = range(1, 3);\n *\n * numbers.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Logs:\n * // 1\n * // 2\n * // 3\n * // 'Complete!'\n * ```\n *\n * @see {@link timer}\n * @see {@link interval}\n *\n * @param {number} [start=0] The value of the first integer in the sequence.\n * @param {number} count The number of sequential integers to generate.\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} to use for scheduling\n * the emissions of the notifications.\n * @return {Observable} An Observable of numbers that emits a finite range of\n * sequential integers.\n */\nexport function range(start: number, count?: number, scheduler?: SchedulerLike): Observable<number> {\n  if (count == null) {\n    // If one argument was passed, it's the count, not the start.\n    count = start;\n    start = 0;\n  }\n\n  if (count <= 0) {\n    // No count? We're going nowhere. Return EMPTY.\n    return EMPTY;\n  }\n\n  // Where the range should stop.\n  const end = count + start;\n\n  return new Observable(\n    scheduler\n      ? // The deprecated scheduled path.\n        (subscriber) => {\n          let n = start;\n          return scheduler.schedule(function () {\n            if (n < end) {\n              subscriber.next(n++);\n              this.schedule();\n            } else {\n              subscriber.complete();\n            }\n          });\n        }\n      : // Standard synchronous range.\n        (subscriber) => {\n          let n = start;\n          while (n < end && !subscriber.closed) {\n            subscriber.next(n++);\n          }\n          subscriber.complete();\n        }\n  );\n}\n", "import { Observable } from '../Observable';\n\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { Subscription } from '../Subscription';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { operate } from '../util/lift';\n\n/* tslint:disable:max-line-length */\nexport function catchError<T, O extends ObservableInput<any>>(\n  selector: (err: any, caught: Observable<T>) => O\n): OperatorFunction<T, T | ObservedValueOf<O>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <span class=\"informal\">\n * It only listens to the error channel and ignores notifications.\n * Handles errors from the source observable, and maps them to a new observable.\n * The error may also be rethrown, or a new error can be thrown to emit an error from the result.\n * </span>\n *\n * ![](catch.png)\n *\n * This operator handles errors, but forwards along all other events to the resulting observable.\n * If the source observable terminates with an error, it will map that error to a new observable,\n * subscribe to it, and forward all of its events to the resulting observable.\n *\n * ## Examples\n *\n * Continue with a different Observable when there's an error\n *\n * ```ts\n * import { of, map, catchError } from 'rxjs';\n *\n * of(1, 2, 3, 4, 5)\n *   .pipe(\n *     map(n => {\n *       if (n === 4) {\n *         throw 'four!';\n *       }\n *       return n;\n *     }),\n *     catchError(err => of('I', 'II', 'III', 'IV', 'V'))\n *   )\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n * ```\n *\n * Retry the caught source Observable again in case of error, similar to `retry()` operator\n *\n * ```ts\n * import { of, map, catchError, take } from 'rxjs';\n *\n * of(1, 2, 3, 4, 5)\n *   .pipe(\n *     map(n => {\n *       if (n === 4) {\n *         throw 'four!';\n *       }\n *       return n;\n *     }),\n *     catchError((err, caught) => caught),\n *     take(30)\n *   )\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n * ```\n *\n * Throw a new error when the source Observable throws an error\n *\n * ```ts\n * import { of, map, catchError } from 'rxjs';\n *\n * of(1, 2, 3, 4, 5)\n *   .pipe(\n *     map(n => {\n *       if (n === 4) {\n *         throw 'four!';\n *       }\n *       return n;\n *     }),\n *     catchError(err => {\n *       throw 'error in source. Details: ' + err;\n *     })\n *   )\n *   .subscribe({\n *     next: x => console.log(x),\n *     error: err => console.log(err)\n *   });\n *   // 1, 2, 3, error in source. Details: four!\n * ```\n *\n * @see {@link onErrorResumeNext}\n * @see {@link repeat}\n * @see {@link repeatWhen}\n * @see {@link retry }\n * @see {@link retryWhen}\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n * is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n * is returned by the `selector` will be used to continue the observable chain.\n * @return A function that returns an Observable that originates from either\n * the source or the Observable returned by the `selector` function.\n */\nexport function catchError<T, O extends ObservableInput<any>>(\n  selector: (err: any, caught: Observable<T>) => O\n): OperatorFunction<T, T | ObservedValueOf<O>> {\n  return operate((source, subscriber) => {\n    let innerSub: Subscription | null = null;\n    let syncUnsub = false;\n    let handledResult: Observable<ObservedValueOf<O>>;\n\n    innerSub = source.subscribe(\n      createOperatorSubscriber(subscriber, undefined, undefined, (err) => {\n        handledResult = innerFrom(selector(err, catchError(selector)(source)));\n        if (innerSub) {\n          innerSub.unsubscribe();\n          innerSub = null;\n          handledResult.subscribe(subscriber);\n        } else {\n          // We don't have an innerSub yet, that means the error was synchronous\n          // because the subscribe call hasn't returned yet.\n          syncUnsub = true;\n        }\n      })\n    );\n\n    if (syncUnsub) {\n      // We have a synchronous error, we need to make sure to\n      // finalize right away. This ensures that callbacks in the `finalize` operator are called\n      // at the right time, and that finalization occurs at the expected\n      // time between the source error and the subscription to the\n      // next observable.\n      innerSub.unsubscribe();\n      innerSub = null;\n      handledResult!.subscribe(subscriber);\n    }\n  });\n}\n", "import { mergeMap } from './mergeMap';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/* tslint:disable:max-line-length */\nexport function concatMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function concatMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function concatMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, in a serialized fashion waiting for each one to complete before\n * merging the next.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link concatAll}.</span>\n *\n * ![](concatMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each new inner Observable is\n * concatenated with the previous inner Observable.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set\n * to `1`.\n *\n * ## Example\n *\n * For each click event, tick every second from 0 to 3, with no concurrency\n *\n * ```ts\n * import { fromEvent, concatMap, interval, take } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   concatMap(ev => interval(1000).pipe(take(4)))\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMapTo}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return A function that returns an Observable that emits the result of\n * applying the projection function (and the optional deprecated\n * `resultSelector`) to each item emitted by the source Observable and taking\n * values from each projected inner Observable sequentially.\n */\nexport function concatMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  return isFunction(resultSelector) ? mergeMap(project, resultSelector, 1) : mergeMap(project, 1);\n}\n", "import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscribable } from '../types';\n\n/**\n * Used to convert a subscribable to an observable.\n *\n * Currently, this is only used within internals.\n *\n * TODO: Discuss ObservableInput supporting \"Subscribable\".\n * https://github.com/ReactiveX/rxjs/issues/5909\n *\n * @param subscribable A subscribable\n */\nexport function fromSubscribable<T>(subscribable: Subscribable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => subscribable.subscribe(subscriber));\n}\n", "import { OperatorFunction, ObservableInput, ObservedValueOf, SubjectLike } from '../types';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { fromSubscribable } from '../observable/fromSubscribable';\n\n/**\n * An object used to configure {@link connect} operator.\n */\nexport interface ConnectConfig<T> {\n  /**\n   * A factory function used to create the Subject through which the source\n   * is multicast. By default, this creates a {@link Subject}.\n   */\n  connector: () => SubjectLike<T>;\n}\n\n/**\n * The default configuration for `connect`.\n */\nconst DEFAULT_CONFIG: ConnectConfig<unknown> = {\n  connector: () => new Subject<unknown>(),\n};\n\n/**\n * Creates an observable by multicasting the source within a function that\n * allows the developer to define the usage of the multicast prior to connection.\n *\n * This is particularly useful if the observable source you wish to multicast could\n * be synchronous or asynchronous. This sets it apart from {@link share}, which, in the\n * case of totally synchronous sources will fail to share a single subscription with\n * multiple consumers, as by the time the subscription to the result of {@link share}\n * has returned, if the source is synchronous its internal reference count will jump from\n * 0 to 1 back to 0 and reset.\n *\n * To use `connect`, you provide a `selector` function that will give you\n * a multicast observable that is not yet connected. You then use that multicast observable\n * to create a resulting observable that, when subscribed, will set up your multicast. This is\n * generally, but not always, accomplished with {@link merge}.\n *\n * Note that using a {@link takeUntil} inside of `connect`'s `selector` _might_ mean you were looking\n * to use the {@link takeWhile} operator instead.\n *\n * When you subscribe to the result of `connect`, the `selector` function will be called. After\n * the `selector` function returns, the observable it returns will be subscribed to, _then_ the\n * multicast will be connected to the source.\n *\n * ## Example\n *\n * Sharing a totally synchronous observable\n *\n * ```ts\n * import { of, tap, connect, merge, map, filter } from 'rxjs';\n *\n * const source$ = of(1, 2, 3, 4, 5).pipe(\n *   tap({\n *     subscribe: () => console.log('subscription started'),\n *     next: n => console.log(`source emitted ${ n }`)\n *   })\n * );\n *\n * source$.pipe(\n *   // Notice in here we're merging 3 subscriptions to `shared$`.\n *   connect(shared$ => merge(\n *     shared$.pipe(map(n => `all ${ n }`)),\n *     shared$.pipe(filter(n => n % 2 === 0), map(n => `even ${ n }`)),\n *     shared$.pipe(filter(n => n % 2 === 1), map(n => `odd ${ n }`))\n *   ))\n * )\n * .subscribe(console.log);\n *\n * // Expected output: (notice only one subscription)\n * 'subscription started'\n * 'source emitted 1'\n * 'all 1'\n * 'odd 1'\n * 'source emitted 2'\n * 'all 2'\n * 'even 2'\n * 'source emitted 3'\n * 'all 3'\n * 'odd 3'\n * 'source emitted 4'\n * 'all 4'\n * 'even 4'\n * 'source emitted 5'\n * 'all 5'\n * 'odd 5'\n * ```\n *\n * @param selector A function used to set up the multicast. Gives you a multicast observable\n * that is not yet connected. With that, you're expected to create and return\n * and Observable, that when subscribed to, will utilize the multicast observable.\n * After this function is executed -- and its return value subscribed to -- the\n * operator will subscribe to the source, and the connection will be made.\n * @param config The configuration object for `connect`.\n */\nexport function connect<T, O extends ObservableInput<unknown>>(\n  selector: (shared: Observable<T>) => O,\n  config: ConnectConfig<T> = DEFAULT_CONFIG\n): OperatorFunction<T, ObservedValueOf<O>> {\n  const { connector } = config;\n  return operate((source, subscriber) => {\n    const subject = connector();\n    innerFrom(selector(fromSubscribable(subject))).subscribe(subscriber);\n    subscriber.add(source.subscribe(subject));\n  });\n}\n", "import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits a given value if the source Observable completes without emitting any\n * `next` value, otherwise mirrors the source Observable.\n *\n * <span class=\"informal\">If the source Observable turns out to be empty, then\n * this operator will emit a default value.</span>\n *\n * ![](defaultIfEmpty.png)\n *\n * `defaultIfEmpty` emits the values emitted by the source Observable or a\n * specified default value if the source Observable is empty (completes without\n * having emitted any `next` value).\n *\n * ## Example\n *\n * If no clicks happen in 5 seconds, then emit 'no clicks'\n *\n * ```ts\n * import { fromEvent, takeUntil, interval, defaultIfEmpty } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const clicksBeforeFive = clicks.pipe(takeUntil(interval(5000)));\n * const result = clicksBeforeFive.pipe(defaultIfEmpty('no clicks'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link empty}\n * @see {@link last}\n *\n * @param defaultValue The default value used if the source\n * Observable is empty.\n * @return A function that returns an Observable that emits either the\n * specified `defaultValue` if the source Observable emits no items, or the\n * values emitted by the source Observable.\n */\nexport function defaultIfEmpty<T, R>(defaultValue: R): OperatorFunction<T, T | R> {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          hasValue = true;\n          subscriber.next(value);\n        },\n        () => {\n          if (!hasValue) {\n            subscriber.next(defaultValue!);\n          }\n          subscriber.complete();\n        }\n      )\n    );\n  });\n}\n", "import { MonoTypeOperatorFunction } from '../types';\nimport { EMPTY } from '../observable/empty';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * ![](take.png)\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * ## Example\n *\n * Take the first 5 seconds of an infinite 1-second interval Observable\n *\n * ```ts\n * import { interval, take } from 'rxjs';\n *\n * const intervalCount = interval(1000);\n * const takeFive = intervalCount.pipe(take(5));\n * takeFive.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // 3\n * // 4\n * ```\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param count The maximum number of `next` values to emit.\n * @return A function that returns an Observable that emits only the first\n * `count` values emitted by the source Observable, or all of the values from\n * the source if the source emits fewer than `count` values.\n */\nexport function take<T>(count: number): MonoTypeOperatorFunction<T> {\n  return count <= 0\n    ? // If we are taking no values, that's empty.\n      () => EMPTY\n    : operate((source, subscriber) => {\n        let seen = 0;\n        source.subscribe(\n          createOperatorSubscriber(subscriber, (value) => {\n            // Increment the number of values we have seen,\n            // then check it against the allowed count to see\n            // if we are still letting values through.\n            if (++seen <= count) {\n              subscriber.next(value);\n              // If we have met or passed our allowed count,\n              // we need to complete. We have to do <= here,\n              // because re-entrant code will increment `seen` twice.\n              if (count <= seen) {\n                subscriber.complete();\n              }\n            }\n          })\n        );\n      });\n}\n", "import { MonoTypeOperatorFunction } from '../types';\nimport { identity } from '../util/identity';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function distinctUntilChanged<T>(comparator?: (previous: T, current: T) => boolean): MonoTypeOperatorFunction<T>;\nexport function distinctUntilChanged<T, K>(\n  comparator: (previous: K, current: K) => boolean,\n  keySelector: (value: T) => K\n): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns a result {@link Observable} that emits all values pushed by the source observable if they\n * are distinct in comparison to the last value the result observable emitted.\n *\n * When provided without parameters or with the first parameter (`{@link distinctUntilChanged#comparator comparator}`),\n * it behaves like this:\n *\n * 1. It will always emit the first value from the source.\n * 2. For all subsequent values pushed by the source, they will be compared to the previously emitted values\n *    using the provided `comparator` or an `===` equality check.\n * 3. If the value pushed by the source is determined to be unequal by this check, that value is emitted and\n *    becomes the new \"previously emitted value\" internally.\n *\n * When the second parameter (`{@link distinctUntilChanged#keySelector keySelector}`) is provided, the behavior\n * changes:\n *\n * 1. It will always emit the first value from the source.\n * 2. The `keySelector` will be run against all values, including the first value.\n * 3. For all values after the first, the selected key will be compared against the key selected from\n *    the previously emitted value using the `comparator`.\n * 4. If the keys are determined to be unequal by this check, the value (not the key), is emitted\n *    and the selected key from that value is saved for future comparisons against other keys.\n *\n * ## Examples\n *\n * A very basic example with no `{@link distinctUntilChanged#comparator comparator}`. Note that `1` is emitted more than once,\n * because it's distinct in comparison to the _previously emitted_ value,\n * not in comparison to _all other emitted values_.\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * of(1, 1, 1, 2, 2, 2, 1, 1, 3, 3)\n *   .pipe(distinctUntilChanged())\n *   .subscribe(console.log);\n * // Logs: 1, 2, 1, 3\n * ```\n *\n * With a `{@link distinctUntilChanged#comparator comparator}`, you can do custom comparisons. Let's say\n * you only want to emit a value when all of its components have\n * changed:\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * const totallyDifferentBuilds$ = of(\n *   { engineVersion: '1.1.0', transmissionVersion: '1.2.0' },\n *   { engineVersion: '1.1.0', transmissionVersion: '1.4.0' },\n *   { engineVersion: '1.3.0', transmissionVersion: '1.4.0' },\n *   { engineVersion: '1.3.0', transmissionVersion: '1.5.0' },\n *   { engineVersion: '2.0.0', transmissionVersion: '1.5.0' }\n * ).pipe(\n *   distinctUntilChanged((prev, curr) => {\n *     return (\n *       prev.engineVersion === curr.engineVersion ||\n *       prev.transmissionVersion === curr.transmissionVersion\n *     );\n *   })\n * );\n *\n * totallyDifferentBuilds$.subscribe(console.log);\n *\n * // Logs:\n * // { engineVersion: '1.1.0', transmissionVersion: '1.2.0' }\n * // { engineVersion: '1.3.0', transmissionVersion: '1.4.0' }\n * // { engineVersion: '2.0.0', transmissionVersion: '1.5.0' }\n * ```\n *\n * You can also provide a custom `{@link distinctUntilChanged#comparator comparator}` to check that emitted\n * changes are only in one direction. Let's say you only want to get\n * the next record temperature:\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * const temps$ = of(30, 31, 20, 34, 33, 29, 35, 20);\n *\n * const recordHighs$ = temps$.pipe(\n *   distinctUntilChanged((prevHigh, temp) => {\n *     // If the current temp is less than\n *     // or the same as the previous record,\n *     // the record hasn't changed.\n *     return temp <= prevHigh;\n *   })\n * );\n *\n * recordHighs$.subscribe(console.log);\n * // Logs: 30, 31, 34, 35\n * ```\n *\n * Selecting update events only when the `updatedBy` field shows\n * the account changed hands.\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * // A stream of updates to a given account\n * const accountUpdates$ = of(\n *   { updatedBy: 'blesh', data: [] },\n *   { updatedBy: 'blesh', data: [] },\n *   { updatedBy: 'ncjamieson', data: [] },\n *   { updatedBy: 'ncjamieson', data: [] },\n *   { updatedBy: 'blesh', data: [] }\n * );\n *\n * // We only want the events where it changed hands\n * const changedHands$ = accountUpdates$.pipe(\n *   distinctUntilChanged(undefined, update => update.updatedBy)\n * );\n *\n * changedHands$.subscribe(console.log);\n * // Logs:\n * // { updatedBy: 'blesh', data: Array[0] }\n * // { updatedBy: 'ncjamieson', data: Array[0] }\n * // { updatedBy: 'blesh', data: Array[0] }\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param comparator A function used to compare the previous and current keys for\n * equality. Defaults to a `===` check.\n * @param keySelector Used to select a key value to be passed to the `comparator`.\n *\n * @return A function that returns an Observable that emits items from the\n * source Observable with distinct values.\n */\nexport function distinctUntilChanged<T, K>(\n  comparator?: (previous: K, current: K) => boolean,\n  keySelector: (value: T) => K = identity as (value: T) => K\n): MonoTypeOperatorFunction<T> {\n  // We've been allowing `null` do be passed as the `compare`, so we can't do\n  // a default value for the parameter, because that will only work\n  // for `undefined`.\n  comparator = comparator ?? defaultCompare;\n\n  return operate((source, subscriber) => {\n    // The previous key, used to compare against keys selected\n    // from new arrivals to determine \"distinctiveness\".\n    let previousKey: K;\n    // Whether or not this is the first value we've gotten.\n    let first = true;\n\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        // We always call the key selector.\n        const currentKey = keySelector(value);\n\n        // If it's the first value, we always emit it.\n        // Otherwise, we compare this key to the previous key, and\n        // if the comparer returns false, we emit.\n        if (first || !comparator!(previousKey, currentKey)) {\n          // Update our state *before* we emit the value\n          // as emission can be the source of re-entrant code\n          // in functional libraries like this. We only really\n          // need to do this if it's the first value, or if the\n          // key we're tracking in previous needs to change.\n          first = false;\n          previousKey = currentKey;\n\n          // Emit the value!\n          subscriber.next(value);\n        }\n      })\n    );\n  });\n}\n\nfunction defaultCompare(a: any, b: any) {\n  return a === b;\n}\n", "import { distinctUntilChanged } from './distinctUntilChanged';\nimport { MonoTypeOperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function distinctUntilKeyChanged<T>(key: keyof T): MonoTypeOperatorFunction<T>;\nexport function distinctUntilKeyChanged<T, K extends keyof T>(key: K, compare: (x: T[K], y: T[K]) => boolean): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item,\n * using a property accessed by using the key provided to check if the two items are distinct.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * ## Examples\n *\n * An example comparing the name of persons\n *\n * ```ts\n * import { of, distinctUntilKeyChanged } from 'rxjs';\n *\n * of(\n *   { age: 4, name: 'Foo' },\n *   { age: 7, name: 'Bar' },\n *   { age: 5, name: 'Foo' },\n *   { age: 6, name: 'Foo' }\n * ).pipe(\n *   distinctUntilKeyChanged('name')\n * )\n * .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n * ```\n *\n * An example comparing the first letters of the name\n *\n * ```ts\n * import { of, distinctUntilKeyChanged } from 'rxjs';\n *\n * of(\n *   { age: 4, name: 'Foo1' },\n *   { age: 7, name: 'Bar' },\n *   { age: 5, name: 'Foo2' },\n *   { age: 6, name: 'Foo3' }\n * ).pipe(\n *   distinctUntilKeyChanged('name', (x, y) => x.substring(0, 3) === y.substring(0, 3))\n * )\n * .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo1' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo2' }\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n *\n * @param {string} key String key for object property lookup on each item.\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return A function that returns an Observable that emits items from the\n * source Observable with distinct values based on the key specified.\n */\nexport function distinctUntilKeyChanged<T, K extends keyof T>(key: K, compare?: (x: T[K], y: T[K]) => boolean): MonoTypeOperatorFunction<T> {\n  return distinctUntilChanged((x: T, y: T) => compare ? compare(x[key], y[key]) : x[key] === y[key]);\n}\n", "import { EmptyError } from '../util/EmptyError';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * If the source observable completes without emitting a value, it will emit\n * an error. The error will be created at that time by the optional\n * `errorFactory` argument, otherwise, the error will be {@link EmptyError}.\n *\n * ![](throwIfEmpty.png)\n *\n * ## Example\n *\n * Throw an error if the document wasn't clicked within 1 second\n *\n * ```ts\n * import { fromEvent, takeUntil, timer, throwIfEmpty } from 'rxjs';\n *\n * const click$ = fromEvent(document, 'click');\n *\n * click$.pipe(\n *   takeUntil(timer(1000)),\n *   throwIfEmpty(() => new Error('The document was not clicked within 1 second'))\n * )\n * .subscribe({\n *   next() {\n *    console.log('The document was clicked');\n *   },\n *   error(err) {\n *     console.error(err.message);\n *   }\n * });\n * ```\n *\n * @param errorFactory A factory function called to produce the\n * error to be thrown when the source observable completes without emitting a\n * value.\n * @return A function that returns an Observable that throws an error if the\n * source Observable completed without emitting.\n */\nexport function throwIfEmpty<T>(errorFactory: () => any = defaultErrorFactory): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          hasValue = true;\n          subscriber.next(value);\n        },\n        () => (hasValue ? subscriber.complete() : subscriber.error(errorFactory()))\n      )\n    );\n  });\n}\n\nfunction defaultErrorFactory() {\n  return new EmptyError();\n}\n", "/** prettier */\nimport { Observable } from '../Observable';\nimport { concat } from '../observable/concat';\nimport { of } from '../observable/of';\nimport { MonoTypeOperatorFunction, SchedulerLike, OperatorFunction, ValueFromArray } from '../types';\n\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `concatAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function endWith<T>(scheduler: SchedulerLike): MonoTypeOperatorFunction<T>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `concatAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function endWith<T, A extends unknown[] = T[]>(\n  ...valuesAndScheduler: [...A, SchedulerLike]\n): OperatorFunction<T, T | ValueFromArray<A>>;\n\nexport function endWith<T, A extends unknown[] = T[]>(...values: A): OperatorFunction<T, T | ValueFromArray<A>>;\n\n/**\n * Returns an observable that will emit all values from the source, then synchronously emit\n * the provided value(s) immediately after the source completes.\n *\n * NOTE: Passing a last argument of a Scheduler is _deprecated_, and may result in incorrect\n * types in TypeScript.\n *\n * This is useful for knowing when an observable ends. Particularly when paired with an\n * operator like {@link takeUntil}\n *\n * ![](endWith.png)\n *\n * ## Example\n *\n * Emit values to know when an interval starts and stops. The interval will\n * stop when a user clicks anywhere on the document.\n *\n * ```ts\n * import { interval, map, fromEvent, startWith, takeUntil, endWith } from 'rxjs';\n *\n * const ticker$ = interval(5000).pipe(\n *   map(() => 'tick')\n * );\n *\n * const documentClicks$ = fromEvent(document, 'click');\n *\n * ticker$.pipe(\n *   startWith('interval started'),\n *   takeUntil(documentClicks$),\n *   endWith('interval ended by click')\n * )\n * .subscribe(x => console.log(x));\n *\n * // Result (assuming a user clicks after 15 seconds)\n * // 'interval started'\n * // 'tick'\n * // 'tick'\n * // 'tick'\n * // 'interval ended by click'\n * ```\n *\n * @see {@link startWith}\n * @see {@link concat}\n * @see {@link takeUntil}\n *\n * @param values Items you want the modified Observable to emit last.\n * @return A function that returns an Observable that emits all values from the\n * source, then synchronously emits the provided value(s) immediately after the\n * source completes.\n */\nexport function endWith<T>(...values: Array<T | SchedulerLike>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => concat(source, of(...values)) as Observable<T>;\n}\n", "import { Observable } from '../Observable';\nimport { EmptyError } from '../util/EmptyError';\nimport { OperatorFunction, TruthyTypesOf } from '../types';\nimport { filter } from './filter';\nimport { take } from './take';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { identity } from '../util/identity';\n\nexport function first<T, D = T>(predicate?: null, defaultValue?: D): OperatorFunction<T, T | D>;\nexport function first<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\nexport function first<T, D>(predicate: BooleanConstructor, defaultValue: D): OperatorFunction<T, TruthyTypesOf<T> | D>;\nexport function first<T, S extends T>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S,\n  defaultValue?: S\n): OperatorFunction<T, S>;\nexport function first<T, S extends T, D>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S,\n  defaultValue: D\n): OperatorFunction<T, S | D>;\nexport function first<T, D = T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  defaultValue?: D\n): OperatorFunction<T, T | D>;\n\n/**\n * Emits only the first value (or the first value that meets some condition)\n * emitted by the source Observable.\n *\n * <span class=\"informal\">Emits only the first value. Or emits only the first\n * value that passes some test.</span>\n *\n * ![](first.png)\n *\n * If called with no arguments, `first` emits the first value of the source\n * Observable, then completes. If called with a `predicate` function, `first`\n * emits the first value of the source that matches the specified condition. Throws an error if\n * `defaultValue` was not provided and a matching element is not found.\n *\n * ## Examples\n *\n * Emit only the first click that happens on the DOM\n *\n * ```ts\n * import { fromEvent, first } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(first());\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Emits the first click that happens on a DIV\n *\n * ```ts\n * import { fromEvent, first } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(first(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link take}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * This is how `first()` is different from {@link take}(1) which completes instead.\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\n * An optional function called with each item to test for condition matching.\n * @param {D} [defaultValue] The default value emitted in case no valid value\n * was found on the source.\n * @return A function that returns an Observable that emits the first item that\n * matches the condition.\n */\nexport function first<T, D>(\n  predicate?: ((value: T, index: number, source: Observable<T>) => boolean) | null,\n  defaultValue?: D\n): OperatorFunction<T, T | D> {\n  const hasDefaultValue = arguments.length >= 2;\n  return (source: Observable<T>) =>\n    source.pipe(\n      predicate ? filter((v, i) => predicate(v, i, source)) : identity,\n      take(1),\n      hasDefaultValue ? defaultIfEmpty(defaultValue!) : throwIfEmpty(() => new EmptyError())\n    );\n}\n", "import { Subject } from '../Subject';\nimport { Observable } from '../Observable';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { OperatorFunction, UnaryFunction, ObservedValueOf, ObservableInput } from '../types';\nimport { isFunction } from '../util/isFunction';\nimport { connect } from './connect';\n\n/**\n * An operator that creates a {@link ConnectableObservable}, that when connected,\n * with the `connect` method, will use the provided subject to multicast the values\n * from the source to all consumers.\n *\n * @param subject The subject to multicast through.\n * @return A function that returns a {@link ConnectableObservable}\n * @deprecated Will be removed in v8. To create a connectable observable, use {@link connectable}.\n * If you're using {@link refCount} after `multicast`, use the {@link share} operator instead.\n * `multicast(subject), refCount()` is equivalent to\n * `share({ connector: () => subject, resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false })`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function multicast<T>(subject: Subject<T>): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\n\n/**\n * Because this is deprecated in favor of the {@link connect} operator, and was otherwise poorly documented,\n * rather than duplicate the effort of documenting the same behavior, please see documentation for the\n * {@link connect} operator.\n *\n * @param subject The subject used to multicast.\n * @param selector A setup function to setup the multicast\n * @return A function that returns an observable that mirrors the observable returned by the selector.\n * @deprecated Will be removed in v8. Use the {@link connect} operator instead.\n * `multicast(subject, selector)` is equivalent to\n * `connect(selector, { connector: () => subject })`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function multicast<T, O extends ObservableInput<any>>(\n  subject: Subject<T>,\n  selector: (shared: Observable<T>) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n\n/**\n * An operator that creates a {@link ConnectableObservable}, that when connected,\n * with the `connect` method, will use the provided subject to multicast the values\n * from the source to all consumers.\n *\n * @param subjectFactory A factory that will be called to create the subject. Passing a function here\n * will cause the underlying subject to be \"reset\" on error, completion, or refCounted unsubscription of\n * the source.\n * @return A function that returns a {@link ConnectableObservable}\n * @deprecated Will be removed in v8. To create a connectable observable, use {@link connectable}.\n * If you're using {@link refCount} after `multicast`, use the {@link share} operator instead.\n * `multicast(() => new BehaviorSubject('test')), refCount()` is equivalent to\n * `share({ connector: () => new BehaviorSubject('test') })`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function multicast<T>(subjectFactory: () => Subject<T>): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\n\n/**\n * Because this is deprecated in favor of the {@link connect} operator, and was otherwise poorly documented,\n * rather than duplicate the effort of documenting the same behavior, please see documentation for the\n * {@link connect} operator.\n *\n * @param subjectFactory A factory that creates the subject used to multicast.\n * @param selector A function to setup the multicast and select the output.\n * @return A function that returns an observable that mirrors the observable returned by the selector.\n * @deprecated Will be removed in v8. Use the {@link connect} operator instead.\n * `multicast(subjectFactory, selector)` is equivalent to\n * `connect(selector, { connector: subjectFactory })`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function multicast<T, O extends ObservableInput<any>>(\n  subjectFactory: () => Subject<T>,\n  selector: (shared: Observable<T>) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n\n/**\n * @deprecated Will be removed in v8. Use the {@link connectable} observable, the {@link connect} operator or the\n * {@link share} operator instead. See the overloads below for equivalent replacement examples of this operator's\n * behaviors.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function multicast<T, R>(\n  subjectOrSubjectFactory: Subject<T> | (() => Subject<T>),\n  selector?: (source: Observable<T>) => Observable<R>\n): OperatorFunction<T, R> {\n  const subjectFactory = isFunction(subjectOrSubjectFactory) ? subjectOrSubjectFactory : () => subjectOrSubjectFactory;\n\n  if (isFunction(selector)) {\n    // If a selector function is provided, then we're a \"normal\" operator that isn't\n    // going to return a ConnectableObservable. We can use `connect` to do what we\n    // need to do.\n    return connect(selector, {\n      connector: subjectFactory,\n    });\n  }\n\n  return (source: Observable<T>) => new ConnectableObservable<any>(source, subjectFactory);\n}\n", "import { map } from './map';\nimport { OperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<T, K1 extends keyof T>(k1: K1): OperatorFunction<T, T[K1]>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<T, K1 extends keyof T, K2 extends keyof T[K1]>(k1: K1, k2: K2): OperatorFunction<T, T[K1][K2]>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<T, K1 extends keyof T, K2 extends keyof T[K1], K3 extends keyof T[K1][K2]>(\n  k1: K1,\n  k2: K2,\n  k3: K3\n): OperatorFunction<T, T[K1][K2][K3]>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<T, K1 extends keyof T, K2 extends keyof T[K1], K3 extends keyof T[K1][K2], K4 extends keyof T[K1][K2][K3]>(\n  k1: K1,\n  k2: K2,\n  k3: K3,\n  k4: K4\n): OperatorFunction<T, T[K1][K2][K3][K4]>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<\n  T,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2],\n  K4 extends keyof T[K1][K2][K3],\n  K5 extends keyof T[K1][K2][K3][K4]\n>(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5): OperatorFunction<T, T[K1][K2][K3][K4][K5]>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<\n  T,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2],\n  K4 extends keyof T[K1][K2][K3],\n  K5 extends keyof T[K1][K2][K3][K4],\n  K6 extends keyof T[K1][K2][K3][K4][K5]\n>(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5, k6: K6): OperatorFunction<T, T[K1][K2][K3][K4][K5][K6]>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<\n  T,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2],\n  K4 extends keyof T[K1][K2][K3],\n  K5 extends keyof T[K1][K2][K3][K4],\n  K6 extends keyof T[K1][K2][K3][K4][K5]\n>(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5, k6: K6, ...rest: string[]): OperatorFunction<T, unknown>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<T>(...properties: string[]): OperatorFunction<T, unknown>;\n/* tslint:enable:max-line-length */\n\n/**\n * Maps each source value to its specified nested property.\n *\n * <span class=\"informal\">Like {@link map}, but meant only for picking one of\n * the nested properties of every emitted value.</span>\n *\n * ![](pluck.png)\n *\n * Given a list of strings or numbers describing a path to a property, retrieves\n * the value of a specified nested property from all values in the source\n * Observable. If a property can't be resolved, it will return `undefined` for\n * that value.\n *\n * ## Example\n *\n * Map every click to the tagName of the clicked target element\n *\n * ```ts\n * import { fromEvent, pluck } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const tagNames = clicks.pipe(pluck('target', 'tagName'));\n *\n * tagNames.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link map}\n *\n * @param properties The nested properties to pluck from each source\n * value.\n * @return A function that returns an Observable of property values from the\n * source values.\n * @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8.\n */\nexport function pluck<T, R>(...properties: Array<string | number | symbol>): OperatorFunction<T, R> {\n  const length = properties.length;\n  if (length === 0) {\n    throw new Error('list of properties cannot be empty.');\n  }\n  return map((x) => {\n    let currentProp: any = x;\n    for (let i = 0; i < length; i++) {\n      const p = currentProp?.[properties[i]];\n      if (typeof p !== 'undefined') {\n        currentProp = p;\n      } else {\n        return undefined;\n      }\n    }\n    return currentProp;\n  });\n}\n", "import { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { multicast } from './multicast';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { MonoTypeOperatorFunction, OperatorFunction, UnaryFunction, ObservableInput, ObservedValueOf } from '../types';\nimport { connect } from './connect';\n\n/**\n * Returns a connectable observable that, when connected, will multicast\n * all values through a single underlying {@link Subject} instance.\n *\n * @deprecated Will be removed in v8. To create a connectable observable, use {@link connectable}.\n * `source.pipe(publish())` is equivalent to\n * `connectable(source, { connector: () => new Subject(), resetOnDisconnect: false })`.\n * If you're using {@link refCount} after `publish`, use {@link share} operator instead.\n * `source.pipe(publish(), refCount())` is equivalent to\n * `source.pipe(share({ resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false }))`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publish<T>(): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\n\n/**\n * Returns an observable, that when subscribed to, creates an underlying {@link Subject},\n * provides an observable view of it to a `selector` function, takes the observable result of\n * that selector function and subscribes to it, sending its values to the consumer, _then_ connects\n * the subject to the original source.\n *\n * @param selector A function used to setup multicasting prior to automatic connection.\n *\n * @deprecated Will be removed in v8. Use the {@link connect} operator instead.\n * `publish(selector)` is equivalent to `connect(selector)`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publish<T, O extends ObservableInput<any>>(selector: (shared: Observable<T>) => O): OperatorFunction<T, ObservedValueOf<O>>;\n\n/**\n * Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called\n * before it begins emitting items to those Observers that have subscribed to it.\n *\n * <span class=\"informal\">Makes a cold Observable hot</span>\n *\n * ![](publish.png)\n *\n * ## Examples\n *\n * Make `source$` hot by applying `publish` operator, then merge each inner observable into a single one\n * and subscribe\n *\n * ```ts\n * import { zip, interval, of, map, publish, merge, tap } from 'rxjs';\n *\n * const source$ = zip(interval(2000), of(1, 2, 3, 4, 5, 6, 7, 8, 9))\n *   .pipe(map(([, number]) => number));\n *\n * source$\n *   .pipe(\n *     publish(multicasted$ =>\n *       merge(\n *         multicasted$.pipe(tap(x => console.log('Stream 1:', x))),\n *         multicasted$.pipe(tap(x => console.log('Stream 2:', x))),\n *         multicasted$.pipe(tap(x => console.log('Stream 3:', x)))\n *       )\n *     )\n *   )\n *   .subscribe();\n *\n * // Results every two seconds\n * // Stream 1: 1\n * // Stream 2: 1\n * // Stream 3: 1\n * // ...\n * // Stream 1: 9\n * // Stream 2: 9\n * // Stream 3: 9\n * ```\n *\n * @see {@link publishLast}\n * @see {@link publishReplay}\n * @see {@link publishBehavior}\n *\n * @param {Function} [selector] - Optional selector function which can use the multicasted source sequence as many times\n * as needed, without causing multiple subscriptions to the source sequence.\n * Subscribers to the given source will receive all notifications of the source from the time of the subscription on.\n * @return A function that returns a ConnectableObservable that upon connection\n * causes the source Observable to emit items to its Observers.\n * @deprecated Will be removed in v8. Use the {@link connectable} observable, the {@link connect} operator or the\n * {@link share} operator instead. See the overloads below for equivalent replacement examples of this operator's\n * behaviors.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publish<T, R>(selector?: OperatorFunction<T, R>): MonoTypeOperatorFunction<T> | OperatorFunction<T, R> {\n  return selector ? (source) => connect(selector)(source) : (source) => multicast(new Subject<T>())(source);\n}\n", "import { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { Subscription } from '../Subscription';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { identity } from '../util/identity';\nimport { timer } from '../observable/timer';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * The {@link retry} operator configuration object. `retry` either accepts a `number`\n * or an object described by this interface.\n */\nexport interface RetryConfig {\n  /**\n   * The maximum number of times to retry. If `count` is omitted, `retry` will try to\n   * resubscribe on errors infinite number of times.\n   */\n  count?: number;\n  /**\n   * The number of milliseconds to delay before retrying, OR a function to\n   * return a notifier for delaying. If a function is given, that function should\n   * return a notifier that, when it emits will retry the source. If the notifier\n   * completes _without_ emitting, the resulting observable will complete without error,\n   * if the notifier errors, the error will be pushed to the result.\n   */\n  delay?: number | ((error: any, retryCount: number) => ObservableInput<any>);\n  /**\n   * Whether or not to reset the retry counter when the retried subscription\n   * emits its first value.\n   */\n  resetOnSuccess?: boolean;\n}\n\nexport function retry<T>(count?: number): MonoTypeOperatorFunction<T>;\nexport function retry<T>(config: RetryConfig): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`.\n *\n * If the source Observable calls `error`, this method will resubscribe to the source Observable for a maximum of\n * `count` resubscriptions rather than propagating the `error` call.\n *\n * ![](retry.png)\n *\n * The number of retries is determined by the `count` parameter. It can be set either by passing a number to\n * `retry` function or by setting `count` property when `retry` is configured using {@link RetryConfig}. If\n * `count` is omitted, `retry` will try to resubscribe on errors infinite number of times.\n *\n * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those\n * emitted during failed subscriptions. For example, if an Observable fails at first but emits `[1, 2]` then\n * succeeds the second time and emits: `[1, 2, 3, 4, 5, complete]` then the complete stream of emissions and\n * notifications would be: `[1, 2, 1, 2, 3, 4, 5, complete]`.\n *\n * ## Example\n *\n * ```ts\n * import { interval, mergeMap, throwError, of, retry } from 'rxjs';\n *\n * const source = interval(1000);\n * const result = source.pipe(\n *   mergeMap(val => val > 5 ? throwError(() => 'Error!') : of(val)),\n *   retry(2) // retry 2 times on error\n * );\n *\n * result.subscribe({\n *   next: value => console.log(value),\n *   error: err => console.log(`${ err }: Retried 2 times then quit!`)\n * });\n *\n * // Output:\n * // 0..1..2..3..4..5..\n * // 0..1..2..3..4..5..\n * // 0..1..2..3..4..5..\n * // 'Error!: Retried 2 times then quit!'\n * ```\n *\n * @see {@link retryWhen}\n *\n * @param configOrCount - Either number of retry attempts before failing or a {@link RetryConfig} object.\n * @return A function that returns an Observable that will resubscribe to the\n * source stream when the source stream errors, at most `count` times.\n */\nexport function retry<T>(configOrCount: number | RetryConfig = Infinity): MonoTypeOperatorFunction<T> {\n  let config: RetryConfig;\n  if (configOrCount && typeof configOrCount === 'object') {\n    config = configOrCount;\n  } else {\n    config = {\n      count: configOrCount as number,\n    };\n  }\n  const { count = Infinity, delay, resetOnSuccess: resetOnSuccess = false } = config;\n\n  return count <= 0\n    ? identity\n    : operate((source, subscriber) => {\n        let soFar = 0;\n        let innerSub: Subscription | null;\n        const subscribeForRetry = () => {\n          let syncUnsub = false;\n          innerSub = source.subscribe(\n            createOperatorSubscriber(\n              subscriber,\n              (value) => {\n                // If we're resetting on success\n                if (resetOnSuccess) {\n                  soFar = 0;\n                }\n                subscriber.next(value);\n              },\n              // Completions are passed through to consumer.\n              undefined,\n              (err) => {\n                if (soFar++ < count) {\n                  // We are still under our retry count\n                  const resub = () => {\n                    if (innerSub) {\n                      innerSub.unsubscribe();\n                      innerSub = null;\n                      subscribeForRetry();\n                    } else {\n                      syncUnsub = true;\n                    }\n                  };\n\n                  if (delay != null) {\n                    // The user specified a retry delay.\n                    // They gave us a number, use a timer, otherwise, it's a function,\n                    // and we're going to call it to get a notifier.\n                    const notifier = typeof delay === 'number' ? timer(delay) : innerFrom(delay(err, soFar));\n                    const notifierSubscriber = createOperatorSubscriber(\n                      subscriber,\n                      () => {\n                        // After we get the first notification, we\n                        // unsubscribe from the notifier, because we don't want anymore\n                        // and we resubscribe to the source.\n                        notifierSubscriber.unsubscribe();\n                        resub();\n                      },\n                      () => {\n                        // The notifier completed without emitting.\n                        // The author is telling us they want to complete.\n                        subscriber.complete();\n                      }\n                    );\n                    notifier.subscribe(notifierSubscriber);\n                  } else {\n                    // There was no notifier given. Just resub immediately.\n                    resub();\n                  }\n                } else {\n                  // We're past our maximum number of retries.\n                  // Just send along the error.\n                  subscriber.error(err);\n                }\n              }\n            )\n          );\n          if (syncUnsub) {\n            innerSub.unsubscribe();\n            innerSub = null;\n            subscribeForRetry();\n          }\n        };\n        subscribeForRetry();\n      });\n}\n", "import { innerFrom } from '../observable/innerFrom';\nimport { Subject } from '../Subject';\nimport { SafeSubscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, SubjectLike, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\n\nexport interface ShareConfig<T> {\n  /**\n   * The factory used to create the subject that will connect the source observable to\n   * multicast consumers.\n   */\n  connector?: () => SubjectLike<T>;\n  /**\n   * If `true`, the resulting observable will reset internal state on error from source and return to a \"cold\" state. This\n   * allows the resulting observable to be \"retried\" in the event of an error.\n   * If `false`, when an error comes from the source it will push the error into the connecting subject, and the subject\n   * will remain the connecting subject, meaning the resulting observable will not go \"cold\" again, and subsequent retries\n   * or resubscriptions will resubscribe to that same subject. In all cases, RxJS subjects will emit the same error again, however\n   * {@link ReplaySubject} will also push its buffered values before pushing the error.\n   * It is also possible to pass a notifier factory returning an `ObservableInput` instead which grants more fine-grained\n   * control over how and when the reset should happen. This allows behaviors like conditional or delayed resets.\n   */\n  resetOnError?: boolean | ((error: any) => ObservableInput<any>);\n  /**\n   * If `true`, the resulting observable will reset internal state on completion from source and return to a \"cold\" state. This\n   * allows the resulting observable to be \"repeated\" after it is done.\n   * If `false`, when the source completes, it will push the completion through the connecting subject, and the subject\n   * will remain the connecting subject, meaning the resulting observable will not go \"cold\" again, and subsequent repeats\n   * or resubscriptions will resubscribe to that same subject.\n   * It is also possible to pass a notifier factory returning an `ObservableInput` instead which grants more fine-grained\n   * control over how and when the reset should happen. This allows behaviors like conditional or delayed resets.\n   */\n  resetOnComplete?: boolean | (() => ObservableInput<any>);\n  /**\n   * If `true`, when the number of subscribers to the resulting observable reaches zero due to those subscribers unsubscribing, the\n   * internal state will be reset and the resulting observable will return to a \"cold\" state. This means that the next\n   * time the resulting observable is subscribed to, a new subject will be created and the source will be subscribed to\n   * again.\n   * If `false`, when the number of subscribers to the resulting observable reaches zero due to unsubscription, the subject\n   * will remain connected to the source, and new subscriptions to the result will be connected through that same subject.\n   * It is also possible to pass a notifier factory returning an `ObservableInput` instead which grants more fine-grained\n   * control over how and when the reset should happen. This allows behaviors like conditional or delayed resets.\n   */\n  resetOnRefCountZero?: boolean | (() => ObservableInput<any>);\n}\n\nexport function share<T>(): MonoTypeOperatorFunction<T>;\n\nexport function share<T>(options: ShareConfig<T>): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n * This is an alias for `multicast(() => new Subject()), refCount()`.\n *\n * The subscription to the underlying source Observable can be reset (unsubscribe and resubscribe for new subscribers),\n * if the subscriber count to the shared observable drops to 0, or if the source Observable errors or completes. It is\n * possible to use notifier factories for the resets to allow for behaviors like conditional or delayed resets. Please\n * note that resetting on error or complete of the source Observable does not behave like a transparent retry or restart\n * of the source because the error or complete will be forwarded to all subscribers and their subscription will be\n * closed. Only new subscribers after a reset on error or complete happened will cause a fresh subscription to the\n * source. To achieve transparent retries or restarts pipe the source through appropriate operators before sharing.\n *\n * ![](share.png)\n *\n * ## Example\n *\n * Generate new multicast Observable from the `source` Observable value\n *\n * ```ts\n * import { interval, tap, map, take, share } from 'rxjs';\n *\n * const source = interval(1000).pipe(\n *   tap(x => console.log('Processing: ', x)),\n *   map(x => x * x),\n *   take(6),\n *   share()\n * );\n *\n * source.subscribe(x => console.log('subscription 1: ', x));\n * source.subscribe(x => console.log('subscription 2: ', x));\n *\n * // Logs:\n * // Processing: 0\n * // subscription 1: 0\n * // subscription 2: 0\n * // Processing: 1\n * // subscription 1: 1\n * // subscription 2: 1\n * // Processing: 2\n * // subscription 1: 4\n * // subscription 2: 4\n * // Processing: 3\n * // subscription 1: 9\n * // subscription 2: 9\n * // Processing: 4\n * // subscription 1: 16\n * // subscription 2: 16\n * // Processing: 5\n * // subscription 1: 25\n * // subscription 2: 25\n * ```\n *\n * ## Example with notifier factory: Delayed reset\n *\n * ```ts\n * import { interval, take, share, timer } from 'rxjs';\n *\n * const source = interval(1000).pipe(\n *   take(3),\n *   share({\n *     resetOnRefCountZero: () => timer(1000)\n *   })\n * );\n *\n * const subscriptionOne = source.subscribe(x => console.log('subscription 1: ', x));\n * setTimeout(() => subscriptionOne.unsubscribe(), 1300);\n *\n * setTimeout(() => source.subscribe(x => console.log('subscription 2: ', x)), 1700);\n *\n * setTimeout(() => source.subscribe(x => console.log('subscription 3: ', x)), 5000);\n *\n * // Logs:\n * // subscription 1:  0\n * // (subscription 1 unsubscribes here)\n * // (subscription 2 subscribes here ~400ms later, source was not reset)\n * // subscription 2:  1\n * // subscription 2:  2\n * // (subscription 2 unsubscribes here)\n * // (subscription 3 subscribes here ~2000ms later, source did reset before)\n * // subscription 3:  0\n * // subscription 3:  1\n * // subscription 3:  2\n * ```\n *\n * @see {@link shareReplay}\n *\n * @return A function that returns an Observable that mirrors the source.\n */\nexport function share<T>(options: ShareConfig<T> = {}): MonoTypeOperatorFunction<T> {\n  const { connector = () => new Subject<T>(), resetOnError = true, resetOnComplete = true, resetOnRefCountZero = true } = options;\n  // It's necessary to use a wrapper here, as the _operator_ must be\n  // referentially transparent. Otherwise, it cannot be used in calls to the\n  // static `pipe` function - to create a partial pipeline.\n  //\n  // The _operator function_ - the function returned by the _operator_ - will\n  // not be referentially transparent - as it shares its source - but the\n  // _operator function_ is called when the complete pipeline is composed via a\n  // call to a source observable's `pipe` method - not when the static `pipe`\n  // function is called.\n  return (wrapperSource) => {\n    let connection: SafeSubscriber<T> | undefined;\n    let resetConnection: Subscription | undefined;\n    let subject: SubjectLike<T> | undefined;\n    let refCount = 0;\n    let hasCompleted = false;\n    let hasErrored = false;\n\n    const cancelReset = () => {\n      resetConnection?.unsubscribe();\n      resetConnection = undefined;\n    };\n    // Used to reset the internal state to a \"cold\"\n    // state, as though it had never been subscribed to.\n    const reset = () => {\n      cancelReset();\n      connection = subject = undefined;\n      hasCompleted = hasErrored = false;\n    };\n    const resetAndUnsubscribe = () => {\n      // We need to capture the connection before\n      // we reset (if we need to reset).\n      const conn = connection;\n      reset();\n      conn?.unsubscribe();\n    };\n\n    return operate<T, T>((source, subscriber) => {\n      refCount++;\n      if (!hasErrored && !hasCompleted) {\n        cancelReset();\n      }\n\n      // Create the subject if we don't have one yet. Grab a local reference to\n      // it as well, which avoids non-null assertions when using it and, if we\n      // connect to it now, then error/complete need a reference after it was\n      // reset.\n      const dest = (subject = subject ?? connector());\n\n      // Add the finalization directly to the subscriber - instead of returning it -\n      // so that the handling of the subscriber's unsubscription will be wired\n      // up _before_ the subscription to the source occurs. This is done so that\n      // the assignment to the source connection's `closed` property will be seen\n      // by synchronous firehose sources.\n      subscriber.add(() => {\n        refCount--;\n\n        // If we're resetting on refCount === 0, and it's 0, we only want to do\n        // that on \"unsubscribe\", really. Resetting on error or completion is a different\n        // configuration.\n        if (refCount === 0 && !hasErrored && !hasCompleted) {\n          resetConnection = handleReset(resetAndUnsubscribe, resetOnRefCountZero);\n        }\n      });\n\n      // The following line adds the subscription to the subscriber passed.\n      // Basically, `subscriber === dest.subscribe(subscriber)` is `true`.\n      dest.subscribe(subscriber);\n\n      if (\n        !connection &&\n        // Check this shareReplay is still activate - it can be reset to 0\n        // and be \"unsubscribed\" _before_ it actually subscribes.\n        // If we were to subscribe then, it'd leak and get stuck.\n        refCount > 0\n      ) {\n        // We need to create a subscriber here - rather than pass an observer and\n        // assign the returned subscription to connection - because it's possible\n        // for reentrant subscriptions to the shared observable to occur and in\n        // those situations we want connection to be already-assigned so that we\n        // don't create another connection to the source.\n        connection = new SafeSubscriber({\n          next: (value) => dest.next(value),\n          error: (err) => {\n            hasErrored = true;\n            cancelReset();\n            resetConnection = handleReset(reset, resetOnError, err);\n            dest.error(err);\n          },\n          complete: () => {\n            hasCompleted = true;\n            cancelReset();\n            resetConnection = handleReset(reset, resetOnComplete);\n            dest.complete();\n          },\n        });\n        innerFrom(source).subscribe(connection);\n      }\n    })(wrapperSource);\n  };\n}\n\nfunction handleReset<T extends unknown[] = never[]>(\n  reset: () => void,\n  on: boolean | ((...args: T) => ObservableInput<any>),\n  ...args: T\n): Subscription | undefined {\n  if (on === true) {\n    reset();\n    return;\n  }\n\n  if (on === false) {\n    return;\n  }\n\n  const onSubscriber = new SafeSubscriber({\n    next: () => {\n      onSubscriber.unsubscribe();\n      reset();\n    },\n  });\n\n  return innerFrom(on(...args)).subscribe(onSubscriber);\n}\n", "import { ReplaySubject } from '../ReplaySubject';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { share } from './share';\n\nexport interface ShareReplayConfig {\n  bufferSize?: number;\n  windowTime?: number;\n  refCount: boolean;\n  scheduler?: SchedulerLike;\n}\n\nexport function shareReplay<T>(config: ShareReplayConfig): MonoTypeOperatorFunction<T>;\nexport function shareReplay<T>(bufferSize?: number, windowTime?: number, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n\n/**\n * Share source and replay specified number of emissions on subscription.\n *\n * This operator is a specialization of `replay` that connects to a source observable\n * and multicasts through a `ReplaySubject` constructed with the specified arguments.\n * A successfully completed source will stay cached in the `shareReplay`ed observable forever,\n * but an errored source can be retried.\n *\n * ## Why use `shareReplay`?\n *\n * You generally want to use `shareReplay` when you have side-effects or taxing computations\n * that you do not wish to be executed amongst multiple subscribers.\n * It may also be valuable in situations where you know you will have late subscribers to\n * a stream that need access to previously emitted values.\n * This ability to replay values on subscription is what differentiates {@link share} and `shareReplay`.\n *\n * ## Reference counting\n *\n * By default `shareReplay` will use `refCount` of false, meaning that it will _not_ unsubscribe the\n * source when the reference counter drops to zero, i.e. the inner `ReplaySubject` will _not_ be unsubscribed\n * (and potentially run for ever).\n * This is the default as it is expected that `shareReplay` is often used to keep around expensive to setup\n * observables which we want to keep running instead of having to do the expensive setup again.\n *\n * As of RXJS version 6.4.0 a new overload signature was added to allow for manual control over what\n * happens when the operators internal reference counter drops to zero.\n * If `refCount` is true, the source will be unsubscribed from once the reference count drops to zero, i.e.\n * the inner `ReplaySubject` will be unsubscribed. All new subscribers will receive value emissions from a\n * new `ReplaySubject` which in turn will cause a new subscription to the source observable.\n *\n * ## Examples\n *\n * Example with a third subscriber coming late to the party\n *\n * ```ts\n * import { interval, take, shareReplay } from 'rxjs';\n *\n * const shared$ = interval(2000).pipe(\n *   take(6),\n *   shareReplay(3)\n * );\n *\n * shared$.subscribe(x => console.log('sub A: ', x));\n * shared$.subscribe(y => console.log('sub B: ', y));\n *\n * setTimeout(() => {\n *   shared$.subscribe(y => console.log('sub C: ', y));\n * }, 11000);\n *\n * // Logs:\n * // (after ~2000 ms)\n * // sub A: 0\n * // sub B: 0\n * // (after ~4000 ms)\n * // sub A: 1\n * // sub B: 1\n * // (after ~6000 ms)\n * // sub A: 2\n * // sub B: 2\n * // (after ~8000 ms)\n * // sub A: 3\n * // sub B: 3\n * // (after ~10000 ms)\n * // sub A: 4\n * // sub B: 4\n * // (after ~11000 ms, sub C gets the last 3 values)\n * // sub C: 2\n * // sub C: 3\n * // sub C: 4\n * // (after ~12000 ms)\n * // sub A: 5\n * // sub B: 5\n * // sub C: 5\n * ```\n *\n * Example for `refCount` usage\n *\n * ```ts\n * import { Observable, tap, interval, shareReplay, take } from 'rxjs';\n *\n * const log = <T>(name: string, source: Observable<T>) => source.pipe(\n *   tap({\n *     subscribe: () => console.log(`${ name }: subscribed`),\n *     next: value => console.log(`${ name }: ${ value }`),\n *     complete: () => console.log(`${ name }: completed`),\n *     finalize: () => console.log(`${ name }: unsubscribed`)\n *   })\n * );\n *\n * const obs$ = log('source', interval(1000));\n *\n * const shared$ = log('shared', obs$.pipe(\n *   shareReplay({ bufferSize: 1, refCount: true }),\n *   take(2)\n * ));\n *\n * shared$.subscribe(x => console.log('sub A: ', x));\n * shared$.subscribe(y => console.log('sub B: ', y));\n *\n * // PRINTS:\n * // shared: subscribed <-- reference count = 1\n * // source: subscribed\n * // shared: subscribed <-- reference count = 2\n * // source: 0\n * // shared: 0\n * // sub A: 0\n * // shared: 0\n * // sub B: 0\n * // source: 1\n * // shared: 1\n * // sub A: 1\n * // shared: completed <-- take(2) completes the subscription for sub A\n * // shared: unsubscribed <-- reference count = 1\n * // shared: 1\n * // sub B: 1\n * // shared: completed <-- take(2) completes the subscription for sub B\n * // shared: unsubscribed <-- reference count = 0\n * // source: unsubscribed <-- replaySubject unsubscribes from source observable because the reference count dropped to 0 and refCount is true\n *\n * // In case of refCount being false, the unsubscribe is never called on the source and the source would keep on emitting, even if no subscribers\n * // are listening.\n * // source: 2\n * // source: 3\n * // source: 4\n * // ...\n * ```\n *\n * @see {@link publish}\n * @see {@link share}\n * @see {@link publishReplay}\n *\n * @param configOrBufferSize Maximum element count of the replay buffer or {@link ShareReplayConfig configuration}\n * object.\n * @param windowTime Maximum time length of the replay buffer in milliseconds.\n * @param scheduler Scheduler where connected observers within the selector function\n * will be invoked on.\n * @return A function that returns an Observable sequence that contains the\n * elements of a sequence produced by multicasting the source sequence within a\n * selector function.\n */\nexport function shareReplay<T>(\n  configOrBufferSize?: ShareReplayConfig | number,\n  windowTime?: number,\n  scheduler?: SchedulerLike\n): MonoTypeOperatorFunction<T> {\n  let bufferSize: number;\n  let refCount = false;\n  if (configOrBufferSize && typeof configOrBufferSize === 'object') {\n    ({ bufferSize = Infinity, windowTime = Infinity, refCount = false, scheduler } = configOrBufferSize);\n  } else {\n    bufferSize = (configOrBufferSize ?? Infinity) as number;\n  }\n  return share<T>({\n    connector: () => new ReplaySubject(bufferSize, windowTime, scheduler),\n    resetOnError: true,\n    resetOnComplete: false,\n    resetOnRefCountZero: refCount,\n  });\n}\n", "import { concat } from '../observable/concat';\nimport { OperatorFunction, SchedulerLike, ValueFromArray } from '../types';\nimport { popScheduler } from '../util/args';\nimport { operate } from '../util/lift';\n\n// Devs are more likely to pass null or undefined than they are a scheduler\n// without accompanying values. To make things easier for (naughty) devs who\n// use the `strictNullChecks: false` TypeScript compiler option, these\n// overloads with explicit null and undefined values are included.\n\nexport function startWith<T>(value: null): OperatorFunction<T, T | null>;\nexport function startWith<T>(value: undefined): OperatorFunction<T, T | undefined>;\n\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `concatAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function startWith<T, A extends readonly unknown[] = T[]>(\n  ...valuesAndScheduler: [...A, SchedulerLike]\n): OperatorFunction<T, T | ValueFromArray<A>>;\nexport function startWith<T, A extends readonly unknown[] = T[]>(...values: A): OperatorFunction<T, T | ValueFromArray<A>>;\n\n/**\n * Returns an observable that, at the moment of subscription, will synchronously emit all\n * values provided to this operator, then subscribe to the source and mirror all of its emissions\n * to subscribers.\n *\n * This is a useful way to know when subscription has occurred on an existing observable.\n *\n * <span class=\"informal\">First emits its arguments in order, and then any\n * emissions from the source.</span>\n *\n * ![](startWith.png)\n *\n * ## Examples\n *\n * Emit a value when a timer starts.\n *\n * ```ts\n * import { timer, map, startWith } from 'rxjs';\n *\n * timer(1000)\n *   .pipe(\n *     map(() => 'timer emit'),\n *     startWith('timer start')\n *   )\n *   .subscribe(x => console.log(x));\n *\n * // results:\n * // 'timer start'\n * // 'timer emit'\n * ```\n *\n * @param values Items you want the modified Observable to emit first.\n * @return A function that returns an Observable that synchronously emits\n * provided values before subscribing to the source Observable.\n *\n * @see {@link endWith}\n * @see {@link finalize}\n * @see {@link concat}\n */\nexport function startWith<T, D>(...values: D[]): OperatorFunction<T, T | D> {\n  const scheduler = popScheduler(values);\n  return operate((source, subscriber) => {\n    // Here we can't pass `undefined` as a scheduler, because if we did, the\n    // code inside of `concat` would be confused by the `undefined`, and treat it\n    // like an invalid observable. So we have to split it two different ways.\n    (scheduler ? concat(values, source, scheduler) : concat(values, source)).subscribe(subscriber);\n  });\n}\n", "import { Subscriber } from '../Subscriber';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/* tslint:disable:max-line-length */\nexport function switchMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function switchMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function switchMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switchAll}.</span>\n *\n * ![](switchMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * ## Example\n *\n * Generate new Observable according to source Observable values\n *\n * ```ts\n * import { of, switchMap } from 'rxjs';\n *\n * const switched = of(1, 2, 3).pipe(switchMap(x => of(x, x ** 2, x ** 3)));\n * switched.subscribe(x => console.log(x));\n * // outputs\n * // 1\n * // 1\n * // 1\n * // 2\n * // 4\n * // 8\n * // 3\n * // 9\n * // 27\n * ```\n *\n * Restart an interval Observable on every click event\n *\n * ```ts\n * import { fromEvent, switchMap, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(switchMap(() => interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchAll}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return A function that returns an Observable that emits the result of\n * applying the projection function (and the optional deprecated\n * `resultSelector`) to each item emitted by the source Observable and taking\n * only the values from the most recently projected inner Observable.\n */\nexport function switchMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  return operate((source, subscriber) => {\n    let innerSubscriber: Subscriber<ObservedValueOf<O>> | null = null;\n    let index = 0;\n    // Whether or not the source subscription has completed\n    let isComplete = false;\n\n    // We only complete the result if the source is complete AND we don't have an active inner subscription.\n    // This is called both when the source completes and when the inners complete.\n    const checkComplete = () => isComplete && !innerSubscriber && subscriber.complete();\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          // Cancel the previous inner subscription if there was one\n          innerSubscriber?.unsubscribe();\n          let innerIndex = 0;\n          const outerIndex = index++;\n          // Start the next inner subscription\n          innerFrom(project(value, outerIndex)).subscribe(\n            (innerSubscriber = createOperatorSubscriber(\n              subscriber,\n              // When we get a new inner value, next it through. Note that this is\n              // handling the deprecate result selector here. This is because with this architecture\n              // it ends up being smaller than using the map operator.\n              (innerValue) => subscriber.next(resultSelector ? resultSelector(value, innerValue, outerIndex, innerIndex++) : innerValue),\n              () => {\n                // The inner has completed. Null out the inner subscriber to\n                // free up memory and to signal that we have no inner subscription\n                // currently.\n                innerSubscriber = null!;\n                checkComplete();\n              }\n            ))\n          );\n        },\n        () => {\n          isComplete = true;\n          checkComplete();\n        }\n      )\n    );\n  });\n}\n", "import { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { noop } from '../util/noop';\n\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits a value. Then, it completes.</span>\n *\n * ![](takeUntil.png)\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value, the output Observable stops mirroring the source Observable\n * and completes. If the `notifier` doesn't emit any value and completes\n * then `takeUntil` will pass all values.\n *\n * ## Example\n *\n * Tick every second until the first click happens\n *\n * ```ts\n * import { interval, fromEvent, takeUntil } from 'rxjs';\n *\n * const source = interval(1000);\n * const clicks = fromEvent(document, 'click');\n * const result = source.pipe(takeUntil(clicks));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return A function that returns an Observable that emits the values from the\n * source Observable until `notifier` emits its first value.\n */\nexport function takeUntil<T>(notifier: ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    innerFrom(notifier).subscribe(createOperatorSubscriber(subscriber, () => subscriber.complete(), noop));\n    !subscriber.closed && source.subscribe(subscriber);\n  });\n}\n", "import { OperatorFunction, MonoTypeOperatorFunction, TruthyTypesOf } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function takeWhile<T>(predicate: BooleanConstructor, inclusive: true): MonoTypeOperatorFunction<T>;\nexport function takeWhile<T>(predicate: BooleanConstructor, inclusive: false): OperatorFunction<T, TruthyTypesOf<T>>;\nexport function takeWhile<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\nexport function takeWhile<T, S extends T>(predicate: (value: T, index: number) => value is S): OperatorFunction<T, S>;\nexport function takeWhile<T, S extends T>(predicate: (value: T, index: number) => value is S, inclusive: false): OperatorFunction<T, S>;\nexport function takeWhile<T>(predicate: (value: T, index: number) => boolean, inclusive?: boolean): MonoTypeOperatorFunction<T>;\n\n/**\n * Emits values emitted by the source Observable so long as each value satisfies\n * the given `predicate`, and then completes as soon as this `predicate` is not\n * satisfied.\n *\n * <span class=\"informal\">Takes values from the source only while they pass the\n * condition given. When the first value does not satisfy, it completes.</span>\n *\n * ![](takeWhile.png)\n *\n * `takeWhile` subscribes and begins mirroring the source Observable. Each value\n * emitted on the source is given to the `predicate` function which returns a\n * boolean, representing a condition to be satisfied by the source values. The\n * output Observable emits the source values until such time as the `predicate`\n * returns false, at which point `takeWhile` stops mirroring the source\n * Observable and completes the output Observable.\n *\n * ## Example\n *\n * Emit click events only while the clientX property is greater than 200\n *\n * ```ts\n * import { fromEvent, takeWhile } from 'rxjs';\n *\n * const clicks = fromEvent<PointerEvent>(document, 'click');\n * const result = clicks.pipe(takeWhile(ev => ev.clientX > 200));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates a value emitted by the source Observable and returns a boolean.\n * Also takes the (zero-based) index as the second argument.\n * @param {boolean} inclusive When set to `true` the value that caused\n * `predicate` to return `false` will also be emitted.\n * @return A function that returns an Observable that emits values from the\n * source Observable so long as each value satisfies the condition defined by\n * the `predicate`, then completes.\n */\nexport function takeWhile<T>(predicate: (value: T, index: number) => boolean, inclusive = false): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let index = 0;\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        const result = predicate(value, index++);\n        (result || inclusive) && subscriber.next(value);\n        !result && subscriber.complete();\n      })\n    );\n  });\n}\n", "import { MonoTypeOperatorFunction, Observer } from '../types';\nimport { isFunction } from '../util/isFunction';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { identity } from '../util/identity';\n\n/**\n * An extension to the {@link Observer} interface used only by the {@link tap} operator.\n *\n * It provides a useful set of callbacks a user can register to do side-effects in\n * cases other than what the usual {@link Observer} callbacks are\n * ({@link guide/glossary-and-semantics#next next},\n * {@link guide/glossary-and-semantics#error error} and/or\n * {@link guide/glossary-and-semantics#complete complete}).\n *\n * ## Example\n *\n * ```ts\n * import { fromEvent, switchMap, tap, interval, take } from 'rxjs';\n *\n * const source$ = fromEvent(document, 'click');\n * const result$ = source$.pipe(\n *   switchMap((_, i) => i % 2 === 0\n *     ? fromEvent(document, 'mousemove').pipe(\n *         tap({\n *           subscribe: () => console.log('Subscribed to the mouse move events after click #' + i),\n *           unsubscribe: () => console.log('Mouse move events #' + i + ' unsubscribed'),\n *           finalize: () => console.log('Mouse move events #' + i + ' finalized')\n *         })\n *       )\n *     : interval(1_000).pipe(\n *         take(5),\n *         tap({\n *           subscribe: () => console.log('Subscribed to the 1-second interval events after click #' + i),\n *           unsubscribe: () => console.log('1-second interval events #' + i + ' unsubscribed'),\n *           finalize: () => console.log('1-second interval events #' + i + ' finalized')\n *         })\n *       )\n *   )\n * );\n *\n * const subscription = result$.subscribe({\n *   next: console.log\n * });\n *\n * setTimeout(() => {\n *   console.log('Unsubscribe after 60 seconds');\n *   subscription.unsubscribe();\n * }, 60_000);\n * ```\n */\nexport interface TapObserver<T> extends Observer<T> {\n  /**\n   * The callback that `tap` operator invokes at the moment when the source Observable\n   * gets subscribed to.\n   */\n  subscribe: () => void;\n  /**\n   * The callback that `tap` operator invokes when an explicit\n   * {@link guide/glossary-and-semantics#unsubscription unsubscribe} happens. It won't get invoked on\n   * `error` or `complete` events.\n   */\n  unsubscribe: () => void;\n  /**\n   * The callback that `tap` operator invokes when any kind of\n   * {@link guide/glossary-and-semantics#finalization finalization} happens - either when\n   * the source Observable `error`s or `complete`s or when it gets explicitly unsubscribed\n   * by the user. There is no difference in using this callback or the {@link finalize}\n   * operator, but if you're already using `tap` operator, you can use this callback\n   * instead. You'd get the same result in either case.\n   */\n  finalize: () => void;\n}\nexport function tap<T>(observerOrNext?: Partial<TapObserver<T>> | ((value: T) => void)): MonoTypeOperatorFunction<T>;\n/** @deprecated Instead of passing separate callback arguments, use an observer argument. Signatures taking separate callback arguments will be removed in v8. Details: https://rxjs.dev/deprecations/subscribe-arguments */\nexport function tap<T>(\n  next?: ((value: T) => void) | null,\n  error?: ((error: any) => void) | null,\n  complete?: (() => void) | null\n): MonoTypeOperatorFunction<T>;\n\n/**\n * Used to perform side-effects for notifications from the source observable\n *\n * <span class=\"informal\">Used when you want to affect outside state with a notification without altering the notification</span>\n *\n * ![](tap.png)\n *\n * Tap is designed to allow the developer a designated place to perform side effects. While you _could_ perform side-effects\n * inside of a `map` or a `mergeMap`, that would make their mapping functions impure, which isn't always a big deal, but will\n * make it so you can't do things like memoize those functions. The `tap` operator is designed solely for such side-effects to\n * help you remove side-effects from other operations.\n *\n * For any notification, next, error, or complete, `tap` will call the appropriate callback you have provided to it, via a function\n * reference, or a partial observer, then pass that notification down the stream.\n *\n * The observable returned by `tap` is an exact mirror of the source, with one exception: Any error that occurs -- synchronously -- in a handler\n * provided to `tap` will be emitted as an error from the returned observable.\n *\n * > Be careful! You can mutate objects as they pass through the `tap` operator's handlers.\n *\n * The most common use of `tap` is actually for debugging. You can place a `tap(console.log)` anywhere\n * in your observable `pipe`, log out the notifications as they are emitted by the source returned by the previous\n * operation.\n *\n * ## Examples\n *\n * Check a random number before it is handled. Below is an observable that will use a random number between 0 and 1,\n * and emit `'big'` or `'small'` depending on the size of that number. But we wanted to log what the original number\n * was, so we have added a `tap(console.log)`.\n *\n * ```ts\n * import { of, tap, map } from 'rxjs';\n *\n * of(Math.random()).pipe(\n *   tap(console.log),\n *   map(n => n > 0.5 ? 'big' : 'small')\n * ).subscribe(console.log);\n * ```\n *\n * Using `tap` to analyze a value and force an error. Below is an observable where in our system we only\n * want to emit numbers 3 or less we get from another source. We can force our observable to error\n * using `tap`.\n *\n * ```ts\n * import { of, tap } from 'rxjs';\n *\n * const source = of(1, 2, 3, 4, 5);\n *\n * source.pipe(\n *   tap(n => {\n *     if (n > 3) {\n *       throw new TypeError(`Value ${ n } is greater than 3`);\n *     }\n *   })\n * )\n * .subscribe({ next: console.log, error: err => console.log(err.message) });\n * ```\n *\n * We want to know when an observable completes before moving on to the next observable. The system\n * below will emit a random series of `'X'` characters from 3 different observables in sequence. The\n * only way we know when one observable completes and moves to the next one, in this case, is because\n * we have added a `tap` with the side effect of logging to console.\n *\n * ```ts\n * import { of, concatMap, interval, take, map, tap } from 'rxjs';\n *\n * of(1, 2, 3).pipe(\n *   concatMap(n => interval(1000).pipe(\n *     take(Math.round(Math.random() * 10)),\n *     map(() => 'X'),\n *     tap({ complete: () => console.log(`Done with ${ n }`) })\n *   ))\n * )\n * .subscribe(console.log);\n * ```\n *\n * @see {@link finalize}\n * @see {@link TapObserver}\n *\n * @param observerOrNext A next handler or partial observer\n * @param error An error handler\n * @param complete A completion handler\n * @return A function that returns an Observable identical to the source, but\n * runs the specified Observer or callback(s) for each item.\n */\nexport function tap<T>(\n  observerOrNext?: Partial<TapObserver<T>> | ((value: T) => void) | null,\n  error?: ((e: any) => void) | null,\n  complete?: (() => void) | null\n): MonoTypeOperatorFunction<T> {\n  // We have to check to see not only if next is a function,\n  // but if error or complete were passed. This is because someone\n  // could technically call tap like `tap(null, fn)` or `tap(null, null, fn)`.\n  const tapObserver =\n    isFunction(observerOrNext) || error || complete\n      ? // tslint:disable-next-line: no-object-literal-type-assertion\n        ({ next: observerOrNext as Exclude<typeof observerOrNext, Partial<TapObserver<T>>>, error, complete } as Partial<TapObserver<T>>)\n      : observerOrNext;\n\n  return tapObserver\n    ? operate((source, subscriber) => {\n        tapObserver.subscribe?.();\n        let isUnsub = true;\n        source.subscribe(\n          createOperatorSubscriber(\n            subscriber,\n            (value) => {\n              tapObserver.next?.(value);\n              subscriber.next(value);\n            },\n            () => {\n              isUnsub = false;\n              tapObserver.complete?.();\n              subscriber.complete();\n            },\n            (err) => {\n              isUnsub = false;\n              tapObserver.error?.(err);\n              subscriber.error(err);\n            },\n            () => {\n              if (isUnsub) {\n                tapObserver.unsubscribe?.();\n              }\n              tapObserver.finalize?.();\n            }\n          )\n        );\n      })\n    : // Tap was called with no valid tap observer or handler\n      // (e.g. `tap(null, null, null)` or `tap(null)` or `tap()`)\n      // so we're going to just mirror the source.\n      identity;\n}\n", "import stringify from 'fast-json-stable-stringify';\nimport { TaquitoError, InvalidViewParameterError } from '@taquito/core';\nimport BigNumber from 'bignumber.js';\nimport { b58decode, validateAddress, ValidationResult, encodePubKey, b58decodeL2Address, encodeL2Address, stripHexPrefix, encodeKey, validatePublicKey, Prefix, b58cdecode, prefix, encodeKeyHash, validateKeyHash, validateSignature, validateChain } from '@taquito/utils';\n\nvar _a$1;\n/**\n *  @category Error\n *  @description Error that indicates an invalid map type being passed or used\n */\nclass InvalidMapTypeError extends TaquitoError {\n    constructor(mapType, reason) {\n        super();\n        this.mapType = mapType;\n        this.reason = reason;\n        this.message = `The map type '${JSON.stringify(mapType)}' is invalid. Reason: ${reason}.`;\n        this.name = 'InvalidMapTypeError';\n    }\n}\n// Retrieve a unique symbol associated with the key from the environment\n// Used in order to identify all object that are of type MichelsonMap even if they come from different module\nconst michelsonMapTypeSymbol = Symbol.for('taquito-michelson-map-type-symbol');\n/**\n *\n * @throws {@link InvalidMapTypeError} when the argument passed to mapType is not a valid map type\n */\nfunction validateMapType(value) {\n    if (!('prim' in value)) {\n        throw new InvalidMapTypeError(value, `Missing 'prim' field`);\n    }\n    if (!['map', 'big_map'].includes(value.prim)) {\n        throw new InvalidMapTypeError(value, `The prim field should be 'map' or 'big_map'`);\n    }\n    if (!('args' in value)) {\n        throw new InvalidMapTypeError(value, `Missing 'args' field`);\n    }\n    if (!Array.isArray(value.args)) {\n        throw new InvalidMapTypeError(value, `The 'args' field should be an array`);\n    }\n    if (value.args.length !== 2) {\n        throw new InvalidMapTypeError(value, `The 'args' field should have 2 elements`);\n    }\n}\n/**\n *  @category Error\n *  @description Error that indicates a map type mismatch, where an attempt to set a key or value in a Map doesn't match the defined type of the Map\n */\nclass MapTypecheckError extends TaquitoError {\n    constructor(value, type, objectType, reason) {\n        super();\n        this.value = value;\n        this.type = type;\n        this.reason = reason;\n        this.name = 'MapTypecheckError';\n        this.message = `The ${objectType} provided: ${JSON.stringify(value)} is not compatible with the expected michelson type: ${JSON.stringify(type)}. Reason: ${JSON.stringify(reason)}.`;\n        this.name = 'MapTypecheckError';\n    }\n}\n/**\n * @description Michelson Map is an abstraction over the michelson native map. It supports complex Pair as key\n */\nclass MichelsonMap {\n    // Used to check if an object is a michelson map.\n    // Using instanceof was not working for project that had multiple instance of taquito dependencies\n    // as the class constructor is different\n    static isMichelsonMap(obj) {\n        return obj && obj[michelsonMapTypeSymbol] === true;\n    }\n    /**\n     * @param mapType If specified key and value will be type-checked before being added to the map\n     *\n     * @example new MichelsonMap({ prim: \"map\", args: [{prim: \"string\"}, {prim: \"int\"}]})\n     */\n    constructor(mapType) {\n        this.valueMap = new Map();\n        this.keyMap = new Map();\n        this[_a$1] = true;\n        if (mapType) {\n            this.setType(mapType);\n        }\n    }\n    setType(mapType) {\n        validateMapType(mapType);\n        this.keySchema = new Schema(mapType.args[0]);\n        this.valueSchema = new Schema(mapType.args[1]);\n    }\n    removeType() {\n        this.keySchema = undefined;\n        this.valueSchema = undefined;\n    }\n    static fromLiteral(obj, mapType) {\n        const map = new MichelsonMap(mapType);\n        Object.keys(obj).forEach((key) => {\n            map.set(key, obj[key]);\n        });\n        return map;\n    }\n    typecheckKey(key) {\n        if (!this.keySchema) {\n            return;\n        }\n        this.keySchema.Typecheck(key);\n    }\n    typecheckValue(value) {\n        if (!this.valueSchema) {\n            return;\n        }\n        this.valueSchema.Typecheck(value);\n    }\n    /**\n     * @throws {@link MapTypecheckError} when the argument passed does not match the expected schema for value\n     */\n    assertTypecheckValue(value) {\n        try {\n            this.typecheckValue(value);\n        }\n        catch (e) {\n            throw new MapTypecheckError(value, this.valueSchema, 'value', e);\n        }\n    }\n    /**\n     * @throws {@link MapTypecheckError} when the argument passed does not match the expected schema for key\n     */\n    assertTypecheckKey(key) {\n        try {\n            this.typecheckKey(key);\n        }\n        catch (e) {\n            throw new MapTypecheckError(key, this.keySchema, 'key', e);\n        }\n    }\n    serializeDeterministically(key) {\n        return stringify(key);\n    }\n    *keys() {\n        for (const [key] of this.entries()) {\n            yield key;\n        }\n    }\n    *values() {\n        for (const [, value] of this.entries()) {\n            yield value;\n        }\n    }\n    *entries() {\n        for (const key of this.valueMap.keys()) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            yield [this.keyMap.get(key), this.valueMap.get(key)];\n        }\n    }\n    get(key) {\n        this.assertTypecheckKey(key);\n        const strKey = this.serializeDeterministically(key);\n        return this.valueMap.get(strKey);\n    }\n    /**\n     *\n     * @description Set a key and a value in the MichelsonMap. If the key already exists, override the current value.\n     *\n     * @example map.set(\"myKey\", \"myValue\") // Using a string as key\n     *\n     * @example map.set({0: \"test\", 1: \"test1\"}, \"myValue\") // Using a pair as key\n     *\n     * @warn The same key can be represented in multiple ways, depending on the type of the key. This duplicate key situation will cause a runtime error (duplicate key) when sending the map data to the Tezos RPC node.\n     *\n     * For example, consider a contract with a map whose key is of type boolean.  If you set the following values in MichelsonMap: map.set(false, \"myValue\") and map.set(null, \"myValue\").\n     *\n     * You will get two unique entries in the MichelsonMap. These values will both be evaluated as falsy by the MichelsonEncoder and ultimately rejected by the Tezos RPC.\n     */\n    set(key, value) {\n        this.assertTypecheckKey(key);\n        this.assertTypecheckValue(value);\n        const strKey = this.serializeDeterministically(key);\n        this.keyMap.set(strKey, key);\n        this.valueMap.set(strKey, value);\n    }\n    delete(key) {\n        this.assertTypecheckKey(key);\n        this.keyMap.delete(this.serializeDeterministically(key));\n        this.valueMap.delete(this.serializeDeterministically(key));\n    }\n    has(key) {\n        this.assertTypecheckKey(key);\n        const strKey = this.serializeDeterministically(key);\n        return this.keyMap.has(strKey) && this.valueMap.has(strKey);\n    }\n    clear() {\n        this.keyMap.clear();\n        this.valueMap.clear();\n    }\n    get size() {\n        return this.keyMap.size;\n    }\n    forEach(cb) {\n        for (const [key, value] of this.entries()) {\n            cb(value, key, this);\n        }\n    }\n}\n_a$1 = michelsonMapTypeSymbol;\n\n/**\n *  @category Error\n *  @description Error that indicates a failure when encoding invalid or incorrect data (e.g. if an address is expected but a number is received)\n */\nclass TokenValidationError extends TaquitoError {\n    constructor(value, token, baseMessage) {\n        super();\n        this.value = value;\n        this.token = token;\n        this.name = 'TokenValidationError';\n        const annot = this.token.annot();\n        const annotText = annot ? `[${annot}] ` : '';\n        this.message = `${annotText}${baseMessage}`;\n    }\n}\nclass Token {\n    constructor(val, idx, fac) {\n        this.val = val;\n        this.idx = idx;\n        this.fac = fac;\n        this.createToken = this.fac;\n    }\n    typeWithoutAnnotations() {\n        const handleMichelsonExpression = (val) => {\n            if (typeof val === 'object') {\n                if (Array.isArray(val)) {\n                    const array = val;\n                    return array.map((item) => handleMichelsonExpression(item));\n                }\n                const extended = val;\n                if (extended.args) {\n                    return {\n                        prim: extended.prim,\n                        args: extended.args.map((x) => handleMichelsonExpression(x)),\n                    };\n                }\n                else {\n                    return {\n                        prim: extended.prim,\n                    };\n                }\n            }\n            return val;\n        };\n        const handleMichelsonExtended = (val) => {\n            if (val.args) {\n                return {\n                    prim: val.prim,\n                    args: val.args.map((x) => handleMichelsonExpression(x)),\n                };\n            }\n            else {\n                return {\n                    prim: val.prim,\n                };\n            }\n        };\n        return handleMichelsonExtended(this.val);\n    }\n    annot() {\n        return (Array.isArray(this.val.annots) && this.val.annots.length > 0\n            ? this.val.annots[0]\n            : String(this.idx)).replace(/(%|:)(_Liq_entry_)?/, '');\n    }\n    hasAnnotations() {\n        return Array.isArray(this.val.annots) && this.val.annots.length;\n    }\n    get tokenVal() {\n        return this.val;\n    }\n    ExtractSignature() {\n        return [[this.ExtractSchema()]];\n    }\n}\nclass ComparableToken extends Token {\n    compare(o1, o2) {\n        if (o1 === o2) {\n            return 0;\n        }\n        return o1 < o2 ? -1 : 1;\n    }\n}\n\n/**\n *  @category Error\n *  @description Error that indicates a failure happening when parsing encoding/executing Big Map types\n */\nclass BigMapValidationError extends TokenValidationError {\n    constructor(value, token, message) {\n        super(value, token, message);\n        this.value = value;\n        this.token = token;\n        this.name = 'BigMapValidationError';\n    }\n}\nclass BigMapToken extends Token {\n    constructor(val, idx, fac) {\n        super(val, idx, fac);\n        this.val = val;\n        this.idx = idx;\n        this.fac = fac;\n    }\n    get ValueSchema() {\n        return this.createToken(this.val.args[1], 0);\n    }\n    get KeySchema() {\n        return this.createToken(this.val.args[0], 0);\n    }\n    /**\n     * @deprecated ExtractSchema has been deprecated in favor of generateSchema\n     *\n     */\n    ExtractSchema() {\n        return {\n            big_map: {\n                key: this.KeySchema.ExtractSchema(),\n                value: this.ValueSchema.ExtractSchema(),\n            },\n        };\n    }\n    generateSchema() {\n        return {\n            __michelsonType: BigMapToken.prim,\n            schema: {\n                key: this.KeySchema.generateSchema(),\n                value: this.ValueSchema.generateSchema(),\n            },\n        };\n    }\n    /**\n     * @throws {@link BigMapValidationError}\n     */\n    validate(value) {\n        if (!MichelsonMap.isMichelsonMap(value)) {\n            throw new BigMapValidationError(value, this, `Value ${JSON.stringify(value)} is not a MichelsonMap`);\n        }\n    }\n    objLitToMichelsonMap(val) {\n        if (val instanceof MichelsonMap)\n            return val;\n        if (typeof val === 'object') {\n            if (Object.keys(val).length === 0) {\n                return new MichelsonMap();\n            }\n            else {\n                return MichelsonMap.fromLiteral(val);\n            }\n        }\n        return val;\n    }\n    /**\n     * @throws {@link BigMapValidationError}\n     */\n    Encode(args) {\n        const val = this.objLitToMichelsonMap(args.pop());\n        this.validate(val);\n        return Array.from(val.keys())\n            .sort((a, b) => this.KeySchema.compare(a, b))\n            .map((key) => {\n            return {\n                prim: 'Elt',\n                args: [this.KeySchema.EncodeObject(key), this.ValueSchema.EncodeObject(val.get(key))],\n            };\n        });\n    }\n    /**\n     * @throws {@link BigMapValidationError}\n     */\n    EncodeObject(args, semantic) {\n        const val = this.objLitToMichelsonMap(args);\n        this.validate(val);\n        if (semantic && semantic[BigMapToken.prim]) {\n            return semantic[BigMapToken.prim](val, this.val);\n        }\n        return Array.from(val.keys())\n            .sort((a, b) => this.KeySchema.compare(a, b))\n            .map((key) => {\n            return {\n                prim: 'Elt',\n                args: [this.KeySchema.EncodeObject(key), this.ValueSchema.EncodeObject(val.get(key))],\n            };\n        });\n    }\n    /**\n     * @throws {@link InvalidMapTypeError} when the argument passed to val is an array but not a valid map type\n     * @throws {@link BigMapValidationError} when the value is invalid\n     */\n    Execute(val, semantic) {\n        if (semantic && semantic[BigMapToken.prim]) {\n            return semantic[BigMapToken.prim](val, this.val);\n        }\n        if (Array.isArray(val)) {\n            // Athens is returning an empty array for big map in storage\n            // Internal: In taquito v5 it is still used to decode big map diff (as if they were a regular map)\n            const map = new MichelsonMap(this.val);\n            val.forEach((current) => {\n                map.set(this.KeySchema.ToKey(current.args[0]), this.ValueSchema.Execute(current.args[1]));\n            });\n            return map;\n        }\n        else if ('int' in val) {\n            // Babylon is returning an int with the big map id in contract storage\n            return val.int;\n        }\n        else {\n            throw new BigMapValidationError(val, this, `Big map is expecting either an array (Athens) or an object with an int property (Babylon). Got ${JSON.stringify(val)}`);\n        }\n    }\n    findAndReturnTokens(tokenToFind, tokens) {\n        if (BigMapToken.prim === tokenToFind) {\n            tokens.push(this);\n        }\n        this.KeySchema.findAndReturnTokens(tokenToFind, tokens);\n        this.ValueSchema.findAndReturnTokens(tokenToFind, tokens);\n        return tokens;\n    }\n}\nBigMapToken.prim = 'big_map';\n\n/**\n *  @category Error\n *  @description Error that indicates a failure happening when parsing encoding/executing an OrToken\n */\nclass OrValidationError extends TokenValidationError {\n    constructor(value, token, message) {\n        super(value, token, message);\n        this.value = value;\n        this.token = token;\n        this.name = 'OrValidationError';\n    }\n}\nclass OrToken extends ComparableToken {\n    constructor(val, idx, fac) {\n        super(val, idx, fac);\n        this.val = val;\n        this.idx = idx;\n        this.fac = fac;\n    }\n    Encode(args) {\n        const label = args[args.length - 1];\n        const leftToken = this.createToken(this.val.args[0], this.idx);\n        let keyCount = 1;\n        if (leftToken instanceof OrToken) {\n            keyCount = Object.keys(leftToken.ExtractSchema()).length;\n        }\n        const rightToken = this.createToken(this.val.args[1], this.idx + keyCount);\n        if (String(leftToken.annot()) === String(label) && !(leftToken instanceof OrToken)) {\n            args.pop();\n            return { prim: 'Left', args: [leftToken.Encode(args)] };\n        }\n        else if (String(rightToken.annot()) === String(label) && !(rightToken instanceof OrToken)) {\n            args.pop();\n            return { prim: 'Right', args: [rightToken.Encode(args)] };\n        }\n        else {\n            if (leftToken instanceof OrToken) {\n                const val = leftToken.Encode(args);\n                if (val) {\n                    return { prim: 'Left', args: [val] };\n                }\n            }\n            if (rightToken instanceof OrToken) {\n                const val = rightToken.Encode(args);\n                if (val) {\n                    return { prim: 'Right', args: [val] };\n                }\n            }\n            return null;\n        }\n    }\n    ExtractSignature() {\n        const leftToken = this.createToken(this.val.args[0], this.idx);\n        let keyCount = 1;\n        if (leftToken instanceof OrToken) {\n            keyCount = Object.keys(leftToken.ExtractSchema()).length;\n        }\n        const rightToken = this.createToken(this.val.args[1], this.idx + keyCount);\n        const newSig = [];\n        if (leftToken instanceof OrToken) {\n            newSig.push(...leftToken.ExtractSignature());\n        }\n        else {\n            for (const sig of leftToken.ExtractSignature()) {\n                newSig.push([leftToken.annot(), ...sig]);\n            }\n        }\n        if (rightToken instanceof OrToken) {\n            newSig.push(...rightToken.ExtractSignature());\n        }\n        else {\n            for (const sig of rightToken.ExtractSignature()) {\n                newSig.push([rightToken.annot(), ...sig]);\n            }\n        }\n        return newSig;\n    }\n    /**\n     * @throws {@link OrValidationError}\n     */\n    EncodeObject(args, semantic) {\n        this.validateJavascriptObject(args);\n        const label = Object.keys(args)[0];\n        const leftToken = this.createToken(this.val.args[0], this.idx);\n        let keyCount = 1;\n        if (leftToken instanceof OrToken) {\n            keyCount = Object.keys(leftToken.ExtractSchema()).length;\n        }\n        const rightToken = this.createToken(this.val.args[1], this.idx + keyCount);\n        if (String(leftToken.annot()) === String(label) && !(leftToken instanceof OrToken)) {\n            return { prim: 'Left', args: [leftToken.EncodeObject(args[label], semantic)] };\n        }\n        else if (String(rightToken.annot()) === String(label) && !(rightToken instanceof OrToken)) {\n            return { prim: 'Right', args: [rightToken.EncodeObject(args[label], semantic)] };\n        }\n        else {\n            if (leftToken instanceof OrToken) {\n                const val = leftToken.EncodeObject(args, semantic);\n                if (val) {\n                    return { prim: 'Left', args: [val] };\n                }\n            }\n            if (rightToken instanceof OrToken) {\n                const val = rightToken.EncodeObject(args, semantic);\n                if (val) {\n                    return { prim: 'Right', args: [val] };\n                }\n            }\n            return null;\n        }\n    }\n    /**\n     * @throws {@link OrValidationError}\n     */\n    validateJavascriptObject(args) {\n        if (typeof args !== 'object' ||\n            Array.isArray(args) ||\n            args === null ||\n            Object.keys(args).length !== 1) {\n            throw new OrValidationError(args, this, `EncodeObject expects an object with a single key but got: ${JSON.stringify(args)}`);\n        }\n    }\n    /**\n     * @throws {@link OrValidationError}\n     */\n    Execute(val, semantics) {\n        const leftToken = this.createToken(this.val.args[0], this.idx);\n        let keyCount = 1;\n        if (leftToken instanceof OrToken) {\n            keyCount = Object.keys(leftToken.ExtractSchema()).length;\n        }\n        const rightToken = this.createToken(this.val.args[1], this.idx + keyCount);\n        if (val.prim === 'Right') {\n            if (rightToken instanceof OrToken) {\n                return rightToken.Execute(val.args[0], semantics);\n            }\n            else {\n                return {\n                    [rightToken.annot()]: rightToken.Execute(val.args[0], semantics),\n                };\n            }\n        }\n        else if (val.prim === 'Left') {\n            if (leftToken instanceof OrToken) {\n                return leftToken.Execute(val.args[0], semantics);\n            }\n            return {\n                [leftToken.annot()]: leftToken.Execute(val.args[0], semantics),\n            };\n        }\n        else {\n            throw new OrValidationError(val, this, `Was expecting Left or Right prim but got: ${JSON.stringify(val.prim)}`);\n        }\n    }\n    traversal(getLeftValue, getRightValue, concat) {\n        const leftToken = this.createToken(this.val.args[0], this.idx);\n        let keyCount = 1;\n        let leftValue;\n        if (leftToken instanceof OrToken) {\n            leftValue = getLeftValue(leftToken);\n            keyCount = Object.keys(leftToken.ExtractSchema()).length;\n        }\n        else {\n            leftValue = { [leftToken.annot()]: getLeftValue(leftToken) };\n        }\n        const rightToken = this.createToken(this.val.args[1], this.idx + keyCount);\n        let rightValue;\n        if (rightToken instanceof OrToken) {\n            rightValue = getRightValue(rightToken);\n        }\n        else {\n            rightValue = { [rightToken.annot()]: getRightValue(rightToken) };\n        }\n        const res = concat(leftValue, rightValue);\n        return res;\n    }\n    /**\n     * @deprecated ExtractSchema has been deprecated in favor of generateSchema\n     *\n     */\n    ExtractSchema() {\n        return this.traversal((leftToken) => leftToken.ExtractSchema(), (rightToken) => rightToken.ExtractSchema(), (leftValue, rightValue) => (Object.assign(Object.assign({}, leftValue), rightValue)));\n    }\n    generateSchema() {\n        return {\n            __michelsonType: OrToken.prim,\n            schema: this.traversal((leftToken) => {\n                if (leftToken instanceof OrToken) {\n                    return leftToken.generateSchema().schema;\n                }\n                else {\n                    return leftToken.generateSchema();\n                }\n            }, (rightToken) => {\n                if (rightToken instanceof OrToken) {\n                    return rightToken.generateSchema().schema;\n                }\n                else {\n                    return rightToken.generateSchema();\n                }\n            }, (leftValue, rightValue) => (Object.assign(Object.assign({}, leftValue), rightValue))),\n        };\n    }\n    findToken(label) {\n        const leftToken = this.createToken(this.val.args[0], this.idx);\n        let keyCount = 1;\n        if (leftToken instanceof OrToken) {\n            keyCount = Object.keys(leftToken.ExtractSchema()).length;\n        }\n        const rightToken = this.createToken(this.val.args[1], this.idx + keyCount);\n        if (String(leftToken.annot()) === String(label) &&\n            !(leftToken instanceof OrToken) &&\n            leftToken instanceof ComparableToken) {\n            return leftToken;\n        }\n        else if (String(rightToken.annot()) === String(label) &&\n            !(rightToken instanceof OrToken) &&\n            rightToken instanceof ComparableToken) {\n            return rightToken;\n        }\n        else {\n            if (leftToken instanceof OrToken) {\n                const tok = leftToken.findToken(label);\n                if (tok) {\n                    return tok;\n                }\n            }\n            if (rightToken instanceof OrToken) {\n                const tok = rightToken.findToken(label);\n                if (tok) {\n                    return tok;\n                }\n            }\n            return null;\n        }\n    }\n    compare(val1, val2) {\n        const labelVal1 = Object.keys(val1)[0];\n        const labelVal2 = Object.keys(val2)[0];\n        if (labelVal1 === labelVal2) {\n            const token = this.findToken(labelVal1);\n            if (token instanceof ComparableToken) {\n                return token.compare(val1[labelVal1], val2[labelVal1]);\n            }\n        }\n        else {\n            const encoded1 = JSON.stringify(this.EncodeObject(val1));\n            const encoded2 = JSON.stringify(this.EncodeObject(val2));\n            return encoded1 < encoded2 ? -1 : 1;\n        }\n    }\n    ToKey(val) {\n        return this.Execute(val);\n    }\n    ToBigMapKey(val) {\n        return {\n            key: this.EncodeObject(val),\n            type: this.typeWithoutAnnotations(),\n        };\n    }\n    findAndReturnTokens(tokenToFind, tokens) {\n        if (OrToken.prim === tokenToFind) {\n            tokens.push(this);\n        }\n        this.traversal((leftToken) => leftToken.findAndReturnTokens(tokenToFind, tokens), (rightToken) => rightToken.findAndReturnTokens(tokenToFind, tokens), (leftValue, rightValue) => (Object.assign(Object.assign({}, leftValue), rightValue)));\n        return tokens;\n    }\n}\nOrToken.prim = 'or';\n\n/**\n *  @category Error\n *  @description Error that indicates in invalid token argument being passed\n */\nclass TokenArgumentValidationError extends TaquitoError {\n    constructor(message) {\n        super(message);\n        this.message = message;\n        this.name = 'TokenArgumentValidationError';\n    }\n}\n/**\n *  @category Error\n *  @description Error that indicates a failure occurring when doing a comparison of tokens\n */\nclass TokenComparisonError extends TaquitoError {\n    constructor(val1, val2) {\n        super();\n        this.val1 = val1;\n        this.val2 = val2;\n        this.name = 'TokenComparisonError';\n        this.message = `Tokens ${JSON.stringify(val1)} and ${JSON.stringify(val2)} are not comparable`;\n    }\n}\n// collapse comb pair\n/**\n * @throws {@link TokenArgumentValidationError}\n */\nfunction collapse$1(val, prim = PairToken.prim) {\n    if (Array.isArray(val)) {\n        return collapse$1({\n            prim: prim,\n            args: val,\n        }, prim);\n    }\n    if (val.args === undefined) {\n        throw new TokenArgumentValidationError(`The value ${JSON.stringify(val)} is an invalid PairToken with no arguments, a pair must have two or more arguments.`);\n    }\n    if (val.args.length > 2) {\n        return [\n            val.args[0],\n            {\n                prim: prim,\n                args: val.args.slice(1),\n            },\n        ];\n    }\n    return [val.args[0], val.args[1]];\n}\nclass PairToken extends ComparableToken {\n    constructor(val, idx, fac) {\n        super(Array.isArray(val)\n            ? {\n                prim: PairToken.prim,\n                args: val,\n            }\n            : val.prim\n                ? val\n                : {\n                    prim: PairToken.prim,\n                    args: val,\n                }, idx, fac);\n    }\n    args() {\n        // collapse comb pair\n        return collapse$1(this.val);\n    }\n    tokens() {\n        let cnt = 0;\n        return this.args().map((a) => {\n            const tok = this.createToken(a, this.idx + cnt);\n            if (tok instanceof PairToken) {\n                cnt += Object.keys(tok.ExtractSchema()).length;\n            }\n            else {\n                cnt++;\n            }\n            return tok;\n        });\n    }\n    Encode(args) {\n        return {\n            prim: 'Pair',\n            args: this.tokens().map((t) => t.Encode(args)),\n        };\n    }\n    ExtractSignature() {\n        const args = this.args();\n        const leftToken = this.createToken(args[0], this.idx);\n        let keyCount = 1;\n        if (leftToken instanceof OrToken) {\n            keyCount = Object.keys(leftToken.ExtractSchema()).length;\n        }\n        const rightToken = this.createToken(args[1], this.idx + keyCount);\n        const newSig = [];\n        for (const leftSig of leftToken.ExtractSignature()) {\n            for (const rightSig of rightToken.ExtractSignature()) {\n                newSig.push([...leftSig, ...rightSig]);\n            }\n        }\n        return newSig;\n    }\n    ToBigMapKey(val) {\n        return {\n            key: this.EncodeObject(val),\n            type: this.typeWithoutAnnotations(),\n        };\n    }\n    ToKey(val) {\n        return this.Execute(val);\n    }\n    EncodeObject(args, semantic) {\n        const [leftToken, rightToken] = this.tokens();\n        let leftValue;\n        if (leftToken instanceof PairToken && !leftToken.hasAnnotations()) {\n            leftValue = args;\n        }\n        else {\n            leftValue = args[leftToken.annot()];\n        }\n        let rightValue;\n        if (rightToken instanceof PairToken && !rightToken.hasAnnotations()) {\n            rightValue = args;\n        }\n        else {\n            rightValue = args[rightToken.annot()];\n        }\n        return {\n            prim: 'Pair',\n            args: [\n                leftToken.EncodeObject(leftValue, semantic),\n                rightToken.EncodeObject(rightValue, semantic),\n            ],\n        };\n    }\n    traversal(getLeftValue, getRightValue) {\n        const args = this.args();\n        const leftToken = this.createToken(args[0], this.idx);\n        let keyCount = 1;\n        let leftValue;\n        if (leftToken instanceof PairToken && !leftToken.hasAnnotations()) {\n            leftValue = getLeftValue(leftToken);\n            if (leftToken instanceof PairToken) {\n                keyCount = Object.keys(leftToken.ExtractSchema()).length;\n            }\n        }\n        else {\n            leftValue = { [leftToken.annot()]: getLeftValue(leftToken) };\n        }\n        const rightToken = this.createToken(args[1], this.idx + keyCount);\n        let rightValue;\n        if (rightToken instanceof PairToken && !rightToken.hasAnnotations()) {\n            rightValue = getRightValue(rightToken);\n        }\n        else {\n            rightValue = { [rightToken.annot()]: getRightValue(rightToken) };\n        }\n        const res = Object.assign(Object.assign({}, leftValue), rightValue);\n        return res;\n    }\n    Execute(val, semantics) {\n        const args = collapse$1(val, 'Pair');\n        return this.traversal((leftToken) => leftToken.Execute(args[0], semantics), (rightToken) => rightToken.Execute(args[1], semantics));\n    }\n    /**\n     * @deprecated ExtractSchema has been deprecated in favor of generateSchema\n     *\n     */\n    ExtractSchema() {\n        return this.traversal((leftToken) => leftToken.ExtractSchema(), (rightToken) => rightToken.ExtractSchema());\n    }\n    generateSchema() {\n        return {\n            __michelsonType: PairToken.prim,\n            schema: this.traversal((leftToken) => {\n                if (leftToken instanceof PairToken && !leftToken.hasAnnotations()) {\n                    return leftToken.generateSchema().schema;\n                }\n                else {\n                    return leftToken.generateSchema();\n                }\n            }, (rightToken) => {\n                if (rightToken instanceof PairToken && !rightToken.hasAnnotations()) {\n                    return rightToken.generateSchema().schema;\n                }\n                else {\n                    return rightToken.generateSchema();\n                }\n            }),\n        };\n    }\n    /**\n     * @throws {@link TokenComparisonError}\n     */\n    compare(val1, val2) {\n        const [leftToken, rightToken] = this.tokens();\n        const getValue = (token, args) => {\n            if (token instanceof PairToken && !token.hasAnnotations()) {\n                return args;\n            }\n            else {\n                return args[token.annot()];\n            }\n        };\n        if (leftToken instanceof ComparableToken && rightToken instanceof ComparableToken) {\n            const result = leftToken.compare(getValue(leftToken, val1), getValue(leftToken, val2));\n            if (result === 0) {\n                return rightToken.compare(getValue(rightToken, val1), getValue(rightToken, val2));\n            }\n            return result;\n        }\n        throw new TokenComparisonError(val1, val2);\n    }\n    findAndReturnTokens(tokenToFind, tokens) {\n        if (PairToken.prim === tokenToFind) {\n            tokens.push(this);\n        }\n        this.tokens().map((t) => t.findAndReturnTokens(tokenToFind, tokens));\n        return tokens;\n    }\n}\nPairToken.prim = 'pair';\n\n/**\n *  @category Error\n *  @description Error that indicates a failure happening when parsing encoding/executing Nat\n */\nclass NatValidationError extends TokenValidationError {\n    constructor(value, token, message) {\n        super(value, token, message);\n        this.value = value;\n        this.token = token;\n        this.name = 'NatValidationError';\n    }\n}\nclass NatToken extends ComparableToken {\n    constructor(val, idx, fac) {\n        super(val, idx, fac);\n        this.val = val;\n        this.idx = idx;\n        this.fac = fac;\n    }\n    Execute(val) {\n        return new BigNumber(val[Object.keys(val)[0]]);\n    }\n    /**\n     * @throws {@link NatValidationError}\n     */\n    Encode(args) {\n        const val = args.pop();\n        this.validate(val);\n        return { int: new BigNumber(val).toFixed() };\n    }\n    /**\n     * @throws {@link NatValidationError}\n     */\n    validate(val) {\n        const bigNumber = new BigNumber(val);\n        if (bigNumber.isNaN()) {\n            throw new NatValidationError(val, this, `Value is not a number: ${JSON.stringify(val)}`);\n        }\n        if (bigNumber.isNegative()) {\n            throw new NatValidationError(val, this, `Value cannot be negative: ${JSON.stringify(val)}`);\n        }\n    }\n    /**\n     * @throws {@link NatValidationError}\n     */\n    EncodeObject(val, semantic) {\n        this.validate(val);\n        if (semantic && semantic[NatToken.prim]) {\n            return semantic[NatToken.prim](val);\n        }\n        return { int: new BigNumber(val).toFixed() };\n    }\n    /**\n     * @deprecated ExtractSchema has been deprecated in favor of generateSchema\n     *\n     */\n    ExtractSchema() {\n        return NatToken.prim;\n    }\n    generateSchema() {\n        return {\n            __michelsonType: NatToken.prim,\n            schema: NatToken.prim,\n        };\n    }\n    ToBigMapKey(val) {\n        return {\n            key: { int: String(val) },\n            type: { prim: NatToken.prim },\n        };\n    }\n    ToKey({ int }) {\n        return new BigNumber(int);\n    }\n    compare(nat1, nat2) {\n        const o1 = Number(nat1);\n        const o2 = Number(nat2);\n        if (o1 === o2) {\n            return 0;\n        }\n        return o1 < o2 ? -1 : 1;\n    }\n    findAndReturnTokens(tokenToFind, tokens) {\n        if (NatToken.prim === tokenToFind) {\n            tokens.push(this);\n        }\n        return tokens;\n    }\n}\nNatToken.prim = 'nat';\n\nclass StringToken extends ComparableToken {\n    constructor(val, idx, fac) {\n        super(val, idx, fac);\n        this.val = val;\n        this.idx = idx;\n        this.fac = fac;\n    }\n    Execute(val) {\n        return val[Object.keys(val)[0]];\n    }\n    /**\n     * @deprecated ExtractSchema has been deprecated in favor of generateSchema\n     *\n     */\n    ExtractSchema() {\n        return StringToken.prim;\n    }\n    generateSchema() {\n        return {\n            __michelsonType: StringToken.prim,\n            schema: StringToken.prim,\n        };\n    }\n    Encode(args) {\n        const val = args.pop();\n        return { string: val };\n    }\n    EncodeObject(val, semantic) {\n        if (semantic && semantic[StringToken.prim]) {\n            return semantic[StringToken.prim](val);\n        }\n        return { string: val };\n    }\n    ToKey({ string }) {\n        return string;\n    }\n    ToBigMapKey(val) {\n        return {\n            key: { string: val },\n            type: { prim: StringToken.prim },\n        };\n    }\n    findAndReturnTokens(tokenToFind, tokens) {\n        if (StringToken.prim === tokenToFind) {\n            tokens.push(this);\n        }\n        return tokens;\n    }\n}\nStringToken.prim = 'string';\n\n/**\n *  @category Error\n *  @description Error that indicates a failure happening when parsing encoding/executing an Address\n */\nclass AddressValidationError extends TokenValidationError {\n    constructor(value, token, message) {\n        super(value, token, message);\n        this.value = value;\n        this.token = token;\n        this.name = 'AddressValidationError';\n    }\n}\nclass AddressToken extends ComparableToken {\n    constructor(val, idx, fac) {\n        super(val, idx, fac);\n        this.val = val;\n        this.idx = idx;\n        this.fac = fac;\n    }\n    ToBigMapKey(val) {\n        const decoded = b58decode(val);\n        return {\n            key: { bytes: decoded },\n            type: { prim: 'bytes' },\n        };\n    }\n    /**\n     * @throws {@link AddressValidationError}\n     */\n    validate(value) {\n        if (validateAddress(value) !== ValidationResult.VALID) {\n            throw new AddressValidationError(value, this, `Address is not valid: ${JSON.stringify(value)}`);\n        }\n    }\n    /**\n     * @throws {@link AddressValidationError}\n     */\n    Encode(args) {\n        const val = args.pop();\n        this.validate(val);\n        return { string: val };\n    }\n    /**\n     * @throws {@link AddressValidationError}\n     */\n    EncodeObject(val, semantic) {\n        this.validate(val);\n        if (semantic && semantic[AddressToken.prim]) {\n            return semantic[AddressToken.prim](val);\n        }\n        return { string: val };\n    }\n    /**\n     * @throws {@link AddressValidationError}\n     */\n    Execute(val) {\n        if (val.string) {\n            return val.string;\n        }\n        if (!val.bytes) {\n            throw new AddressValidationError(val, this, `cannot be missing both string and bytes: ${JSON.stringify(val)}`);\n        }\n        return encodePubKey(val.bytes);\n    }\n    /**\n     * @deprecated ExtractSchema has been deprecated in favor of generateSchema\n     *\n     */\n    ExtractSchema() {\n        return AddressToken.prim;\n    }\n    generateSchema() {\n        return {\n            __michelsonType: AddressToken.prim,\n            schema: AddressToken.prim,\n        };\n    }\n    /**\n     * @throws {@link AddressValidationError}\n     */\n    ToKey({ bytes, string }) {\n        if (string) {\n            return string;\n        }\n        if (!bytes) {\n            throw new AddressValidationError({ bytes, string }, this, `cannot be missing both string and bytes ${JSON.stringify({ string, bytes })}`);\n        }\n        return encodePubKey(bytes);\n    }\n    compare(address1, address2) {\n        const isImplicit = (address) => {\n            return address.startsWith('tz');\n        };\n        const implicit1 = isImplicit(address1);\n        const implicit2 = isImplicit(address2);\n        if (implicit1 && !implicit2) {\n            return -1;\n        }\n        else if (implicit2 && !implicit1) {\n            return 1;\n        }\n        return super.compare(address1, address2);\n    }\n    findAndReturnTokens(tokenToFind, tokens) {\n        if (AddressToken.prim === tokenToFind) {\n            tokens.push(this);\n        }\n        return tokens;\n    }\n}\nAddressToken.prim = 'address';\n\n/**\n *  @category Error\n *  @description Error that indicates a failure happening when parsing encoding/executing a Map\n */\nclass MapValidationError extends TokenValidationError {\n    constructor(value, token, message) {\n        super(value, token, message);\n        this.value = value;\n        this.token = token;\n        this.name = 'MapValidationError';\n    }\n}\nclass MapToken extends Token {\n    constructor(val, idx, fac) {\n        super(val, idx, fac);\n        this.val = val;\n        this.idx = idx;\n        this.fac = fac;\n    }\n    get ValueSchema() {\n        return this.createToken(this.val.args[1], 0);\n    }\n    get KeySchema() {\n        return this.createToken(this.val.args[0], 0);\n    }\n    /**\n     * @throws {@link MapValidationError}\n     */\n    validate(value) {\n        if (!MichelsonMap.isMichelsonMap(value)) {\n            throw new MapValidationError(value, this, `Value ${JSON.stringify(value)} is not a valid MichelsonMap`);\n        }\n    }\n    Execute(val, semantics) {\n        const map = new MichelsonMap(this.val);\n        val.forEach((current) => {\n            map.set(this.KeySchema.ToKey(current.args[0]), this.ValueSchema.Execute(current.args[1], semantics));\n        });\n        return map;\n    }\n    objLitToMichelsonMap(val) {\n        if (val instanceof MichelsonMap)\n            return val;\n        if (typeof val === 'object') {\n            if (Object.keys(val).length === 0) {\n                return new MichelsonMap();\n            }\n            else {\n                return MichelsonMap.fromLiteral(val);\n            }\n        }\n        return val;\n    }\n    /**\n     * @throws {@link MapValidationError}\n     */\n    Encode(args) {\n        const val = this.objLitToMichelsonMap(args.pop());\n        this.validate(val);\n        return Array.from(val.keys())\n            .sort((a, b) => this.KeySchema.compare(a, b))\n            .map((key) => {\n            return {\n                prim: 'Elt',\n                args: [this.KeySchema.EncodeObject(key), this.ValueSchema.EncodeObject(val.get(key))],\n            };\n        });\n    }\n    /**\n     * @throws {@link MapValidationError}\n     */\n    EncodeObject(args, semantic) {\n        const val = this.objLitToMichelsonMap(args);\n        this.validate(val);\n        if (semantic && semantic[MapToken.prim]) {\n            return semantic[MapToken.prim](val);\n        }\n        return Array.from(val.keys())\n            .sort((a, b) => this.KeySchema.compare(a, b))\n            .map((key) => {\n            return {\n                prim: 'Elt',\n                args: [this.KeySchema.EncodeObject(key), this.ValueSchema.EncodeObject(val.get(key))],\n            };\n        });\n    }\n    /**\n     * @deprecated ExtractSchema has been deprecated in favor of generateSchema\n     *\n     */\n    ExtractSchema() {\n        return {\n            map: {\n                key: this.KeySchema.ExtractSchema(),\n                value: this.ValueSchema.ExtractSchema(),\n            },\n        };\n    }\n    generateSchema() {\n        return {\n            __michelsonType: MapToken.prim,\n            schema: {\n                key: this.KeySchema.generateSchema(),\n                value: this.ValueSchema.generateSchema(),\n            },\n        };\n    }\n    findAndReturnTokens(tokenToFind, tokens) {\n        if (MapToken.prim === tokenToFind) {\n            tokens.push(this);\n        }\n        this.KeySchema.findAndReturnTokens(tokenToFind, tokens);\n        this.ValueSchema.findAndReturnTokens(tokenToFind, tokens);\n        return tokens;\n    }\n}\nMapToken.prim = 'map';\n\nclass BoolToken extends ComparableToken {\n    constructor(val, idx, fac) {\n        super(val, idx, fac);\n        this.val = val;\n        this.idx = idx;\n        this.fac = fac;\n    }\n    Execute(val) {\n        return String(val.prim).toLowerCase() === 'true' ? true : false;\n    }\n    Encode(args) {\n        const val = args.pop();\n        return { prim: val ? 'True' : 'False' };\n    }\n    EncodeObject(val, semantic) {\n        if (semantic && semantic[BoolToken.prim]) {\n            return semantic[BoolToken.prim](val);\n        }\n        return { prim: val ? 'True' : 'False' };\n    }\n    /**\n     * @deprecated ExtractSchema has been deprecated in favor of generateSchema\n     *\n     */\n    ExtractSchema() {\n        return BoolToken.prim;\n    }\n    generateSchema() {\n        return {\n            __michelsonType: BoolToken.prim,\n            schema: BoolToken.prim,\n        };\n    }\n    ToBigMapKey(val) {\n        return {\n            key: this.EncodeObject(val),\n            type: { prim: BoolToken.prim },\n        };\n    }\n    ToKey(val) {\n        return this.EncodeObject(val);\n    }\n    compare(val1, val2) {\n        if ((val1 && val2) || (!val1 && !val2)) {\n            return 0;\n        }\n        else if (val1) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    }\n    findAndReturnTokens(tokenToFind, tokens) {\n        if (BoolToken.prim === tokenToFind) {\n            tokens.push(this);\n        }\n        return tokens;\n    }\n}\nBoolToken.prim = 'bool';\n\n/**\n *  @category Error\n *  @description Error that indicates a failure happening when parsing encoding/executing a Tx Rollup L2 Address\n */\nclass TxRollupL2AddressValidationError extends TokenValidationError {\n    constructor(value, token, message) {\n        super(value, token, message);\n        this.value = value;\n        this.token = token;\n        this.name = 'TxRollupL2AddressValidationError';\n    }\n}\nclass TxRollupL2AddressToken extends ComparableToken {\n    constructor(val, idx, fac) {\n        super(val, idx, fac);\n        this.val = val;\n        this.idx = idx;\n        this.fac = fac;\n    }\n    ToBigMapKey(val) {\n        const decoded = b58decodeL2Address(val);\n        return {\n            key: { bytes: decoded },\n            type: { prim: 'bytes' },\n        };\n    }\n    /**\n     * @throws {@link TxRollupL2AddressValidationError}\n     */\n    validate(value) {\n        if (validateAddress(value) !== ValidationResult.VALID) {\n            throw new TxRollupL2AddressValidationError(value, this, `tx_rollup_l2_address is not valid: ${JSON.stringify(value)}`);\n        }\n    }\n    /**\n     * @throws {@link TxRollupL2AddressValidationError}\n     */\n    Encode(args) {\n        const val = args.pop();\n        if (!val) {\n            throw new TxRollupL2AddressValidationError(val, this, `arg missing to encode: this -> \"${JSON.stringify(val)}\"`);\n        }\n        this.validate(val);\n        return { string: val };\n    }\n    /**\n     * @throws {@link TxRollupL2AddressValidationError}\n     */\n    EncodeObject(val, semantic) {\n        this.validate(val);\n        if (semantic && semantic[TxRollupL2AddressToken.prim]) {\n            return semantic[TxRollupL2AddressToken.prim](val);\n        }\n        return { string: val };\n    }\n    /**\n     * @throws {@link TxRollupL2AddressValidationError}\n     */\n    Execute(val) {\n        if (val.string) {\n            return val.string;\n        }\n        if (!val.bytes) {\n            throw new TxRollupL2AddressValidationError(val, this, `value cannot be missing string and byte value. must have one ${JSON.stringify(val)}`);\n        }\n        return encodeL2Address(val.bytes);\n    }\n    ExtractSchema() {\n        return TxRollupL2AddressToken.prim;\n    }\n    generateSchema() {\n        return {\n            __michelsonType: TxRollupL2AddressToken.prim,\n            schema: TxRollupL2AddressToken.prim,\n        };\n    }\n    /**\n     * @throws {@link TxRollupL2AddressValidationError}\n     */\n    ToKey({ bytes, string }) {\n        if (string) {\n            return string;\n        }\n        if (!bytes) {\n            throw new TxRollupL2AddressValidationError(bytes, this, `value cannot be missing string and byte value. must have one: bytes = ${JSON.stringify(bytes)}`);\n        }\n        return encodeL2Address(bytes);\n    }\n    findAndReturnTokens(tokenToFind, tokens) {\n        if (TxRollupL2AddressToken.prim === tokenToFind) {\n            tokens.push(this);\n        }\n        return tokens;\n    }\n}\nTxRollupL2AddressToken.prim = 'tx_rollup_l2_address';\n\n/**\n *  @category Error\n *  @description Error that indicates a failure happening when parsing encoding/executing a Contract\n */\nclass ContractValidationError extends TokenValidationError {\n    constructor(value, token, message) {\n        super(value, token, message);\n        this.value = value;\n        this.token = token;\n        this.name = 'ContractValidationError';\n    }\n}\nclass ContractToken extends Token {\n    constructor(val, idx, fac) {\n        super(val, idx, fac);\n        this.val = val;\n        this.idx = idx;\n        this.fac = fac;\n    }\n    /**\n     * @throws {@link ContractValidationError}\n     */\n    validate(value) {\n        // tz1,tz2 and tz3 seems to be valid contract values (for Unit contract)\n        if (validateAddress(value) !== ValidationResult.VALID) {\n            throw new ContractValidationError(value, this, `Value ${JSON.stringify(value)} is not a valid contract address.`);\n        }\n        return null;\n    }\n    /**\n     * @throws {@link ContractValidationError}\n     */\n    Execute(val) {\n        if (val.string) {\n            return val.string;\n        }\n        if (!val.bytes) {\n            throw new ContractValidationError(val, this, `Value ${JSON.stringify(val)} is not a valid contract address. must contain bytes or string.`);\n        }\n        return encodePubKey(val.bytes);\n    }\n    /**\n     * @throws {@link ContractValidationError}\n     */\n    Encode(args) {\n        const val = args.pop();\n        this.validate(val);\n        return { string: val };\n    }\n    /**\n     * @throws {@link ContractValidationError}\n     */\n    EncodeObject(val, semantic) {\n        this.validate(val);\n        if (semantic && semantic[ContractToken.prim]) {\n            return semantic[ContractToken.prim](val);\n        }\n        return { string: val };\n    }\n    /**\n     * @deprecated ExtractSchema has been deprecated in favor of generateSchema\n     *\n     */\n    ExtractSchema() {\n        return ContractToken.prim;\n    }\n    generateSchema() {\n        const valueSchema = this.createToken(this.val.args[0], 0);\n        return {\n            __michelsonType: ContractToken.prim,\n            schema: {\n                parameter: this.val.args[0] ? valueSchema.generateSchema() : {},\n            },\n        };\n    }\n    findAndReturnTokens(tokenToFind, tokens) {\n        if (ContractToken.prim === tokenToFind) {\n            tokens.push(this);\n        }\n        return tokens;\n    }\n}\nContractToken.prim = 'contract';\n\n/**\n *  @category Error\n *  @description Error that indicates a failure happening when parsing encoding/executing a List\n */\nclass ListValidationError extends TokenValidationError {\n    constructor(value, token, message) {\n        super(value, token, message);\n        this.value = value;\n        this.token = token;\n        this.name = 'ListValidationError';\n    }\n}\nclass ListToken extends Token {\n    constructor(val, idx, fac) {\n        super(val, idx, fac);\n        this.val = val;\n        this.idx = idx;\n        this.fac = fac;\n    }\n    get valueSchema() {\n        return this.createToken(this.val.args[0], this.idx);\n    }\n    /**\n     * @throws {@link ListValidationError}\n     */\n    validate(value) {\n        if (!Array.isArray(value)) {\n            throw new ListValidationError(value, this, `Value ${JSON.stringify(value)} is not a valid array`);\n        }\n    }\n    /**\n     * @throws {@link ListValidationError}\n     */\n    Encode(args) {\n        const val = args.pop();\n        this.validate(val);\n        const schema = this.createToken(this.val.args[0], 0);\n        return val.reduce((prev, current) => {\n            return [...prev, schema.EncodeObject(current)];\n        }, []);\n    }\n    /**\n     * @throws {@link ListValidationError}\n     */\n    Execute(val, semantics) {\n        const schema = this.createToken(this.val.args[0], 0);\n        this.validate(val);\n        return val.reduce((prev, current) => {\n            return [...prev, schema.Execute(current, semantics)];\n        }, []);\n    }\n    /**\n     * @throws {@link ListValidationError}\n     */\n    EncodeObject(args, semantic) {\n        const schema = this.createToken(this.val.args[0], 0);\n        this.validate(args);\n        if (semantic && semantic[ListToken.prim]) {\n            return semantic[ListToken.prim](args);\n        }\n        return args.reduce((prev, current) => {\n            return [...prev, schema.EncodeObject(current)];\n        }, []);\n    }\n    /**\n     * @deprecated ExtractSchema has been deprecated in favor of generateSchema\n     *\n     */\n    ExtractSchema() {\n        return {\n            [ListToken.prim]: this.valueSchema.ExtractSchema(),\n        };\n    }\n    generateSchema() {\n        return {\n            __michelsonType: ListToken.prim,\n            schema: this.valueSchema.generateSchema(),\n        };\n    }\n    findAndReturnTokens(tokenToFind, tokens) {\n        if (ListToken.prim === tokenToFind) {\n            tokens.push(this);\n        }\n        this.createToken(this.val.args[0], this.idx).findAndReturnTokens(tokenToFind, tokens);\n        return tokens;\n    }\n}\nListToken.prim = 'list';\n\n/**\n *  @category Error\n *  @description Error that indicates a failure happening when parsing encoding/executing Mutez\n */\nclass MutezValidationError extends TokenValidationError {\n    constructor(value, token, message) {\n        super(value, token, message);\n        this.value = value;\n        this.token = token;\n        this.name = 'MutezValidationError';\n    }\n}\nclass MutezToken extends ComparableToken {\n    constructor(val, idx, fac) {\n        super(val, idx, fac);\n        this.val = val;\n        this.idx = idx;\n        this.fac = fac;\n    }\n    Execute(val) {\n        return new BigNumber(val[Object.keys(val)[0]]);\n    }\n    /**\n     * @deprecated ExtractSchema has been deprecated in favor of generateSchema\n     *\n     */\n    ExtractSchema() {\n        return MutezToken.prim;\n    }\n    generateSchema() {\n        return {\n            __michelsonType: MutezToken.prim,\n            schema: MutezToken.prim,\n        };\n    }\n    /**\n     * @throws {@link MutezValidationError}\n     */\n    validate(val) {\n        const bigNumber = new BigNumber(val);\n        if (bigNumber.isNaN()) {\n            throw new MutezValidationError(val, this, `Value is not a number: ${val}`);\n        }\n    }\n    /**\n     * @throws {@link MutezValidationError}\n     */\n    Encode(args) {\n        const val = args.pop();\n        this.validate(val);\n        return { int: String(val).toString() };\n    }\n    /**\n     * @throws {@link MutezValidationError}\n     */\n    EncodeObject(val, semantic) {\n        this.validate(val);\n        if (semantic && semantic[MutezToken.prim]) {\n            return semantic[MutezToken.prim](val);\n        }\n        return { int: String(val).toString() };\n    }\n    ToBigMapKey(val) {\n        return {\n            key: { int: String(val) },\n            type: { prim: MutezToken.prim },\n        };\n    }\n    ToKey({ int }) {\n        return int;\n    }\n    compare(mutez1, mutez2) {\n        const o1 = Number(mutez1);\n        const o2 = Number(mutez2);\n        if (o1 === o2) {\n            return 0;\n        }\n        return o1 < o2 ? -1 : 1;\n    }\n    findAndReturnTokens(tokenToFind, tokens) {\n        if (MutezToken.prim === tokenToFind) {\n            tokens.push(this);\n        }\n        return tokens;\n    }\n}\nMutezToken.prim = 'mutez';\n\n/**\n *  @category Error\n *  @description Error that indicates a failure happening when parsing encoding/executing Bytes\n */\nclass BytesValidationError extends TokenValidationError {\n    constructor(value, token, message) {\n        super(value, token, message);\n        this.value = value;\n        this.token = token;\n        this.name = 'BytesValidationError';\n    }\n}\nclass BytesToken extends ComparableToken {\n    constructor(val, idx, fac) {\n        super(val, idx, fac);\n        this.val = val;\n        this.idx = idx;\n        this.fac = fac;\n    }\n    ToBigMapKey(val) {\n        return {\n            key: { bytes: val },\n            type: { prim: BytesToken.prim },\n        };\n    }\n    /**\n     * @throws {@link BytesValidationError}\n     */\n    validate(val) {\n        if (typeof val === 'string' && /^[0-9a-fA-F]*$/.test(val) && val.length % 2 === 0) {\n            return;\n        }\n        throw new BytesValidationError(val, this, `Invalid bytes: ${val}`);\n    }\n    convertUint8ArrayToHexString(val) {\n        return val.constructor === Uint8Array ? Buffer.from(val).toString('hex') : val;\n    }\n    /**\n     * @throws {@link BytesValidationError}\n     */\n    Encode(args) {\n        let val = args.pop();\n        val = stripHexPrefix(this.convertUint8ArrayToHexString(val));\n        this.validate(val);\n        return { bytes: String(val).toString() };\n    }\n    /**\n     * @throws {@link BytesValidationError}\n     */\n    EncodeObject(val, semantic) {\n        val = this.convertUint8ArrayToHexString(val);\n        if (typeof val === 'string') {\n            val = stripHexPrefix(val);\n        }\n        this.validate(val);\n        if (semantic && semantic[BytesToken.prim]) {\n            return semantic[BytesToken.prim](val);\n        }\n        return { bytes: String(val).toString() };\n    }\n    Execute(val) {\n        return val.bytes;\n    }\n    /**\n     * @deprecated ExtractSchema has been deprecated in favor of generateSchema\n     *\n     */\n    ExtractSchema() {\n        return BytesToken.prim;\n    }\n    generateSchema() {\n        return {\n            __michelsonType: BytesToken.prim,\n            schema: BytesToken.prim,\n        };\n    }\n    ToKey({ bytes, string }) {\n        if (string) {\n            return string;\n        }\n        return bytes;\n    }\n    findAndReturnTokens(tokenToFind, tokens) {\n        if (BytesToken.prim === tokenToFind) {\n            tokens.push(this);\n        }\n        return tokens;\n    }\n}\nBytesToken.prim = 'bytes';\n\nclass OptionToken extends ComparableToken {\n    constructor(val, idx, fac) {\n        super(val, idx, fac);\n        this.val = val;\n        this.idx = idx;\n        this.fac = fac;\n    }\n    subToken() {\n        return this.createToken(this.val.args[0], this.idx);\n    }\n    schema() {\n        return this.createToken(this.val.args[0], 0);\n    }\n    annot() {\n        return Array.isArray(this.val.annots)\n            ? super.annot()\n            : this.createToken(this.val.args[0], this.idx).annot();\n    }\n    Encode(args) {\n        const value = args;\n        if (value === undefined || value === null) {\n            return { prim: 'None' };\n        }\n        else if (Array.isArray(value) &&\n            (value[value.length - 1] === undefined || value[value.length - 1] === null)) {\n            value.pop();\n            return { prim: 'None' };\n        }\n        return { prim: 'Some', args: [this.schema().Encode(args)] };\n    }\n    EncodeObject(args, semantic) {\n        let value = args;\n        if (value === undefined || value === null) {\n            return { prim: 'None' };\n        }\n        value = typeof value === 'object' && 'Some' in value ? value['Some'] : value;\n        return { prim: 'Some', args: [this.schema().EncodeObject(value, semantic)] };\n    }\n    Execute(val, semantics) {\n        if (val.prim === 'None') {\n            return null;\n        }\n        return { Some: this.schema().Execute(val.args[0], semantics) };\n    }\n    /**\n     * @deprecated ExtractSchema has been deprecated in favor of generateSchema\n     *\n     */\n    ExtractSchema() {\n        return { Some: this.schema().ExtractSchema() };\n    }\n    generateSchema() {\n        return {\n            __michelsonType: OptionToken.prim,\n            schema: this.schema().generateSchema(),\n        };\n    }\n    ExtractSignature() {\n        return [...this.schema().ExtractSignature()];\n    }\n    get KeySchema() {\n        return this.schema();\n    }\n    compare(val1, val2) {\n        if (!val1) {\n            return -1;\n        }\n        else if (!val2) {\n            return 1;\n        }\n        return this.KeySchema.compare(val1, val2);\n    }\n    ToKey(val) {\n        return this.Execute(val);\n    }\n    ToBigMapKey(val) {\n        return {\n            key: this.EncodeObject(val),\n            type: this.typeWithoutAnnotations(),\n        };\n    }\n    findAndReturnTokens(tokenToFind, tokens) {\n        if (OptionToken.prim === tokenToFind) {\n            tokens.push(this);\n        }\n        this.subToken().findAndReturnTokens(tokenToFind, tokens);\n        return tokens;\n    }\n}\nOptionToken.prim = 'option';\n\nclass TimestampToken extends ComparableToken {\n    constructor(val, idx, fac) {\n        super(val, idx, fac);\n        this.val = val;\n        this.idx = idx;\n        this.fac = fac;\n    }\n    Execute(val) {\n        if (val.string && /^\\d+$/.test(val.string)) {\n            return new Date(Number(val.string) * 1000).toISOString();\n        }\n        else if (val.string) {\n            return new Date(val.string).toISOString();\n        }\n        else if (val.int) {\n            return new Date(Number(val.int) * 1000).toISOString();\n        }\n    }\n    Encode(args) {\n        const val = args.pop();\n        if (typeof val === 'number') {\n            return { int: String(val) };\n        }\n        else {\n            return { string: val };\n        }\n    }\n    EncodeObject(val, semantic) {\n        if (semantic && semantic[TimestampToken.prim]) {\n            return semantic[TimestampToken.prim](val);\n        }\n        if (typeof val === 'number') {\n            return { int: String(val) };\n        }\n        else {\n            return { string: val };\n        }\n    }\n    /**\n     * @deprecated ExtractSchema has been deprecated in favor of generateSchema\n     *\n     */\n    ExtractSchema() {\n        return TimestampToken.prim;\n    }\n    generateSchema() {\n        return {\n            __michelsonType: TimestampToken.prim,\n            schema: TimestampToken.prim,\n        };\n    }\n    ToKey({ string }) {\n        return string;\n    }\n    ToBigMapKey(val) {\n        return {\n            key: { string: val },\n            type: { prim: TimestampToken.prim },\n        };\n    }\n    findAndReturnTokens(tokenToFind, tokens) {\n        if (TimestampToken.prim === tokenToFind) {\n            tokens.push(this);\n        }\n        return tokens;\n    }\n}\nTimestampToken.prim = 'timestamp';\n\n/**\n *  @category Error\n *  @description Error that indicates a failure happening when parsing encoding/executing Int\n */\nclass IntValidationError extends TokenValidationError {\n    constructor(value, token, message) {\n        super(value, token, message);\n        this.value = value;\n        this.token = token;\n        this.name = 'IntValidationError';\n    }\n}\nclass IntToken extends ComparableToken {\n    constructor(val, idx, fac) {\n        super(val, idx, fac);\n        this.val = val;\n        this.idx = idx;\n        this.fac = fac;\n    }\n    Execute(val) {\n        return new BigNumber(val[Object.keys(val)[0]]);\n    }\n    /**\n     * @deprecated ExtractSchema has been deprecated in favor of generateSchema\n     *\n     */\n    ExtractSchema() {\n        return IntToken.prim;\n    }\n    generateSchema() {\n        return {\n            __michelsonType: IntToken.prim,\n            schema: IntToken.prim,\n        };\n    }\n    /**\n     * @throws {@link IntValidationError}\n     */\n    validate(val) {\n        const bigNumber = new BigNumber(val);\n        if (bigNumber.isNaN()) {\n            throw new IntValidationError(val, this, `Value is not a number: ${JSON.stringify(val)}`);\n        }\n    }\n    /**\n     * @throws {@link IntValidationError}\n     */\n    Encode(args) {\n        const val = args.pop();\n        this.validate(val);\n        return { int: new BigNumber(val).toFixed() };\n    }\n    /**\n     * @throws {@link IntValidationError}\n     */\n    EncodeObject(val, semantic) {\n        this.validate(val);\n        if (semantic && semantic[IntToken.prim]) {\n            return semantic[IntToken.prim](val);\n        }\n        return { int: new BigNumber(val).toFixed() };\n    }\n    ToBigMapKey(val) {\n        return {\n            key: { int: String(val) },\n            type: { prim: IntToken.prim },\n        };\n    }\n    ToKey({ int }) {\n        return int;\n    }\n    compare(int1, int2) {\n        const o1 = Number(int1);\n        const o2 = Number(int2);\n        if (o1 === o2) {\n            return 0;\n        }\n        return o1 < o2 ? -1 : 1;\n    }\n    findAndReturnTokens(tokenToFind, tokens) {\n        if (IntToken.prim === tokenToFind) {\n            tokens.push(this);\n        }\n        return tokens;\n    }\n}\nIntToken.prim = 'int';\n\nclass UnitToken extends ComparableToken {\n    constructor(val, idx, fac) {\n        super(val, idx, fac);\n        this.val = val;\n        this.idx = idx;\n        this.fac = fac;\n    }\n    Encode(args) {\n        args.pop();\n        return { prim: 'Unit' };\n    }\n    EncodeObject(val, semantic) {\n        if (semantic && semantic[UnitToken.prim]) {\n            return semantic[UnitToken.prim](val);\n        }\n        return { prim: 'Unit' };\n    }\n    Execute(_val) {\n        return UnitValue;\n    }\n    /**\n     * @deprecated ExtractSchema has been deprecated in favor of generateSchema\n     *\n     */\n    ExtractSchema() {\n        return UnitToken.prim;\n    }\n    generateSchema() {\n        return {\n            __michelsonType: UnitToken.prim,\n            schema: UnitToken.prim,\n        };\n    }\n    compare(_val1, _val2) {\n        return 0;\n    }\n    ToKey(_val) {\n        return UnitValue;\n    }\n    ToBigMapKey(_val) {\n        return {\n            key: { prim: 'Unit' },\n            type: { prim: UnitToken.prim },\n        };\n    }\n    findAndReturnTokens(tokenToFind, tokens) {\n        if (UnitToken.prim === tokenToFind) {\n            tokens.push(this);\n        }\n        return tokens;\n    }\n}\nUnitToken.prim = 'unit';\n\nconst publicKeyPrefixLength = 4;\n/**\n *  @category Error\n *  @description Error that indicates a failure happening when parsing encoding/executing a Key\n */\nclass KeyValidationError extends TokenValidationError {\n    constructor(value, token, message) {\n        super(value, token, message);\n        this.value = value;\n        this.token = token;\n        this.name = 'KeyValidationError';\n    }\n}\nclass KeyToken extends ComparableToken {\n    constructor(val, idx, fac) {\n        super(val, idx, fac);\n        this.val = val;\n        this.idx = idx;\n        this.fac = fac;\n    }\n    Execute(val) {\n        if (val.string) {\n            return val.string;\n        }\n        return encodeKey(val.bytes);\n    }\n    /**\n     * @throws {@link KeyValidationError}\n     */\n    validate(value) {\n        if (validatePublicKey(value) !== ValidationResult.VALID) {\n            throw new KeyValidationError(value, this, 'Key is not valid');\n        }\n    }\n    /**\n     * @throws {@link KeyValidationError}\n     */\n    Encode(args) {\n        const val = args.pop();\n        this.validate(val);\n        return { string: val };\n    }\n    /**\n     * @throws {@link KeyValidationError}\n     */\n    EncodeObject(val, semantic) {\n        this.validate(val);\n        if (semantic && semantic[KeyToken.prim]) {\n            return semantic[KeyToken.prim](val);\n        }\n        return { string: val };\n    }\n    /**\n     * @deprecated ExtractSchema has been deprecated in favor of generateSchema\n     *\n     */\n    ExtractSchema() {\n        return KeyToken.prim;\n    }\n    generateSchema() {\n        return {\n            __michelsonType: KeyToken.prim,\n            schema: KeyToken.prim,\n        };\n    }\n    ToKey(val) {\n        return this.Execute(val);\n    }\n    ToBigMapKey(val) {\n        return {\n            key: { string: val },\n            type: { prim: KeyToken.prim },\n        };\n    }\n    compare(key1, key2) {\n        const keyPrefix1 = this.getPrefix(key1);\n        const keyPrefix2 = this.getPrefix(key2);\n        if (keyPrefix1 === Prefix.EDPK && keyPrefix2 !== Prefix.EDPK) {\n            return -1;\n        }\n        else if (keyPrefix1 === Prefix.SPPK && keyPrefix2 !== Prefix.SPPK) {\n            return keyPrefix2 === Prefix.EDPK ? 1 : -1;\n        }\n        else if (keyPrefix1 === Prefix.P2PK) {\n            if (keyPrefix2 !== Prefix.P2PK) {\n                return 1;\n            }\n            const keyBytes1 = this.getP256PublicKeyComparableBytes(key1);\n            const keyBytes2 = this.getP256PublicKeyComparableBytes(key2);\n            return Buffer.compare(keyBytes1, keyBytes2);\n        }\n        return super.compare(key1, key2);\n    }\n    getPrefix(val) {\n        return val.substring(0, publicKeyPrefixLength);\n    }\n    getP256PublicKeyComparableBytes(p2pk) {\n        return b58cdecode(p2pk, prefix[Prefix.P2PK]).slice(1);\n    }\n    findAndReturnTokens(tokenToFind, tokens) {\n        if (KeyToken.prim === tokenToFind) {\n            tokens.push(this);\n        }\n        return tokens;\n    }\n}\nKeyToken.prim = 'key';\n\n/**\n *  @category Error\n *  @description Error that indicates a failure happening when parsing encoding/executing Key Hash\n */\nclass KeyHashValidationError extends TokenValidationError {\n    constructor(value, token, message) {\n        super(value, token, message);\n        this.value = value;\n        this.token = token;\n        this.name = 'KeyHashValidationError';\n    }\n}\nclass KeyHashToken extends ComparableToken {\n    constructor(val, idx, fac) {\n        super(val, idx, fac);\n        this.val = val;\n        this.idx = idx;\n        this.fac = fac;\n    }\n    Execute(val) {\n        if (val.string) {\n            return val.string;\n        }\n        return encodeKeyHash(val.bytes);\n    }\n    /**\n     * @throws {@link KeyHashValidationError}\n     */\n    validate(value) {\n        if (validateKeyHash(value) !== ValidationResult.VALID) {\n            throw new KeyHashValidationError(value, this, `KeyHash is not valid: ${JSON.stringify(value)}`);\n        }\n    }\n    /**\n     * @throws {@link KeyHashValidationError}\n     */\n    Encode(args) {\n        const val = args.pop();\n        this.validate(val);\n        return { string: val };\n    }\n    /**\n     * @throws {@link KeyHashValidationError}\n     */\n    EncodeObject(val, semantic) {\n        this.validate(val);\n        if (semantic && semantic[KeyHashToken.prim]) {\n            return semantic[KeyHashToken.prim](val);\n        }\n        return { string: val };\n    }\n    /**\n     * @deprecated ExtractSchema has been deprecated in favor of generateSchema\n     *\n     */\n    ExtractSchema() {\n        return KeyHashToken.prim;\n    }\n    generateSchema() {\n        return {\n            __michelsonType: KeyHashToken.prim,\n            schema: KeyHashToken.prim,\n        };\n    }\n    ToKey({ string, bytes }) {\n        if (string) {\n            return string;\n        }\n        return encodeKeyHash(bytes);\n    }\n    ToBigMapKey(val) {\n        return {\n            key: { string: val },\n            type: { prim: KeyHashToken.prim },\n        };\n    }\n    findAndReturnTokens(tokenToFind, tokens) {\n        if (KeyHashToken.prim === tokenToFind) {\n            tokens.push(this);\n        }\n        return tokens;\n    }\n}\nKeyHashToken.prim = 'key_hash';\n\n/**\n *  @category Error\n *  @description Error that indicates a failure happening when parsing encoding/executing a Signature\n */\nclass SignatureValidationError extends TokenValidationError {\n    constructor(value, token, message) {\n        super(value, token, message);\n        this.value = value;\n        this.token = token;\n        this.name = 'SignatureValidationError';\n    }\n}\nclass SignatureToken extends ComparableToken {\n    constructor(val, idx, fac) {\n        super(val, idx, fac);\n        this.val = val;\n        this.idx = idx;\n        this.fac = fac;\n    }\n    Execute(val) {\n        if (val.string) {\n            return val.string;\n        }\n        // TODO decode the signature\n        return val.bytes;\n    }\n    /**\n     * @throws {@link SignatureValidationError}\n     */\n    validate(value) {\n        if (validateSignature(value) !== ValidationResult.VALID) {\n            throw new SignatureValidationError(value, this, 'Signature is not valid');\n        }\n    }\n    /**\n     * @throws {@link SignatureValidationError}\n     */\n    Encode(args) {\n        const val = args.pop();\n        this.validate(val);\n        return { string: val };\n    }\n    /**\n     * @throws {@link SignatureValidationError}\n     */\n    EncodeObject(val, semantic) {\n        this.validate(val);\n        if (semantic && semantic[SignatureToken.prim]) {\n            return semantic[SignatureToken.prim](val);\n        }\n        return { string: val };\n    }\n    /**\n     * @deprecated ExtractSchema has been deprecated in favor of generateSchema\n     *\n     */\n    ExtractSchema() {\n        return SignatureToken.prim;\n    }\n    generateSchema() {\n        return {\n            __michelsonType: SignatureToken.prim,\n            schema: SignatureToken.prim,\n        };\n    }\n    ToKey(val) {\n        return this.Execute(val);\n    }\n    ToBigMapKey(val) {\n        return {\n            key: { string: val },\n            type: { prim: SignatureToken.prim },\n        };\n    }\n    findAndReturnTokens(tokenToFind, tokens) {\n        if (SignatureToken.prim === tokenToFind) {\n            tokens.push(this);\n        }\n        return tokens;\n    }\n}\nSignatureToken.prim = 'signature';\n\nclass LambdaToken extends Token {\n    constructor(val, idx, fac) {\n        super(val, idx, fac);\n        this.val = val;\n        this.idx = idx;\n        this.fac = fac;\n    }\n    get paramSchema() {\n        return this.createToken(this.val.args[0], this.idx);\n    }\n    get returnSchema() {\n        return this.createToken(this.val.args[1], this.idx + 1);\n    }\n    Execute(val) {\n        if (val.string) {\n            return val.string;\n        }\n        else {\n            return val;\n        }\n    }\n    Encode(args) {\n        const val = args.pop();\n        return val;\n    }\n    EncodeObject(val, semantic) {\n        if (semantic && semantic[LambdaToken.prim]) {\n            return semantic[LambdaToken.prim](val);\n        }\n        return val;\n    }\n    /**\n     * @deprecated ExtractSchema has been deprecated in favor of generateSchema\n     *\n     */\n    ExtractSchema() {\n        return {\n            [LambdaToken.prim]: {\n                parameters: this.paramSchema.ExtractSchema(),\n                returns: this.returnSchema.ExtractSchema(),\n            },\n        };\n    }\n    generateSchema() {\n        return {\n            __michelsonType: LambdaToken.prim,\n            schema: {\n                parameters: this.paramSchema.generateSchema(),\n                returns: this.returnSchema.generateSchema(),\n            },\n        };\n    }\n    findAndReturnTokens(tokenToFind, tokens) {\n        if (LambdaToken.prim === tokenToFind) {\n            tokens.push(this);\n        }\n        this.createToken(this.val.args[0], this.idx).findAndReturnTokens(tokenToFind, tokens);\n        this.createToken(this.val.args[1], this.idx).findAndReturnTokens(tokenToFind, tokens);\n        return tokens;\n    }\n}\nLambdaToken.prim = 'lambda';\n\nclass OperationToken extends Token {\n    constructor(val, idx, fac) {\n        super(val, idx, fac);\n        this.val = val;\n        this.idx = idx;\n        this.fac = fac;\n    }\n    Execute(val) {\n        return val.string;\n    }\n    Encode(...args) {\n        const val = args.pop();\n        return { string: val };\n    }\n    EncodeObject(val, semantic) {\n        if (semantic && semantic[OperationToken.prim]) {\n            return semantic[OperationToken.prim](val);\n        }\n        return { string: val };\n    }\n    /**\n     * @deprecated ExtractSchema has been deprecated in favor of generateSchema\n     *\n     */\n    ExtractSchema() {\n        return OperationToken.prim;\n    }\n    generateSchema() {\n        return {\n            __michelsonType: OperationToken.prim,\n            schema: OperationToken.prim,\n        };\n    }\n    findAndReturnTokens(tokenToFind, tokens) {\n        if (OperationToken.prim === tokenToFind) {\n            tokens.push(this);\n        }\n        return tokens;\n    }\n}\nOperationToken.prim = 'operation';\n\n/**\n *  @category Error\n *  @description Error that indicates a failure happening when parsing encoding/executing a Set\n */\nclass SetValidationError extends TokenValidationError {\n    constructor(value, token, message) {\n        super(value, token, message);\n        this.value = value;\n        this.token = token;\n        this.name = 'SetValidationError';\n    }\n}\nclass SetToken extends Token {\n    constructor(val, idx, fac) {\n        super(val, idx, fac);\n        this.val = val;\n        this.idx = idx;\n        this.fac = fac;\n    }\n    get KeySchema() {\n        return this.createToken(this.val.args[0], 0);\n    }\n    /**\n     * @throws {@link SetValidationError}\n     */\n    validate(value) {\n        if (!Array.isArray(value)) {\n            throw new SetValidationError(value, this, `Value ${JSON.stringify(value)} is not an array`);\n        }\n    }\n    /**\n     * @throws {@link SetValidationError}\n     */\n    Encode(args) {\n        const val = args.pop();\n        this.validate(val);\n        return val\n            .sort((a, b) => this.KeySchema.compare(a, b))\n            .reduce((prev, current) => {\n            return [...prev, this.KeySchema.EncodeObject(current)];\n        }, []);\n    }\n    Execute(val, semantics) {\n        return val.reduce((prev, current) => {\n            return [...prev, this.KeySchema.Execute(current, semantics)];\n        }, []);\n    }\n    /**\n     * @throws {@link SetValidationError}\n     */\n    EncodeObject(args, semantic) {\n        this.validate(args);\n        if (semantic && semantic[SetToken.prim]) {\n            return semantic[SetToken.prim](args);\n        }\n        return args\n            .sort((a, b) => this.KeySchema.compare(a, b))\n            .reduce((prev, current) => {\n            return [...prev, this.KeySchema.EncodeObject(current)];\n        }, []);\n    }\n    /**\n     * @deprecated ExtractSchema has been deprecated in favor of generateSchema\n     *\n     */\n    ExtractSchema() {\n        return SetToken.prim;\n    }\n    generateSchema() {\n        return {\n            __michelsonType: SetToken.prim,\n            schema: this.KeySchema.generateSchema(),\n        };\n    }\n    findAndReturnTokens(tokenToFind, tokens) {\n        if (SetToken.prim === tokenToFind) {\n            tokens.push(this);\n        }\n        this.KeySchema.findAndReturnTokens(tokenToFind, tokens);\n        return tokens;\n    }\n}\nSetToken.prim = 'set';\n\n/**\n *  @category Error\n *  @description Error that indicates a failure happening when parsing encoding/executing a ChainID\n */\nclass ChainIDValidationError extends TokenValidationError {\n    constructor(value, token, message) {\n        super(value, token, message);\n        this.value = value;\n        this.token = token;\n        this.name = 'ChainIDValidationError';\n    }\n}\nclass ChainIDToken extends ComparableToken {\n    constructor(val, idx, fac) {\n        super(val, idx, fac);\n        this.val = val;\n        this.idx = idx;\n        this.fac = fac;\n    }\n    /**\n     * @throws {@link ChainIDValidationError}\n     */\n    validate(value) {\n        if (validateChain(value) !== ValidationResult.VALID) {\n            throw new ChainIDValidationError(value, this, `Value ${JSON.stringify(value)} is not a valid ChainID`);\n        }\n    }\n    Execute(val) {\n        return val[Object.keys(val)[0]];\n    }\n    /**\n     * @deprecated ExtractSchema has been deprecated in favor of generateSchema\n     *\n     */\n    ExtractSchema() {\n        return ChainIDToken.prim;\n    }\n    generateSchema() {\n        return {\n            __michelsonType: ChainIDToken.prim,\n            schema: ChainIDToken.prim,\n        };\n    }\n    /**\n     * @throws {@link ChainIDValidationError}\n     */\n    Encode(args) {\n        const val = args.pop();\n        this.validate(val);\n        return { string: val };\n    }\n    /**\n     * @throws {@link ChainIDValidationError}\n     */\n    EncodeObject(val, semantic) {\n        this.validate(val);\n        if (semantic && semantic[ChainIDToken.prim]) {\n            return semantic[ChainIDToken.prim](val);\n        }\n        return { string: val };\n    }\n    ToKey({ string }) {\n        return string;\n    }\n    ToBigMapKey(val) {\n        return {\n            key: { string: val },\n            type: { prim: ChainIDToken.prim },\n        };\n    }\n    findAndReturnTokens(tokenToFind, tokens) {\n        if (ChainIDToken.prim === tokenToFind) {\n            tokens.push(this);\n        }\n        return tokens;\n    }\n}\nChainIDToken.prim = 'chain_id';\n\n/**\n *  @category Error\n *  @description Error that indicates a failure when encoding and sending a ticket to the blockchain\n */\nclass EncodeTicketError extends TaquitoError {\n    constructor() {\n        super();\n        this.name = 'TicketEncodeError';\n        this.message = 'Tickets cannot be sent to the blockchain; they are created on-chain';\n    }\n}\nconst ticketerType$1 = { prim: 'contract' };\nconst amountType$1 = { prim: 'int' };\nclass TicketToken extends Token {\n    constructor(val, idx, fac) {\n        super(val, idx, fac);\n        this.val = val;\n        this.idx = idx;\n        this.fac = fac;\n    }\n    get valueToken() {\n        return this.createToken(this.val.args[0], this.idx);\n    }\n    /**\n     * @throws {@link EncodeTicketError}\n     */\n    Encode(_args) {\n        throw new EncodeTicketError();\n    }\n    /**\n     * @throws {@link EncodeTicketError}\n     */\n    EncodeObject(args, semantic) {\n        if (semantic && semantic[TicketToken.prim]) {\n            return semantic[TicketToken.prim](args, this.val);\n        }\n        throw new EncodeTicketError();\n    }\n    Execute(val, semantics) {\n        if (semantics && semantics[TicketToken.prim]) {\n            return semantics[TicketToken.prim](val, this.val);\n        }\n        const ticketer = this.createToken(ticketerType$1, this.idx);\n        const value = this.valueToken;\n        const amount = this.createToken(amountType$1, this.idx);\n        if (undefined === val.args[2] && undefined !== val.args[1].args) {\n            return {\n                ticketer: ticketer.Execute(val.args[0], semantics),\n                value: value.Execute(val.args[1].args[0], semantics),\n                amount: amount.Execute(val.args[1].args[1], semantics),\n            };\n        }\n        return {\n            ticketer: ticketer.Execute(val.args[0], semantics),\n            value: value.Execute(val.args[1], semantics),\n            amount: amount.Execute(val.args[2], semantics),\n        };\n    }\n    /**\n     * @deprecated ExtractSchema has been deprecated in favor of generateSchema\n     *\n     */\n    ExtractSchema() {\n        return {\n            ticketer: ContractToken.prim,\n            value: this.valueToken.ExtractSchema(),\n            amount: IntToken.prim,\n        };\n    }\n    generateSchema() {\n        return {\n            __michelsonType: TicketToken.prim,\n            schema: {\n                value: this.valueToken.generateSchema(),\n                ticketer: {\n                    __michelsonType: ContractToken.prim,\n                    schema: ContractToken.prim,\n                },\n                amount: {\n                    __michelsonType: IntToken.prim,\n                    schema: IntToken.prim,\n                },\n            },\n        };\n    }\n    findAndReturnTokens(tokenToFind, tokens) {\n        if (TicketToken.prim === tokenToFind) {\n            tokens.push(this);\n        }\n        this.valueToken.findAndReturnTokens(tokenToFind, tokens);\n        return tokens;\n    }\n}\nTicketToken.prim = 'ticket';\n\n/**\n *  @category Error\n *  @description Error that indicates a failure when encoding and sending a ticket to the blockchain\n */\nclass EncodeTicketDeprecatedError extends TaquitoError {\n    constructor() {\n        super();\n        this.name = 'TicketDeprecatedEncodeError';\n        this.message = 'Ticket_deprecated cannot be sent to the blockchain; they are created on-chain';\n    }\n}\nconst ticketerType = { prim: 'contract' };\nconst amountType = { prim: 'int' };\nclass TicketDeprecatedToken extends Token {\n    constructor(val, idx, fac) {\n        super(val, idx, fac);\n        this.val = val;\n        this.idx = idx;\n        this.fac = fac;\n    }\n    get valueToken() {\n        return this.createToken(this.val.args[0], this.idx);\n    }\n    /**\n     * @throws {@link EncodeTicketDeprecatedError}\n     */\n    Encode(_args) {\n        throw new EncodeTicketDeprecatedError();\n    }\n    /**\n     * @throws {@link EncodeTicketDeprecatedError}\n     */\n    EncodeObject(args, semantic) {\n        if (semantic && semantic[TicketDeprecatedToken.prim]) {\n            return semantic[TicketDeprecatedToken.prim](args, this.val);\n        }\n        throw new EncodeTicketDeprecatedError();\n    }\n    Execute(val, semantics) {\n        if (semantics && semantics[TicketDeprecatedToken.prim]) {\n            return semantics[TicketDeprecatedToken.prim](val, this.val);\n        }\n        const ticketer = this.createToken(ticketerType, this.idx);\n        const value = this.valueToken;\n        const amount = this.createToken(amountType, this.idx);\n        if (undefined === val.args[2] && undefined !== val.args[1].args) {\n            return {\n                ticketer: ticketer.Execute(val.args[0], semantics),\n                value: value.Execute(val.args[1].args[0], semantics),\n                amount: amount.Execute(val.args[1].args[1], semantics),\n            };\n        }\n        return {\n            ticketer: ticketer.Execute(val.args[0], semantics),\n            value: value.Execute(val.args[1], semantics),\n            amount: amount.Execute(val.args[2], semantics),\n        };\n    }\n    /**\n     * @deprecated ExtractSchema has been deprecated in favor of generateSchema\n     *\n     */\n    ExtractSchema() {\n        return {\n            ticketer: ContractToken.prim,\n            value: this.valueToken.ExtractSchema(),\n            amount: IntToken.prim,\n        };\n    }\n    generateSchema() {\n        return {\n            __michelsonType: TicketDeprecatedToken.prim,\n            schema: {\n                value: this.valueToken.generateSchema(),\n                ticketer: {\n                    __michelsonType: ContractToken.prim,\n                    schema: ContractToken.prim,\n                },\n                amount: {\n                    __michelsonType: IntToken.prim,\n                    schema: IntToken.prim,\n                },\n            },\n        };\n    }\n    findAndReturnTokens(tokenToFind, tokens) {\n        if (TicketDeprecatedToken.prim === tokenToFind) {\n            tokens.push(this);\n        }\n        this.valueToken.findAndReturnTokens(tokenToFind, tokens);\n        return tokens;\n    }\n}\nTicketDeprecatedToken.prim = 'ticket_deprecated';\n\n/**\n *  @category Error\n *  @description Error that indicates a failure happening when parsing encoding/executing a Never Token\n */\nclass NeverTokenError extends TokenValidationError {\n    constructor(value, token, message) {\n        super(value, token, message);\n        this.value = value;\n        this.token = token;\n        this.name = 'NeverTokenError';\n    }\n}\nclass NeverToken extends Token {\n    constructor(val, idx, fac) {\n        super(val, idx, fac);\n        this.val = val;\n        this.idx = idx;\n        this.fac = fac;\n    }\n    /**\n     * @throws {@link NeverTokenError}\n     */\n    Encode(args) {\n        const val = args.pop();\n        throw new NeverTokenError(val, this, `Assigning a value to the type never is forbidden. Trying to assign ${JSON.stringify(val)}.`);\n    }\n    /**\n     * @throws {@link NeverTokenError}\n     */\n    EncodeObject(val, semantic) {\n        if (semantic && semantic[NeverToken.prim]) {\n            return semantic[NeverToken.prim](val);\n        }\n        throw new NeverTokenError(val, this, `Assigning a value to the type never is forbidden. Trying to assign ${JSON.stringify(val)}.`);\n    }\n    /**\n     * @throws {@link NeverTokenError}\n     */\n    Execute(val) {\n        throw new NeverTokenError(val, this, `There is no literal value for the type never. Trying to execute ${JSON.stringify(val)}.`);\n    }\n    /**\n     * @deprecated ExtractSchema has been deprecated in favor of generateSchema\n     *\n     */\n    ExtractSchema() {\n        return NeverToken.prim;\n    }\n    generateSchema() {\n        return {\n            __michelsonType: NeverToken.prim,\n            schema: NeverToken.prim,\n        };\n    }\n    findAndReturnTokens(tokenToFind, tokens) {\n        if (NeverToken.prim === tokenToFind) {\n            tokens.push(this);\n        }\n        return tokens;\n    }\n}\nNeverToken.prim = 'never';\n\n/**\n *  @category Error\n *  @description Error that indicates a failure happening when parsing encoding/executing a Sapling State\n */\nclass SaplingStateValidationError extends TokenValidationError {\n    constructor(value, token, message) {\n        super(value, token, message);\n        this.value = value;\n        this.token = token;\n        this.name = 'SaplingStateValidationError';\n    }\n}\nclass SaplingStateToken extends Token {\n    constructor(val, idx, fac) {\n        super(val, idx, fac);\n        this.val = val;\n        this.idx = idx;\n        this.fac = fac;\n    }\n    isValid(val) {\n        return typeof val === 'object' && Object.keys(val).length === 0;\n    }\n    /**\n     * @throws {@link SaplingStateValidationError}\n     */\n    Execute(val, semantic) {\n        if (semantic && semantic[SaplingStateToken.prim]) {\n            return semantic[SaplingStateToken.prim](val, this.val);\n        }\n        if ('int' in val) {\n            return val.int;\n        }\n        else {\n            throw new SaplingStateValidationError(val, this, `Sapling state is expecting an object with an int property. Got ${JSON.stringify(val)}`);\n        }\n    }\n    /**\n     * @throws {@link SaplingStateValidationError}\n     */\n    Encode(args) {\n        const val = args.pop();\n        if (this.isValid(val)) {\n            return [];\n        }\n        else {\n            throw new SaplingStateValidationError(val, this, `Invalid sapling_state. Received: ${JSON.stringify(val)} while expecting: {}`);\n        }\n    }\n    /**\n     * @throws {@link SaplingStateValidationError}\n     */\n    EncodeObject(val, semantic) {\n        if (semantic && semantic[SaplingStateToken.prim]) {\n            return semantic[SaplingStateToken.prim](val);\n        }\n        if (this.isValid(val)) {\n            return [];\n        }\n        else {\n            throw new SaplingStateValidationError(val, this, `Invalid sapling_state. Received: ${JSON.stringify(val)} while expecting: {}`);\n        }\n    }\n    /**\n     * @deprecated ExtractSchema has been deprecated in favor of generateSchema\n     *\n     */\n    ExtractSchema() {\n        return {\n            [SaplingStateToken.prim]: {\n                'memo-size': Number(this.val.args[0]['int']),\n            },\n        };\n    }\n    generateSchema() {\n        return {\n            __michelsonType: SaplingStateToken.prim,\n            schema: {\n                memoSize: this.val.args[0]['int'],\n            },\n        };\n    }\n    findAndReturnTokens(tokenToFind, tokens) {\n        if (SaplingStateToken.prim === tokenToFind) {\n            tokens.push(this);\n        }\n        return tokens;\n    }\n}\nSaplingStateToken.prim = 'sapling_state';\n\n/**\n *  @category Error\n *  @description Error that indicates a failure happening when parsing encoding/executing a Sapling Transaction\n */\nclass SaplingTransactionValidationError extends TokenValidationError {\n    constructor(value, token, message) {\n        super(value, token, message);\n        this.value = value;\n        this.token = token;\n        this.name = 'SaplingTransactionValidationError';\n    }\n}\nclass SaplingTransactionToken extends Token {\n    constructor(val, idx, fac) {\n        super(val, idx, fac);\n        this.val = val;\n        this.idx = idx;\n        this.fac = fac;\n    }\n    /**\n     * @throws {@link SaplingTransactionValidationError}\n     */\n    Execute(_val) {\n        throw new SaplingTransactionValidationError(_val, this, `There is no literal value for the sapling_transaction type. Got: ${JSON.stringify(_val)}.`);\n    }\n    /**\n     * @throws {@link SaplingTransactionValidationError}\n     */\n    validateBytes(val) {\n        const bytes = /^(0x|0X)?([0-9a-fA-F]*$)/.exec(val);\n        if (bytes && bytes[2].length % 2 === 0) {\n            return bytes[2];\n        }\n        else {\n            throw new SaplingTransactionValidationError(val, this, `Invalid bytes: ${JSON.stringify(val)}`);\n        }\n    }\n    convertUint8ArrayToHexString(val) {\n        return val.constructor === Uint8Array ? Buffer.from(val).toString('hex') : val;\n    }\n    Encode(args) {\n        let val = args.pop();\n        val = this.validateBytes(this.convertUint8ArrayToHexString(val));\n        return { bytes: String(val).toString() };\n    }\n    EncodeObject(val, semantic) {\n        val = this.validateBytes(this.convertUint8ArrayToHexString(val));\n        if (semantic && semantic[SaplingTransactionToken.prim]) {\n            return semantic[SaplingTransactionToken.prim](val);\n        }\n        return { bytes: String(val).toString() };\n    }\n    /**\n     * @deprecated ExtractSchema has been deprecated in favor of generateSchema\n     *\n     */\n    ExtractSchema() {\n        return {\n            [SaplingTransactionToken.prim]: {\n                'memo-size': Number(this.val.args[0]['int']),\n            },\n        };\n    }\n    generateSchema() {\n        return {\n            __michelsonType: SaplingTransactionToken.prim,\n            schema: {\n                memoSize: this.val.args[0]['int'],\n            },\n        };\n    }\n    findAndReturnTokens(tokenToFind, tokens) {\n        if (SaplingTransactionToken.prim === tokenToFind) {\n            tokens.push(this);\n        }\n        return tokens;\n    }\n}\nSaplingTransactionToken.prim = 'sapling_transaction';\n\n/**\n *  @category Error\n *  @description Error that indicates a failure happening when parsing encoding/executing a Sapling Transaction Deprecated\n */\nclass SaplingTransactionDeprecatedValidationError extends TokenValidationError {\n    constructor(value, token, message) {\n        super(value, token, message);\n        this.value = value;\n        this.token = token;\n        this.name = 'SaplingTransactionDeprecatedValidationError';\n    }\n}\nclass SaplingTransactionDeprecatedToken extends Token {\n    constructor(val, idx, fac) {\n        super(val, idx, fac);\n        this.val = val;\n        this.idx = idx;\n        this.fac = fac;\n    }\n    /**\n     * @throws {@link SaplingTransactionDeprecatedValidationError}\n     */\n    Execute(_val) {\n        throw new SaplingTransactionDeprecatedValidationError(_val, this, `There is no literal value for the sapling_transaction_deprecated type. Got: ${JSON.stringify(_val)}.`);\n    }\n    /**\n     * @throws {@link SaplingTransactionDeprecatedValidationError}\n     */\n    validateBytes(val) {\n        const bytes = /^(0x|0X)?([0-9a-fA-F]*$)/.exec(val);\n        if (bytes && bytes[2].length % 2 === 0) {\n            return bytes[2];\n        }\n        else {\n            throw new SaplingTransactionDeprecatedValidationError(val, this, `Invalid bytes: ${JSON.stringify(val)}`);\n        }\n    }\n    convertUint8ArrayToHexString(val) {\n        return val.constructor === Uint8Array ? Buffer.from(val).toString('hex') : val;\n    }\n    Encode(args) {\n        let val = args.pop();\n        val = this.validateBytes(this.convertUint8ArrayToHexString(val));\n        return { bytes: String(val).toString() };\n    }\n    EncodeObject(val, semantic) {\n        val = this.validateBytes(this.convertUint8ArrayToHexString(val));\n        if (semantic && semantic[SaplingTransactionDeprecatedToken.prim]) {\n            return semantic[SaplingTransactionDeprecatedToken.prim](val);\n        }\n        return { bytes: String(val).toString() };\n    }\n    /**\n     * @deprecated ExtractSchema has been deprecated in favor of generateSchema\n     *\n     */\n    ExtractSchema() {\n        return {\n            [SaplingTransactionDeprecatedToken.prim]: {\n                'memo-size': Number(this.val.args[0]['int']),\n            },\n        };\n    }\n    generateSchema() {\n        return {\n            __michelsonType: SaplingTransactionDeprecatedToken.prim,\n            schema: {\n                memoSize: this.val.args[0]['int'],\n            },\n        };\n    }\n    findAndReturnTokens(tokenToFind, tokens) {\n        if (SaplingTransactionDeprecatedToken.prim === tokenToFind) {\n            tokens.push(this);\n        }\n        return tokens;\n    }\n}\nSaplingTransactionDeprecatedToken.prim = 'sapling_transaction_deprecated';\n\n/**\n *  @category Error\n *  @description Error that indicates a failure happening when parsing encoding/executing a BLS12-381 scalar field Fr\n */\nclass Bls12381frValidationError extends TokenValidationError {\n    constructor(value, token, message) {\n        super(value, token, message);\n        this.value = value;\n        this.token = token;\n        this.name = 'Bls12381frValidationError';\n    }\n}\nclass Bls12381frToken extends Token {\n    constructor(val, idx, fac) {\n        super(val, idx, fac);\n        this.val = val;\n        this.idx = idx;\n        this.fac = fac;\n    }\n    /**\n     * @throws {@link Bls12381frValidationError}\n     */\n    validate(val) {\n        if (/^[0-9a-fA-F]*$/.test(val) && val.length % 2 === 0) {\n            return;\n        }\n        throw new Bls12381frValidationError(val, this, `Invalid bytes: ${JSON.stringify(val)}`);\n    }\n    convertUint8ArrayToHexString(val) {\n        return val.constructor === Uint8Array ? Buffer.from(val).toString('hex') : val;\n    }\n    /**\n     * @throws {@link Bls12381frValidationError}\n     */\n    Encode(args) {\n        let val = args.pop();\n        if (typeof val === 'number') {\n            return { int: val.toString() };\n        }\n        else {\n            val = this.convertUint8ArrayToHexString(val);\n            this.validate(val);\n            return { bytes: val };\n        }\n    }\n    /**\n     * @throws {@link Bls12381frValidationError}\n     */\n    EncodeObject(val, semantic) {\n        if (semantic && semantic[Bls12381frToken.prim]) {\n            return semantic[Bls12381frToken.prim](val);\n        }\n        if (typeof val === 'number') {\n            return { int: val.toString() };\n        }\n        else {\n            val = this.convertUint8ArrayToHexString(val);\n            this.validate(val);\n            return { bytes: val };\n        }\n    }\n    Execute(val) {\n        return val.bytes;\n    }\n    /**\n     * @deprecated ExtractSchema has been deprecated in favor of generateSchema\n     *\n     */\n    ExtractSchema() {\n        return Bls12381frToken.prim;\n    }\n    generateSchema() {\n        return {\n            __michelsonType: Bls12381frToken.prim,\n            schema: Bls12381frToken.prim,\n        };\n    }\n    findAndReturnTokens(tokenToFind, tokens) {\n        if (Bls12381frToken.prim === tokenToFind) {\n            tokens.push(this);\n        }\n        return tokens;\n    }\n}\n// An element of the BLS12-381 scalar field Fr\n// see https://tezos.gitlab.io/michelson-reference/#type-bls12_381_fr\nBls12381frToken.prim = 'bls12_381_fr';\n\n/**\n *  @category Error\n *  @description Error that indicates a failure happening when parsing encoding/executing a BLS12-381 curve G1\n */\nclass Bls12381g1ValidationError extends TokenValidationError {\n    constructor(value, token, message) {\n        super(value, token, message);\n        this.value = value;\n        this.token = token;\n        this.name = 'Bls12381g1ValidationError';\n    }\n}\nclass Bls12381g1Token extends Token {\n    constructor(val, idx, fac) {\n        super(val, idx, fac);\n        this.val = val;\n        this.idx = idx;\n        this.fac = fac;\n    }\n    /**\n     * @throws {@link Bls12381g1ValidationError}\n     */\n    validate(val) {\n        if (/^[0-9a-fA-F]*$/.test(val) && val.length % 2 === 0) {\n            return;\n        }\n        throw new Bls12381g1ValidationError(val, this, `Invalid bytes: ${JSON.stringify(val)}`);\n    }\n    convertUint8ArrayToHexString(val) {\n        return val.constructor === Uint8Array ? Buffer.from(val).toString('hex') : val;\n    }\n    /**\n     * @throws {@link Bls12381g1ValidationError}\n     */\n    Encode(args) {\n        let val = args.pop();\n        val = this.convertUint8ArrayToHexString(val);\n        this.validate(val);\n        return { bytes: val };\n    }\n    /**\n     * @throws {@link Bls12381g1ValidationError}\n     */\n    EncodeObject(val, semantic) {\n        val = this.convertUint8ArrayToHexString(val);\n        this.validate(val);\n        if (semantic && semantic[Bls12381g1Token.prim]) {\n            return semantic[Bls12381g1Token.prim](val);\n        }\n        return { bytes: val };\n    }\n    Execute(val) {\n        return val.bytes;\n    }\n    /**\n     * @deprecated ExtractSchema has been deprecated in favor of generateSchema\n     *\n     */\n    ExtractSchema() {\n        return Bls12381g1Token.prim;\n    }\n    generateSchema() {\n        return {\n            __michelsonType: Bls12381g1Token.prim,\n            schema: Bls12381g1Token.prim,\n        };\n    }\n    findAndReturnTokens(tokenToFind, tokens) {\n        if (Bls12381g1Token.prim === tokenToFind) {\n            tokens.push(this);\n        }\n        return tokens;\n    }\n}\n// A point on the BLS12-381 curve G1\n// See https://tezos.gitlab.io/michelson-reference/#type-bls12_381_g1\nBls12381g1Token.prim = 'bls12_381_g1';\n\n/**\n *  @category Error\n *  @description Error that indicates a failure happening when parsing encoding/executing a BLS12-381 curve G2\n */\nclass Bls12381g2ValidationError extends TokenValidationError {\n    constructor(value, token, message) {\n        super(value, token, message);\n        this.value = value;\n        this.token = token;\n        this.name = 'Bls12381g2ValidationError';\n    }\n}\nclass Bls12381g2Token extends Token {\n    constructor(val, idx, fac) {\n        super(val, idx, fac);\n        this.val = val;\n        this.idx = idx;\n        this.fac = fac;\n    }\n    /**\n     * @throws {@link Bls12381g2ValidationError}\n     */\n    validate(val) {\n        if (/^[0-9a-fA-F]*$/.test(val) && val.length % 2 === 0) {\n            return;\n        }\n        throw new Bls12381g2ValidationError(val, this, `Invalid bytes: ${JSON.stringify(val)}`);\n    }\n    convertUint8ArrayToHexString(val) {\n        return val.constructor === Uint8Array ? Buffer.from(val).toString('hex') : val;\n    }\n    /**\n     * @throws {@link Bls12381g2ValidationError}\n     */\n    Encode(args) {\n        let val = args.pop();\n        val = this.convertUint8ArrayToHexString(val);\n        this.validate(val);\n        return { bytes: val };\n    }\n    /**\n     * @throws {@link Bls12381g2ValidationError}\n     */\n    EncodeObject(val, semantic) {\n        val = this.convertUint8ArrayToHexString(val);\n        this.validate(val);\n        if (semantic && semantic[Bls12381g2Token.prim]) {\n            return semantic[Bls12381g2Token.prim](val);\n        }\n        return { bytes: val };\n    }\n    Execute(val) {\n        return val.bytes;\n    }\n    /**\n     * @deprecated ExtractSchema has been deprecated in favor of generateSchema\n     *\n     */\n    ExtractSchema() {\n        return Bls12381g2Token.prim;\n    }\n    generateSchema() {\n        return {\n            __michelsonType: Bls12381g2Token.prim,\n            schema: Bls12381g2Token.prim,\n        };\n    }\n    findAndReturnTokens(tokenToFind, tokens) {\n        if (Bls12381g2Token.prim === tokenToFind) {\n            tokens.push(this);\n        }\n        return tokens;\n    }\n}\n// A point on the BLS12-381 curve G2\n// See https://tezos.gitlab.io/michelson-reference/#type-bls12_381_g2\nBls12381g2Token.prim = 'bls12_381_g2';\n\n/**\n *  @category Error\n *  @description Error that indicates a failure happening when parsing encoding/executing a Chest\n */\nclass ChestValidationError extends TokenValidationError {\n    constructor(value, token, message) {\n        super(value, token, message);\n        this.value = value;\n        this.token = token;\n        this.name = 'ChestValidationError';\n    }\n}\nclass ChestToken extends Token {\n    constructor(val, idx, fac) {\n        super(val, idx, fac);\n        this.val = val;\n        this.idx = idx;\n        this.fac = fac;\n    }\n    /**\n     * @throws {@link ChestKeyValidationError}\n     */\n    validate(val) {\n        if (/^[0-9a-fA-F]*$/.test(val) && val.length % 2 == 0) {\n            return;\n        }\n        throw new ChestValidationError(val, this, `Invalid bytes: ${JSON.stringify(val)}`);\n    }\n    convertUint8ArrayToHexString(val) {\n        return val.constructor === Uint8Array ? Buffer.from(val).toString('hex') : val;\n    }\n    /**\n     * @throws {@link ChestKeyValidationError}\n     */\n    Encode(args) {\n        let val = args.pop();\n        val = this.convertUint8ArrayToHexString(val);\n        this.validate(val);\n        return { bytes: val };\n    }\n    /**\n     * @throws {@link ChestKeyValidationError}\n     */\n    EncodeObject(val, semantic) {\n        val = this.convertUint8ArrayToHexString(val);\n        this.validate(val);\n        if (semantic && semantic[ChestToken.prim]) {\n            return semantic[ChestToken.prim](val);\n        }\n        return { bytes: val };\n    }\n    Execute(val) {\n        return val.bytes;\n    }\n    /**\n     * @deprecated ExtractSchema has been deprecated in favor of generateSchema\n     *\n     */\n    ExtractSchema() {\n        return ChestToken.prim;\n    }\n    generateSchema() {\n        return {\n            __michelsonType: ChestToken.prim,\n            schema: ChestToken.prim,\n        };\n    }\n    findAndReturnTokens(tokenToFind, tokens) {\n        if (ChestToken.prim === tokenToFind) {\n            tokens.push(this);\n        }\n        return tokens;\n    }\n}\nChestToken.prim = 'chest';\n\n/**\n *  @category Error\n *  @description Error that indicates a failure happening when parsing encoding/executing a Chest Key\n */\nclass ChestKeyValidationError extends TokenValidationError {\n    constructor(value, token, message) {\n        super(value, token, message);\n        this.value = value;\n        this.token = token;\n        this.name = 'ChestKeyValidationError';\n    }\n}\nclass ChestKeyToken extends Token {\n    constructor(val, idx, fac) {\n        super(val, idx, fac);\n        this.val = val;\n        this.idx = idx;\n        this.fac = fac;\n    }\n    /**\n     * @throws {@link ChestKeyValidationError}\n     */\n    validate(val) {\n        if (/^[0-9a-fA-F]*$/.test(val) && val.length % 2 === 0) {\n            return;\n        }\n        throw new ChestKeyValidationError(val, this, `Invalid bytes: ${JSON.stringify(val)}`);\n    }\n    convertUint8ArrayToHexString(val) {\n        return val.constructor === Uint8Array ? Buffer.from(val).toString('hex') : val;\n    }\n    /**\n     * @throws {@link ChestKeyValidationError}\n     */\n    Encode(args) {\n        let val = args.pop();\n        val = this.convertUint8ArrayToHexString(val);\n        this.validate(val);\n        return { bytes: val };\n    }\n    /**\n     * @throws {@link ChestKeyValidationError}\n     */\n    EncodeObject(val, semantic) {\n        val = this.convertUint8ArrayToHexString(val);\n        this.validate(val);\n        if (semantic && semantic[ChestKeyToken.prim]) {\n            return semantic[ChestKeyToken.prim](val);\n        }\n        return { bytes: val };\n    }\n    Execute(val) {\n        return val.bytes;\n    }\n    /**\n     * @deprecated ExtractSchema has been deprecated in favor of generateSchema\n     *\n     */\n    ExtractSchema() {\n        return ChestKeyToken.prim;\n    }\n    generateSchema() {\n        return {\n            __michelsonType: ChestKeyToken.prim,\n            schema: ChestKeyToken.prim,\n        };\n    }\n    findAndReturnTokens(tokenToFind, tokens) {\n        if (ChestKeyToken.prim === tokenToFind) {\n            tokens.push(this);\n        }\n        return tokens;\n    }\n}\nChestKeyToken.prim = 'chest_key';\n\n/**\n *  @category Error\n *  @description Error that indicates a failure happening when parsing encoding a Global Constant\n */\nclass GlobalConstantEncodingError extends TokenValidationError {\n    constructor(value, token, message) {\n        super(value, token, message);\n        this.value = value;\n        this.token = token;\n        this.name = 'GlobalConstantEncodingError';\n    }\n}\n/**\n *  @category Error\n *  @description Error that indicates a failure happening when parsing executing a Global Constant\n */\nclass GlobalConstantDecodingError extends TokenValidationError {\n    constructor(value, token, message) {\n        super(value, token, message);\n        this.value = value;\n        this.token = token;\n        this.name = 'GlobalConstantDecodingError';\n    }\n}\nclass GlobalConstantToken extends Token {\n    constructor(val, idx, fac) {\n        super(val, idx, fac);\n        this.val = val;\n        this.idx = idx;\n        this.fac = fac;\n    }\n    /**\n     * @throws {@link GlobalConstantDecodingError}\n     */\n    Execute(val, semantic) {\n        if (semantic && semantic[GlobalConstantToken.prim]) {\n            return semantic[GlobalConstantToken.prim](val, this.val);\n        }\n        else {\n            throw new GlobalConstantDecodingError(val, this, `Unable to decode a value represented by a global constants. Please provide an expanded script to the Michelson-Encoder or semantics for the decoding. The following global constant hash was encountered: ${this.val.args[0]['string']}.`);\n        }\n    }\n    /**\n     * @throws {@link GlobalConstantEncodingError}\n     */\n    Encode(args) {\n        throw new GlobalConstantEncodingError(args, this, `Unable to encode a script containing global constants. Please provide an expanded script to the Michelson-Encoder. The following global constant hash was encountered: ${this.val.args[0]['string']}.`);\n    }\n    /**\n     * @throws {@link GlobalConstantEncodingError}\n     */\n    EncodeObject(val, semantic) {\n        if (semantic && semantic[GlobalConstantToken.prim]) {\n            return semantic[GlobalConstantToken.prim](val);\n        }\n        throw new GlobalConstantEncodingError(val, this, `Unable to encode a script containing global constants. Please provide an expanded script to the Michelson-Encoder. The following global constant hash was encountered: ${this.val.args[0]['string']}.`);\n    }\n    /**\n     * @deprecated ExtractSchema has been deprecated in favor of generateSchema\n     *\n     */\n    ExtractSchema() {\n        return GlobalConstantToken.prim;\n    }\n    generateSchema() {\n        return {\n            __michelsonType: GlobalConstantToken.prim,\n            schema: {\n                hash: this.val.args[0]['string'],\n            },\n        };\n    }\n    findAndReturnTokens(tokenToFind, tokens) {\n        if (GlobalConstantToken.prim === tokenToFind) {\n            tokens.push(this);\n        }\n        return tokens;\n    }\n}\nGlobalConstantToken.prim = 'constant';\n\nconst tokens = [\n    PairToken,\n    NatToken,\n    StringToken,\n    BigMapToken,\n    AddressToken,\n    TxRollupL2AddressToken,\n    MapToken,\n    BoolToken,\n    OrToken,\n    ContractToken,\n    ListToken,\n    MutezToken,\n    BytesToken,\n    OptionToken,\n    TimestampToken,\n    IntToken,\n    UnitToken,\n    KeyToken,\n    KeyHashToken,\n    SignatureToken,\n    LambdaToken,\n    OperationToken,\n    SetToken,\n    ChainIDToken,\n    TicketToken,\n    TicketDeprecatedToken,\n    NeverToken,\n    SaplingStateToken,\n    SaplingTransactionToken,\n    SaplingTransactionDeprecatedToken,\n    Bls12381frToken,\n    Bls12381g1Token,\n    Bls12381g2Token,\n    ChestToken,\n    ChestKeyToken,\n    GlobalConstantToken,\n];\n\n/**\n *  @category Error\n *  @description Error that indicates a script having an invalid type or it being unsupported by the Michelson Encoder. Note some protocol changes might affect this, we encourage users to open an issue so we can look into implementing support for said types.\n */\nclass InvalidTokenError extends TaquitoError {\n    constructor(message, data) {\n        super(message);\n        this.message = message;\n        this.data = data;\n        this.name = 'Invalid token error';\n    }\n}\n/**\n *\n * @description Create a token from a value\n * @throws {@link InvalidTokenError} If the value passed is not supported by the Michelson Encoder\n */\nfunction createToken(val, idx) {\n    if (Array.isArray(val)) {\n        return new PairToken(val, idx, createToken);\n    }\n    const t = tokens.find((x) => x.prim === val.prim);\n    if (!t) {\n        throw new InvalidTokenError(`Malformed data: ${JSON.stringify(val)}. Expected a value with a valid prim property`, val);\n    }\n    return new t(val, idx, createToken);\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n *  @category Error\n *  @description Error that indicates a failure when encoding (transforming JS parameter into JSON Michelson) the parameter of the view\n */\nclass ParameterEncodingError extends InvalidViewParameterError {\n    constructor(viewName, sigs, args, cause) {\n        super(viewName, sigs, args, cause);\n        this.viewName = viewName;\n        this.sigs = sigs;\n        this.args = args;\n        this.cause = cause;\n        this.name = 'ParameterEncodingError';\n        this.message = `Could not encode parameter ${JSON.stringify(args)} received for name \"${viewName}\" expecting one of the following signatures ${JSON.stringify(sigs)}`;\n    }\n}\n/**\n *  @category Error\n *  @description Error that indicates an invalid on-chain view found on the script\n */\nclass InvalidScriptError extends TaquitoError {\n    constructor(script, reason) {\n        super();\n        this.script = script;\n        this.reason = reason;\n        this.name = 'InvalidScriptError';\n        let message = `Invalid on-chain view found in the following script.`;\n        if (reason) {\n            message += ` Reason: ${reason}.`;\n        }\n        message += `Script: ${JSON.stringify(script)}`;\n        this.message = message;\n    }\n}\n/**\n *  @category Error\n *  @description Error that indicates an invalid RPC response being passed or used\n */\nclass InvalidRpcResponseError extends TaquitoError {\n    constructor(script, reason) {\n        super();\n        this.script = script;\n        this.reason = reason;\n        this.name = 'InvalidRpcResponseError';\n        let message = `Invalid RPC response passed as argument(s).`;\n        if (reason) {\n            message += ` Reason: ${reason}.`;\n        }\n        message += ` Received: ${JSON.stringify(script)}`;\n        this.message = message;\n    }\n}\n/**\n *  @category Error\n *  @description Error that indicates an invalid big map schema being passed or used\n */\nclass InvalidBigMapSchemaError extends TaquitoError {\n    constructor(message) {\n        super(message);\n        this.message = message;\n        this.name = 'InvalidBigMapSchemaError';\n    }\n}\n/**\n *  @category Error\n *  @description Error that indicates an invalid big map diff being passed or used\n */\nclass InvalidBigMapDiffError extends TaquitoError {\n    constructor(message, value) {\n        super(message);\n        this.message = message;\n        this.value = value;\n        this.name = 'InvalidBigMapDiffError';\n    }\n}\n/**\n *  @category Error\n *  @description Error that indicates a failure when trying to encode big maps\n */\nclass BigMapEncodingError extends TaquitoError {\n    constructor(obj, details, schema, value) {\n        super();\n        this.details = details;\n        this.schema = schema;\n        this.value = value;\n        this.name = 'BigMapEncodingError';\n        this.message = `Unable to encode the big map ${obj}. Schema is: ${JSON.stringify(schema)}. The ${obj} is: ${JSON.stringify(value)}. Error details: ${details}`;\n    }\n}\n/**\n *  @category Error\n *  @description Error that indicates a failure when trying to encode storage\n */\nclass StorageEncodingError extends TaquitoError {\n    constructor(obj, details, schema, value, semantics) {\n        super();\n        this.details = details;\n        this.schema = schema;\n        this.value = value;\n        this.semantics = semantics;\n        this.name = 'StorageEncodingError';\n        this.message = `Unable to encode ${obj}. The schema is: ${JSON.stringify(schema)}, the value is: ${JSON.stringify(value)}.${semantics ? `And the semantic is: ${JSON.stringify(semantics)}` : ''}. Error details: ${details}`;\n    }\n}\n/**\n *  @category Error\n *  @description General error that indicates a function not being passed a necessary argument\n */\nclass MissingArgumentError extends TaquitoError {\n    constructor(message) {\n        super(message);\n        this.message = message;\n        this.name = 'MissingArgumentError';\n    }\n}\n\nvar _a;\nconst schemaTypeSymbol = Symbol.for('taquito-schema-type-symbol');\n// collapse comb pair\nfunction collapse(val, prim = PairToken.prim) {\n    var _b, _c;\n    if (Array.isArray(val)) {\n        return collapse({\n            prim: prim,\n            args: val,\n        }, prim);\n    }\n    const extended = val;\n    if (extended.prim === prim && extended.args && extended.args.length > 2) {\n        return Object.assign(Object.assign({}, extended), { args: [\n                (_b = extended.args) === null || _b === void 0 ? void 0 : _b[0],\n                {\n                    prim: prim,\n                    args: (_c = extended.args) === null || _c === void 0 ? void 0 : _c.slice(1),\n                },\n            ] });\n    }\n    return extended;\n}\nfunction deepEqual(a, b) {\n    if (a === undefined || b === undefined) {\n        return a === b;\n    }\n    const ac = collapse(a);\n    const bc = collapse(b);\n    return (ac.prim === bc.prim &&\n        ((ac.args === undefined && bc.args === undefined) ||\n            (ac.args !== undefined &&\n                bc.args !== undefined &&\n                ac.args.length === bc.args.length &&\n                ac.args.every((v, i) => { var _b, _c; return deepEqual(v, (_c = (_b = bc.args) === null || _b === void 0 ? void 0 : _b[i]) !== null && _c !== void 0 ? _c : {}); }))) &&\n        ((ac.annots === undefined && bc.annots === undefined) ||\n            (ac.annots !== undefined &&\n                bc.annots !== undefined &&\n                ac.annots.length === bc.annots.length &&\n                ac.annots.every((v, i) => { var _b; return v === ((_b = bc.annots) === null || _b === void 0 ? void 0 : _b[i]); }))));\n}\n/**\n * @warn Our current smart contract abstraction feature is currently in preview. Its API is not final, and it may not cover every use case (yet). We will greatly appreciate any feedback on this feature.\n */\nclass Schema {\n    static isSchema(obj) {\n        return obj && obj[schemaTypeSymbol] === true;\n    }\n    /**\n     * @throws {@link InvalidRpcResponseError}\n     */\n    static fromRPCResponse(val) {\n        if (!val) {\n            throw new InvalidRpcResponseError(val, 'the RPC response is empty');\n        }\n        if (!val.script) {\n            throw new InvalidRpcResponseError(val, 'the RPC response has no script');\n        }\n        if (!Array.isArray(val.script.code)) {\n            throw new InvalidRpcResponseError(val, 'The response.script.code should be an array');\n        }\n        let code = val.script.code;\n        while (code.length === 1 && Array.isArray(code[0])) {\n            code = code[0];\n        }\n        const storage = code.find((x) => 'prim' in x && x.prim === 'storage');\n        if (!storage || !Array.isArray(storage.args)) {\n            throw new InvalidRpcResponseError(val, 'The response.script.code has an element of type {prim: \"storage\"}, but its args is not an array');\n        }\n        return new Schema(storage.args[0]);\n    }\n    isExpressionExtended(val) {\n        return 'prim' in val && Array.isArray(val.args);\n    }\n    constructor(val) {\n        this.val = val;\n        this[_a] = true;\n        this.root = createToken(val, 0);\n        if (this.root instanceof BigMapToken) {\n            this.bigMap = this.root;\n        }\n        else if (this.isExpressionExtended(val) && val.prim === 'pair') {\n            const exp = val.args[0];\n            if (this.isExpressionExtended(exp) && exp.prim === 'big_map') {\n                this.bigMap = new BigMapToken(exp, 0, createToken);\n            }\n        }\n    }\n    removeTopLevelAnnotation(obj) {\n        // PairToken and OrToken can have redundant top level annotation in their storage\n        if (this.root instanceof PairToken || this.root instanceof OrToken) {\n            if (this.root.hasAnnotations() && typeof obj === 'object' && Object.keys(obj).length === 1) {\n                return obj[Object.keys(obj)[0]];\n            }\n        }\n        return obj;\n    }\n    Execute(val, semantics) {\n        const storage = this.root.Execute(val, semantics);\n        return this.removeTopLevelAnnotation(storage);\n    }\n    Typecheck(val) {\n        if (this.root instanceof BigMapToken && Number.isInteger(Number(val))) {\n            return;\n        }\n        if (this.root instanceof TicketToken && val.ticketer && val.value && val.amount) {\n            return;\n        }\n        if (this.root instanceof TicketDeprecatedToken && val.ticketer && val.value && val.amount) {\n            return;\n        }\n        if (this.root instanceof MapToken && this.root.ValueSchema instanceof BigMapToken) {\n            return;\n        }\n        this.root.EncodeObject(val);\n    }\n    /**\n     * @throws {@link InvalidBigMapSchemaError}\n     * @throws {@link InvalidBigMapDiffError}\n     */\n    ExecuteOnBigMapDiff(diff, semantics) {\n        if (!this.bigMap) {\n            throw new InvalidBigMapSchemaError('Big map schema is undefined');\n        }\n        if (!Array.isArray(diff)) {\n            throw new InvalidBigMapDiffError(`Big map diff must be an array, got: ${JSON.stringify(diff)}`, diff);\n        }\n        const eltFormat = diff.map(({ key, value }) => ({ args: [key, value] }));\n        return this.bigMap.Execute(eltFormat, semantics);\n    }\n    /**\n     * @throws {@link InvalidBigMapSchemaError}\n     */\n    ExecuteOnBigMapValue(key, semantics) {\n        if (!this.bigMap) {\n            throw new InvalidBigMapSchemaError('Big map schema is undefined');\n        }\n        return this.bigMap.ValueSchema.Execute(key, semantics);\n    }\n    /**\n     * @throws {@link InvalidBigMapSchemaError}\n     * @throws {@link BigMapEncodingError}\n     */\n    EncodeBigMapKey(key) {\n        if (!this.bigMap) {\n            throw new InvalidBigMapSchemaError('Big map schema is undefined');\n        }\n        try {\n            return this.bigMap.KeySchema.ToBigMapKey(key);\n        }\n        catch (ex) {\n            throw new BigMapEncodingError('key', ex, this.bigMap.KeySchema, key);\n        }\n    }\n    /**\n     * @throws {@link TokenValidationError}\n     * @throws {@link StorageEncodingError}\n     */\n    Encode(value, semantics) {\n        try {\n            return this.root.EncodeObject(value, semantics);\n        }\n        catch (ex) {\n            if (ex instanceof TokenValidationError) {\n                throw ex;\n            }\n            throw new StorageEncodingError('storage object', ex, this.root, value, semantics);\n        }\n    }\n    /**\n     * @deprecated ExtractSchema has been deprecated in favor of generateSchema\n     *\n     */\n    ExtractSchema() {\n        return this.removeTopLevelAnnotation(this.root.ExtractSchema());\n    }\n    /**\n     * @description Produce a representation of the storage schema.\n     * Note: Provide guidance on how to write the storage object for the origination operation with Taquito.\n     */\n    generateSchema() {\n        return this.removeTopLevelAnnotation(this.root.generateSchema());\n    }\n    /**\n     * @deprecated\n     * @throws {@link InvalidBigMapSchemaError}\n     */\n    ComputeState(tx, state) {\n        if (!this.bigMap) {\n            throw new InvalidBigMapSchemaError('Big map schema is undefined');\n        }\n        const bigMap = tx.reduce((prev, current) => {\n            return Object.assign(Object.assign({}, prev), this.ExecuteOnBigMapDiff(current.contents[0].metadata.operation_result.big_map_diff));\n        }, {});\n        return Object.assign(Object.assign({}, this.Execute(state)), { [this.bigMap.annot()]: bigMap });\n    }\n    /**\n     * @description Look up in top-level pairs of the storage to find a value matching the specified type\n     *\n     * @returns The first value found that match the type or `undefined` if no value is found\n     *\n     * @param storage storage to parse to find the value\n     * @param valueType type of value to look for\n     *\n     */\n    FindFirstInTopLevelPair(storage, valueType) {\n        return this.findValue(this.root['val'], storage, valueType);\n    }\n    // TODO check these type casts\n    /**\n     * @throws {@link MissingArgumentError}\n     */\n    findValue(schema, storage, valueToFind) {\n        if (deepEqual(valueToFind, schema)) {\n            return storage;\n        }\n        if (Array.isArray(schema) || schema.prim === 'pair') {\n            const sch = collapse(schema);\n            const strg = collapse(storage, 'Pair');\n            if (sch.args === undefined || strg.args === undefined) {\n                throw new MissingArgumentError('Tokens have no arguments'); // unlikely\n            }\n            if (sch.args[0])\n                return (\n                // unsafe\n                this.findValue(sch.args[0], strg.args[0], valueToFind) ||\n                    this.findValue(sch.args[1], strg.args[1], valueToFind));\n        }\n    }\n    /**\n     * @description Look up the schema to find any occurrence of a particular token.\n     *\n     * @returns an array of tokens of the specified kind or an empty array if no token was found\n     *\n     * @param tokenToFind string representing the prim property of the token to find\n     *\n     * @example\n     * ```\n     * Useful to find all global constants in a script, an array of GlobalConstantToken is returned:\n     *\n     * const schema = new Schema(script);\n     * const allGlobalConstantTokens = schema.findToken('constant');\n     * ```\n     *\n     */\n    findToken(tokenToFind) {\n        const tokens = [];\n        return this.root.findAndReturnTokens(tokenToFind, tokens);\n    }\n}\n_a = schemaTypeSymbol;\n\n/**\n * @warn Our current smart contract abstraction feature is currently in preview. It's API is not final, and it may not cover every use case (yet). We will greatly appreciate any feedback on this feature.\n */\nclass ParameterSchema {\n    /**\n     *\n     * @description Create an instance of ParameterSchema from a contract script\n     *\n     * @param val contract script obtained from the RPC\n     * @returns ParameterSchema\n     * @throws {InvalidRpcResponseError} If the RPC response is invalid\n     */\n    static fromRPCResponse(val) {\n        if (!val) {\n            throw new InvalidRpcResponseError(val, 'the RPC response is empty');\n        }\n        if (!val.script) {\n            throw new InvalidRpcResponseError(val, 'the RPC response has no script');\n        }\n        if (!Array.isArray(val.script.code)) {\n            throw new InvalidRpcResponseError(val, 'The response.script.code should be an array');\n        }\n        const parameter = val.script.code.find((x) => 'prim' in x && x.prim === 'parameter');\n        if (!parameter) {\n            throw new InvalidRpcResponseError(val, `The response.script.code should have an element of type {prim: \"parameter\"}`);\n        }\n        if (!Array.isArray(parameter.args)) {\n            throw new InvalidRpcResponseError(val, `The response.script.code has an element of type {prim: \"parameter\"}, but its args is not an array`);\n        }\n        return new ParameterSchema(parameter.args[0]);\n    }\n    /**\n     * @description Check if the Contract parameter is multiple entry point or not\n     */\n    get isMultipleEntryPoint() {\n        return (this.root instanceof OrToken ||\n            (this.root instanceof OptionToken && this.root.subToken() instanceof OrToken));\n    }\n    /**\n     * @description Check if the Contract parameter has an annotation or not\n     */\n    get hasAnnotation() {\n        if (this.isMultipleEntryPoint) {\n            return Object.keys(this.ExtractSchema())[0] !== '0';\n        }\n        else {\n            return true;\n        }\n    }\n    /**\n     * @description Return the schema of the parameter of a specific entry point\n     * @throws {@link InvalidTokenError}\n     */\n    constructor(val) {\n        this.root = createToken(val, 0);\n    }\n    /**\n     * @description Returns the javascript object equivalent of the Micheline value provided\n     */\n    Execute(val, semantics) {\n        return this.root.Execute(val, semantics);\n    }\n    /**\n     * @description Returns a micheline formatted object for the values provided\n     * @throws {@link TokenValidationError}\n     * @throws {@link ParameterEncodingError}\n     */\n    Encode(...args) {\n        try {\n            return this.root.Encode(args.reverse());\n        }\n        catch (ex) {\n            if (ex instanceof TokenValidationError) {\n                throw ex;\n            }\n            throw new ParameterEncodingError('Unable to encode parameter', this.root, args, ex);\n        }\n    }\n    /**\n     * @description Returns a micheline formatted object for the javascript object provided\n     * @throws {@link TokenValidationError}\n     * @throws {@link ParameterEncodingError}\n     */\n    EncodeObject(value, semantics) {\n        try {\n            return this.root.EncodeObject(value, semantics);\n        }\n        catch (ex) {\n            if (ex instanceof TokenValidationError) {\n                throw ex;\n            }\n            throw new ParameterEncodingError('Unable to encode parameter object', this.root, value, ex);\n        }\n    }\n    /**\n     * @deprecated ExtractSchema has been deprecated in favor of generateSchema\n     *\n     */\n    ExtractSchema() {\n        return this.root.ExtractSchema();\n    }\n    /**\n     * @description Produce a schema grouping together all the entry points of a contract.\n     */\n    generateSchema() {\n        return this.root.generateSchema();\n    }\n    ExtractSignatures() {\n        return this.root.ExtractSignature();\n    }\n}\n\nclass ViewSchema {\n    /**\n     *\n     * @description Create an instance of ViewSchema for each view in a script\n     *\n     * @param val contract script obtained from the RPC\n     * @returns array of ViewSchema or empty array if there is no view in the contract\n     * @throws {@link InvalidScriptError}\n     */\n    static fromRPCResponse(val) {\n        const allViewSchema = [];\n        const views = val &&\n            val.script &&\n            Array.isArray(val.script.code) &&\n            val.script.code.filter((x) => x.prim === 'view');\n        if (views) {\n            views.forEach((view) => {\n                allViewSchema.push(new ViewSchema(view.args));\n            });\n        }\n        return allViewSchema;\n    }\n    /**\n     * @throws {@link InvalidScriptError}\n     */\n    constructor(viewArgs) {\n        if (!viewArgs) {\n            throw new InvalidScriptError(viewArgs, 'the args are not defined');\n        }\n        if (viewArgs.length !== 4) {\n            throw new InvalidScriptError(viewArgs, `there should be exactly 4 arguments`);\n        }\n        if (!('string' in viewArgs[0]) || !viewArgs[0]['string']) {\n            throw new InvalidScriptError(viewArgs, `The first argument should be a string, representing the view name. It should be in the form: { string: 'viewName' }`);\n        }\n        this.viewName = viewArgs[0]['string'];\n        this.viewArgsType = viewArgs[1];\n        this.viewReturnType = viewArgs[2];\n        this.instructions = viewArgs[3];\n        this.rootArgsType = createToken(this.viewArgsType, 0);\n        this.rootReturnType = createToken(this.viewReturnType, 0);\n    }\n    /**\n     *\n     * @description Transform the view parameter into Michelson\n     *\n     * @param args parameter of the view in js format\n     * @returns parameter of the view in Michelson\n     * @throws {@link ParameterEncodingError}\n     */\n    encodeViewArgs(args) {\n        try {\n            return this.rootArgsType.EncodeObject(args);\n        }\n        catch (ex) {\n            throw new ParameterEncodingError(this.viewName, undefined, args, ex);\n        }\n    }\n    /**\n     *\n     * @description Transform the view result from Michelson to readable data\n     *\n     * @param val result of the view in JSON Michelson\n     * @param semantics optional semantics to override the default decoding behavior\n     * @returns result of the view in a readable format\n     */\n    decodeViewResult(val, semantics) {\n        return this.rootReturnType.Execute(val, semantics);\n    }\n    /**\n     *\n     * @description Return the signature of the view parameter\n     */\n    extractArgsSchema() {\n        return this.rootArgsType.ExtractSchema();\n    }\n    /**\n     *\n     * @description Return the format of the view result\n     */\n    extractResultSchema() {\n        return this.rootReturnType.ExtractSchema();\n    }\n}\n\nclass EventSchema {\n    constructor(tag, type) {\n        this.tag = tag;\n        this.type = type;\n    }\n    static fromMichelineValue(val) {\n        var _a, _b;\n        return new EventSchema((_a = val.annots) === null || _a === void 0 ? void 0 : _a[0], (_b = val.args) === null || _b === void 0 ? void 0 : _b[0]);\n    }\n    static fromRPCResponse(val) {\n        const allEventSchema = [];\n        val.script.code.forEach((code) => {\n            if (!('prim' in code) ||\n                code.prim !== 'code' ||\n                !('args' in code) ||\n                !code.args) {\n                return;\n            }\n            allEventSchema.push(...EventSchema.extractEventsRecursively(code.args));\n        });\n        return EventSchema.removeDuplicates(allEventSchema);\n    }\n    static removeDuplicates(events) {\n        const uniqueEvents = [];\n        events.forEach((event) => {\n            const idx = uniqueEvents.findIndex((e) => e.tag === event.tag && deepEqual(e.type, event.type));\n            if (idx === -1) {\n                uniqueEvents.push(event);\n            }\n        });\n        return uniqueEvents;\n    }\n    static extractEventsRecursively(code) {\n        if (Array.isArray(code)) {\n            return code.flatMap((c) => EventSchema.extractEventsRecursively(c));\n        }\n        if (!('prim' in code)) {\n            return [];\n        }\n        if (code.prim === 'EMIT') {\n            return [EventSchema.fromMichelineValue(code)];\n        }\n        if (!('args' in code) || !code.args) {\n            return [];\n        }\n        return code.args.flatMap((c) => EventSchema.extractEventsRecursively(c));\n    }\n}\n\n// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\nconst VERSION = {\n    \"commitHash\": \"a908ab176a8c52c025fd43e7acd452415396f54e\",\n    \"version\": \"17.4.0\"\n};\n\n/**\n * @packageDocumentation\n * @module @taquito/michelson-encoder\n */\nconst UnitValue = Symbol();\nconst SaplingStateValue = {};\n\nexport { AddressValidationError, BigMapEncodingError, BigMapValidationError, BytesValidationError, ChainIDValidationError, ContractValidationError, EncodeTicketError, EventSchema, IntValidationError, InvalidBigMapDiffError, InvalidBigMapSchemaError, InvalidMapTypeError, InvalidRpcResponseError, InvalidScriptError, KeyHashValidationError, KeyValidationError, ListValidationError, MapTypecheckError, MapValidationError, MichelsonMap, MissingArgumentError, MutezValidationError, NatValidationError, OrValidationError, ParameterEncodingError, ParameterSchema, SaplingStateValue, Schema, SetValidationError, SignatureValidationError, StorageEncodingError, Token, TokenArgumentValidationError, TokenComparisonError, UnitValue, VERSION, ViewSchema, deepEqual };\n//# sourceMappingURL=taquito-michelson-encoder.es6.js.map\n", "import { TaquitoError, InvalidMessageError, ParameterValidationError } from '@taquito/core';\n\n// Michelson abstract syntax tree types https://tezos.gitlab.io/whitedoc/michelson.html#concrete-syntax\nconst sourceReference = Symbol('source_reference');\n\n/**\n *  @category Error\n *  @description Error that indicates a failure when performing the scan step when parsing Michelson\n */\nclass ScanError extends TaquitoError {\n    constructor(src, idx, message) {\n        super();\n        this.src = src;\n        this.idx = idx;\n        this.message = message;\n        this.name = 'ScanError';\n    }\n}\nvar Literal;\n(function (Literal) {\n    Literal[Literal[\"Comment\"] = 0] = \"Comment\";\n    Literal[Literal[\"Number\"] = 1] = \"Number\";\n    Literal[Literal[\"String\"] = 2] = \"String\";\n    Literal[Literal[\"Bytes\"] = 3] = \"Bytes\";\n    Literal[Literal[\"Ident\"] = 4] = \"Ident\";\n})(Literal || (Literal = {}));\nconst isSpace = new RegExp('\\\\s');\nconst isIdentStart = new RegExp('[:@%_A-Za-z]');\nconst isIdent = new RegExp('[@%_\\\\.A-Za-z0-9]');\nconst isDigit = new RegExp('[0-9]');\nconst isHex = new RegExp('[0-9a-fA-F]');\nfunction* scan(src, scanComments = false) {\n    let i = 0;\n    while (i < src.length) {\n        // Skip space\n        while (i < src.length && isSpace.test(src[i])) {\n            i++;\n        }\n        if (i === src.length) {\n            return;\n        }\n        const s = src[i];\n        const start = i;\n        if (isIdentStart.test(s)) {\n            // Identifier\n            i++;\n            while (i < src.length && isIdent.test(src[i])) {\n                i++;\n            }\n            yield { t: Literal.Ident, v: src.slice(start, i), first: start, last: i };\n        }\n        else if (src.length - i > 1 && src.substring(i, i + 2) === '0x') {\n            // Bytes\n            i += 2;\n            while (i < src.length && isHex.test(src[i])) {\n                i++;\n            }\n            if (((i - start) & 1) !== 0) {\n                throw new ScanError(src, i, 'Bytes literal length is expected to be power of two');\n            }\n            yield { t: Literal.Bytes, v: src.slice(start, i), first: start, last: i };\n        }\n        else if (isDigit.test(s) || s === '-') {\n            // Number\n            if (s === '-') {\n                i++;\n            }\n            const ii = i;\n            while (i < src.length && isDigit.test(src[i])) {\n                i++;\n            }\n            if (ii === i) {\n                throw new ScanError(src, i, 'Number literal is too short');\n            }\n            yield { t: Literal.Number, v: src.slice(start, i), first: start, last: i };\n        }\n        else if (s === '\"') {\n            // String\n            i++;\n            let esc = false;\n            for (; i < src.length && (esc || src[i] !== '\"'); i++) {\n                if (!esc && src[i] === '\\\\') {\n                    esc = true;\n                }\n                else {\n                    esc = false;\n                }\n            }\n            if (i === src.length) {\n                throw new ScanError(src, i, 'Unterminated string literal');\n            }\n            i++;\n            yield { t: Literal.String, v: src.slice(start, i), first: start, last: i };\n        }\n        else if (s === '#') {\n            // Comment\n            i++;\n            while (i < src.length && src[i] !== '\\n') {\n                i++;\n            }\n            if (scanComments) {\n                yield { t: Literal.Comment, v: src.slice(start, i), first: start, last: i };\n            }\n        }\n        else if (src.length - i > 1 && src.substring(i, i + 2) === '/*') {\n            // C style comment\n            i += 2;\n            while (i < src.length && !(src.length - i > 1 && src.substring(i, i + 2) === '*/')) {\n                i++;\n            }\n            if (i === src.length) {\n                throw new ScanError(src, i, 'Unterminated C style comment');\n            }\n            i += 2;\n            if (scanComments) {\n                yield { t: Literal.Comment, v: src.slice(start, i), first: start, last: i };\n            }\n        }\n        else if (s === '(' || s === ')' || s === '{' || s === '}' || s === ';') {\n            i++;\n            yield { t: s, v: s, first: start, last: i };\n        }\n        else {\n            throw new ScanError(src, i, `Invalid character at offset ${i}: \\`${s}'`);\n        }\n    }\n}\n\n// Michelson types\nconst refContract = Symbol('ref_contract');\nvar Protocol;\n(function (Protocol) {\n    Protocol[\"Ps9mPmXa\"] = \"Ps9mPmXaRzmzk35gbAYNCAw6UXdE2qoABTHbN2oEEc1qM7CwT9P\";\n    Protocol[\"PtCJ7pwo\"] = \"PtCJ7pwoxe8JasnHY8YonnLYjcVHmhiARPJvqcC6VfHT5s8k8sY\";\n    Protocol[\"PsYLVpVv\"] = \"PsYLVpVvgbLhAhoqAkMFUo6gudkJ9weNXhUYCiLDzcUpFpkk8Wt\";\n    Protocol[\"PsddFKi3\"] = \"PsddFKi32cMJ2qPjf43Qv5GDWLDPZb3T3bF6fLKiF5HtvHNU7aP\";\n    Protocol[\"Pt24m4xi\"] = \"Pt24m4xiPbLDhVgVfABUjirbmda3yohdN82Sp9FeuAXJ4eV9otd\";\n    Protocol[\"PsBABY5H\"] = \"PsBABY5HQTSkA4297zNHfsZNKtxULfL18y95qb3m53QJiXGmrbU\";\n    Protocol[\"PsBabyM1\"] = \"PsBabyM1eUXZseaJdmXFApDSBqj8YBfwELoxZHHW77EMcAbbwAS\";\n    Protocol[\"PsCARTHA\"] = \"PsCARTHAGazKbHtnKfLzQg3kms52kSRpgnDY982a9oYsSXRLQEb\";\n    Protocol[\"PsDELPH1\"] = \"PsDELPH1Kxsxt8f9eWbxQeRxkjfbxoqM52jvs5Y5fBxWWh4ifpo\";\n    Protocol[\"PtEdoTez\"] = \"PtEdoTezd3RHSC31mpxxo1npxFjoWWcFgQtxapi51Z8TLu6v6Uq\";\n    Protocol[\"PtEdo2Zk\"] = \"PtEdo2ZkT9oKpimTah6x2embF25oss54njMuPzkJTEi5RqfdZFA\";\n    Protocol[\"PsFLorena\"] = \"PsFLorenaUUuikDWvMDr6fGBRG8kt3e3D3fHoXK1j1BFRxeSH4i\";\n    Protocol[\"PtGRANADs\"] = \"PtGRANADsDU8R9daYKAgWnQYAJ64omN1o3KMGVCykShA97vQbvV\";\n    Protocol[\"PtHangzH\"] = \"PtHangzHogokSuiMHemCuowEavgYTP8J5qQ9fQS793MHYFpCY3r\";\n    Protocol[\"PtHangz2\"] = \"PtHangz2aRngywmSRGGvrcTyMbbdpWdpFKuS4uMWxg2RaH9i1qx\";\n    Protocol[\"PsiThaCa\"] = \"PsiThaCaT47Zboaw71QWScM8sXeMM7bbQFncK9FLqYc6EKdpjVP\";\n    Protocol[\"Psithaca2\"] = \"Psithaca2MLRFYargivpo7YvUr7wUDqyxrdhC5CQq78mRvimz6A\";\n    Protocol[\"PtJakarta\"] = \"PtJakartaiDz69SfDDLXJSiuZqTSeSKRDbKVZC8MNzJnvRjvnGw\";\n    Protocol[\"PtJakart2\"] = \"PtJakart2xVj7pYXJBXrqHgd82rdkLey5ZeeGwDgPp9rhQUbSqY\";\n    Protocol[\"PtKathman\"] = \"PtKathmankSpLLDALzWw7CGD2j2MtyveTwboEYokqUCP4a1LxMg\";\n    Protocol[\"PtLimaPtL\"] = \"PtLimaPtLMwfNinJi9rCfDPWea8dFgTZ1MeJ9f1m2SRic6ayiwW\";\n    Protocol[\"PtMumbaii\"] = \"PtMumbaiiFFEGbew1rRjzSPyzRbA51Tm3RVZL5suHPxSZYDhCEc\";\n    Protocol[\"PtMumbai2\"] = \"PtMumbai2TmsJHNGRkD8v8YDbtao7BLUC3wjASn1inAKLFCjaH1\";\n    Protocol[\"PtNairobi\"] = \"PtNairobiyssHuh87hEhfVBGCVrK3WnS8Z2FT4ymB5tAa4r1nQf\";\n    Protocol[\"ProtoALpha\"] = \"ProtoALphaALphaALphaALphaALphaALphaALphaALphaDdp3zK\";\n})(Protocol || (Protocol = {}));\nconst DefaultProtocol = Protocol.Psithaca2;\nconst protoLevel = {\n    Ps9mPmXaRzmzk35gbAYNCAw6UXdE2qoABTHbN2oEEc1qM7CwT9P: 0,\n    PtCJ7pwoxe8JasnHY8YonnLYjcVHmhiARPJvqcC6VfHT5s8k8sY: 1,\n    PsYLVpVvgbLhAhoqAkMFUo6gudkJ9weNXhUYCiLDzcUpFpkk8Wt: 2,\n    PsddFKi32cMJ2qPjf43Qv5GDWLDPZb3T3bF6fLKiF5HtvHNU7aP: 3,\n    Pt24m4xiPbLDhVgVfABUjirbmda3yohdN82Sp9FeuAXJ4eV9otd: 4,\n    PsBABY5HQTSkA4297zNHfsZNKtxULfL18y95qb3m53QJiXGmrbU: 5,\n    PsBabyM1eUXZseaJdmXFApDSBqj8YBfwELoxZHHW77EMcAbbwAS: 5,\n    PsCARTHAGazKbHtnKfLzQg3kms52kSRpgnDY982a9oYsSXRLQEb: 6,\n    PsDELPH1Kxsxt8f9eWbxQeRxkjfbxoqM52jvs5Y5fBxWWh4ifpo: 7,\n    PtEdoTezd3RHSC31mpxxo1npxFjoWWcFgQtxapi51Z8TLu6v6Uq: 8,\n    PtEdo2ZkT9oKpimTah6x2embF25oss54njMuPzkJTEi5RqfdZFA: 8,\n    PsFLorenaUUuikDWvMDr6fGBRG8kt3e3D3fHoXK1j1BFRxeSH4i: 9,\n    PtGRANADsDU8R9daYKAgWnQYAJ64omN1o3KMGVCykShA97vQbvV: 10,\n    PtHangzHogokSuiMHemCuowEavgYTP8J5qQ9fQS793MHYFpCY3r: 11,\n    PtHangz2aRngywmSRGGvrcTyMbbdpWdpFKuS4uMWxg2RaH9i1qx: 11,\n    PsiThaCaT47Zboaw71QWScM8sXeMM7bbQFncK9FLqYc6EKdpjVP: 12,\n    Psithaca2MLRFYargivpo7YvUr7wUDqyxrdhC5CQq78mRvimz6A: 12,\n    PtJakartaiDz69SfDDLXJSiuZqTSeSKRDbKVZC8MNzJnvRjvnGw: 13,\n    PtJakart2xVj7pYXJBXrqHgd82rdkLey5ZeeGwDgPp9rhQUbSqY: 13,\n    PtKathmankSpLLDALzWw7CGD2j2MtyveTwboEYokqUCP4a1LxMg: 14,\n    PtLimaPtLMwfNinJi9rCfDPWea8dFgTZ1MeJ9f1m2SRic6ayiwW: 15,\n    PtMumbaiiFFEGbew1rRjzSPyzRbA51Tm3RVZL5suHPxSZYDhCEc: 16,\n    PtMumbai2TmsJHNGRkD8v8YDbtao7BLUC3wjASn1inAKLFCjaH1: 16,\n    PtNairobiyssHuh87hEhfVBGCVrK3WnS8Z2FT4ymB5tAa4r1nQf: 17,\n    ProtoALphaALphaALphaALphaALphaALphaALphaALphaDdp3zK: 18,\n};\nfunction ProtoGreaterOrEqual(a, b) {\n    return protoLevel[a] >= protoLevel[b];\n}\nfunction ProtoInferiorTo(a, b) {\n    return protoLevel[a] < protoLevel[b];\n}\n\n/**\n *  @category Error\n *  @description Error that indicates macros failed to be expanded\n */\nclass MacroError extends TaquitoError {\n    constructor(prim, message) {\n        super();\n        this.prim = prim;\n        this.message = message;\n        this.name = 'MacroError';\n    }\n}\nfunction assertArgs$1(ex, n) {\n    var _a, _b;\n    if ((n === 0 && ex.args === undefined) || ((_a = ex.args) === null || _a === void 0 ? void 0 : _a.length) === n) {\n        return true;\n    }\n    throw new MacroError(ex, `macro ${ex.prim} expects ${n} arguments, was given ${(_b = ex.args) === null || _b === void 0 ? void 0 : _b.length}`);\n}\nfunction assertNoAnnots(ex) {\n    if (ex.annots === undefined) {\n        return true;\n    }\n    throw new MacroError(ex, `unexpected annotation on macro ${ex.prim}: ${ex.annots}`);\n}\nfunction assertIntArg(ex, arg) {\n    if ('int' in arg) {\n        return true;\n    }\n    throw new MacroError(ex, `macro ${ex.prim} expects int argument`);\n}\nfunction parsePairUnpairExpr(p, expr, annotations, agg) {\n    let i = 0;\n    let ai = 0;\n    const ann = [null, null];\n    // Left expression\n    let lexpr;\n    if (i === expr.length) {\n        throw new MacroError(p, `unexpected end: ${p.prim}`);\n    }\n    let c = expr[i++];\n    switch (c) {\n        case 'P': {\n            const { r, n, an } = parsePairUnpairExpr(p, expr.slice(i), annotations.slice(ai), agg);\n            lexpr = r;\n            i += n;\n            ai += an;\n            break;\n        }\n        case 'A':\n            if (ai !== annotations.length) {\n                ann[0] = annotations[ai++];\n            }\n            break;\n        default:\n            throw new MacroError(p, `${p.prim}: unexpected character: ${c}`);\n    }\n    // Right expression\n    let rexpr;\n    if (i === expr.length) {\n        throw new MacroError(p, `unexpected end: ${p.prim}`);\n    }\n    c = expr[i++];\n    switch (c) {\n        case 'P': {\n            const { r, n, an } = parsePairUnpairExpr(p, expr.slice(i), annotations.slice(ai), agg);\n            rexpr = r.map(([v, a]) => [v + 1, a]);\n            i += n;\n            ai += an;\n            break;\n        }\n        case 'I':\n            if (ai !== annotations.length) {\n                ann[1] = annotations[ai++];\n            }\n            break;\n        default:\n            throw new MacroError(p, `${p.prim}: unexpected character: ${c}`);\n    }\n    return { r: agg(lexpr, rexpr, [0, ann]), n: i, an: ai };\n}\nfunction parseSetMapCadr(p, expr, vann, term) {\n    const c = expr[0];\n    switch (c) {\n        case 'A':\n            return expr.length > 1\n                ? [\n                    { prim: 'DUP' },\n                    {\n                        prim: 'DIP',\n                        args: [\n                            [{ prim: 'CAR', annots: ['@%%'] }, parseSetMapCadr(p, expr.slice(1), [], term)],\n                        ],\n                    },\n                    { prim: 'CDR', annots: ['@%%'] },\n                    { prim: 'SWAP' },\n                    { prim: 'PAIR', annots: ['%@', '%@', ...vann] },\n                ]\n                : term.a;\n        case 'D':\n            return expr.length > 1\n                ? [\n                    { prim: 'DUP' },\n                    {\n                        prim: 'DIP',\n                        args: [\n                            [{ prim: 'CDR', annots: ['@%%'] }, parseSetMapCadr(p, expr.slice(1), [], term)],\n                        ],\n                    },\n                    { prim: 'CAR', annots: ['@%%'] },\n                    { prim: 'PAIR', annots: ['%@', '%@', ...vann] },\n                ]\n                : term.d;\n        default:\n            throw new MacroError(p, `${p.prim}: unexpected character: ${c}`);\n    }\n}\nfunction trimLast(a, v) {\n    let l = a.length;\n    while (l > 0 && a[l - 1] === v) {\n        l--;\n    }\n    return a.slice(0, l);\n}\nfunction filterAnnotations(a) {\n    const fields = [];\n    const rest = [];\n    if (a !== undefined) {\n        for (const v of a) {\n            (v.length !== 0 && v[0] === '%' ? fields : rest).push(v);\n        }\n    }\n    return { fields, rest };\n}\nfunction mkPrim({ prim, annots, args }) {\n    return Object.assign(Object.assign({ prim }, (annots && { annots })), (args && { args }));\n}\nconst pairRe = /^P[PAI]{3,}R$/;\nconst unpairRe = /^UNP[PAI]{2,}R$/;\nconst cadrRe = /^C[AD]{2,}R$/;\nconst setCadrRe = /^SET_C[AD]+R$/;\nconst mapCadrRe = /^MAP_C[AD]+R$/;\nconst diipRe = /^DI{2,}P$/;\nconst duupRe = /^DU+P$/;\nfunction expandMacros(ex, opt) {\n    const proto = (opt === null || opt === void 0 ? void 0 : opt.protocol) || DefaultProtocol;\n    function mayRename(annots) {\n        return annots !== undefined ? [{ prim: 'RENAME', annots }] : [];\n    }\n    switch (ex.prim) {\n        // Compare\n        case 'CMPEQ':\n        case 'CMPNEQ':\n        case 'CMPLT':\n        case 'CMPGT':\n        case 'CMPLE':\n        case 'CMPGE':\n            if (assertArgs$1(ex, 0)) {\n                return [{ prim: 'COMPARE' }, mkPrim({ prim: ex.prim.slice(3), annots: ex.annots })];\n            }\n            break;\n        case 'IFEQ':\n        case 'IFNEQ':\n        case 'IFLT':\n        case 'IFGT':\n        case 'IFLE':\n        case 'IFGE':\n            if (assertArgs$1(ex, 2)) {\n                return [\n                    { prim: ex.prim.slice(2) },\n                    mkPrim({ prim: 'IF', annots: ex.annots, args: ex.args }),\n                ];\n            }\n            break;\n        case 'IFCMPEQ':\n        case 'IFCMPNEQ':\n        case 'IFCMPLT':\n        case 'IFCMPGT':\n        case 'IFCMPLE':\n        case 'IFCMPGE':\n            if (assertArgs$1(ex, 2)) {\n                return [\n                    { prim: 'COMPARE' },\n                    { prim: ex.prim.slice(5) },\n                    mkPrim({ prim: 'IF', annots: ex.annots, args: ex.args }),\n                ];\n            }\n            break;\n        // Fail\n        case 'FAIL':\n            if (assertArgs$1(ex, 0) && assertNoAnnots(ex)) {\n                return [{ prim: 'UNIT' }, { prim: 'FAILWITH' }];\n            }\n            break;\n        // Assertion macros\n        case 'ASSERT':\n            if (assertArgs$1(ex, 0) && assertNoAnnots(ex)) {\n                return [\n                    {\n                        prim: 'IF',\n                        args: [[], [[{ prim: 'UNIT' }, { prim: 'FAILWITH' }]]],\n                    },\n                ];\n            }\n            break;\n        case 'ASSERT_EQ':\n        case 'ASSERT_NEQ':\n        case 'ASSERT_LT':\n        case 'ASSERT_GT':\n        case 'ASSERT_LE':\n        case 'ASSERT_GE':\n            if (assertArgs$1(ex, 0) && assertNoAnnots(ex)) {\n                return [\n                    { prim: ex.prim.slice(7) },\n                    {\n                        prim: 'IF',\n                        args: [[], [[{ prim: 'UNIT' }, { prim: 'FAILWITH' }]]],\n                    },\n                ];\n            }\n            break;\n        case 'ASSERT_CMPEQ':\n        case 'ASSERT_CMPNEQ':\n        case 'ASSERT_CMPLT':\n        case 'ASSERT_CMPGT':\n        case 'ASSERT_CMPLE':\n        case 'ASSERT_CMPGE':\n            if (assertArgs$1(ex, 0) && assertNoAnnots(ex)) {\n                return [\n                    [{ prim: 'COMPARE' }, { prim: ex.prim.slice(10) }],\n                    {\n                        prim: 'IF',\n                        args: [[], [[{ prim: 'UNIT' }, { prim: 'FAILWITH' }]]],\n                    },\n                ];\n            }\n            break;\n        case 'ASSERT_NONE':\n            if (assertArgs$1(ex, 0) && assertNoAnnots(ex)) {\n                return [\n                    {\n                        prim: 'IF_NONE',\n                        args: [[], [[{ prim: 'UNIT' }, { prim: 'FAILWITH' }]]],\n                    },\n                ];\n            }\n            break;\n        case 'ASSERT_SOME':\n            if (assertArgs$1(ex, 0)) {\n                return [\n                    {\n                        prim: 'IF_NONE',\n                        args: [[[{ prim: 'UNIT' }, { prim: 'FAILWITH' }]], mayRename(ex.annots)],\n                    },\n                ];\n            }\n            break;\n        case 'ASSERT_LEFT':\n            if (assertArgs$1(ex, 0)) {\n                return [\n                    {\n                        prim: 'IF_LEFT',\n                        args: [mayRename(ex.annots), [[{ prim: 'UNIT' }, { prim: 'FAILWITH' }]]],\n                    },\n                ];\n            }\n            break;\n        case 'ASSERT_RIGHT':\n            if (assertArgs$1(ex, 0)) {\n                return [\n                    {\n                        prim: 'IF_LEFT',\n                        args: [[[{ prim: 'UNIT' }, { prim: 'FAILWITH' }]], mayRename(ex.annots)],\n                    },\n                ];\n            }\n            break;\n        // Syntactic conveniences\n        case 'IF_SOME':\n            if (assertArgs$1(ex, 2)) {\n                return [mkPrim({ prim: 'IF_NONE', annots: ex.annots, args: [ex.args[1], ex.args[0]] })];\n            }\n            break;\n        case 'IF_RIGHT':\n            if (assertArgs$1(ex, 2)) {\n                return [mkPrim({ prim: 'IF_LEFT', annots: ex.annots, args: [ex.args[1], ex.args[0]] })];\n            }\n            break;\n        // CAR/CDR n\n        case 'CAR':\n        case 'CDR':\n            if (ex.args !== undefined) {\n                if (assertArgs$1(ex, 1) && assertIntArg(ex, ex.args[0])) {\n                    const n = parseInt(ex.args[0].int, 10);\n                    return mkPrim({\n                        prim: 'GET',\n                        args: [{ int: ex.prim === 'CAR' ? String(n * 2 + 1) : String(n * 2) }],\n                        annots: ex.annots,\n                    });\n                }\n            }\n            else {\n                return ex;\n            }\n    }\n    // More syntactic conveniences\n    // PAPPAIIR macro\n    if (pairRe.test(ex.prim)) {\n        if (assertArgs$1(ex, 0)) {\n            const { fields, rest } = filterAnnotations(ex.annots);\n            const { r } = parsePairUnpairExpr(ex, ex.prim.slice(1), fields, (l, r, top) => [\n                ...(l || []),\n                ...(r || []),\n                top,\n            ]);\n            return r.map(([v, a], i) => {\n                const ann = [\n                    ...trimLast(a, null).map((v) => (v === null ? '%' : v)),\n                    ...(v === 0 && i === r.length - 1 ? rest : []),\n                ];\n                const leaf = mkPrim({ prim: 'PAIR', annots: ann.length !== 0 ? ann : undefined });\n                return v === 0\n                    ? leaf\n                    : {\n                        prim: 'DIP',\n                        args: v === 1 ? [[leaf]] : [{ int: String(v) }, [leaf]],\n                    };\n            });\n        }\n    }\n    // UNPAPPAIIR macro\n    if (unpairRe.test(ex.prim)) {\n        if (ProtoInferiorTo(proto, Protocol.PtEdo2Zk) && assertArgs$1(ex, 0)) {\n            const { r } = parsePairUnpairExpr(ex, ex.prim.slice(3), ex.annots || [], (l, r, top) => [\n                top,\n                ...(r || []),\n                ...(l || []),\n            ]);\n            return r.map(([v, a]) => {\n                const leaf = [\n                    { prim: 'DUP' },\n                    mkPrim({ prim: 'CAR', annots: a[0] !== null ? [a[0]] : undefined }),\n                    {\n                        prim: 'DIP',\n                        args: [[mkPrim({ prim: 'CDR', annots: a[1] !== null ? [a[1]] : undefined })]],\n                    },\n                ];\n                return v === 0\n                    ? leaf\n                    : {\n                        prim: 'DIP',\n                        args: v === 1 ? [[leaf]] : [{ int: String(v) }, [leaf]],\n                    };\n            });\n        }\n        else {\n            if (ex.prim === 'UNPAIR') {\n                return ex;\n            }\n            if (assertArgs$1(ex, 0)) {\n                // 008_edo: annotations are deprecated\n                const { r } = parsePairUnpairExpr(ex, ex.prim.slice(3), [], (l, r, top) => [\n                    top,\n                    ...(r || []),\n                    ...(l || []),\n                ]);\n                return r.map(([v]) => {\n                    const leaf = mkPrim({\n                        prim: 'UNPAIR',\n                    });\n                    return v === 0\n                        ? leaf\n                        : {\n                            prim: 'DIP',\n                            args: v === 1 ? [[leaf]] : [{ int: String(v) }, [leaf]],\n                        };\n                });\n            }\n        }\n    }\n    // C[AD]+R macro\n    if (cadrRe.test(ex.prim)) {\n        if (assertArgs$1(ex, 0)) {\n            const ch = [...ex.prim.slice(1, ex.prim.length - 1)];\n            return ch.map((c, i) => {\n                const ann = i === ch.length - 1 ? ex.annots : undefined;\n                switch (c) {\n                    case 'A':\n                        return mkPrim({ prim: 'CAR', annots: ann });\n                    case 'D':\n                        return mkPrim({ prim: 'CDR', annots: ann });\n                    default:\n                        throw new MacroError(ex, `unexpected character: ${c}`);\n                }\n            });\n        }\n    }\n    // SET_C[AD]+R macro\n    if (setCadrRe.test(ex.prim)) {\n        if (assertArgs$1(ex, 0)) {\n            const { fields, rest } = filterAnnotations(ex.annots);\n            if (fields.length > 1) {\n                throw new MacroError(ex, `unexpected annotation on macro ${ex.prim}: ${fields}`);\n            }\n            const term = fields.length !== 0\n                ? {\n                    a: [\n                        { prim: 'DUP' },\n                        { prim: 'CAR', annots: fields },\n                        { prim: 'DROP' },\n                        { prim: 'CDR', annots: ['@%%'] },\n                        { prim: 'SWAP' },\n                        { prim: 'PAIR', annots: [fields[0], '%@'] },\n                    ],\n                    d: [\n                        { prim: 'DUP' },\n                        { prim: 'CDR', annots: fields },\n                        { prim: 'DROP' },\n                        { prim: 'CAR', annots: ['@%%'] },\n                        { prim: 'PAIR', annots: ['%@', fields[0]] },\n                    ],\n                }\n                : {\n                    a: [\n                        { prim: 'CDR', annots: ['@%%'] },\n                        { prim: 'SWAP' },\n                        { prim: 'PAIR', annots: ['%', '%@'] },\n                    ],\n                    d: [\n                        { prim: 'CAR', annots: ['@%%'] },\n                        { prim: 'PAIR', annots: ['%@', '%'] },\n                    ],\n                };\n            return parseSetMapCadr(ex, ex.prim.slice(5, ex.prim.length - 1), rest, term);\n        }\n    }\n    // MAP_C[AD]+R macro\n    if (mapCadrRe.test(ex.prim)) {\n        if (assertArgs$1(ex, 1)) {\n            const { fields } = filterAnnotations(ex.annots);\n            if (fields.length > 1) {\n                throw new MacroError(ex, `unexpected annotation on macro ${ex.prim}: ${fields}`);\n            }\n            const term = {\n                a: [\n                    { prim: 'DUP' },\n                    { prim: 'CDR', annots: ['@%%'] },\n                    {\n                        prim: 'DIP',\n                        args: [\n                            [\n                                mkPrim({\n                                    prim: 'CAR',\n                                    annots: fields.length !== 0 ? ['@' + fields[0].slice(1)] : undefined,\n                                }),\n                                ex.args[0],\n                            ],\n                        ],\n                    },\n                    { prim: 'SWAP' },\n                    { prim: 'PAIR', annots: [fields.length !== 0 ? fields[0] : '%', '%@'] },\n                ],\n                d: [\n                    { prim: 'DUP' },\n                    mkPrim({\n                        prim: 'CDR',\n                        annots: fields.length !== 0 ? ['@' + fields[0].slice(1)] : undefined,\n                    }),\n                    ex.args[0],\n                    { prim: 'SWAP' },\n                    { prim: 'CAR', annots: ['@%%'] },\n                    { prim: 'PAIR', annots: ['%@', fields.length !== 0 ? fields[0] : '%'] },\n                ],\n            };\n            return parseSetMapCadr(ex, ex.prim.slice(5, ex.prim.length - 1), [], term);\n        }\n    }\n    // Expand deprecated DI...IP to [DIP n]\n    if (diipRe.test(ex.prim)) {\n        if (assertArgs$1(ex, 1)) {\n            let n = 0;\n            while (ex.prim[1 + n] === 'I') {\n                n++;\n            }\n            return mkPrim({ prim: 'DIP', args: [{ int: String(n) }, ex.args[0]] });\n        }\n    }\n    // Expand DU...UP and DUP n\n    if (duupRe.test(ex.prim)) {\n        let n = 0;\n        while (ex.prim[1 + n] === 'U') {\n            n++;\n        }\n        if (ProtoInferiorTo(proto, Protocol.PtEdo2Zk)) {\n            if (n === 1) {\n                if (ex.args === undefined) {\n                    return ex; // skip\n                }\n                if (assertArgs$1(ex, 1) && assertIntArg(ex, ex.args[0])) {\n                    n = parseInt(ex.args[0].int, 10);\n                }\n            }\n            else {\n                assertArgs$1(ex, 0);\n            }\n            if (n === 1) {\n                return [mkPrim({ prim: 'DUP', annots: ex.annots })];\n            }\n            else if (n === 2) {\n                return [\n                    {\n                        prim: 'DIP',\n                        args: [[mkPrim({ prim: 'DUP', annots: ex.annots })]],\n                    },\n                    { prim: 'SWAP' },\n                ];\n            }\n            else {\n                return [\n                    {\n                        prim: 'DIP',\n                        args: [{ int: String(n - 1) }, [mkPrim({ prim: 'DUP', annots: ex.annots })]],\n                    },\n                    {\n                        prim: 'DIG',\n                        args: [{ int: String(n) }],\n                    },\n                ];\n            }\n        }\n        else {\n            if (n === 1) {\n                return ex;\n            }\n            if (assertArgs$1(ex, 0)) {\n                return mkPrim({ prim: 'DUP', args: [{ int: String(n) }], annots: ex.annots });\n            }\n        }\n    }\n    return ex;\n}\n\nfunction expandGlobalConstants(ex, hashAndValue) {\n    if (ex.args !== undefined &&\n        ex.args.length === 1 &&\n        'string' in ex.args[0] &&\n        ex.args[0].string in hashAndValue) {\n        return hashAndValue[ex.args[0].string];\n    }\n    return ex;\n}\n\n/**\n *  @category Error\n *  @description Error that indicates a failure when parsing Micheline expressions\n */\nclass MichelineParseError extends TaquitoError {\n    /**\n     * @param token A token caused the error\n     * @param message An error message\n     */\n    constructor(token, message) {\n        super();\n        this.token = token;\n        this.message = message;\n        this.name = 'MichelineParseError';\n    }\n}\n/**\n *  @category Error\n *  @description Error indicates a failure when parsing Micheline JSON\n */\nclass JSONParseError extends TaquitoError {\n    /**\n     * @param node A node caused the error\n     * @param message An error message\n     */\n    constructor(node, message) {\n        super();\n        this.node = node;\n        this.message = message;\n        this.name = 'JSONParseError';\n    }\n}\nconst errEOF = new MichelineParseError(null, 'Unexpected EOF');\nfunction isAnnotation(tok) {\n    return tok.t === Literal.Ident && (tok.v[0] === '@' || tok.v[0] === '%' || tok.v[0] === ':');\n}\nconst intRe = new RegExp('^-?[0-9]+$');\nconst bytesRe = new RegExp('^([0-9a-fA-F]{2})*$');\n/**\n * Converts and validates Michelson expressions between JSON-based Michelson and Micheline\n *\n * Pretty Print a Michelson Smart Contract:\n * ```\n * const contract = await Tezos.contract.at(\"KT1Vsw3kh9638gqWoHTjvHCoHLPKvCbMVbCg\");\n * const p = new Parser();\n *\n * const michelsonCode = p.parseJSON(contract.script.code);\n * const storage = p.parseJSON(contract.script.storage);\n *\n * console.log(\"Pretty print Michelson smart contract:\");\n * console.log(emitMicheline(michelsonCode, {indent:\"    \", newline: \"\\n\",}));\n *\n * console.log(\"Pretty print Storage:\");\n * console.log(emitMicheline(storage, {indent:\"    \", newline: \"\\n\",}));\n * ```\n *\n * Encode a Michelson expression for initial storage of a smart contract\n * ```\n * const src = `(Pair (Pair { Elt 1\n *                (Pair (Pair \"tz1gjaF81ZRRvdzjobyfVNsAeSC6PScjfQwN\" \"tz1KqTpEZ7Yob7QbPE4Hy4Wo8fHG8LhKxZSx\")\n *                      0x0501000000026869) }\n *          10000000)\n *    (Pair 2 333))`;\n *\n * const p = new Parser();\n *\n * const exp = p.parseMichelineExpression(src);\n * console.log(JSON.stringify(exp));\n * ```\n */\nclass Parser {\n    constructor(opt) {\n        this.opt = opt;\n    }\n    expand(ex) {\n        var _a, _b, _c;\n        if (((_a = this.opt) === null || _a === void 0 ? void 0 : _a.expandGlobalConstant) !== undefined && ex.prim === 'constant') {\n            const ret = expandGlobalConstants(ex, this.opt.expandGlobalConstant);\n            if (ret !== ex) {\n                ret[sourceReference] = Object.assign(Object.assign({}, (ex[sourceReference] || { first: 0, last: 0 })), { globalConstant: ex });\n            }\n            return ret;\n        }\n        if (((_b = this.opt) === null || _b === void 0 ? void 0 : _b.expandMacros) !== undefined ? (_c = this.opt) === null || _c === void 0 ? void 0 : _c.expandMacros : true) {\n            const ret = expandMacros(ex, this.opt);\n            if (ret !== ex) {\n                ret[sourceReference] = Object.assign(Object.assign({}, (ex[sourceReference] || { first: 0, last: 0 })), { macro: ex });\n            }\n            return ret;\n        }\n        else {\n            return ex;\n        }\n    }\n    parseListExpr(scanner, start) {\n        var _a;\n        const ref = {\n            first: start.first,\n            last: start.last,\n        };\n        const expectBracket = start.t === '(';\n        let tok;\n        if (expectBracket) {\n            tok = scanner.next();\n            if (tok.done) {\n                throw errEOF;\n            }\n            ref.last = tok.value.last;\n        }\n        else {\n            tok = { value: start };\n        }\n        if (tok.value.t !== Literal.Ident) {\n            throw new MichelineParseError(tok.value, `not an identifier: ${tok.value.v}`);\n        }\n        const ret = {\n            prim: tok.value.v,\n            [sourceReference]: ref,\n        };\n        for (;;) {\n            const tok = scanner.next();\n            if (tok.done) {\n                if (expectBracket) {\n                    throw errEOF;\n                }\n                break;\n            }\n            else if (tok.value.t === ')') {\n                if (!expectBracket) {\n                    throw new MichelineParseError(tok.value, 'unexpected closing bracket');\n                }\n                ref.last = tok.value.last;\n                break;\n            }\n            else if (isAnnotation(tok.value)) {\n                ret.annots = ret.annots || [];\n                ret.annots.push(tok.value.v);\n                ref.last = tok.value.last;\n            }\n            else {\n                ret.args = ret.args || [];\n                const arg = this.parseExpr(scanner, tok.value);\n                ref.last = ((_a = arg[sourceReference]) === null || _a === void 0 ? void 0 : _a.last) || ref.last;\n                ret.args.push(arg);\n            }\n        }\n        return this.expand(ret);\n    }\n    parseArgs(scanner, start) {\n        var _a;\n        // Identifier with arguments\n        const ref = {\n            first: start.first,\n            last: start.last,\n        };\n        const p = {\n            prim: start.v,\n            [sourceReference]: ref,\n        };\n        for (;;) {\n            const t = scanner.next();\n            if (t.done || t.value.t === '}' || t.value.t === ';') {\n                return [p, t];\n            }\n            if (isAnnotation(t.value)) {\n                ref.last = t.value.last;\n                p.annots = p.annots || [];\n                p.annots.push(t.value.v);\n            }\n            else {\n                const arg = this.parseExpr(scanner, t.value);\n                ref.last = ((_a = arg[sourceReference]) === null || _a === void 0 ? void 0 : _a.last) || ref.last;\n                p.args = p.args || [];\n                p.args.push(arg);\n            }\n        }\n    }\n    parseSequenceExpr(scanner, start) {\n        var _a, _b;\n        const ref = {\n            first: start.first,\n            last: start.last,\n        };\n        const seq = [];\n        seq[sourceReference] = ref;\n        const expectBracket = start.t === '{';\n        let tok = start.t === '{' ? null : { value: start };\n        for (;;) {\n            if (tok === null) {\n                tok = scanner.next();\n                if (!tok.done) {\n                    ref.last = tok.value.last;\n                }\n            }\n            if (tok.done) {\n                if (expectBracket) {\n                    throw errEOF;\n                }\n                else {\n                    return seq;\n                }\n            }\n            if (tok.value.t === '}') {\n                if (!expectBracket) {\n                    throw new MichelineParseError(tok.value, 'unexpected closing bracket');\n                }\n                else {\n                    return seq;\n                }\n            }\n            else if (tok.value.t === Literal.Ident) {\n                // Identifier with arguments\n                const [itm, n] = this.parseArgs(scanner, tok.value);\n                ref.last = ((_a = itm[sourceReference]) === null || _a === void 0 ? void 0 : _a.last) || ref.last;\n                seq.push(this.expand(itm));\n                tok = n;\n            }\n            else {\n                // Other\n                const ex = this.parseExpr(scanner, tok.value);\n                ref.last = ((_b = ex[sourceReference]) === null || _b === void 0 ? void 0 : _b.last) || ref.last;\n                seq.push(ex);\n                tok = null;\n            }\n            if (tok === null) {\n                tok = scanner.next();\n                if (!tok.done) {\n                    ref.last = tok.value.last;\n                }\n            }\n            if (!tok.done && tok.value.t === ';') {\n                tok = null;\n            }\n        }\n    }\n    parseExpr(scanner, tok) {\n        switch (tok.t) {\n            case Literal.Ident:\n                return this.expand({\n                    prim: tok.v,\n                    [sourceReference]: { first: tok.first, last: tok.last },\n                });\n            case Literal.Number:\n                return { int: tok.v, [sourceReference]: { first: tok.first, last: tok.last } };\n            case Literal.String:\n                return {\n                    string: JSON.parse(tok.v),\n                    [sourceReference]: { first: tok.first, last: tok.last },\n                };\n            case Literal.Bytes:\n                return { bytes: tok.v.slice(2), [sourceReference]: { first: tok.first, last: tok.last } };\n            case '{':\n                return this.parseSequenceExpr(scanner, tok);\n            default:\n                return this.parseListExpr(scanner, tok);\n        }\n    }\n    /**\n     * Parses a Micheline sequence expression, such as smart contract source. Enclosing curly brackets may be omitted.\n     * @param src A Micheline sequence `{parameter ...; storage int; code { DUP ; ...};}` or `parameter ...; storage int; code { DUP ; ...};`\n     */\n    parseSequence(src) {\n        if (typeof src !== 'string') {\n            throw new TypeError(`string type was expected, got ${typeof src} instead`);\n        }\n        const scanner = scan(src);\n        const tok = scanner.next();\n        if (tok.done) {\n            return null;\n        }\n        return this.parseSequenceExpr(scanner, tok.value);\n    }\n    /**\n     * Parse a Micheline sequence expression. Enclosing curly brackets may be omitted.\n     * @param src A Michelson list expression such as `(Pair {Elt \"0\" 0} 0)` or `Pair {Elt \"0\" 0} 0`\n     * @returns An AST node or null for empty document.\n     */\n    parseList(src) {\n        if (typeof src !== 'string') {\n            throw new TypeError(`string type was expected, got ${typeof src} instead`);\n        }\n        const scanner = scan(src);\n        const tok = scanner.next();\n        if (tok.done) {\n            return null;\n        }\n        return this.parseListExpr(scanner, tok.value);\n    }\n    /**\n     * Parse any Michelson expression\n     * @param src A Michelson expression such as `(Pair {Elt \"0\" 0} 0)` or `{parameter ...; storage int; code { DUP ; ...};}`\n     * @returns An AST node or null for empty document.\n     */\n    parseMichelineExpression(src) {\n        if (typeof src !== 'string') {\n            throw new TypeError(`string type was expected, got ${typeof src} instead`);\n        }\n        const scanner = scan(src);\n        const tok = scanner.next();\n        if (tok.done) {\n            return null;\n        }\n        return this.parseExpr(scanner, tok.value);\n    }\n    /**\n     * Parse a Micheline sequence expression, such as smart contract source. Enclosing curly brackets may be omitted.\n     * An alias for `parseSequence`\n     * @param src A Micheline sequence `{parameter ...; storage int; code { DUP ; ...};}` or `parameter ...; storage int; code { DUP ; ...};`\n     */\n    parseScript(src) {\n        return this.parseSequence(src);\n    }\n    /**\n     * Parse a Micheline sequence expression. Enclosing curly brackets may be omitted.\n     * An alias for `parseList`\n     * @param src A Michelson list expression such as `(Pair {Elt \"0\" 0} 0)` or `Pair {Elt \"0\" 0} 0`\n     * @returns An AST node or null for empty document.\n     */\n    parseData(src) {\n        return this.parseList(src);\n    }\n    /**\n     * Takes a JSON-encoded Michelson, validates it, strips away unneeded properties and optionally expands macros (See {@link ParserOptions}).\n     * @param src An object containing JSON-encoded Michelson, usually returned by `JSON.parse()`\n     */\n    parseJSON(src) {\n        if (typeof src !== 'object') {\n            throw new TypeError(`object type was expected, got ${typeof src} instead`);\n        }\n        if (Array.isArray(src)) {\n            const ret = [];\n            for (const n of src) {\n                if (n === null || typeof n !== 'object') {\n                    throw new JSONParseError(n, `unexpected sequence element: ${n}`);\n                }\n                ret.push(this.parseJSON(n));\n            }\n            return ret;\n        }\n        else if ('prim' in src) {\n            const p = src;\n            if (typeof p.prim === 'string' &&\n                (p.annots === undefined || Array.isArray(p.annots)) &&\n                (p.args === undefined || Array.isArray(p.args))) {\n                const ret = {\n                    prim: p.prim,\n                };\n                if (p.annots !== undefined) {\n                    for (const a of p.annots) {\n                        if (typeof a !== 'string') {\n                            throw new JSONParseError(a, `string expected: ${a}`);\n                        }\n                    }\n                    ret.annots = p.annots;\n                }\n                if (p.args !== undefined) {\n                    ret.args = [];\n                    for (const a of p.args) {\n                        if (a === null || typeof a !== 'object') {\n                            throw new JSONParseError(a, `unexpected argument: ${a}`);\n                        }\n                        ret.args.push(this.parseJSON(a));\n                    }\n                }\n                return this.expand(ret);\n            }\n            throw new JSONParseError(src, `malformed prim expression: ${src}`);\n        }\n        else if ('string' in src) {\n            if (typeof src.string === 'string') {\n                return { string: src.string };\n            }\n            throw new JSONParseError(src, `malformed string literal: ${src}`);\n        }\n        else if ('int' in src) {\n            if (typeof src.int === 'string' && intRe.test(src.int)) {\n                return { int: src.int };\n            }\n            throw new JSONParseError(src, `malformed int literal: ${src}`);\n        }\n        else if ('bytes' in src) {\n            if (typeof src.bytes === 'string' &&\n                bytesRe.test(src.bytes)) {\n                return { bytes: src.bytes };\n            }\n            throw new JSONParseError(src, `malformed bytes literal: ${src}`);\n        }\n        else {\n            throw new JSONParseError(src, `unexpected object: ${src}`);\n        }\n    }\n}\n\nclass Formatter {\n    constructor(opt, lev = 0) {\n        this.opt = opt;\n        this.lev = lev;\n    }\n    indent(n = 0) {\n        var _a;\n        let ret = '';\n        if (((_a = this.opt) === null || _a === void 0 ? void 0 : _a.indent) !== undefined) {\n            for (let i = this.lev + n; i > 0; i--) {\n                ret += this.opt.indent;\n            }\n        }\n        return ret;\n    }\n    get lf() {\n        var _a;\n        return ((_a = this.opt) === null || _a === void 0 ? void 0 : _a.newline) || '';\n    }\n    get lfsp() {\n        var _a;\n        return ((_a = this.opt) === null || _a === void 0 ? void 0 : _a.newline) || ' ';\n    }\n    down(n) {\n        return new Formatter(this.opt, this.lev + n);\n    }\n}\nfunction hasArgs(node) {\n    return ('prim' in node &&\n        ((node.annots !== undefined && node.annots.length !== 0) ||\n            (node.args !== undefined && node.args.length !== 0)));\n}\nfunction isMultiline(node) {\n    if (node.args !== undefined) {\n        for (const a of node.args) {\n            if (Array.isArray(a) || hasArgs(a)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction emitExpr(node, f, foldMacros) {\n    var _a;\n    const macro = (_a = node[sourceReference]) === null || _a === void 0 ? void 0 : _a.macro;\n    if (foldMacros && macro) {\n        return emitExpr(macro, f, foldMacros);\n    }\n    if (Array.isArray(node)) {\n        return emitSeq(node, f, foldMacros);\n    }\n    else if ('string' in node) {\n        return JSON.stringify(node.string);\n    }\n    else if ('int' in node) {\n        return node.int;\n    }\n    else if ('bytes' in node) {\n        return '0x' + node.bytes;\n    }\n    else {\n        if ((node.annots === undefined || node.annots.length === 0) &&\n            (node.args === undefined || node.args.length === 0)) {\n            return node.prim;\n        }\n        let ret = '(' + node.prim;\n        if (node.annots !== undefined) {\n            for (const a of node.annots) {\n                ret += ' ' + a;\n            }\n        }\n        if (node.args !== undefined) {\n            const multiline = isMultiline(node);\n            for (const a of node.args) {\n                if (multiline) {\n                    ret += f.lfsp + f.indent(1) + emitExpr(a, f.down(1), foldMacros);\n                }\n                else {\n                    ret += ' ' + emitExpr(a, f, foldMacros);\n                }\n            }\n        }\n        return ret + ')';\n    }\n}\nfunction emitSeq(node, f, foldMacros) {\n    let ret = '{' + f.lf;\n    let i = node.length;\n    for (const el of node) {\n        ret += f.indent(1);\n        if ('prim' in el) {\n            ret += el.prim;\n            if (el.annots !== undefined) {\n                for (const a of el.annots) {\n                    ret += ' ' + a;\n                }\n            }\n            if (el.args !== undefined) {\n                const multiline = isMultiline(el);\n                for (const a of el.args) {\n                    if (multiline) {\n                        ret += f.lfsp + f.indent(2) + emitExpr(a, f.down(2), foldMacros);\n                    }\n                    else {\n                        ret += ' ' + emitExpr(a, f, foldMacros);\n                    }\n                }\n            }\n        }\n        else {\n            ret += emitExpr(el, f.down(1), foldMacros);\n        }\n        ret += i > 1 ? ';' + f.lfsp : f.lf;\n        i--;\n    }\n    return ret + f.indent() + '}';\n}\n/**\n * Formats Micheline expression\n * @param expr An AST node\n * @param opt Options\n */\nfunction emitMicheline(expr, opt, foldMacros = false) {\n    if (typeof expr !== 'object') {\n        throw new TypeError(`object type was expected, got ${typeof expr} instead`);\n    }\n    return emitExpr(expr, new Formatter(opt), foldMacros);\n}\n\nconst H = [\n    0x6a09e667 | 0,\n    0xbb67ae85 | 0,\n    0x3c6ef372 | 0,\n    0xa54ff53a | 0,\n    0x510e527f | 0,\n    0x9b05688c | 0,\n    0x1f83d9ab | 0,\n    0x5be0cd19 | 0,\n];\nconst K = [\n    0x428a2f98 | 0,\n    0x71374491 | 0,\n    0xb5c0fbcf | 0,\n    0xe9b5dba5 | 0,\n    0x3956c25b | 0,\n    0x59f111f1 | 0,\n    0x923f82a4 | 0,\n    0xab1c5ed5 | 0,\n    0xd807aa98 | 0,\n    0x12835b01 | 0,\n    0x243185be | 0,\n    0x550c7dc3 | 0,\n    0x72be5d74 | 0,\n    0x80deb1fe | 0,\n    0x9bdc06a7 | 0,\n    0xc19bf174 | 0,\n    0xe49b69c1 | 0,\n    0xefbe4786 | 0,\n    0x0fc19dc6 | 0,\n    0x240ca1cc | 0,\n    0x2de92c6f | 0,\n    0x4a7484aa | 0,\n    0x5cb0a9dc | 0,\n    0x76f988da | 0,\n    0x983e5152 | 0,\n    0xa831c66d | 0,\n    0xb00327c8 | 0,\n    0xbf597fc7 | 0,\n    0xc6e00bf3 | 0,\n    0xd5a79147 | 0,\n    0x06ca6351 | 0,\n    0x14292967 | 0,\n    0x27b70a85 | 0,\n    0x2e1b2138 | 0,\n    0x4d2c6dfc | 0,\n    0x53380d13 | 0,\n    0x650a7354 | 0,\n    0x766a0abb | 0,\n    0x81c2c92e | 0,\n    0x92722c85 | 0,\n    0xa2bfe8a1 | 0,\n    0xa81a664b | 0,\n    0xc24b8b70 | 0,\n    0xc76c51a3 | 0,\n    0xd192e819 | 0,\n    0xd6990624 | 0,\n    0xf40e3585 | 0,\n    0x106aa070 | 0,\n    0x19a4c116 | 0,\n    0x1e376c08 | 0,\n    0x2748774c | 0,\n    0x34b0bcb5 | 0,\n    0x391c0cb3 | 0,\n    0x4ed8aa4a | 0,\n    0x5b9cca4f | 0,\n    0x682e6ff3 | 0,\n    0x748f82ee | 0,\n    0x78a5636f | 0,\n    0x84c87814 | 0,\n    0x8cc70208 | 0,\n    0x90befffa | 0,\n    0xa4506ceb | 0,\n    0xbef9a3f7 | 0,\n    0xc67178f2 | 0,\n];\n/**\n *  @category Error\n *  @description Error that indicates a failure when decoding a base58 encoding\n */\nclass Base58DecodingError extends TaquitoError {\n    constructor(message) {\n        super();\n        this.message = message;\n        this.name = 'Base58DecodingError';\n    }\n}\n// https://tools.ietf.org/html/rfc6234\nfunction sha256(msg) {\n    // pad the message\n    const r = (msg.length + 9) % 64;\n    const pad = r === 0 ? 0 : 64 - r;\n    if (msg.length > 268435455) {\n        throw new InvalidMessageError('', `: Invalid length ${msg.length} is too big -- SHA-256.`);\n    }\n    const l = msg.length << 3;\n    const buffer = [\n        ...msg,\n        0x80,\n        ...new Array(pad).fill(0),\n        0,\n        0,\n        0,\n        0,\n        (l >> 24) & 0xff,\n        (l >> 16) & 0xff,\n        (l >> 8) & 0xff,\n        l & 0xff,\n    ];\n    function ror(x, n) {\n        return (x >>> n) | (x << (32 - n));\n    }\n    const h = [...H];\n    const w = new Array(64);\n    const v = new Array(8);\n    for (let offset = 0; offset < buffer.length; offset += 64) {\n        let q = offset;\n        let i = 0;\n        while (i < 16) {\n            w[i] = (buffer[q] << 24) | (buffer[q + 1] << 16) | (buffer[q + 2] << 8) | buffer[q + 3];\n            q += 4;\n            i++;\n        }\n        while (i < 64) {\n            const s0 = ror(w[i - 15], 7) ^ ror(w[i - 15], 18) ^ (w[i - 15] >>> 3);\n            const s1 = ror(w[i - 2], 17) ^ ror(w[i - 2], 19) ^ (w[i - 2] >>> 10);\n            w[i] = ((s1 | 0) + w[i - 7] + s0 + w[i - 16]) | 0;\n            i++;\n        }\n        for (let i = 0; i < 8; i++) {\n            v[i] = h[i];\n        }\n        for (let i = 0; i < 64; i++) {\n            const b0 = ror(v[0], 2) ^ ror(v[0], 13) ^ ror(v[0], 22);\n            const b1 = ror(v[4], 6) ^ ror(v[4], 11) ^ ror(v[4], 25);\n            const t1 = (v[7] + b1 + ((v[4] & v[5]) ^ (~v[4] & v[6])) + K[i] + w[i]) | 0;\n            const t2 = (b0 + ((v[0] & v[1]) ^ (v[0] & v[2]) ^ (v[1] & v[2]))) | 0;\n            v[7] = v[6];\n            v[6] = v[5];\n            v[5] = v[4];\n            v[4] = (v[3] + t1) | 0;\n            v[3] = v[2];\n            v[2] = v[1];\n            v[1] = v[0];\n            v[0] = (t1 + t2) | 0;\n        }\n        for (let i = 0; i < 8; i++) {\n            h[i] = (h[i] + v[i]) | 0;\n        }\n    }\n    const digest = [];\n    for (const v of h) {\n        digest.push((v >> 24) & 0xff);\n        digest.push((v >> 16) & 0xff);\n        digest.push((v >> 8) & 0xff);\n        digest.push(v & 0xff);\n    }\n    return digest;\n}\nconst base58alphabetFwd = [\n    0, 1, 2, 3, 4, 5, 6, 7, 8, -1, -1, -1, -1, -1, -1, -1, 9, 10, 11, 12, 13, 14, 15, 16, -1, 17, 18,\n    19, 20, 21, -1, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, -1, -1, -1, -1, -1, -1, 33, 34, 35,\n    36, 37, 38, 39, 40, 41, 42, 43, -1, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57,\n];\nconst base58alphabetBwd = [\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35,\n    36, 37, 38, 39, 40, 41, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66,\n    67, 68, 69, 70, 71, 72, 73,\n];\nfunction byteAt(src, i) {\n    const c = src.charCodeAt(i) - 49;\n    if (c >= base58alphabetFwd.length || base58alphabetFwd[c] === -1) {\n        throw new Base58DecodingError(`Unexpected character at position ${i}: ${src[i]}`);\n    }\n    return base58alphabetFwd[c];\n}\nfunction decodeBase58(src) {\n    const acc = [];\n    let i = 0;\n    // count and skip leading zeros\n    while (i < src.length && byteAt(src, i) === 0) {\n        i++;\n    }\n    let zeros = i;\n    while (i < src.length) {\n        let carry = byteAt(src, i++);\n        /*\n            for every symbol x\n            acc = acc * 58 + x\n            where acc is a little endian arbitrary length integer\n            */\n        let ii = 0;\n        while (carry !== 0 || ii < acc.length) {\n            const m = (acc[ii] || 0) * 58 + carry;\n            acc[ii++] = m % 256;\n            carry = Math.floor(m / 256);\n        }\n    }\n    while (zeros-- > 0) {\n        acc.push(0);\n    }\n    return acc.reverse();\n}\nfunction encodeBase58(src) {\n    const acc = [];\n    let i = 0;\n    // count and skip leading zeros\n    while (i < src.length && src[i] === 0) {\n        i++;\n    }\n    let zeros = i;\n    while (i < src.length) {\n        let carry = src[i++];\n        let ii = 0;\n        while (carry !== 0 || ii < acc.length) {\n            const m = (acc[ii] || 0) * 256 + carry;\n            acc[ii++] = m % 58;\n            carry = Math.floor(m / 58);\n        }\n    }\n    while (zeros-- > 0) {\n        acc.push(0);\n    }\n    acc.reverse();\n    return String.fromCharCode(...acc.map((v) => base58alphabetBwd[v] + 49));\n}\nfunction decodeBase58Check(src) {\n    const buffer = decodeBase58(src);\n    if (buffer.length < 4) {\n        throw new Base58DecodingError(`Data is too short ${buffer.length}`);\n    }\n    const data = buffer.slice(0, buffer.length - 4);\n    const sum = buffer.slice(buffer.length - 4);\n    const computed = sha256(sha256(data));\n    if (sum[0] !== computed[0] ||\n        sum[1] !== computed[1] ||\n        sum[2] !== computed[2] ||\n        sum[3] !== computed[3]) {\n        throw new Base58DecodingError('Invalid checksum');\n    }\n    return data;\n}\nfunction encodeBase58Check(src) {\n    const sum = sha256(sha256(src));\n    return encodeBase58([...src, ...sum.slice(0, 4)]);\n}\n\n/**\n *  @category Error\n *  @description Error that indicates an invalid Michelson being passed or used\n */\nclass InvalidMichelsonError extends ParameterValidationError {\n    constructor(message) {\n        super();\n        this.message = message;\n        this.name = 'InvalidMichelsonError';\n    }\n}\n/**\n *  @category Error\n *  @description Error that indicates an invalid type expression being passed or used\n */\nclass InvalidTypeExpressionError extends ParameterValidationError {\n    constructor(message) {\n        super();\n        this.message = message;\n        this.name = 'InvalidTypeExpressionError';\n    }\n}\n/**\n *  @category Error\n *  @description Error that indicates an invalid data expression being passed or used\n */\nclass InvalidDataExpressionError extends ParameterValidationError {\n    constructor(message) {\n        super();\n        this.message = message;\n        this.name = 'InvalidDataExpressionError';\n    }\n}\n/**\n *  @category Error\n *  @description Error that indicates an invalid contract entrypoint being referenced or passed\n */\nclass InvalidEntrypointError extends ParameterValidationError {\n    constructor(entrypoint) {\n        super();\n        this.entrypoint = entrypoint;\n        this.name = 'InvalidEntrypointError';\n        this.message = `Contract has no entrypoint named: \"${entrypoint}\"`;\n    }\n}\n/**\n *  @category Error\n *  @description Error that indicates a failure happening when trying to encode Tezos ID\n */\nclass TezosIdEncodeError extends ParameterValidationError {\n    constructor(message) {\n        super();\n        this.message = message;\n        this.name = 'TezosIdEncodeError';\n    }\n}\n/**\n *  @category Error\n *  @description Error that indicates a general error happening when trying to create a LongInteger\n */\nclass LongIntegerError extends TaquitoError {\n    constructor(message) {\n        super();\n        this.message = message;\n        this.name = 'LongIntegerError';\n    }\n}\n/**\n *  @category Error\n *  @description Error that indicates a failure occurring when trying to parse a hex byte\n */\nclass HexParseError extends TaquitoError {\n    constructor(hexByte) {\n        super();\n        this.hexByte = hexByte;\n        this.name = 'HexParseError';\n        this.message = `Unable to parse hex byte \"${hexByte}\"`;\n    }\n}\n\n/**\n *  @category Error\n *  @description Error that indicates a Michelson failure occurring\n */\nclass MichelsonError extends TaquitoError {\n    /**\n     * @param val Value of a AST node caused the error\n     * @param path Path to a node caused the error\n     * @param message An error message\n     */\n    constructor(val, message) {\n        super();\n        this.val = val;\n        this.message = message;\n        this.name = 'MichelsonError';\n    }\n}\nfunction isMichelsonError(err) {\n    return err instanceof MichelsonError;\n}\nclass MichelsonTypeError extends MichelsonError {\n    /**\n     * @param val Value of a type node caused the error\n     * @param data Value of a data node caused the error\n     * @param message An error message\n     */\n    constructor(val, message, data) {\n        super(val, message);\n        this.val = val;\n        this.message = message;\n        this.name = 'MichelsonTypeError';\n        if (data !== undefined) {\n            this.data = data;\n        }\n    }\n}\n// Ad hoc big integer parser\nclass LongInteger {\n    append(c) {\n        let i = 0;\n        while (c !== 0 || i < this.buf.length) {\n            const m = (this.buf[i] || 0) * 10 + c;\n            this.buf[i++] = m % 256;\n            c = Math.floor(m / 256);\n        }\n    }\n    constructor(arg) {\n        this.neg = false;\n        this.buf = [];\n        if (arg === undefined) {\n            return;\n        }\n        if (typeof arg === 'string') {\n            for (let i = 0; i < arg.length; i++) {\n                const c = arg.charCodeAt(i);\n                if (i === 0 && c === 0x2d) {\n                    this.neg = true;\n                }\n                else {\n                    if (c < 0x30 || c > 0x39) {\n                        throw new LongIntegerError(`unexpected character in integer constant \"${arg[i]}\"`);\n                    }\n                    this.append(c - 0x30);\n                }\n            }\n        }\n        else if (arg < 0) {\n            this.neg = true;\n            this.append(-arg);\n        }\n        else {\n            this.append(arg);\n        }\n    }\n    cmp(arg) {\n        if (this.neg !== arg.neg) {\n            return (arg.neg ? 1 : 0) - (this.neg ? 1 : 0);\n        }\n        else {\n            let ret = 0;\n            if (this.buf.length !== arg.buf.length) {\n                ret = this.buf.length < arg.buf.length ? -1 : 1;\n            }\n            else if (this.buf.length !== 0) {\n                let i = arg.buf.length - 1;\n                while (i >= 0 && this.buf[i] === arg.buf[i]) {\n                    i--;\n                }\n                ret = i < 0 ? 0 : this.buf[i] < arg.buf[i] ? -1 : 1;\n            }\n            return !this.neg ? ret : ret === 0 ? 0 : -ret;\n        }\n    }\n    get sign() {\n        return this.buf.length === 0 ? 0 : this.neg ? -1 : 1;\n    }\n}\nfunction parseBytes(s) {\n    const ret = [];\n    for (let i = 0; i < s.length; i += 2) {\n        const x = parseInt(s.slice(i, i + 2), 16);\n        if (Number.isNaN(x)) {\n            return null;\n        }\n        ret.push(x);\n    }\n    return ret;\n}\nfunction isDecimal(x) {\n    try {\n        new LongInteger(x);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nfunction isNatural(x) {\n    try {\n        return new LongInteger(x).sign >= 0;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nconst annRe = /^(@%|@%%|%@|[@:%]([_0-9a-zA-Z][_0-9a-zA-Z.%@]*)?)$/;\nfunction unpackAnnotations(p, opt) {\n    if (Array.isArray(p)) {\n        return {};\n    }\n    let field;\n    let type;\n    let vars;\n    if (p.annots !== undefined) {\n        for (const v of p.annots) {\n            if (v.length !== 0) {\n                if (!annRe.test(v) ||\n                    (!(opt === null || opt === void 0 ? void 0 : opt.specialVar) && (v === '@%' || v === '@%%')) ||\n                    (!(opt === null || opt === void 0 ? void 0 : opt.specialFields) && v === '%@')) {\n                    throw new MichelsonError(p, `${p.prim}: unexpected annotation: ${v}`);\n                }\n                switch (v[0]) {\n                    case '%':\n                        if ((opt === null || opt === void 0 ? void 0 : opt.emptyFields) || v.length > 1) {\n                            field = field || [];\n                            field.push(v);\n                        }\n                        break;\n                    case ':':\n                        if (v.length > 1) {\n                            type = type || [];\n                            type.push(v);\n                        }\n                        break;\n                    case '@':\n                        if ((opt === null || opt === void 0 ? void 0 : opt.emptyVar) || v.length > 1) {\n                            vars = vars || [];\n                            vars.push(v);\n                        }\n                        break;\n                }\n            }\n        }\n    }\n    return { f: field, t: type, v: vars };\n}\nconst tezosPrefix = {\n    BlockHash: [32, [1, 52]],\n    OperationHash: [32, [5, 116]],\n    OperationListHash: [32, [133, 233]],\n    OperationListListHash: [32, [29, 159, 109]],\n    ProtocolHash: [32, [2, 170]],\n    ContextHash: [32, [79, 199]],\n    ED25519PublicKeyHash: [20, [6, 161, 159]],\n    SECP256K1PublicKeyHash: [20, [6, 161, 161]],\n    P256PublicKeyHash: [20, [6, 161, 164]],\n    ContractHash: [20, [2, 90, 121]],\n    CryptoboxPublicKeyHash: [16, [153, 103]],\n    ED25519Seed: [32, [13, 15, 58, 7]],\n    ED25519PublicKey: [32, [13, 15, 37, 217]],\n    SECP256K1SecretKey: [32, [17, 162, 224, 201]],\n    P256SecretKey: [32, [16, 81, 238, 189]],\n    ED25519EncryptedSeed: [56, [7, 90, 60, 179, 41]],\n    SECP256K1EncryptedSecretKey: [56, [9, 237, 241, 174, 150]],\n    P256EncryptedSecretKey: [56, [9, 48, 57, 115, 171]],\n    SECP256K1PublicKey: [33, [3, 254, 226, 86]],\n    P256PublicKey: [33, [3, 178, 139, 127]],\n    SECP256K1Scalar: [33, [38, 248, 136]],\n    SECP256K1Element: [33, [5, 92, 0]],\n    ED25519SecretKey: [64, [43, 246, 78, 7]],\n    ED25519Signature: [64, [9, 245, 205, 134, 18]],\n    SECP256K1Signature: [64, [13, 115, 101, 19, 63]],\n    P256Signature: [64, [54, 240, 44, 52]],\n    GenericSignature: [64, [4, 130, 43]],\n    ChainID: [4, [87, 82, 0]],\n    RollupAddress: [20, [1, 128, 120, 31]],\n    TxRollupL2Address: [20, [6, 161, 166]],\n};\nfunction checkDecodeTezosID(id, ...types) {\n    const buf = decodeBase58Check(id);\n    for (const t of types) {\n        const [plen, p] = tezosPrefix[t];\n        if (buf.length === plen + p.length) {\n            let i = 0;\n            while (i < p.length && buf[i] === p[i]) {\n                i++;\n            }\n            if (i === p.length) {\n                return [t, buf.slice(p.length)];\n            }\n        }\n    }\n    return null;\n}\nfunction encodeTezosID(id, data) {\n    const [plen, p] = tezosPrefix[id];\n    if (data.length !== plen) {\n        throw new TezosIdEncodeError(`Incorrect data length for ${id}: ${data.length}`);\n    }\n    return encodeBase58Check([...p, ...data]);\n}\nfunction unpackComb(id, v) {\n    const vv = v;\n    const args = Array.isArray(vv) ? vv : vv.args;\n    if (args.length === 2) {\n        // it's a way to make a union of two interfaces not an interface with two independent properties of union types\n        const ret = id === 'pair'\n            ? {\n                prim: 'pair',\n                args,\n            }\n            : {\n                prim: 'Pair',\n                args,\n            };\n        return ret;\n    }\n    return Object.assign(Object.assign({}, (Array.isArray(vv) ? { prim: id } : vv)), { args: [\n            args[0],\n            {\n                prim: id,\n                args: args.slice(1),\n            },\n        ] });\n}\nfunction isPairType(t) {\n    return Array.isArray(t) || t.prim === 'pair';\n}\nfunction isPairData(d) {\n    return Array.isArray(d) || ('prim' in d && d.prim === 'Pair');\n}\nconst rfc3339Re = /^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])[T ]([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60)(\\.[0-9]+)?(Z|[+-]([01][0-9]|2[0-3]):([0-5][0-9]))$/;\nfunction parseDate(a) {\n    if ('string' in a) {\n        if (isNatural(a.string)) {\n            return new Date(parseInt(a.string, 10));\n        }\n        else if (rfc3339Re.test(a.string)) {\n            const x = new Date(a.string);\n            if (!Number.isNaN(x.valueOf)) {\n                return x;\n            }\n        }\n    }\n    else if (isDecimal(a.int)) {\n        return new Date(parseInt(a.int, 10));\n    }\n    return null;\n}\nfunction parseHex(s) {\n    const res = [];\n    for (let i = 0; i < s.length; i += 2) {\n        const ss = s.slice(i, i + 2);\n        const x = parseInt(ss, 16);\n        if (Number.isNaN(x)) {\n            throw new HexParseError(ss);\n        }\n        res.push(x);\n    }\n    return res;\n}\nfunction hexBytes(bytes) {\n    return bytes.map((x) => ((x >> 4) & 0xf).toString(16) + (x & 0xf).toString(16)).join('');\n}\n\n// Michelson validator\nconst maxViewNameLength = 31;\nconst noArgInstructionIDs = {\n    ABS: true,\n    ADD: true,\n    ADDRESS: true,\n    AMOUNT: true,\n    AND: true,\n    APPLY: true,\n    BALANCE: true,\n    BLAKE2B: true,\n    CAR: true,\n    CDR: true,\n    CHAIN_ID: true,\n    CHECK_SIGNATURE: true,\n    COMPARE: true,\n    CONCAT: true,\n    CONS: true,\n    EDIV: true,\n    EQ: true,\n    EXEC: true,\n    FAILWITH: true,\n    GE: true,\n    GET_AND_UPDATE: true,\n    GT: true,\n    HASH_KEY: true,\n    IMPLICIT_ACCOUNT: true,\n    INT: true,\n    ISNAT: true,\n    JOIN_TICKETS: true,\n    KECCAK: true,\n    LE: true,\n    LEVEL: true,\n    LSL: true,\n    LSR: true,\n    LT: true,\n    MEM: true,\n    MUL: true,\n    NEG: true,\n    NEQ: true,\n    NEVER: true,\n    NOT: true,\n    NOW: true,\n    OR: true,\n    PACK: true,\n    PAIRING_CHECK: true,\n    READ_TICKET: true,\n    SAPLING_VERIFY_UPDATE: true,\n    SELF: true,\n    SELF_ADDRESS: true,\n    SENDER: true,\n    SET_DELEGATE: true,\n    SHA256: true,\n    SHA3: true,\n    SHA512: true,\n    SIZE: true,\n    SLICE: true,\n    SOME: true,\n    SOURCE: true,\n    SPLIT_TICKET: true,\n    SUB: true,\n    SWAP: true,\n    TICKET: true,\n    TICKET_DEPRECATED: true,\n    TOTAL_VOTING_POWER: true,\n    TRANSFER_TOKENS: true,\n    UNIT: true,\n    VOTING_POWER: true,\n    XOR: true,\n    RENAME: true,\n    OPEN_CHEST: true,\n    SUB_MUTEZ: true,\n    MIN_BLOCK_TIME: true,\n    BYTES: true,\n    NAT: true,\n};\nconst instructionIDs = Object.assign({}, noArgInstructionIDs, {\n    CONTRACT: true,\n    CREATE_CONTRACT: true,\n    DIG: true,\n    DIP: true,\n    DROP: true,\n    DUG: true,\n    DUP: true,\n    EMIT: true,\n    EMPTY_BIG_MAP: true,\n    EMPTY_MAP: true,\n    EMPTY_SET: true,\n    GET: true,\n    IF: true,\n    IF_CONS: true,\n    IF_LEFT: true,\n    IF_NONE: true,\n    ITER: true,\n    LAMBDA: true,\n    LAMBDA_REC: true,\n    LEFT: true,\n    LOOP: true,\n    LOOP_LEFT: true,\n    MAP: true,\n    NIL: true,\n    NONE: true,\n    PAIR: true,\n    PUSH: true,\n    RIGHT: true,\n    SAPLING_EMPTY_STATE: true,\n    UNPACK: true,\n    UNPAIR: true,\n    UPDATE: true,\n    CAST: true,\n    VIEW: true,\n});\nconst simpleComparableTypeIDs = {\n    unit: true,\n    never: true,\n    bool: true,\n    int: true,\n    nat: true,\n    string: true,\n    chain_id: true,\n    bytes: true,\n    mutez: true,\n    key_hash: true,\n    key: true,\n    signature: true,\n    timestamp: true,\n    address: true,\n    tx_rollup_l2_address: true,\n};\nconst typeIDs = Object.assign({}, simpleComparableTypeIDs, {\n    or: true,\n    pair: true,\n    set: true,\n    big_map: true,\n    contract: true,\n    lambda: true,\n    list: true,\n    map: true,\n    operation: true,\n    option: true,\n    bls12_381_g1: true,\n    bls12_381_g2: true,\n    bls12_381_fr: true,\n    sapling_transaction: true,\n    sapling_transaction_deprecated: true,\n    sapling_state: true,\n    ticket: true,\n    chest_key: true,\n    chest: true,\n});\nclass MichelsonValidationError extends MichelsonError {\n    /**\n     * @param val Value of a node caused the error\n     * @param message An error message\n     */\n    constructor(val, message) {\n        super(val, message);\n        this.val = val;\n        this.message = message;\n        this.name = 'MichelsonValidationError';\n    }\n}\nfunction isPrim(ex) {\n    return 'prim' in ex;\n}\nfunction isPrimOrSeq(ex) {\n    return Array.isArray(ex) || 'prim' in ex;\n}\nfunction assertPrim(ex) {\n    if (isPrim(ex)) {\n        return true;\n    }\n    throw new MichelsonValidationError(ex, 'prim expression expected');\n}\nfunction assertSeq(ex) {\n    if (Array.isArray(ex)) {\n        return true;\n    }\n    throw new MichelsonValidationError(ex, 'sequence expression expected');\n}\nfunction assertPrimOrSeq(ex) {\n    if (isPrimOrSeq(ex)) {\n        return true;\n    }\n    throw new MichelsonValidationError(ex, 'prim or sequence expression expected');\n}\nfunction assertNatural(i) {\n    if (i.int[0] === '-') {\n        throw new MichelsonValidationError(i, 'natural number expected');\n    }\n}\nfunction assertIntLiteral(ex) {\n    if ('int' in ex) {\n        return true;\n    }\n    throw new MichelsonValidationError(ex, 'int literal expected');\n}\nfunction assertStringLiteral(ex) {\n    if ('string' in ex) {\n        return true;\n    }\n    throw new MichelsonValidationError(ex, 'string literal expected');\n}\nfunction assertArgs(ex, n) {\n    var _a;\n    if ((n === 0 && ex.args === undefined) || ((_a = ex.args) === null || _a === void 0 ? void 0 : _a.length) === n) {\n        return true;\n    }\n    throw new MichelsonValidationError(ex, `${n} arguments expected`);\n}\n/**\n * Checks if the node is a valid Michelson code (sequence of instructions).\n * This is a type guard function which either returns true of throws an exception.\n * @param ex An AST node\n */\nfunction assertMichelsonInstruction(ex) {\n    var _a, _b;\n    if (Array.isArray(ex)) {\n        for (const n of ex) {\n            if (!Array.isArray(n) && !isPrim(n)) {\n                throw new MichelsonValidationError(ex, 'sequence or prim expected');\n            }\n            assertMichelsonInstruction(n);\n        }\n        return true;\n    }\n    if (assertPrim(ex)) {\n        if (Object.prototype.hasOwnProperty.call(noArgInstructionIDs, ex.prim)) {\n            assertArgs(ex, 0);\n            return true;\n        }\n        switch (ex.prim) {\n            case 'DROP':\n            case 'PAIR':\n            case 'UNPAIR':\n            case 'DUP':\n            case 'UPDATE':\n            case 'GET':\n                if (ex.args !== undefined && assertArgs(ex, 1)) {\n                    /* istanbul ignore else */\n                    if (assertIntLiteral(ex.args[0])) {\n                        assertNatural(ex.args[0]);\n                    }\n                }\n                break;\n            case 'DIG':\n            case 'DUG':\n            case 'SAPLING_EMPTY_STATE':\n                /* istanbul ignore else */\n                if (assertArgs(ex, 1)) {\n                    /* istanbul ignore else */\n                    if (assertIntLiteral(ex.args[0])) {\n                        assertNatural(ex.args[0]);\n                    }\n                }\n                break;\n            case 'NONE':\n            case 'LEFT':\n            case 'RIGHT':\n            case 'NIL':\n            case 'CAST':\n                /* istanbul ignore else */\n                if (assertArgs(ex, 1)) {\n                    assertMichelsonType(ex.args[0]);\n                }\n                break;\n            case 'UNPACK':\n                /* istanbul ignore else */\n                if (assertArgs(ex, 1)) {\n                    assertMichelsonPackableType(ex.args[0]);\n                }\n                break;\n            case 'CONTRACT':\n                /* istanbul ignore else */\n                if (assertArgs(ex, 1)) {\n                    assertMichelsonPassableType(ex.args[0]);\n                }\n                break;\n            case 'IF_NONE':\n            case 'IF_LEFT':\n            case 'IF_CONS':\n            case 'IF':\n                /* istanbul ignore else */\n                if (assertArgs(ex, 2)) {\n                    /* istanbul ignore else */\n                    if (assertSeq(ex.args[0])) {\n                        assertMichelsonInstruction(ex.args[0]);\n                    }\n                    /* istanbul ignore else */\n                    if (assertSeq(ex.args[1])) {\n                        assertMichelsonInstruction(ex.args[1]);\n                    }\n                }\n                break;\n            case 'MAP':\n            case 'ITER':\n            case 'LOOP':\n            case 'LOOP_LEFT':\n                /* istanbul ignore else */\n                if (assertArgs(ex, 1)) {\n                    assertMichelsonInstruction(ex.args[0]);\n                }\n                break;\n            case 'CREATE_CONTRACT':\n                /* istanbul ignore else */\n                if (assertArgs(ex, 1)) {\n                    assertMichelsonContract(ex.args[0]);\n                }\n                break;\n            case 'DIP':\n                if (((_a = ex.args) === null || _a === void 0 ? void 0 : _a.length) === 2) {\n                    /* istanbul ignore else */\n                    if (assertIntLiteral(ex.args[0])) {\n                        assertNatural(ex.args[0]);\n                    }\n                    /* istanbul ignore else */\n                    if (assertSeq(ex.args[1])) {\n                        assertMichelsonInstruction(ex.args[1]);\n                    }\n                }\n                else if (((_b = ex.args) === null || _b === void 0 ? void 0 : _b.length) === 1) {\n                    /* istanbul ignore else */\n                    if (assertSeq(ex.args[0])) {\n                        assertMichelsonInstruction(ex.args[0]);\n                    }\n                }\n                else {\n                    throw new MichelsonValidationError(ex, '1 or 2 arguments expected');\n                }\n                break;\n            case 'PUSH':\n                /* istanbul ignore else */\n                if (assertArgs(ex, 2)) {\n                    assertMichelsonPushableType(ex.args[0]);\n                    assertMichelsonData(ex.args[1]);\n                }\n                break;\n            case 'EMPTY_SET':\n                /* istanbul ignore else */\n                if (assertArgs(ex, 1)) {\n                    assertMichelsonComparableType(ex.args[0]);\n                }\n                break;\n            case 'EMPTY_MAP':\n                /* istanbul ignore else */\n                if (assertArgs(ex, 2)) {\n                    assertMichelsonComparableType(ex.args[0]);\n                    assertMichelsonType(ex.args[1]);\n                }\n                break;\n            case 'EMPTY_BIG_MAP':\n                /* istanbul ignore else */\n                if (assertArgs(ex, 2)) {\n                    assertMichelsonComparableType(ex.args[0]);\n                    assertMichelsonBigMapStorableType(ex.args[1]);\n                }\n                break;\n            case 'LAMBDA_REC':\n            case 'LAMBDA':\n                /* istanbul ignore else */\n                if (assertArgs(ex, 3)) {\n                    assertMichelsonType(ex.args[0]);\n                    assertMichelsonType(ex.args[1]);\n                    /* istanbul ignore else */\n                    if (assertSeq(ex.args[2])) {\n                        assertMichelsonInstruction(ex.args[2]);\n                    }\n                }\n                break;\n            case 'VIEW':\n                /* istanbul ignore else */\n                if (assertArgs(ex, 2)) {\n                    if (assertStringLiteral(ex.args[0])) {\n                        assertViewNameValid(ex.args[0]);\n                    }\n                    if (assertMichelsonType(ex.args[1])) {\n                        assertMichelsonPushableType(ex.args[1]);\n                    }\n                }\n                break;\n            case 'EMIT':\n                if (ex.args && ex.args.length > 0) {\n                    assertArgs(ex, 1);\n                }\n                else {\n                    assertArgs(ex, 0);\n                }\n                break;\n            default:\n                throw new MichelsonValidationError(ex, 'instruction expected');\n        }\n    }\n    return true;\n}\nfunction assertMichelsonComparableType(ex) {\n    /* istanbul ignore else */\n    if (assertPrimOrSeq(ex)) {\n        if (Array.isArray(ex) || ex.prim === 'pair' || ex.prim === 'or' || ex.prim === 'option') {\n            traverseType(ex, (ex) => assertMichelsonComparableType(ex));\n        }\n        else if (!Object.prototype.hasOwnProperty.call(simpleComparableTypeIDs, ex.prim)) {\n            throw new MichelsonValidationError(ex, `${ex.prim}: type is not comparable`);\n        }\n    }\n    return true;\n}\nfunction assertMichelsonPackableType(ex) {\n    /* istanbul ignore else */\n    if (assertPrimOrSeq(ex)) {\n        if (isPrim(ex)) {\n            if (!Object.prototype.hasOwnProperty.call(typeIDs, ex.prim) ||\n                ex.prim === 'big_map' ||\n                ex.prim === 'operation' ||\n                ex.prim === 'sapling_state' ||\n                ex.prim === 'ticket') {\n                throw new MichelsonValidationError(ex, `${ex.prim}: type can't be used inside PACK/UNPACK instructions`);\n            }\n            traverseType(ex, (ex) => assertMichelsonPackableType(ex));\n        }\n    }\n    return true;\n}\nfunction assertMichelsonPushableType(ex) {\n    /* istanbul ignore else */\n    if (assertPrimOrSeq(ex)) {\n        if (isPrim(ex)) {\n            if (!Object.prototype.hasOwnProperty.call(typeIDs, ex.prim) ||\n                ex.prim === 'big_map' ||\n                ex.prim === 'operation' ||\n                ex.prim === 'sapling_state' ||\n                ex.prim === 'ticket' ||\n                ex.prim === 'contract') {\n                throw new MichelsonValidationError(ex, `${ex.prim}: type can't be pushed`);\n            }\n            traverseType(ex, (ex) => assertMichelsonPushableType(ex));\n        }\n    }\n    return true;\n}\nfunction assertMichelsonStorableType(ex) {\n    /* istanbul ignore else */\n    if (assertPrimOrSeq(ex)) {\n        if (isPrim(ex)) {\n            if (!Object.prototype.hasOwnProperty.call(typeIDs, ex.prim) ||\n                ex.prim === 'operation' ||\n                ex.prim === 'contract') {\n                throw new MichelsonValidationError(ex, `${ex.prim}: type can't be used as part of a storage`);\n            }\n            traverseType(ex, (ex) => assertMichelsonStorableType(ex));\n        }\n    }\n    return true;\n}\nfunction assertMichelsonPassableType(ex) {\n    /* istanbul ignore else */\n    if (assertPrimOrSeq(ex)) {\n        if (isPrim(ex)) {\n            if (!Object.prototype.hasOwnProperty.call(typeIDs, ex.prim) || ex.prim === 'operation') {\n                throw new MichelsonValidationError(ex, `${ex.prim}: type can't be used as part of a parameter`);\n            }\n            traverseType(ex, (ex) => assertMichelsonPassableType(ex));\n        }\n    }\n    return true;\n}\nfunction assertMichelsonBigMapStorableType(ex) {\n    /* istanbul ignore else */\n    if (assertPrimOrSeq(ex)) {\n        if (isPrim(ex)) {\n            if (!Object.prototype.hasOwnProperty.call(typeIDs, ex.prim) ||\n                ex.prim === 'big_map' ||\n                ex.prim === 'operation' ||\n                ex.prim === 'sapling_state') {\n                throw new MichelsonValidationError(ex, `${ex.prim}: type can't be used inside a big_map`);\n            }\n            traverseType(ex, (ex) => assertMichelsonBigMapStorableType(ex));\n        }\n    }\n    return true;\n}\nconst viewRe = new RegExp('^[a-zA-Z0-9_.%@]*$');\nfunction assertViewNameValid(name) {\n    if (name.string.length > maxViewNameLength) {\n        throw new MichelsonValidationError(name, `view name too long: ${name.string}`);\n    }\n    if (!viewRe.test(name.string)) {\n        throw new MichelsonValidationError(name, `invalid character(s) in view name: ${name.string}`);\n    }\n}\n/**\n * Checks if the node is a valid Michelson type expression.\n * This is a type guard function which either returns true of throws an exception.\n * @param ex An AST node\n */\nfunction assertMichelsonType(ex) {\n    /* istanbul ignore else */\n    if (assertPrimOrSeq(ex)) {\n        if (isPrim(ex)) {\n            if (!Object.prototype.hasOwnProperty.call(typeIDs, ex.prim)) {\n                throw new MichelsonValidationError(ex, 'type expected');\n            }\n            traverseType(ex, (ex) => assertMichelsonType(ex));\n        }\n    }\n    return true;\n}\nfunction traverseType(ex, cb) {\n    if (Array.isArray(ex) || ex.prim === 'pair') {\n        const args = Array.isArray(ex) ? ex : ex.args;\n        if (args === undefined || args.length < 2) {\n            throw new MichelsonValidationError(ex, 'at least 2 arguments expected');\n        }\n        args.forEach((a) => {\n            if (assertPrimOrSeq(a)) {\n                cb(a);\n            }\n        });\n        return true;\n    }\n    switch (ex.prim) {\n        case 'option':\n        case 'list':\n            /* istanbul ignore else */\n            if (assertArgs(ex, 1) && assertPrimOrSeq(ex.args[0])) {\n                cb(ex.args[0]);\n            }\n            break;\n        case 'contract':\n            /* istanbul ignore else */\n            if (assertArgs(ex, 1)) {\n                assertMichelsonPassableType(ex.args[0]);\n            }\n            break;\n        case 'or':\n            /* istanbul ignore else */\n            if (assertArgs(ex, 2) && assertPrimOrSeq(ex.args[0]) && assertPrimOrSeq(ex.args[1])) {\n                cb(ex.args[0]);\n                cb(ex.args[1]);\n            }\n            break;\n        case 'lambda':\n            /* istanbul ignore else */\n            if (assertArgs(ex, 2)) {\n                assertMichelsonType(ex.args[0]);\n                assertMichelsonType(ex.args[1]);\n            }\n            break;\n        case 'set':\n            /* istanbul ignore else */\n            if (assertArgs(ex, 1)) {\n                assertMichelsonComparableType(ex.args[0]);\n            }\n            break;\n        case 'map':\n            /* istanbul ignore else */\n            if (assertArgs(ex, 2) && assertPrimOrSeq(ex.args[0]) && assertPrimOrSeq(ex.args[1])) {\n                assertMichelsonComparableType(ex.args[0]);\n                cb(ex.args[1]);\n            }\n            break;\n        case 'big_map':\n            /* istanbul ignore else */\n            if (assertArgs(ex, 2) && assertPrimOrSeq(ex.args[0]) && assertPrimOrSeq(ex.args[1])) {\n                assertMichelsonComparableType(ex.args[0]);\n                assertMichelsonBigMapStorableType(ex.args[1]);\n                cb(ex.args[1]);\n            }\n            break;\n        case 'ticket':\n            /* istanbul ignore else */\n            if (assertArgs(ex, 1) && assertPrimOrSeq(ex.args[0])) {\n                assertMichelsonComparableType(ex.args[0]);\n            }\n            break;\n        case 'sapling_state':\n        case 'sapling_transaction':\n            if (assertArgs(ex, 1)) {\n                assertIntLiteral(ex.args[0]);\n            }\n            break;\n        default:\n            assertArgs(ex, 0);\n    }\n    return true;\n}\n/**\n * Checks if the node is a valid Michelson data literal such as `(Pair {Elt \"0\" 0} 0)`.\n * This is a type guard function which either returns true of throws an exception.\n * @param ex An AST node\n */\nfunction assertMichelsonData(ex) {\n    if ('int' in ex || 'string' in ex || 'bytes' in ex) {\n        return true;\n    }\n    if (Array.isArray(ex)) {\n        let mapElts = 0;\n        for (const n of ex) {\n            if (isPrim(n) && n.prim === 'Elt') {\n                /* istanbul ignore else */\n                if (assertArgs(n, 2)) {\n                    assertMichelsonData(n.args[0]);\n                    assertMichelsonData(n.args[1]);\n                }\n                mapElts++;\n            }\n            else {\n                assertMichelsonData(n);\n            }\n        }\n        if (mapElts !== 0 && mapElts !== ex.length) {\n            throw new MichelsonValidationError(ex, \"data entries and map elements can't be intermixed\");\n        }\n        return true;\n    }\n    if (isPrim(ex)) {\n        switch (ex.prim) {\n            case 'Unit':\n            case 'True':\n            case 'False':\n            case 'None':\n                assertArgs(ex, 0);\n                break;\n            case 'Pair':\n                /* istanbul ignore else */\n                if (ex.args === undefined || ex.args.length < 2) {\n                    throw new MichelsonValidationError(ex, 'at least 2 arguments expected');\n                }\n                for (const a of ex.args) {\n                    assertMichelsonData(a);\n                }\n                break;\n            case 'Left':\n            case 'Right':\n            case 'Some':\n                /* istanbul ignore else */\n                if (assertArgs(ex, 1)) {\n                    assertMichelsonData(ex.args[0]);\n                }\n                break;\n            case 'Lambda_rec':\n                if (ex.args) {\n                    assertMichelsonInstruction(ex.args);\n                }\n                break;\n            default:\n                if (Object.prototype.hasOwnProperty.call(instructionIDs, ex.prim)) {\n                    assertMichelsonInstruction(ex);\n                }\n                else {\n                    throw new MichelsonValidationError(ex, 'data entry or instruction expected');\n                }\n        }\n    }\n    else {\n        throw new MichelsonValidationError(ex, 'data entry expected');\n    }\n    return true;\n}\n/**\n * Checks if the node is a valid Michelson smart contract source containing all required and valid properties such as `parameter`, `storage` and `code`.\n * This is a type guard function which either returns true of throws an exception.\n * @param ex An AST node\n */\nfunction assertMichelsonContract(ex) {\n    /* istanbul ignore else */\n    if (assertSeq(ex)) {\n        const toplevelSec = {};\n        const views = {};\n        for (const sec of ex) {\n            if (assertPrim(sec)) {\n                if (sec.prim !== 'view') {\n                    if (sec.prim in toplevelSec) {\n                        throw new MichelsonValidationError(ex, `duplicate contract section: ${sec.prim}`);\n                    }\n                    toplevelSec[sec.prim] = true;\n                }\n                /* istanbul ignore else */\n                switch (sec.prim) {\n                    case 'code':\n                        if (assertArgs(sec, 1)) {\n                            /* istanbul ignore else */\n                            if (assertSeq(sec.args[0])) {\n                                assertMichelsonInstruction(sec.args[0]);\n                            }\n                        }\n                        break;\n                    case 'parameter':\n                        if (assertArgs(sec, 1)) {\n                            assertMichelsonPassableType(sec.args[0]);\n                        }\n                        if (sec.annots) {\n                            throw new MichelsonValidationError(sec, 'Annotation must be part of the parameter type');\n                        }\n                        break;\n                    case 'storage':\n                        if (assertArgs(sec, 1)) {\n                            assertMichelsonStorableType(sec.args[0]);\n                        }\n                        break;\n                    case 'view':\n                        if (assertArgs(sec, 4)) {\n                            if (assertStringLiteral(sec.args[0])) {\n                                const name = sec.args[0];\n                                if (name.string in views) {\n                                    throw new MichelsonValidationError(ex, `duplicate view name: ${name.string}`);\n                                }\n                                views[name.string] = true;\n                                assertViewNameValid(name);\n                            }\n                            assertMichelsonPushableType(sec.args[1]);\n                            assertMichelsonPushableType(sec.args[2]);\n                            if (assertSeq(sec.args[3])) {\n                                assertMichelsonInstruction(sec.args[3]);\n                            }\n                        }\n                        break;\n                    default:\n                        throw new MichelsonValidationError(ex, `unexpected contract section: ${sec.prim}`);\n                }\n            }\n        }\n    }\n    return true;\n}\n/**\n * Checks if the node is a valid Michelson smart contract source containing all required and valid properties such as `parameter`, `storage` and `code`.\n * @param ex An AST node\n */\nfunction isMichelsonScript(ex) {\n    try {\n        assertMichelsonContract(ex);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\n/**\n * Checks if the node is a valid Michelson data literal such as `(Pair {Elt \"0\" 0} 0)`.\n * @param ex An AST node\n */\nfunction isMichelsonData(ex) {\n    try {\n        assertMichelsonData(ex);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\n/**\n * Checks if the node is a valid Michelson code (sequence of instructions).\n * @param ex An AST node\n */\nfunction isMichelsonCode(ex) {\n    try {\n        assertMichelsonInstruction(ex);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\n/**\n * Checks if the node is a valid Michelson type expression.\n * @param ex An AST node\n */\nfunction isMichelsonType(ex) {\n    try {\n        assertMichelsonType(ex);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nfunction isInstruction(p) {\n    return Object.prototype.hasOwnProperty.call(instructionIDs, p.prim);\n}\nfunction assertDataListIfAny(d) {\n    if (!Array.isArray(d)) {\n        return false;\n    }\n    for (const v of d) {\n        if ('prim' in v) {\n            if (isInstruction(v)) {\n                throw new MichelsonError(d, `Instruction outside of a lambda: ${JSON.stringify(d)}`);\n            }\n            else if (v.prim === 'Elt') {\n                throw new MichelsonError(d, `Elt item outside of a map literal: ${JSON.stringify(d)}`);\n            }\n        }\n    }\n    return true;\n}\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\n// The order is important!\n// The position represent the encoding value.\nconst primitives = [\n    'parameter',\n    'storage',\n    'code',\n    'False',\n    'Elt',\n    'Left',\n    'None',\n    'Pair',\n    'Right',\n    'Some',\n    'True',\n    'Unit',\n    'PACK',\n    'UNPACK',\n    'BLAKE2B',\n    'SHA256',\n    'SHA512',\n    'ABS',\n    'ADD',\n    'AMOUNT',\n    'AND',\n    'BALANCE',\n    'CAR',\n    'CDR',\n    'CHECK_SIGNATURE',\n    'COMPARE',\n    'CONCAT',\n    'CONS',\n    'CREATE_ACCOUNT',\n    'CREATE_CONTRACT',\n    'IMPLICIT_ACCOUNT',\n    'DIP',\n    'DROP',\n    'DUP',\n    'EDIV',\n    'EMPTY_MAP',\n    'EMPTY_SET',\n    'EQ',\n    'EXEC',\n    'FAILWITH',\n    'GE',\n    'GET',\n    'GT',\n    'HASH_KEY',\n    'IF',\n    'IF_CONS',\n    'IF_LEFT',\n    'IF_NONE',\n    'INT',\n    'LAMBDA',\n    'LE',\n    'LEFT',\n    'LOOP',\n    'LSL',\n    'LSR',\n    'LT',\n    'MAP',\n    'MEM',\n    'MUL',\n    'NEG',\n    'NEQ',\n    'NIL',\n    'NONE',\n    'NOT',\n    'NOW',\n    'OR',\n    'PAIR',\n    'PUSH',\n    'RIGHT',\n    'SIZE',\n    'SOME',\n    'SOURCE',\n    'SENDER',\n    'SELF',\n    'STEPS_TO_QUOTA',\n    'SUB',\n    'SWAP',\n    'TRANSFER_TOKENS',\n    'SET_DELEGATE',\n    'UNIT',\n    'UPDATE',\n    'XOR',\n    'ITER',\n    'LOOP_LEFT',\n    'ADDRESS',\n    'CONTRACT',\n    'ISNAT',\n    'CAST',\n    'RENAME',\n    'bool',\n    'contract',\n    'int',\n    'key',\n    'key_hash',\n    'lambda',\n    'list',\n    'map',\n    'big_map',\n    'nat',\n    'option',\n    'or',\n    'pair',\n    'set',\n    'signature',\n    'string',\n    'bytes',\n    'mutez',\n    'timestamp',\n    'unit',\n    'operation',\n    'address',\n    'SLICE',\n    'DIG',\n    'DUG',\n    'EMPTY_BIG_MAP',\n    'APPLY',\n    'chain_id',\n    'CHAIN_ID',\n    'LEVEL',\n    'SELF_ADDRESS',\n    'never',\n    'NEVER',\n    'UNPAIR',\n    'VOTING_POWER',\n    'TOTAL_VOTING_POWER',\n    'KECCAK',\n    'SHA3',\n    'PAIRING_CHECK',\n    'bls12_381_g1',\n    'bls12_381_g2',\n    'bls12_381_fr',\n    'sapling_state',\n    'sapling_transaction_deprecated',\n    'SAPLING_EMPTY_STATE',\n    'SAPLING_VERIFY_UPDATE',\n    'ticket',\n    'TICKET_DEPRECATED',\n    'READ_TICKET',\n    'SPLIT_TICKET',\n    'JOIN_TICKETS',\n    'GET_AND_UPDATE',\n    'chest',\n    'chest_key',\n    'OPEN_CHEST',\n    'VIEW',\n    'view',\n    'constant',\n    'SUB_MUTEZ',\n    'tx_rollup_l2_address',\n    'MIN_BLOCK_TIME',\n    'sapling_transaction',\n    'EMIT',\n    'Lambda_rec',\n    'LAMBDA_REC',\n    'TICKET',\n    'BYTES',\n    'NAT',\n];\nconst primTags = Object.assign({}, ...primitives.map((v, i) => ({ [v]: i })));\nvar Tag;\n(function (Tag) {\n    Tag[Tag[\"Int\"] = 0] = \"Int\";\n    Tag[Tag[\"String\"] = 1] = \"String\";\n    Tag[Tag[\"Sequence\"] = 2] = \"Sequence\";\n    Tag[Tag[\"Prim0\"] = 3] = \"Prim0\";\n    Tag[Tag[\"Prim0Annot\"] = 4] = \"Prim0Annot\";\n    Tag[Tag[\"Prim1\"] = 5] = \"Prim1\";\n    Tag[Tag[\"Prim1Annot\"] = 6] = \"Prim1Annot\";\n    Tag[Tag[\"Prim2\"] = 7] = \"Prim2\";\n    Tag[Tag[\"Prim2Annot\"] = 8] = \"Prim2Annot\";\n    Tag[Tag[\"Prim\"] = 9] = \"Prim\";\n    Tag[Tag[\"Bytes\"] = 10] = \"Bytes\";\n})(Tag || (Tag = {}));\nclass Writer {\n    constructor() {\n        this.buffer = [];\n    }\n    get length() {\n        return this.buffer.length;\n    }\n    writeBytes(val) {\n        this.buffer.push(...val.map((v) => v & 0xff));\n    }\n    writeUint8(val) {\n        const v = val | 0;\n        this.buffer.push(v & 0xff);\n    }\n    writeUint16(val) {\n        const v = val | 0;\n        this.buffer.push((v >> 8) & 0xff);\n        this.buffer.push(v & 0xff);\n    }\n    writeUint32(val) {\n        const v = val | 0;\n        this.buffer.push((v >> 24) & 0xff);\n        this.buffer.push((v >> 16) & 0xff);\n        this.buffer.push((v >> 8) & 0xff);\n        this.buffer.push(v & 0xff);\n    }\n    writeInt8(val) {\n        this.writeUint8(val);\n    }\n    writeInt16(val) {\n        this.writeUint16(val);\n    }\n    writeInt32(val) {\n        this.writeUint32(val);\n    }\n}\nconst boundsErr = new Error('bounds out of range');\nclass Reader {\n    constructor(buffer, idx = 0, cap = buffer.length) {\n        this.buffer = buffer;\n        this.idx = idx;\n        this.cap = cap;\n    }\n    /** Remaining length */\n    get length() {\n        return this.cap - this.idx;\n    }\n    readBytes(len) {\n        if (this.cap - this.idx < len) {\n            throw boundsErr;\n        }\n        const ret = this.buffer.slice(this.idx, this.idx + len);\n        this.idx += len;\n        return ret;\n    }\n    reader(len) {\n        if (this.cap - this.idx < len) {\n            throw boundsErr;\n        }\n        const ret = new Reader(this.buffer, this.idx, this.idx + len);\n        this.idx += len;\n        return ret;\n    }\n    copy() {\n        return new Reader(this.buffer, this.idx, this.cap);\n    }\n    readUint8() {\n        if (this.cap - this.idx < 1) {\n            throw boundsErr;\n        }\n        return this.buffer[this.idx++] >>> 0;\n    }\n    readUint16() {\n        if (this.cap - this.idx < 2) {\n            throw boundsErr;\n        }\n        const x0 = this.buffer[this.idx++];\n        const x1 = this.buffer[this.idx++];\n        return ((x0 << 8) | x1) >>> 0;\n    }\n    readUint32() {\n        if (this.cap - this.idx < 4) {\n            throw boundsErr;\n        }\n        const x0 = this.buffer[this.idx++];\n        const x1 = this.buffer[this.idx++];\n        const x2 = this.buffer[this.idx++];\n        const x3 = this.buffer[this.idx++];\n        return ((x0 << 24) | (x1 << 16) | (x2 << 8) | x3) >>> 0;\n    }\n    readInt8() {\n        if (this.cap - this.idx < 1) {\n            throw boundsErr;\n        }\n        const x = this.buffer[this.idx++];\n        return (x << 24) >> 24;\n    }\n    readInt16() {\n        if (this.cap - this.idx < 2) {\n            throw boundsErr;\n        }\n        const x0 = this.buffer[this.idx++];\n        const x1 = this.buffer[this.idx++];\n        return (((x0 << 8) | x1) << 16) >> 16;\n    }\n    readInt32() {\n        if (this.cap - this.idx < 4) {\n            throw boundsErr;\n        }\n        const x0 = this.buffer[this.idx++];\n        const x1 = this.buffer[this.idx++];\n        const x2 = this.buffer[this.idx++];\n        const x3 = this.buffer[this.idx++];\n        return (x0 << 24) | (x1 << 16) | (x2 << 8) | x3;\n    }\n}\nvar ContractID;\n(function (ContractID) {\n    ContractID[ContractID[\"Implicit\"] = 0] = \"Implicit\";\n    ContractID[ContractID[\"Originated\"] = 1] = \"Originated\";\n})(ContractID || (ContractID = {}));\nvar PublicKeyHashID;\n(function (PublicKeyHashID) {\n    PublicKeyHashID[PublicKeyHashID[\"ED25519\"] = 0] = \"ED25519\";\n    PublicKeyHashID[PublicKeyHashID[\"SECP256K1\"] = 1] = \"SECP256K1\";\n    PublicKeyHashID[PublicKeyHashID[\"P256\"] = 2] = \"P256\";\n})(PublicKeyHashID || (PublicKeyHashID = {}));\nfunction readPublicKeyHash(rd) {\n    let type;\n    const tag = rd.readUint8();\n    switch (tag) {\n        case PublicKeyHashID.ED25519:\n            type = 'ED25519PublicKeyHash';\n            break;\n        case PublicKeyHashID.SECP256K1:\n            type = 'SECP256K1PublicKeyHash';\n            break;\n        case PublicKeyHashID.P256:\n            type = 'P256PublicKeyHash';\n            break;\n        default:\n            throw new Error(`unknown public key hash tag: ${tag}`);\n    }\n    return { type, hash: rd.readBytes(20) };\n}\nfunction readAddress(rd) {\n    let address;\n    const tag = rd.readUint8();\n    switch (tag) {\n        case ContractID.Implicit:\n            address = readPublicKeyHash(rd);\n            break;\n        case ContractID.Originated:\n            address = {\n                type: 'ContractHash',\n                hash: rd.readBytes(20),\n            };\n            rd.readBytes(1);\n            break;\n        default:\n            throw new Error(`unknown address tag: ${tag}`);\n    }\n    if (rd.length !== 0) {\n        // entry point\n        const dec = new TextDecoder();\n        address.entryPoint = dec.decode(new Uint8Array(rd.readBytes(rd.length)));\n    }\n    return address;\n}\nfunction writePublicKeyHash(a, w) {\n    let tag;\n    switch (a.type) {\n        case 'ED25519PublicKeyHash':\n            tag = PublicKeyHashID.ED25519;\n            break;\n        case 'SECP256K1PublicKeyHash':\n            tag = PublicKeyHashID.SECP256K1;\n            break;\n        case 'P256PublicKeyHash':\n            tag = PublicKeyHashID.P256;\n            break;\n        default:\n            throw new Error(`unexpected address type: ${a.type}`);\n    }\n    w.writeUint8(tag);\n    w.writeBytes(Array.from(a.hash));\n}\nfunction writeAddress(a, w) {\n    if (a.type === 'ContractHash') {\n        w.writeUint8(ContractID.Originated);\n        w.writeBytes(Array.from(a.hash));\n        w.writeUint8(0);\n    }\n    else {\n        w.writeUint8(ContractID.Implicit);\n        writePublicKeyHash(a, w);\n    }\n    if (a.entryPoint !== undefined && a.entryPoint !== '' && a.entryPoint !== 'default') {\n        const enc = new TextEncoder();\n        const bytes = enc.encode(a.entryPoint);\n        w.writeBytes(Array.from(bytes));\n    }\n}\nvar PublicKeyID;\n(function (PublicKeyID) {\n    PublicKeyID[PublicKeyID[\"ED25519\"] = 0] = \"ED25519\";\n    PublicKeyID[PublicKeyID[\"SECP256K1\"] = 1] = \"SECP256K1\";\n    PublicKeyID[PublicKeyID[\"P256\"] = 2] = \"P256\";\n})(PublicKeyID || (PublicKeyID = {}));\nfunction readPublicKey(rd) {\n    let ln;\n    let type;\n    const tag = rd.readUint8();\n    switch (tag) {\n        case PublicKeyID.ED25519:\n            type = 'ED25519PublicKey';\n            ln = 32;\n            break;\n        case PublicKeyID.SECP256K1:\n            type = 'SECP256K1PublicKey';\n            ln = 33;\n            break;\n        case PublicKeyID.P256:\n            type = 'P256PublicKey';\n            ln = 33;\n            break;\n        default:\n            throw new Error(`unknown public key tag: ${tag}`);\n    }\n    return { type, publicKey: rd.readBytes(ln) };\n}\nfunction writePublicKey(pk, w) {\n    let tag;\n    switch (pk.type) {\n        case 'ED25519PublicKey':\n            tag = PublicKeyID.ED25519;\n            break;\n        case 'SECP256K1PublicKey':\n            tag = PublicKeyID.SECP256K1;\n            break;\n        case 'P256PublicKey':\n            tag = PublicKeyID.P256;\n            break;\n        default:\n            throw new Error(`unexpected public key type: ${pk.type}`);\n    }\n    w.writeUint8(tag);\n    w.writeBytes(Array.from(pk.publicKey));\n}\nfunction writeExpr(expr, wr, tf) {\n    var _a, _b;\n    const [e, args] = tf(expr);\n    if (Array.isArray(e)) {\n        const w = new Writer();\n        for (const v of e) {\n            const a = args.next();\n            if (a.done) {\n                throw new Error('REPORT ME: iterator is done');\n            }\n            writeExpr(v, w, a.value);\n        }\n        wr.writeUint8(Tag.Sequence);\n        wr.writeUint32(w.length);\n        wr.writeBytes(w.buffer);\n        return;\n    }\n    if ('string' in e) {\n        const enc = new TextEncoder();\n        const bytes = enc.encode(e.string);\n        wr.writeUint8(Tag.String);\n        wr.writeUint32(bytes.length);\n        wr.writeBytes(Array.from(bytes));\n        return;\n    }\n    if ('int' in e) {\n        wr.writeUint8(Tag.Int);\n        let val = BigInt(e.int);\n        const sign = val < 0;\n        if (sign) {\n            val = -val;\n        }\n        let i = 0;\n        do {\n            const bits = i === 0 ? BigInt(6) : BigInt(7);\n            let byte = val & ((BigInt(1) << bits) - BigInt(1));\n            val >>= bits;\n            if (val) {\n                byte |= BigInt(0x80);\n            }\n            if (i === 0 && sign) {\n                byte |= BigInt(0x40);\n            }\n            wr.writeUint8(Number(byte));\n            i++;\n        } while (val);\n        return;\n    }\n    if ('bytes' in e) {\n        const bytes = parseHex(e.bytes);\n        wr.writeUint8(Tag.Bytes);\n        wr.writeUint32(bytes.length);\n        wr.writeBytes(bytes);\n        return;\n    }\n    const prim = primTags[e.prim];\n    if (prim === undefined) {\n        throw new TypeError(`Can't encode primary: ${e.prim}`);\n    }\n    const tag = (((_a = e.args) === null || _a === void 0 ? void 0 : _a.length) || 0) < 3\n        ? Tag.Prim0 +\n            (((_b = e.args) === null || _b === void 0 ? void 0 : _b.length) || 0) * 2 +\n            (e.annots === undefined || e.annots.length === 0 ? 0 : 1)\n        : Tag.Prim;\n    wr.writeUint8(tag);\n    wr.writeUint8(prim);\n    if (e.args !== undefined) {\n        if (e.args.length < 3) {\n            for (const v of e.args) {\n                const a = args.next();\n                if (a.done) {\n                    throw new Error('REPORT ME: iterator is done');\n                }\n                writeExpr(v, wr, a.value);\n            }\n        }\n        else {\n            const w = new Writer();\n            for (const v of e.args) {\n                const a = args.next();\n                if (a.done) {\n                    throw new Error('REPORT ME: iterator is done');\n                }\n                writeExpr(v, w, a.value);\n            }\n            wr.writeUint32(w.length);\n            wr.writeBytes(w.buffer);\n        }\n    }\n    if (e.annots !== undefined && e.annots.length !== 0) {\n        const enc = new TextEncoder();\n        const bytes = enc.encode(e.annots.join(' '));\n        wr.writeUint32(bytes.length);\n        wr.writeBytes(Array.from(bytes));\n    }\n    else if (e.args !== undefined && e.args.length >= 3) {\n        wr.writeUint32(0);\n    }\n}\nfunction readExpr(rd, tf) {\n    function* passThrough() {\n        while (true) {\n            yield readPassThrough;\n        }\n    }\n    const [args, tr] = tf;\n    const tag = rd.readUint8();\n    switch (tag) {\n        case Tag.Int: {\n            const buf = [];\n            let byte;\n            do {\n                byte = rd.readInt8();\n                buf.push(byte);\n            } while ((byte & 0x80) !== 0);\n            let val = BigInt(0);\n            let sign = false;\n            for (let i = buf.length - 1; i >= 0; i--) {\n                const bits = i === 0 ? BigInt(6) : BigInt(7);\n                const byte = BigInt(buf[i]);\n                val <<= bits;\n                val |= byte & ((BigInt(1) << bits) - BigInt(1));\n                if (i === 0) {\n                    sign = !!(byte & BigInt(0x40));\n                }\n            }\n            if (sign) {\n                val = -val;\n            }\n            return tr({ int: String(val) });\n        }\n        case Tag.String: {\n            const length = rd.readUint32();\n            const bytes = rd.readBytes(length);\n            const dec = new TextDecoder();\n            return tr({ string: dec.decode(new Uint8Array(bytes)) });\n        }\n        case Tag.Bytes: {\n            const length = rd.readUint32();\n            const bytes = rd.readBytes(length);\n            const hex = hexBytes(Array.from(bytes));\n            return tr({ bytes: hex });\n        }\n        case Tag.Sequence: {\n            const length = rd.readUint32();\n            let res = [];\n            let savedrd = rd.copy();\n            // make two passes\n            let it = passThrough();\n            for (let n = 0; n < 2; n++) {\n                const r = savedrd.reader(length);\n                res = [];\n                while (r.length > 0) {\n                    const a = it.next();\n                    if (a.done) {\n                        throw new Error('REPORT ME: iterator is done');\n                    }\n                    res.push(readExpr(r, a.value));\n                }\n                // make a second pass with injected side effects\n                it = args(res);\n                savedrd = rd;\n            }\n            return tr(res);\n        }\n        default: {\n            if (tag > 9) {\n                throw new Error(`Unknown tag: ${tag}`);\n            }\n            const p = rd.readUint8();\n            if (p >= primitives.length) {\n                throw new Error(`Unknown primitive tag: ${p}`);\n            }\n            const prim = primitives[p];\n            const argn = (tag - 3) >> 1;\n            let res = { prim };\n            // make two passes\n            let it = passThrough();\n            let savedrd = rd.copy();\n            for (let n = 0; n < 2; n++) {\n                res = { prim };\n                if (argn < 3) {\n                    for (let i = 0; i < argn; i++) {\n                        const a = it.next();\n                        if (a.done) {\n                            throw new Error('REPORT ME: iterator is done');\n                        }\n                        res.args = res.args || [];\n                        res.args.push(readExpr(savedrd, a.value));\n                    }\n                }\n                else {\n                    res.args = res.args || [];\n                    const length = savedrd.readUint32();\n                    const r = savedrd.reader(length);\n                    while (r.length > 0) {\n                        const a = it.next();\n                        if (a.done) {\n                            throw new Error('REPORT ME: iterator is done');\n                        }\n                        res.args.push(readExpr(r, a.value));\n                    }\n                }\n                // make a second pass with injected side effects\n                it = args(res);\n                savedrd = rd;\n            }\n            if (((tag - 3) & 1) === 1 || argn === 3) {\n                // read annotations\n                const length = rd.readUint32();\n                if (length !== 0) {\n                    const bytes = rd.readBytes(length);\n                    const dec = new TextDecoder();\n                    res.annots = dec.decode(new Uint8Array(bytes)).split(' ');\n                }\n            }\n            return tr(res);\n        }\n    }\n}\nconst isOrData = (e) => 'prim' in e && (e.prim === 'Left' || e.prim === 'Right');\nconst isOptionData = (e) => 'prim' in e && (e.prim === 'Some' || e.prim === 'None');\nconst getWriteTransformFunc = (t) => {\n    if (isPairType(t)) {\n        return (d) => {\n            if (!isPairData(d)) {\n                throw new MichelsonTypeError(t, `pair expected: ${JSON.stringify(d)}`, d);\n            }\n            assertDataListIfAny(d);\n            // combs aren't used in pack format\n            const tc = unpackComb('pair', t);\n            const dc = unpackComb('Pair', d);\n            return [\n                dc,\n                (function* () {\n                    for (const a of tc.args) {\n                        yield getWriteTransformFunc(a);\n                    }\n                })(),\n            ];\n        };\n    }\n    switch (t.prim) {\n        case 'or':\n            return (d) => {\n                if (!isOrData(d)) {\n                    throw new MichelsonTypeError(t, `or expected: ${JSON.stringify(d)}`, d);\n                }\n                return [\n                    d,\n                    (function* () {\n                        yield getWriteTransformFunc(t.args[d.prim === 'Left' ? 0 : 1]);\n                    })(),\n                ];\n            };\n        case 'option':\n            return (d) => {\n                if (!isOptionData(d)) {\n                    throw new MichelsonTypeError(t, `option expected: ${JSON.stringify(d)}`, d);\n                }\n                return [\n                    d,\n                    (function* () {\n                        const dd = d;\n                        // TODO: refactor and remove ts-ignore\n                        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                        // @ts-ignore\n                        if (dd.prim === 'Some') {\n                            yield getWriteTransformFunc(t.args[0]);\n                        }\n                    })(),\n                ];\n            };\n        case 'list':\n        case 'set':\n            return (d) => {\n                if (!Array.isArray(d)) {\n                    throw new MichelsonTypeError(t, `${t.prim} expected: ${JSON.stringify(d)}`, d);\n                }\n                return [\n                    d,\n                    (function* () {\n                        for (const _v of d) {\n                            yield getWriteTransformFunc(t.args[0]);\n                        }\n                    })(),\n                ];\n            };\n        case 'map':\n            return (d) => {\n                if (!Array.isArray(d)) {\n                    throw new MichelsonTypeError(t, `map expected: ${JSON.stringify(d)}`, d);\n                }\n                return [\n                    d,\n                    (function* () {\n                        for (const _elt of d) {\n                            yield (elt) => {\n                                if (!('prim' in elt) || elt.prim !== 'Elt') {\n                                    throw new MichelsonTypeError(t, `map element expected: ${JSON.stringify(elt)}`, elt);\n                                }\n                                return [\n                                    elt,\n                                    (function* () {\n                                        for (const a of t.args) {\n                                            yield getWriteTransformFunc(a);\n                                        }\n                                    })(),\n                                ];\n                            };\n                        }\n                    })(),\n                ];\n            };\n        case 'chain_id':\n            return (d) => {\n                if (!('bytes' in d) && !('string' in d)) {\n                    throw new MichelsonTypeError(t, `chain id expected: ${JSON.stringify(d)}`, d);\n                }\n                let bytes;\n                if ('string' in d) {\n                    const id = checkDecodeTezosID(d.string, 'ChainID');\n                    if (id === null) {\n                        throw new MichelsonTypeError(t, `chain id base58 expected: ${d.string}`, d);\n                    }\n                    bytes = { bytes: hexBytes(id[1]) };\n                }\n                else {\n                    bytes = d;\n                }\n                return [bytes, [][Symbol.iterator]()];\n            };\n        case 'signature':\n            return (d) => {\n                if (!('bytes' in d) && !('string' in d)) {\n                    throw new MichelsonTypeError(t, `signature expected: ${JSON.stringify(d)}`, d);\n                }\n                let bytes;\n                if ('string' in d) {\n                    const sig = checkDecodeTezosID(d.string, 'ED25519Signature', 'SECP256K1Signature', 'P256Signature', 'GenericSignature');\n                    if (sig === null) {\n                        throw new MichelsonTypeError(t, `signature base58 expected: ${d.string}`, d);\n                    }\n                    bytes = { bytes: hexBytes(sig[1]) };\n                }\n                else {\n                    bytes = d;\n                }\n                return [bytes, [][Symbol.iterator]()];\n            };\n        case 'key_hash':\n            return (d) => {\n                if (!('bytes' in d) && !('string' in d)) {\n                    throw new MichelsonTypeError(t, `key hash expected: ${JSON.stringify(d)}`, d);\n                }\n                let bytes;\n                if ('string' in d) {\n                    const pkh = checkDecodeTezosID(d.string, 'ED25519PublicKeyHash', 'SECP256K1PublicKeyHash', 'P256PublicKeyHash');\n                    if (pkh === null) {\n                        throw new MichelsonTypeError(t, `key hash base58 expected: ${d.string}`, d);\n                    }\n                    const w = new Writer();\n                    writePublicKeyHash({ type: pkh[0], hash: pkh[1] }, w);\n                    bytes = { bytes: hexBytes(w.buffer) };\n                }\n                else {\n                    bytes = d;\n                }\n                return [bytes, [][Symbol.iterator]()];\n            };\n        case 'key':\n            return (d) => {\n                if (!('bytes' in d) && !('string' in d)) {\n                    throw new MichelsonTypeError(t, `public key expected: ${JSON.stringify(d)}`, d);\n                }\n                let bytes;\n                if ('string' in d) {\n                    const key = checkDecodeTezosID(d.string, 'ED25519PublicKey', 'SECP256K1PublicKey', 'P256PublicKey');\n                    if (key === null) {\n                        throw new MichelsonTypeError(t, `public key base58 expected: ${d.string}`, d);\n                    }\n                    const w = new Writer();\n                    writePublicKey({ type: key[0], publicKey: key[1] }, w);\n                    bytes = { bytes: hexBytes(w.buffer) };\n                }\n                else {\n                    bytes = d;\n                }\n                return [bytes, [][Symbol.iterator]()];\n            };\n        case 'address':\n            return (d) => {\n                if (!('bytes' in d) && !('string' in d)) {\n                    throw new MichelsonTypeError(t, `address expected: ${JSON.stringify(d)}`, d);\n                }\n                let bytes;\n                if ('string' in d) {\n                    const s = d.string.split('%');\n                    const address = checkDecodeTezosID(s[0], 'ED25519PublicKeyHash', 'SECP256K1PublicKeyHash', 'P256PublicKeyHash', 'ContractHash');\n                    if (address === null) {\n                        throw new MichelsonTypeError(t, `address base58 expected: ${d.string}`, d);\n                    }\n                    const w = new Writer();\n                    writeAddress({ type: address[0], hash: address[1], entryPoint: s.length > 1 ? s[1] : undefined }, w);\n                    bytes = { bytes: hexBytes(w.buffer) };\n                }\n                else {\n                    bytes = d;\n                }\n                return [bytes, [][Symbol.iterator]()];\n            };\n        case 'timestamp':\n            return (d) => {\n                if (!('string' in d) && !('int' in d)) {\n                    throw new MichelsonTypeError(t, `timestamp expected: ${JSON.stringify(d)}`, d);\n                }\n                let int;\n                if ('string' in d) {\n                    const p = parseDate(d);\n                    if (p === null) {\n                        throw new MichelsonTypeError(t, `can't parse date: ${d.string}`, d);\n                    }\n                    int = { int: String(Math.floor(p.getTime() / 1000)) };\n                }\n                else {\n                    int = d;\n                }\n                return [int, [][Symbol.iterator]()];\n            };\n        default:\n            return writePassThrough;\n    }\n};\nconst isPushInstruction = (e) => 'prim' in e && e.prim === 'PUSH';\nconst writePassThrough = (e) => {\n    if (isPushInstruction(e)) {\n        assertMichelsonInstruction(e);\n        // capture inlined type definition\n        return [\n            e,\n            (function* () {\n                yield writePassThrough;\n                yield getWriteTransformFunc(e.args[0]);\n            })(),\n        ];\n    }\n    return [\n        e,\n        (function* () {\n            while (true) {\n                yield writePassThrough;\n            }\n        })(),\n    ];\n};\n/**\n * Serializes any value of packable type to its optimized binary representation\n * identical to the one used by PACK and UNPACK Michelson instructions.\n * Without a type definition (not recommended) the data will be encoded as a binary form of a generic Michelson expression.\n * Type definition allows some types like `timestamp` and `address` and other base58 representable types to be encoded to\n * corresponding optimized binary forms borrowed from the Tezos protocol\n *\n * ```typescript\n * const data: MichelsonData = {\n *     string: \"KT1RvkwF4F7pz1gCoxkyZrG1RkrxQy3gmFTv%foo\"\n * };\n *\n * const typ: MichelsonType = {\n *     prim: \"address\"\n * };\n *\n * const packed = packData(data, typ);\n *\n * // 050a0000001901be41ee922ddd2cf33201e49d32da0afec571dce300666f6f\n * ```\n *\n * Without a type definition the base58 encoded address will be treated as a string\n * ```typescript\n * const data: MichelsonData = {\n *     string: \"KT1RvkwF4F7pz1gCoxkyZrG1RkrxQy3gmFTv%foo\"\n * };\n *\n * const packed = packData(data);\n *\n * // 0501000000284b543152766b7746344637707a3167436f786b795a724731526b7278517933676d46547625666f6f\n * ```\n * @param d Data object\n * @param t Optional type definition\n * @returns Binary representation as numeric array\n */\nfunction packData(d, t) {\n    const w = new Writer();\n    w.writeUint8(5);\n    writeExpr(d, w, t !== undefined ? getWriteTransformFunc(t) : writePassThrough);\n    return w.buffer;\n}\n/**\n * Serializes any value of packable type to its optimized binary representation\n * identical to the one used by PACK and UNPACK Michelson instructions.\n * Same as {@link packData} but returns a `bytes` Michelson data literal instead of an array\n *\n * ```typescript\n * const data: MichelsonData = {\n *     string: \"2019-09-26T10:59:51Z\"\n * };\n *\n * const typ: MichelsonType = {\n *     prim: \"timestamp\"\n * };\n *\n * const packed = packDataBytes(data, typ);\n *\n * // { bytes: \"0500a7e8e4d80b\" }\n * ```\n * @param d Data object\n * @param t Optional type definition\n * @returns Binary representation as a bytes literal\n */\nfunction packDataBytes(d, t) {\n    return { bytes: hexBytes(packData(d, t)) };\n}\nconst getReadTransformFuncs = (t) => {\n    if (isPairType(t)) {\n        return [\n            (d) => {\n                if (!isPairData(d)) {\n                    throw new MichelsonTypeError(t, `pair expected: ${JSON.stringify(d)}`, d);\n                }\n                const tc = unpackComb('pair', t);\n                return (function* () {\n                    for (const a of tc.args) {\n                        yield getReadTransformFuncs(a);\n                    }\n                })();\n            },\n            (d) => d,\n        ];\n    }\n    switch (t.prim) {\n        case 'or':\n            return [\n                (d) => {\n                    if (!isOrData(d)) {\n                        throw new MichelsonTypeError(t, `or expected: ${JSON.stringify(d)}`, d);\n                    }\n                    return (function* () {\n                        yield getReadTransformFuncs(t.args[d.prim === 'Left' ? 0 : 1]);\n                    })();\n                },\n                (d) => d,\n            ];\n        case 'option':\n            return [\n                (d) => {\n                    if (!isOptionData(d)) {\n                        throw new MichelsonTypeError(t, `option expected: ${JSON.stringify(d)}`, d);\n                    }\n                    return (function* () {\n                        // TODO: refactor and remove ts-ignore\n                        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                        // @ts-ignore\n                        if (d.prim === 'Some') {\n                            yield getReadTransformFuncs(t.args[0]);\n                        }\n                    })();\n                },\n                (d) => d,\n            ];\n        case 'list':\n        case 'set':\n            return [\n                (d) => {\n                    if (!Array.isArray(d)) {\n                        throw new MichelsonTypeError(t, `${t.prim} expected: ${JSON.stringify(d)}`, d);\n                    }\n                    return (function* () {\n                        while (true) {\n                            yield getReadTransformFuncs(t.args[0]);\n                        }\n                    })();\n                },\n                (d) => d,\n            ];\n        case 'map':\n            return [\n                (d) => {\n                    if (!Array.isArray(d)) {\n                        throw new MichelsonTypeError(t, `map expected: ${JSON.stringify(d)}`, d);\n                    }\n                    return (function* () {\n                        while (true) {\n                            yield [\n                                (elt) => {\n                                    if (!('prim' in elt) || elt.prim !== 'Elt') {\n                                        throw new MichelsonTypeError(t, `map element expected: ${JSON.stringify(elt)}`, elt);\n                                    }\n                                    return (function* () {\n                                        for (const a of t.args) {\n                                            yield getReadTransformFuncs(a);\n                                        }\n                                    })();\n                                },\n                                (elt) => elt,\n                            ];\n                        }\n                    })();\n                },\n                (d) => d,\n            ];\n        case 'chain_id':\n            return [\n                () => [][Symbol.iterator](),\n                (d) => {\n                    if (!('bytes' in d) && !('string' in d)) {\n                        throw new MichelsonTypeError(t, `chain id expected: ${JSON.stringify(d)}`, d);\n                    }\n                    if ('string' in d) {\n                        return d;\n                    }\n                    const bytes = parseBytes(d.bytes);\n                    if (bytes === null) {\n                        throw new MichelsonTypeError(t, `can't parse bytes: ${d.bytes}`, d);\n                    }\n                    return { string: encodeTezosID('ChainID', bytes) };\n                },\n            ];\n        case 'signature':\n            return [\n                () => [][Symbol.iterator](),\n                (d) => {\n                    if (!('bytes' in d) && !('string' in d)) {\n                        throw new MichelsonTypeError(t, `signature expected: ${JSON.stringify(d)}`, d);\n                    }\n                    if ('string' in d) {\n                        return d;\n                    }\n                    const bytes = parseBytes(d.bytes);\n                    if (bytes === null) {\n                        throw new MichelsonTypeError(t, `can't parse bytes: ${d.bytes}`, d);\n                    }\n                    return { string: encodeTezosID('GenericSignature', bytes) };\n                },\n            ];\n        case 'key_hash':\n            return [\n                () => [][Symbol.iterator](),\n                (d) => {\n                    if (!('bytes' in d) && !('string' in d)) {\n                        throw new MichelsonTypeError(t, `key hash expected: ${JSON.stringify(d)}`, d);\n                    }\n                    if ('string' in d) {\n                        return d;\n                    }\n                    const bytes = parseBytes(d.bytes);\n                    if (bytes === null) {\n                        throw new MichelsonTypeError(t, `can't parse bytes: ${d.bytes}`, d);\n                    }\n                    const rd = new Reader(new Uint8Array(bytes));\n                    const addr = readPublicKeyHash(rd);\n                    return {\n                        string: encodeTezosID(addr.type, addr.hash) + (addr.entryPoint ? '%' + addr.entryPoint : ''),\n                    };\n                },\n            ];\n        case 'key':\n            return [\n                () => [][Symbol.iterator](),\n                (d) => {\n                    if (!('bytes' in d) && !('string' in d)) {\n                        throw new MichelsonTypeError(t, `public key expected: ${JSON.stringify(d)}`, d);\n                    }\n                    if ('string' in d) {\n                        return d;\n                    }\n                    const bytes = parseBytes(d.bytes);\n                    if (bytes === null) {\n                        throw new MichelsonTypeError(t, `can't parse bytes: ${d.bytes}`, d);\n                    }\n                    const rd = new Reader(new Uint8Array(bytes));\n                    const pk = readPublicKey(rd);\n                    return { string: encodeTezosID(pk.type, pk.publicKey) };\n                },\n            ];\n        case 'address':\n            return [\n                () => [][Symbol.iterator](),\n                (d) => {\n                    if (!('bytes' in d) && !('string' in d)) {\n                        throw new MichelsonTypeError(t, `address expected: ${JSON.stringify(d)}`, d);\n                    }\n                    if ('string' in d) {\n                        return d;\n                    }\n                    const bytes = parseBytes(d.bytes);\n                    if (bytes === null) {\n                        throw new MichelsonTypeError(t, `can't parse bytes: ${d.bytes}`, d);\n                    }\n                    const rd = new Reader(new Uint8Array(bytes));\n                    const addr = readAddress(rd);\n                    return {\n                        string: encodeTezosID(addr.type, addr.hash) + (addr.entryPoint ? '%' + addr.entryPoint : ''),\n                    };\n                },\n            ];\n        case 'timestamp':\n            return [\n                () => [][Symbol.iterator](),\n                (d) => {\n                    if (!('int' in d) && !('string' in d)) {\n                        throw new MichelsonTypeError(t, `address expected: ${JSON.stringify(d)}`, d);\n                    }\n                    if ('string' in d) {\n                        return d;\n                    }\n                    const date = new Date(parseInt(d.int, 10) * 1000);\n                    return { string: date.toISOString().slice(0, 19) + 'Z' };\n                },\n            ];\n        default:\n            return readPassThrough;\n    }\n};\nconst readPassThrough = [\n    (e) => {\n        if (isPushInstruction(e)) {\n            assertMichelsonInstruction(e);\n            // capture inlined type definition\n            return (function* () {\n                yield readPassThrough;\n                yield getReadTransformFuncs(e.args[0]);\n            })();\n        }\n        return (function* () {\n            while (true) {\n                yield readPassThrough;\n            }\n        })();\n    },\n    (e) => e,\n];\n/**\n * Deserialize a byte array into the corresponding Michelson value.\n * Without a type definition (not recommended) the binary data will be treated as a binary form of a generic Michelson expression and returned as is.\n * Type definition allows some types like `timestamp` and `address` and other types usually encoded in optimized binary forms to be transformed\n * back to their string representations like base58 and ISO timestamps.\n *\n * ```typescript\n * const src = [0x05, 0x00, 0xa7, 0xe8, 0xe4, 0xd8, 0x0b];\n *\n * const typ: MichelsonType = {\n *     prim: \"timestamp\"\n * };\n *\n * const data = unpackData(src, typ);\n *\n * // { string: \"2019-09-26T10:59:51Z\" }\n * ```\n *\n * Same binary data without a type definition\n * ```typescript\n * const src = [0x05, 0x00, 0xa7, 0xe8, 0xe4, 0xd8, 0x0b];\n *\n * const data = unpackData(src);\n *\n * // { int: \"1569495591\" }\n * ```\n * @param src Byte array\n * @param t Optional type definition\n * @returns Deserialized data\n */\nfunction unpackData(src, t) {\n    const r = new Reader(src);\n    if (r.readUint8() !== 5) {\n        throw new Error('incorrect packed data magic number');\n    }\n    const ex = readExpr(r, t !== undefined ? getReadTransformFuncs(t) : readPassThrough);\n    if (assertMichelsonData(ex)) {\n        return ex;\n    }\n    throw new Error(); // never\n}\n/**\n * Deserialize a byte array into the corresponding Michelson value.\n * Same as {@link unpackData} but takes a `bytes` Michelson data literal instead of an array\n *\n * ```typescript\n * const src = { bytes: \"0500a7e8e4d80b\" };\n *\n * const typ: MichelsonType = {\n *     prim: \"timestamp\"\n * };\n *\n * const data = unpackDataBytes(src, typ);\n *\n * // { string: \"2019-09-26T10:59:51Z\" }\n * ```\n * @param src Bytes object\n * @param t Optional type definition\n * @returns Deserialized data\n */\nfunction unpackDataBytes(src, t) {\n    const bytes = parseBytes(src.bytes);\n    if (bytes === null) {\n        throw new Error(`can't parse bytes: \"${src.bytes}\"`);\n    }\n    return unpackData(bytes, t);\n}\n// helper functions also used by validator\nfunction decodeAddressBytes(b) {\n    const bytes = parseBytes(b.bytes);\n    if (bytes === null) {\n        throw new Error(`can't parse bytes: \"${b.bytes}\"`);\n    }\n    const rd = new Reader(new Uint8Array(bytes));\n    return readAddress(rd);\n}\nfunction decodePublicKeyHashBytes(b) {\n    const bytes = parseBytes(b.bytes);\n    if (bytes === null) {\n        throw new Error(`can't parse bytes: \"${b.bytes}\"`);\n    }\n    const rd = new Reader(new Uint8Array(bytes));\n    return readPublicKeyHash(rd);\n}\nfunction decodePublicKeyBytes(b) {\n    const bytes = parseBytes(b.bytes);\n    if (bytes === null) {\n        throw new Error(`can't parse bytes: \"${b.bytes}\"`);\n    }\n    const rd = new Reader(new Uint8Array(bytes));\n    return readPublicKey(rd);\n}\n\nclass MichelsonInstructionError extends MichelsonError {\n    /**\n     * @param val Value of a type node caused the error\n     * @param stackState Current stack state\n     * @param message An error message\n     */\n    constructor(val, stackState, message) {\n        super(val, message);\n        this.val = val;\n        this.stackState = stackState;\n        this.message = message;\n        this.name = 'MichelsonInstructionError';\n    }\n}\n// 'sequence as a pair' edo syntax helpers\nfunction typeID(t) {\n    return Array.isArray(t) ? 'pair' : t.prim;\n}\nfunction typeArgs(t) {\n    return ('prim' in t ? t.args : t);\n}\nfunction assertScalarTypesEqual(a, b, field = false) {\n    if (typeID(a) !== typeID(b)) {\n        throw new MichelsonTypeError(a, `types mismatch: ${typeID(a)} != ${typeID(b)}`, undefined);\n    }\n    const ann = [unpackAnnotations(a), unpackAnnotations(b)];\n    if (ann[0].t && ann[1].t && ann[0].t[0] !== ann[1].t[0]) {\n        throw new MichelsonTypeError(a, `${typeID(a)}: type names mismatch: ${ann[0].t[0]} != ${ann[1].t[0]}`, undefined);\n    }\n    if (field && ann[0].f && ann[1].f && ann[0].f[0] !== ann[1].f[0]) {\n        throw new MichelsonTypeError(a, `${typeID(a)}: field names mismatch: ${ann[0].f[0]} != ${ann[1].f}`, undefined);\n    }\n    if (isPairType(a)) {\n        const aArgs = unpackComb('pair', a);\n        const bArgs = unpackComb('pair', b);\n        assertScalarTypesEqual(aArgs.args[0], bArgs.args[0], true);\n        assertScalarTypesEqual(aArgs.args[1], bArgs.args[1], true);\n        return;\n    }\n    switch (a.prim) {\n        case 'option':\n        case 'list':\n        case 'contract':\n        case 'set':\n        case 'ticket':\n            assertScalarTypesEqual(a.args[0], b.args[0]);\n            break;\n        case 'or':\n            assertScalarTypesEqual(a.args[0], b.args[0], true);\n            assertScalarTypesEqual(a.args[1], b.args[1], true);\n            break;\n        case 'lambda':\n        case 'map':\n        case 'big_map':\n            assertScalarTypesEqual(a.args[0], b.args[0]);\n            assertScalarTypesEqual(a.args[1], b.args[1]);\n            break;\n        case 'sapling_state':\n        case 'sapling_transaction':\n            if (parseInt(a.args[0].int, 10) !== parseInt(b.args[0].int, 10)) {\n                throw new MichelsonTypeError(a, `${typeID(a)}: type argument mismatch: ${a.args[0].int} != ${b.args[0].int}`, undefined);\n            }\n    }\n}\nfunction assertStacksEqual(a, b) {\n    if (a.length !== b.length) {\n        throw new MichelsonTypeError(a, `stack length mismatch: ${a.length} != ${b.length}`, undefined);\n    }\n    for (let i = 0; i < a.length; i++) {\n        assertScalarTypesEqual(a[i], b[i]);\n    }\n}\nfunction assertTypeAnnotationsValid(t, field = false) {\n    var _a, _b, _c;\n    if (!Array.isArray(t)) {\n        const ann = unpackAnnotations(t);\n        if ((((_a = ann.t) === null || _a === void 0 ? void 0 : _a.length) || 0) > 1) {\n            throw new MichelsonTypeError(t, `${t.prim}: at most one type annotation allowed: ${t.annots}`, undefined);\n        }\n        if (field) {\n            if ((((_b = ann.f) === null || _b === void 0 ? void 0 : _b.length) || 0) > 1) {\n                throw new MichelsonTypeError(t, `${t.prim}: at most one field annotation allowed: ${t.annots}`, undefined);\n            }\n        }\n        else {\n            if ((((_c = ann.f) === null || _c === void 0 ? void 0 : _c.length) || 0) > 0) {\n                throw new MichelsonTypeError(t, `${t.prim}: field annotations aren't allowed: ${t.annots}`, undefined);\n            }\n        }\n    }\n    if (isPairType(t)) {\n        const args = typeArgs(t);\n        for (const a of args) {\n            assertTypeAnnotationsValid(a, true);\n        }\n        return;\n    }\n    switch (t.prim) {\n        case 'option':\n        case 'list':\n        case 'contract':\n        case 'set':\n            assertTypeAnnotationsValid(t.args[0]);\n            break;\n        case 'or':\n            for (const a of t.args) {\n                assertTypeAnnotationsValid(a, true);\n            }\n            break;\n        case 'lambda':\n        case 'map':\n        case 'big_map':\n            assertTypeAnnotationsValid(t.args[0]);\n            assertTypeAnnotationsValid(t.args[1]);\n    }\n}\n// Simplified version of assertMichelsonInstruction() for previously validated data\nfunction isFunction(d) {\n    if (!Array.isArray(d)) {\n        return false;\n    }\n    for (const v of d) {\n        if (!((Array.isArray(v) && isFunction(v)) || ('prim' in v && isInstruction(v)))) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction assertDataValidInternal(d, t, ctx) {\n    if (isPairType(t)) {\n        if (isPairData(d)) {\n            assertDataListIfAny(d);\n            const dc = unpackComb('Pair', d);\n            const tc = unpackComb('pair', t);\n            assertDataValidInternal(dc.args[0], tc.args[0], ctx);\n            assertDataValidInternal(dc.args[1], tc.args[1], ctx);\n            return;\n        }\n        throw new MichelsonTypeError(t, `pair expected: ${JSON.stringify(d)}`, d);\n    }\n    switch (t.prim) {\n        // Atomic literals\n        case 'int':\n            if ('int' in d && isDecimal(d.int)) {\n                return;\n            }\n            throw new MichelsonTypeError(t, `integer value expected: ${JSON.stringify(d)}`, d);\n        case 'nat':\n        case 'mutez':\n            if ('int' in d && isNatural(d.int)) {\n                return;\n            }\n            throw new MichelsonTypeError(t, `natural value expected: ${JSON.stringify(d)}`, d);\n        case 'string':\n            if ('string' in d) {\n                return;\n            }\n            throw new MichelsonTypeError(t, `string value expected: ${JSON.stringify(d)}`, d);\n        case 'bytes':\n        case 'bls12_381_g1':\n        case 'bls12_381_g2':\n            if ('bytes' in d && parseBytes(d.bytes) !== null) {\n                return;\n            }\n            throw new MichelsonTypeError(t, `bytes value expected: ${JSON.stringify(d)}`, d);\n        case 'bool':\n            if ('prim' in d && (d.prim === 'True' || d.prim === 'False')) {\n                return;\n            }\n            throw new MichelsonTypeError(t, `boolean value expected: ${JSON.stringify(d)}`, d);\n        case 'key_hash':\n            if ('string' in d &&\n                checkDecodeTezosID(d.string, 'ED25519PublicKeyHash', 'SECP256K1PublicKeyHash', 'P256PublicKeyHash') !== null) {\n                return;\n            }\n            else if ('bytes' in d) {\n                try {\n                    decodePublicKeyHashBytes(d);\n                    return;\n                }\n                catch (err) {\n                    // ignore message\n                }\n            }\n            throw new MichelsonTypeError(t, `key hash expected: ${JSON.stringify(d)}`, d);\n        case 'timestamp':\n            if (('string' in d || 'int' in d) && parseDate(d) !== null) {\n                return;\n            }\n            throw new MichelsonTypeError(t, `timestamp expected: ${JSON.stringify(d)}`, d);\n        case 'address':\n            if ('string' in d) {\n                let address = d.string;\n                const ep = d.string.indexOf('%');\n                if (ep >= 0) {\n                    // trim entry point\n                    address = d.string.slice(0, ep);\n                }\n                if (checkDecodeTezosID(address, 'ED25519PublicKeyHash', 'SECP256K1PublicKeyHash', 'P256PublicKeyHash', 'ContractHash', 'TxRollupL2Address', 'RollupAddress') !== null) {\n                    return;\n                }\n            }\n            else if ('bytes' in d) {\n                try {\n                    decodeAddressBytes(d);\n                    return;\n                }\n                catch (err) {\n                    // ignore message\n                }\n            }\n            throw new MichelsonTypeError(t, `address expected: ${JSON.stringify(d)}`, d);\n        case 'key':\n            if ('string' in d &&\n                checkDecodeTezosID(d.string, 'ED25519PublicKey', 'SECP256K1PublicKey', 'P256PublicKey') !==\n                    null) {\n                return;\n            }\n            else if ('bytes' in d) {\n                try {\n                    decodePublicKeyBytes(d);\n                    return;\n                }\n                catch (err) {\n                    // ignore message\n                }\n            }\n            throw new MichelsonTypeError(t, `public key expected: ${JSON.stringify(d)}`, d);\n        case 'unit':\n            if ('prim' in d && d.prim === 'Unit') {\n                return;\n            }\n            throw new MichelsonTypeError(t, `unit value expected: ${JSON.stringify(d)}`, d);\n        case 'signature':\n            if ('bytes' in d ||\n                ('string' in d &&\n                    checkDecodeTezosID(d.string, 'ED25519Signature', 'SECP256K1Signature', 'P256Signature', 'GenericSignature') !== null)) {\n                return;\n            }\n            throw new MichelsonTypeError(t, `signature expected: ${JSON.stringify(d)}`, d);\n        case 'chain_id':\n            if ('bytes' in d || 'string' in d) {\n                const x = 'string' in d ? decodeBase58Check(d.string) : parseBytes(d.bytes);\n                if (x !== null) {\n                    return;\n                }\n            }\n            throw new MichelsonTypeError(t, `chain id expected: ${JSON.stringify(d)}`, d);\n        // Complex types\n        case 'option':\n            if ('prim' in d) {\n                if (d.prim === 'None') {\n                    return;\n                }\n                else if (d.prim === 'Some') {\n                    assertDataValidInternal(d.args[0], t.args[0], ctx);\n                    return;\n                }\n            }\n            throw new MichelsonTypeError(t, `option expected: ${JSON.stringify(d)}`, d);\n        case 'list':\n        case 'set':\n            if (assertDataListIfAny(d)) {\n                //let prev: MichelsonData | undefined;\n                for (const v of d) {\n                    assertDataValidInternal(v, t.args[0], ctx);\n                }\n                return;\n            }\n            throw new MichelsonTypeError(t, `${t.prim} expected: ${JSON.stringify(d)}`, d);\n        case 'or':\n            if ('prim' in d) {\n                if (d.prim === 'Left') {\n                    assertDataValidInternal(d.args[0], t.args[0], ctx);\n                    return;\n                }\n                else if (d.prim === 'Right') {\n                    assertDataValidInternal(d.args[0], t.args[1], ctx);\n                    return;\n                }\n            }\n            throw new MichelsonTypeError(t, `union (or) expected: ${JSON.stringify(d)}`, d);\n        case 'lambda':\n            if (isFunction(d)) {\n                const ret = functionTypeInternal(d, [t.args[0]], ctx);\n                if ('failed' in ret) {\n                    throw new MichelsonTypeError(t, `function is failed with error type: ${ret.failed}`, d);\n                }\n                if (ret.length !== 1) {\n                    throw new MichelsonTypeError(t, 'function must return a value', d);\n                }\n                assertScalarTypesEqual(t.args[1], ret[0]);\n                return;\n            }\n            throw new MichelsonTypeError(t, `function expected: ${JSON.stringify(d)}`, d);\n        case 'map':\n        case 'big_map':\n            if (Array.isArray(d)) {\n                //let prev: MichelsonMapElt | undefined;\n                for (const v of d) {\n                    if (!('prim' in v) || v.prim !== 'Elt') {\n                        throw new MichelsonTypeError(t, `map elements expected: ${JSON.stringify(d)}`, d);\n                    }\n                    assertDataValidInternal(v.args[0], t.args[0], ctx);\n                    assertDataValidInternal(v.args[1], t.args[1], ctx);\n                }\n                return;\n            }\n            throw new MichelsonTypeError(t, `${t.prim} expected: ${JSON.stringify(d)}`, d);\n        case 'bls12_381_fr':\n            if (('int' in d && isDecimal(d.int)) || ('bytes' in d && parseBytes(d.bytes) !== null)) {\n                return;\n            }\n            throw new MichelsonTypeError(t, `BLS12-381 element expected: ${JSON.stringify(d)}`, d);\n        case 'sapling_state':\n            if (Array.isArray(d)) {\n                return;\n            }\n            throw new MichelsonTypeError(t, `sapling state expected: ${JSON.stringify(d)}`, d);\n        case 'ticket':\n            assertDataValidInternal(d, {\n                prim: 'pair',\n                args: [{ prim: 'address' }, t.args[0], { prim: 'nat' }],\n            }, ctx);\n            return;\n        default:\n            throw new MichelsonTypeError(t, `type ${typeID(t)} don't have Michelson literal representation`, d);\n    }\n}\nfunction instructionListType(inst, stack, ctx) {\n    let ret = stack;\n    let s = stack;\n    let i = 0;\n    for (const op of inst) {\n        const ft = functionTypeInternal(op, s, ctx);\n        ret = ft;\n        if ('failed' in ft) {\n            break;\n        }\n        s = ft;\n        i++;\n    }\n    if ('failed' in ret &&\n        ret.level == 0 &&\n        (!('prim' in ret.failed) || ret.failed.prim !== 'never') &&\n        i !== inst.length - 1) {\n        throw new MichelsonInstructionError(inst, ret, 'FAIL must appear in a tail position');\n    }\n    if ((ctx === null || ctx === void 0 ? void 0 : ctx.traceCallback) !== undefined) {\n        const trace = {\n            op: inst,\n            in: stack,\n            out: ret,\n        };\n        ctx.traceCallback(trace);\n    }\n    return 'failed' in ret ? { failed: ret.failed, level: ret.level + 1 } : ret;\n}\nfunction functionTypeInternal(inst, stack, ctx) {\n    const proto = (ctx === null || ctx === void 0 ? void 0 : ctx.protocol) || DefaultProtocol;\n    if (Array.isArray(inst)) {\n        return instructionListType(inst, stack, ctx);\n    }\n    const instruction = inst; // Make it const for type guarding\n    // make sure the stack has enough number of arguments of specific types\n    function args(n, ...typeIds) {\n        if (stack.length < typeIds.length + n) {\n            throw new MichelsonInstructionError(instruction, stack, `${instruction.prim}: stack must have at least ${typeIds.length} element(s)`);\n        }\n        let i = n;\n        for (const ids of typeIds) {\n            if (ids !== null && ids.length !== 0) {\n                let ii = 0;\n                while (ii < ids.length && ids[ii] !== typeID(stack[i])) {\n                    ii++;\n                }\n                if (ii === ids.length) {\n                    throw new MichelsonInstructionError(instruction, stack, `${instruction.prim}: stack type mismatch: [${i}] expected to be ${ids}, got ${typeID(stack[i])} instead`);\n                }\n            }\n            i++;\n        }\n        return stack.slice(n, typeIds.length + n);\n    }\n    function rethrow(fn) {\n        return (...args) => {\n            try {\n                return fn(...args);\n            }\n            catch (err) {\n                if (err instanceof MichelsonError) {\n                    throw new MichelsonInstructionError(instruction, stack, err.message);\n                }\n                else {\n                    throw err;\n                }\n            }\n        };\n    }\n    function rethrowTypeGuard(fn) {\n        return (arg) => {\n            try {\n                return fn(arg);\n            }\n            catch (err) {\n                if (err instanceof MichelsonError) {\n                    throw new MichelsonInstructionError(instruction, stack, err.message);\n                }\n                else {\n                    throw err;\n                }\n            }\n        };\n    }\n    const argAnn = rethrow(unpackAnnotations);\n    const ensureStacksEqual = rethrow(assertStacksEqual);\n    const ensureTypesEqual = rethrow(assertScalarTypesEqual);\n    const ensureComparableType = rethrowTypeGuard(assertMichelsonComparableType);\n    const ensurePackableType = rethrowTypeGuard(assertMichelsonPackableType);\n    const ensureStorableType = rethrowTypeGuard(assertMichelsonStorableType);\n    const ensurePushableType = rethrowTypeGuard(assertMichelsonPushableType);\n    const ensureBigMapStorableType = rethrowTypeGuard(assertMichelsonBigMapStorableType);\n    // unpack instruction annotations and assert their maximum number\n    function instructionAnn(num, opt) {\n        const a = argAnn(instruction, Object.assign(Object.assign({}, opt), { emptyFields: num.f !== undefined && num.f > 1, emptyVar: num.v !== undefined && num.v > 1 }));\n        const assertNum = (a, n, type) => {\n            if (a && a.length > (n || 0)) {\n                throw new MichelsonInstructionError(instruction, stack, `${instruction.prim}: at most ${n || 0} ${type} annotations allowed`);\n            }\n        };\n        assertNum(a.f, num.f, 'field');\n        assertNum(a.t, num.t, 'type');\n        assertNum(a.v, num.v, 'variable');\n        return a;\n    }\n    // also keeps annotation class if null is provided\n    function annotate(tt, a) {\n        const tx = tt;\n        const t = Array.isArray(tx) ? { prim: 'pair', args: tx } : tx;\n        const src = argAnn(t);\n        const ann = a.v !== undefined || a.t !== undefined || a.f !== undefined\n            ? [\n                ...((a.v === null ? src.v : a.v) || []),\n                ...((a.t === null ? src.t : a.t) || []),\n                ...((a.f === null ? src.f : a.f) || []),\n            ]\n            : undefined;\n        const rest = __rest(t, [\"annots\"]);\n        return Object.assign(Object.assign({}, rest), (ann && ann.length !== 0 && { annots: ann }));\n    }\n    // shortcut to copy at most one variable annotation from the instruction to the type\n    function annotateVar(t, def) {\n        const ia = instructionAnn({ v: 1 });\n        return annotate(t, {\n            v: ia.v !== undefined ? ia.v : def !== undefined ? [def] : null,\n            t: null,\n        });\n    }\n    // annotate CAR/CDR/UNPAIR/GET\n    function annotateField(arg, field, insAnn, n, defField) {\n        var _a, _b, _c, _d;\n        const fieldAnn = (_a = argAnn(field).f) === null || _a === void 0 ? void 0 : _a[0]; // field's field annotation\n        const insFieldAnn = (_b = insAnn.f) === null || _b === void 0 ? void 0 : _b[n];\n        if (insFieldAnn !== undefined &&\n            insFieldAnn !== '%' &&\n            fieldAnn !== undefined &&\n            insFieldAnn !== fieldAnn) {\n            throw new MichelsonInstructionError(instruction, stack, `${instruction.prim}: field names doesn't match: ${insFieldAnn} !== ${fieldAnn}`);\n        }\n        const insVarAnn = (_c = insAnn.v) === null || _c === void 0 ? void 0 : _c[n]; // nth instruction's variable annotation\n        const varAnn = (_d = argAnn(arg).v) === null || _d === void 0 ? void 0 : _d[0]; // instruction argument's variable annotation\n        return annotate(field, {\n            t: null,\n            v: insVarAnn\n                ? insVarAnn === '@%'\n                    ? fieldAnn\n                        ? ['@' + fieldAnn.slice(1)]\n                        : undefined\n                    : insVarAnn === '@%%'\n                        ? varAnn\n                            ? ['@' + varAnn.slice(1) + '.' + (fieldAnn ? fieldAnn.slice(1) : defField)]\n                            : fieldAnn\n                                ? ['@' + fieldAnn.slice(1)]\n                                : undefined\n                        : [insVarAnn]\n                : null,\n        });\n    }\n    // comb helper functions\n    function getN(src, n, i = n) {\n        const p = unpackComb('pair', src);\n        if (i === 1) {\n            return [p.args[0]];\n        }\n        else if (i === 2) {\n            return p.args;\n        }\n        const right = p.args[1];\n        if (isPairType(right)) {\n            return [p.args[0], ...getN(right, n, i - 1)];\n        }\n        else {\n            throw new MichelsonInstructionError(instruction, stack, `${instruction.prim}: at least ${n} fields are expected`);\n        }\n    }\n    function getNth(src, n, i = n) {\n        if (i === 0) {\n            return src;\n        }\n        const p = unpackComb('pair', src);\n        if (i === 1) {\n            return p.args[0];\n        }\n        const right = p.args[1];\n        if (isPairType(right)) {\n            return getNth(right, n, i - 2);\n        }\n        else if (i === 2) {\n            return right;\n        }\n        throw new MichelsonInstructionError(instruction, stack, `${instruction.prim}: at least ${n + 1} fields are expected`);\n    }\n    function updateNth(src, x, n, i = n) {\n        if (i === 0) {\n            return x;\n        }\n        const p = unpackComb('pair', src);\n        if (i === 1) {\n            return Object.assign(Object.assign({}, p), { args: [x, p.args[1]] });\n        }\n        const right = p.args[1];\n        if (isPairType(right)) {\n            return Object.assign(Object.assign({}, p), { args: [p.args[0], updateNth(right, x, n, i - 2)] });\n        }\n        else if (i === 2) {\n            return Object.assign(Object.assign({}, p), { args: [p.args[0], x] });\n        }\n        throw new MichelsonInstructionError(instruction, stack, `${instruction.prim}: at least ${n + 1} fields are expected`);\n    }\n    const varSuffix = (a, suffix) => [\n        '@' + (a.v ? a.v[0].slice(1) + '.' : '') + suffix,\n    ];\n    function branchType(br0, br1) {\n        if ('failed' in br0 || 'failed' in br1) {\n            return 'failed' in br0 ? br1 : br0;\n        }\n        else {\n            ensureStacksEqual(br0, br1);\n            return br0;\n        }\n    }\n    const retStack = ((instruction) => {\n        var _a, _b, _c, _d, _e;\n        switch (instruction.prim) {\n            case 'DUP': {\n                const n = instruction.args ? parseInt(instruction.args[0].int, 10) : 1;\n                if (n === 0) {\n                    throw new MichelsonInstructionError(instruction, stack, 'DUP 0 is forbidden');\n                }\n                const s = args(n - 1, null)[0];\n                if (typeID(s) === 'ticket') {\n                    throw new MichelsonInstructionError(instruction, stack, \"ticket can't be DUPed\");\n                }\n                return [s, ...stack];\n            }\n            case 'SWAP': {\n                const s = args(0, null, null);\n                instructionAnn({});\n                return [s[1], s[0], ...stack.slice(2)];\n            }\n            case 'SOME':\n                return [\n                    annotate({ prim: 'option', args: [args(0, null)[0]] }, instructionAnn({ t: 1, v: 1 })),\n                    ...stack.slice(1),\n                ];\n            case 'UNIT':\n                return [annotate({ prim: 'unit' }, instructionAnn({ v: 1, t: 1 })), ...stack];\n            case 'PAIR': {\n                const n = instruction.args ? parseInt(instruction.args[0].int, 10) : 2;\n                if (n < 2) {\n                    throw new MichelsonInstructionError(instruction, stack, `PAIR ${n} is forbidden`);\n                }\n                const s = args(0, ...new Array(n).fill(null));\n                const ia = instructionAnn({ f: n, t: 1, v: 1 }, { specialFields: true });\n                const trim = (s) => {\n                    const i = s.lastIndexOf('.');\n                    return s.slice(i > 0 ? i + 1 : 1);\n                };\n                const retArgs = s.map((v, i) => {\n                    var _a;\n                    const va = argAnn(v);\n                    const f = ia.f && ia.f.length > i && ia.f[i] !== '%'\n                        ? ia.f[i] === '%@'\n                            ? va.v\n                                ? ['%' + trim(((_a = va.v) === null || _a === void 0 ? void 0 : _a[0]) || '')]\n                                : undefined\n                            : [ia.f[i]]\n                        : undefined;\n                    return annotate(v, { v: null, t: null, f });\n                });\n                return [\n                    annotate({\n                        prim: 'pair',\n                        args: retArgs,\n                    }, { t: ia.t, v: ia.v }),\n                    ...stack.slice(n),\n                ];\n            }\n            case 'UNPAIR': {\n                const n = instruction.args ? parseInt(instruction.args[0].int, 10) : 2;\n                if (n < 2) {\n                    throw new MichelsonInstructionError(instruction, stack, `UNPAIR ${n} is forbidden`);\n                }\n                const s = args(0, ['pair'])[0];\n                const ia = instructionAnn({ f: 2, v: 2 }, { specialVar: true });\n                const fields = getN(s, n);\n                return [\n                    ...fields.map((field, i) => annotateField(s, field, ia, i, i === 0 ? 'car' : 'cdr')),\n                    ...stack.slice(1),\n                ];\n            }\n            case 'CAR':\n            case 'CDR': {\n                const s = unpackComb('pair', args(0, ['pair'])[0]);\n                const field = s.args[instruction.prim === 'CAR' ? 0 : 1];\n                const ia = instructionAnn({ f: 1, v: 1 }, { specialVar: true });\n                return [\n                    annotateField(s, field, ia, 0, instruction.prim.toLocaleLowerCase()),\n                    ...stack.slice(1),\n                ];\n            }\n            case 'CONS': {\n                const s = args(0, null, ['list']);\n                ensureTypesEqual(s[0], s[1].args[0]);\n                return [annotateVar({ prim: 'list', args: [s[1].args[0]] }), ...stack.slice(2)];\n            }\n            case 'SIZE':\n                args(0, ['string', 'list', 'set', 'map', 'bytes']);\n                return [annotateVar({ prim: 'nat' }), ...stack.slice(1)];\n            case 'MEM': {\n                const s = args(0, null, ['set', 'map', 'big_map']);\n                ensureComparableType(s[0]);\n                ensureTypesEqual(s[0], s[1].args[0]);\n                return [annotateVar({ prim: 'bool' }), ...stack.slice(2)];\n            }\n            case 'GET':\n                if (instruction.args) {\n                    // comb operation\n                    const n = parseInt(instruction.args[0].int, 10);\n                    const s = args(0, ['pair'])[0];\n                    return [annotateVar(getNth(s, n)), ...stack.slice(1)];\n                }\n                else {\n                    // map operation\n                    const s = args(0, null, ['map', 'big_map']);\n                    ensureComparableType(s[0]);\n                    ensureTypesEqual(s[0], s[1].args[0]);\n                    return [annotateVar({ prim: 'option', args: [s[1].args[1]] }), ...stack.slice(2)];\n                }\n            case 'UPDATE':\n                if (instruction.args) {\n                    // comb operation\n                    const n = parseInt(instruction.args[0].int, 10);\n                    const s = args(0, null, ['pair']);\n                    return [annotateVar(updateNth(s[1], s[0], n)), ...stack.slice(2)];\n                }\n                else {\n                    // map operation\n                    const s0 = args(0, null, ['bool', 'option']);\n                    ensureComparableType(s0[0]);\n                    if (s0[1].prim === 'bool') {\n                        const s1 = args(2, ['set']);\n                        ensureTypesEqual(s0[0], s1[0].args[0]);\n                        return [\n                            annotateVar({\n                                prim: 'set',\n                                args: [annotate(s0[0], { t: null })],\n                            }),\n                            ...stack.slice(3),\n                        ];\n                    }\n                    const s1 = args(2, ['map', 'big_map']);\n                    ensureTypesEqual(s0[0], s1[0].args[0]);\n                    if (s1[0].prim === 'map') {\n                        return [\n                            annotateVar({\n                                prim: 'map',\n                                args: [annotate(s0[0], { t: null }), annotate(s0[1].args[0], { t: null })],\n                            }),\n                            ...stack.slice(3),\n                        ];\n                    }\n                    ensureBigMapStorableType(s0[1].args[0]);\n                    return [\n                        annotateVar({\n                            prim: 'big_map',\n                            args: [annotate(s0[0], { t: null }), annotate(s0[1].args[0], { t: null })],\n                        }),\n                        ...stack.slice(3),\n                    ];\n                }\n            case 'GET_AND_UPDATE': {\n                const ia = instructionAnn({ v: 2 });\n                const s = args(0, null, ['option'], ['map', 'big_map']);\n                ensureComparableType(s[0]);\n                ensureTypesEqual(s[0], s[2].args[0]);\n                ensureTypesEqual(s[1].args[0], s[2].args[1]);\n                const va = (_a = ia.v) === null || _a === void 0 ? void 0 : _a.map((v) => (v !== '@' ? [v] : undefined));\n                if (s[2].prim === 'map') {\n                    return [\n                        annotate({ prim: 'option', args: [s[2].args[1]] }, { v: va === null || va === void 0 ? void 0 : va[0] }),\n                        annotate({\n                            prim: 'map',\n                            args: [annotate(s[0], { t: null }), annotate(s[1].args[0], { t: null })],\n                        }, { v: va === null || va === void 0 ? void 0 : va[1] }),\n                        ...stack.slice(3),\n                    ];\n                }\n                ensureBigMapStorableType(s[1].args[0]);\n                return [\n                    annotate({ prim: 'option', args: [s[2].args[1]] }, { v: va === null || va === void 0 ? void 0 : va[0] }),\n                    annotate({\n                        prim: 'big_map',\n                        args: [annotate(s[0], { t: null }), annotate(s[1].args[0], { t: null })],\n                    }, { v: va === null || va === void 0 ? void 0 : va[1] }),\n                    ...stack.slice(3),\n                ];\n            }\n            case 'EXEC': {\n                const s = args(0, null, ['lambda']);\n                ensureTypesEqual(s[0], s[1].args[0]);\n                return [annotateVar(s[1].args[1]), ...stack.slice(2)];\n            }\n            case 'APPLY': {\n                const s = args(0, null, ['lambda']);\n                ensureStorableType(s[0]);\n                ensurePushableType(s[0]);\n                if (!isPairType(s[1].args[0])) {\n                    throw new MichelsonInstructionError(instruction, stack, `${instruction.prim}: function's argument must be a pair: ${typeID(s[1].args[0])}`);\n                }\n                const pt = s[1].args[0];\n                ensureTypesEqual(s[0], typeArgs(pt)[0]);\n                return [\n                    annotateVar({ prim: 'lambda', args: [typeArgs(pt)[1], s[1].args[1]] }),\n                    ...stack.slice(2),\n                ];\n            }\n            case 'FAILWITH': {\n                const s = args(0, null)[0];\n                if (!ProtoInferiorTo(proto, Protocol.PtEdo2Zk)) {\n                    ensurePackableType(s);\n                }\n                return { failed: s, level: 0 };\n            }\n            case 'NEVER':\n                args(0, ['never']);\n                return { failed: { prim: 'never' }, level: 0 };\n            case 'RENAME':\n                return [annotateVar(args(0, null)[0]), ...stack.slice(1)];\n            case 'CONCAT': {\n                const s0 = args(0, ['string', 'list', 'bytes']);\n                if (s0[0].prim === 'list') {\n                    if (typeID(s0[0].args[0]) !== 'string' && typeID(s0[0].args[0]) !== 'bytes') {\n                        throw new MichelsonInstructionError(instruction, stack, `${instruction.prim}: can't concatenate list of ${typeID(s0[0].args[0])}'s`);\n                    }\n                    return [annotateVar(s0[0].args[0]), ...stack.slice(1)];\n                }\n                const s1 = args(1, ['string', 'bytes']);\n                if (s0[0].prim !== s1[0].prim) {\n                    throw new MichelsonInstructionError(instruction, stack, `${instruction.prim}: can't concatenate ${s0[0].prim} with ${s1[0].prim}`);\n                }\n                return [annotateVar(s1[0]), ...stack.slice(2)];\n            }\n            case 'SLICE':\n                return [\n                    annotateVar({ prim: 'option', args: [args(0, ['nat'], ['nat'], ['string', 'bytes'])[2]] }, '@slice'),\n                    ...stack.slice(3),\n                ];\n            case 'PACK': {\n                const s = args(0, null)[0];\n                ensurePackableType(s);\n                return [annotateVar({ prim: 'bytes' }, '@packed'), ...stack.slice(1)];\n            }\n            case 'ADD': {\n                const s = args(0, ['nat', 'int', 'timestamp', 'mutez', 'bls12_381_g1', 'bls12_381_g2', 'bls12_381_fr'], ['nat', 'int', 'timestamp', 'mutez', 'bls12_381_g1', 'bls12_381_g2', 'bls12_381_fr']);\n                if ((s[0].prim === 'nat' && s[1].prim === 'int') ||\n                    (s[0].prim === 'int' && s[1].prim === 'nat')) {\n                    return [annotateVar({ prim: 'int' }), ...stack.slice(2)];\n                }\n                else if ((s[0].prim === 'int' && s[1].prim === 'timestamp') ||\n                    (s[0].prim === 'timestamp' && s[1].prim === 'int')) {\n                    return [annotateVar({ prim: 'timestamp' }), ...stack.slice(2)];\n                }\n                else if ((s[0].prim === 'int' ||\n                    s[0].prim === 'nat' ||\n                    s[0].prim === 'mutez' ||\n                    s[0].prim === 'bls12_381_g1' ||\n                    s[0].prim === 'bls12_381_g2' ||\n                    s[0].prim === 'bls12_381_fr') &&\n                    s[0].prim === s[1].prim) {\n                    return [annotateVar(s[0]), ...stack.slice(2)];\n                }\n                throw new MichelsonInstructionError(instruction, stack, `${instruction.prim}: can't add ${s[0].prim} to ${s[1].prim}`);\n            }\n            case 'SUB': {\n                const s = ProtoInferiorTo(proto, Protocol.PsiThaCa)\n                    ? args(0, ['nat', 'int', 'timestamp', 'mutez'], ['nat', 'int', 'timestamp', 'mutez'])\n                    : args(0, ['nat', 'int', 'timestamp'], ['nat', 'int', 'timestamp']);\n                if (((s[0].prim === 'nat' || s[0].prim === 'int') &&\n                    (s[1].prim === 'nat' || s[1].prim === 'int')) ||\n                    (s[0].prim === 'timestamp' && s[1].prim === 'timestamp')) {\n                    return [annotateVar({ prim: 'int' }), ...stack.slice(2)];\n                }\n                else if (s[0].prim === 'timestamp' && s[1].prim === 'int') {\n                    return [annotateVar({ prim: 'timestamp' }), ...stack.slice(2)];\n                }\n                else if (s[0].prim === 'mutez' && s[1].prim === 'mutez') {\n                    return [annotateVar({ prim: 'mutez' }), ...stack.slice(2)];\n                }\n                throw new MichelsonInstructionError(instruction, stack, `${instruction.prim}: can't subtract ${s[0].prim} from ${s[1].prim}`);\n            }\n            case 'SUB_MUTEZ': {\n                args(0, ['mutez'], ['mutez']);\n                return [annotateVar({ prim: 'option', args: [{ prim: 'mutez' }] }), ...stack.slice(2)];\n            }\n            case 'MUL': {\n                const s = args(0, ['nat', 'int', 'mutez', 'bls12_381_g1', 'bls12_381_g2', 'bls12_381_fr'], ['nat', 'int', 'mutez', 'bls12_381_g1', 'bls12_381_g2', 'bls12_381_fr']);\n                if ((s[0].prim === 'nat' && s[1].prim === 'int') ||\n                    (s[0].prim === 'int' && s[1].prim === 'nat')) {\n                    return [annotateVar({ prim: 'int' }), ...stack.slice(2)];\n                }\n                else if ((s[0].prim === 'nat' && s[1].prim === 'mutez') ||\n                    (s[0].prim === 'mutez' && s[1].prim === 'nat')) {\n                    return [annotateVar({ prim: 'mutez' }), ...stack.slice(2)];\n                }\n                else if (((s[0].prim === 'bls12_381_g1' ||\n                    s[0].prim === 'bls12_381_g2' ||\n                    s[0].prim === 'bls12_381_fr') &&\n                    s[1].prim === 'bls12_381_fr') ||\n                    ((s[0].prim === 'nat' || s[0].prim === 'int') && s[0].prim === s[1].prim)) {\n                    return [annotateVar(s[0]), ...stack.slice(2)];\n                }\n                else if (((s[0].prim === 'nat' || s[0].prim === 'int') && s[1].prim === 'bls12_381_fr') ||\n                    ((s[1].prim === 'nat' || s[1].prim === 'int') && s[0].prim === 'bls12_381_fr')) {\n                    return [annotateVar({ prim: 'bls12_381_fr' }), ...stack.slice(2)];\n                }\n                throw new MichelsonInstructionError(instruction, stack, `${instruction.prim}: can't multiply ${s[0].prim} by ${s[1].prim}`);\n            }\n            case 'EDIV': {\n                const res = (a, b) => ({\n                    prim: 'option',\n                    args: [{ prim: 'pair', args: [{ prim: a }, { prim: b }] }],\n                });\n                const s = args(0, ['nat', 'int', 'mutez'], ['nat', 'int', 'mutez']);\n                if (s[0].prim === 'nat' && s[1].prim === 'nat') {\n                    return [annotateVar(res('nat', 'nat')), ...stack.slice(2)];\n                }\n                else if ((s[0].prim === 'nat' || s[0].prim === 'int') &&\n                    (s[1].prim === 'nat' || s[1].prim === 'int')) {\n                    return [annotateVar(res('int', 'nat')), ...stack.slice(2)];\n                }\n                else if (s[0].prim === 'mutez' && s[1].prim === 'nat') {\n                    return [annotateVar(res('mutez', 'mutez')), ...stack.slice(2)];\n                }\n                else if (s[0].prim === 'mutez' && s[1].prim === 'mutez') {\n                    return [annotateVar(res('nat', 'mutez')), ...stack.slice(2)];\n                }\n                throw new MichelsonInstructionError(instruction, stack, `${instruction.prim}: can't euclideally divide ${s[0].prim} by ${s[1].prim}`);\n            }\n            case 'ABS':\n                args(0, ['int']);\n                return [annotateVar({ prim: 'nat' }), ...stack.slice(1)];\n            case 'ISNAT':\n                args(0, ['int']);\n                return [annotateVar({ prim: 'option', args: [{ prim: 'nat' }] }), ...stack.slice(1)];\n            case 'INT':\n                args(0, ['nat', 'bls12_381_fr', 'bytes']);\n                return [annotateVar({ prim: 'int' }), ...stack.slice(1)];\n            case 'BYTES':\n                args(0, ['nat', 'int']);\n                return [annotateVar({ prim: 'bytes' }), ...stack.slice(1)];\n            case 'NAT':\n                args(0, ['bytes']);\n                return [annotateVar({ prim: 'nat' }), ...stack.slice(1)];\n            case 'NEG': {\n                const s = args(0, ['nat', 'int', 'bls12_381_g1', 'bls12_381_g2', 'bls12_381_fr'])[0];\n                if (s.prim === 'nat' || s.prim === 'int') {\n                    return [annotateVar({ prim: 'int' }), ...stack.slice(1)];\n                }\n                return [annotateVar(s), ...stack.slice(1)];\n            }\n            case 'LSL':\n            case 'LSR':\n                args(0, ['nat', 'bytes'], ['nat', 'bytes']);\n                return [annotateVar({ prim: 'nat' }), ...stack.slice(2)];\n            case 'OR':\n            case 'XOR': {\n                const s = args(0, ['nat', 'bytes', 'bool'], ['nat', 'bytes', 'bool']);\n                if (s[0].prim !== s[1].prim) {\n                    throw new MichelsonInstructionError(instruction, stack, `${instruction.prim}: both arguments must be of the same type: ${s[0].prim}, ${s[1].prim}`);\n                }\n                return [annotateVar(s[1]), ...stack.slice(2)];\n            }\n            case 'AND': {\n                const s = args(0, ['nat', 'bytes', 'bool', 'int'], ['nat', 'bytes', 'bool']);\n                if ((s[0].prim !== 'int' || s[1].prim !== 'nat') && s[0].prim !== s[1].prim) {\n                    throw new MichelsonInstructionError(instruction, stack, `${instruction.prim}: both arguments must be of the same type: ${s[0].prim}, ${s[1].prim}`);\n                }\n                return [annotateVar(s[1]), ...stack.slice(2)];\n            }\n            case 'NOT': {\n                const s = args(0, ['nat', 'bytes', 'bool', 'int'])[0];\n                if (s.prim === 'bool') {\n                    return [annotateVar({ prim: 'bool' }), ...stack.slice(1)];\n                }\n                return [annotateVar({ prim: 'int' }), ...stack.slice(1)];\n            }\n            case 'COMPARE': {\n                const s = args(0, null, null);\n                ensureComparableType(s[0]);\n                ensureComparableType(s[1]);\n                return [annotateVar({ prim: 'int' }), ...stack.slice(2)];\n            }\n            case 'EQ':\n            case 'NEQ':\n            case 'LT':\n            case 'GT':\n            case 'LE':\n            case 'GE':\n                args(0, ['int']);\n                return [annotateVar({ prim: 'bool' }), ...stack.slice(1)];\n            case 'SELF': {\n                if ((ctx === null || ctx === void 0 ? void 0 : ctx.contract) === undefined) {\n                    throw new MichelsonInstructionError(instruction, stack, `${instruction.prim}: contract required`);\n                }\n                const ia = instructionAnn({ f: 1, v: 1 });\n                const ep = contractEntryPoint(ctx.contract, (_b = ia.f) === null || _b === void 0 ? void 0 : _b[0]);\n                if (ep === null) {\n                    throw new MichelsonInstructionError(instruction, stack, `${instruction.prim}: contract has no entrypoint ${ep}`);\n                }\n                return [\n                    annotate({ prim: 'contract', args: [ep] }, { v: ia.v ? ia.v : ['@self'] }),\n                    ...stack,\n                ];\n            }\n            case 'TRANSFER_TOKENS': {\n                const s = args(0, null, ['mutez'], ['contract']);\n                ensureTypesEqual(s[0], s[2].args[0]);\n                return [annotateVar({ prim: 'operation' }), ...stack.slice(3)];\n            }\n            case 'SET_DELEGATE': {\n                const s = args(0, ['option'])[0];\n                if (typeID(s.args[0]) !== 'key_hash') {\n                    throw new MichelsonInstructionError(instruction, stack, `${instruction.prim}: key hash expected: ${typeID(s.args[0])}`);\n                }\n                return [annotateVar({ prim: 'operation' }), ...stack.slice(1)];\n            }\n            case 'IMPLICIT_ACCOUNT':\n                args(0, ['key_hash']);\n                return [annotateVar({ prim: 'contract', args: [{ prim: 'unit' }] }), ...stack.slice(1)];\n            case 'NOW':\n                return [annotateVar({ prim: 'timestamp' }, '@now'), ...stack];\n            case 'AMOUNT':\n                return [annotateVar({ prim: 'mutez' }, '@amount'), ...stack];\n            case 'BALANCE':\n                return [annotateVar({ prim: 'mutez' }, '@balance'), ...stack];\n            case 'CHECK_SIGNATURE':\n                args(0, ['key'], ['signature'], ['bytes']);\n                return [annotateVar({ prim: 'bool' }), ...stack.slice(3)];\n            case 'BLAKE2B':\n            case 'SHA256':\n            case 'SHA512':\n            case 'KECCAK':\n            case 'SHA3':\n                args(0, ['bytes']);\n                return [annotateVar({ prim: 'bytes' }), ...stack.slice(1)];\n            case 'HASH_KEY':\n                args(0, ['key']);\n                return [annotateVar({ prim: 'key_hash' }), ...stack.slice(1)];\n            case 'SOURCE':\n                return [annotateVar({ prim: 'address' }, '@source'), ...stack];\n            case 'SENDER':\n                return [annotateVar({ prim: 'address' }, '@sender'), ...stack];\n            case 'ADDRESS': {\n                const s = args(0, ['contract'])[0];\n                const ia = instructionAnn({ v: 1 });\n                return [\n                    annotate({ prim: 'address', [refContract]: s }, { v: ia.v ? ia.v : varSuffix(argAnn(s), 'address') }),\n                    ...stack.slice(1),\n                ];\n            }\n            case 'SELF_ADDRESS': {\n                const addr = { prim: 'address' };\n                if ((ctx === null || ctx === void 0 ? void 0 : ctx.contract) !== undefined) {\n                    addr[refContract] = {\n                        prim: 'contract',\n                        args: [contractSection(ctx.contract, 'parameter').args[0]],\n                    };\n                }\n                return [annotateVar(addr, '@address'), ...stack];\n            }\n            case 'CHAIN_ID':\n                return [annotateVar({ prim: 'chain_id' }), ...stack];\n            case 'DROP': {\n                instructionAnn({});\n                const n = instruction.args !== undefined ? parseInt(instruction.args[0].int, 10) : 1;\n                args(n - 1, null);\n                return stack.slice(n);\n            }\n            case 'DIG': {\n                instructionAnn({});\n                const n = parseInt(instruction.args[0].int, 10);\n                return [args(n, null)[0], ...stack.slice(0, n), ...stack.slice(n + 1)];\n            }\n            case 'DUG': {\n                instructionAnn({});\n                const n = parseInt(instruction.args[0].int, 10);\n                return [...stack.slice(1, n + 1), args(0, null)[0], ...stack.slice(n + 1)];\n            }\n            case 'NONE':\n                assertTypeAnnotationsValid(instruction.args[0]);\n                return [\n                    annotate({ prim: 'option', args: [instruction.args[0]] }, instructionAnn({ t: 1, v: 1 })),\n                    ...stack,\n                ];\n            case 'LEFT':\n            case 'RIGHT': {\n                const s = args(0, null)[0];\n                const ia = instructionAnn({ f: 2, t: 1, v: 1 }, { specialFields: true });\n                const va = argAnn(s);\n                const children = [\n                    annotate(s, {\n                        t: null,\n                        v: null,\n                        f: ia.f && ia.f.length > 0 && ia.f[0] !== '%'\n                            ? ia.f[0] === '%@'\n                                ? va.v\n                                    ? ['%' + va.v[0].slice(1)]\n                                    : undefined\n                                : ia.f\n                            : undefined,\n                    }),\n                    annotate(instruction.args[0], {\n                        t: null,\n                        f: ia.f && ia.f.length > 1 && ia.f[1] !== '%' ? ia.f : undefined,\n                    }),\n                ];\n                return [\n                    annotate({\n                        prim: 'or',\n                        args: instruction.prim === 'LEFT' ? children : [children[1], children[0]],\n                    }, { t: ia.t, v: ia.v }),\n                    ...stack.slice(1),\n                ];\n            }\n            case 'NIL':\n                assertTypeAnnotationsValid(instruction.args[0]);\n                return [\n                    annotate({ prim: 'list', args: [instruction.args[0]] }, instructionAnn({ t: 1, v: 1 })),\n                    ...stack,\n                ];\n            case 'UNPACK':\n                args(0, ['bytes']);\n                assertTypeAnnotationsValid(instruction.args[0]);\n                return [\n                    annotateVar({ prim: 'option', args: [instruction.args[0]] }, '@unpacked'),\n                    ...stack.slice(1),\n                ];\n            case 'CONTRACT': {\n                const s = args(0, ['address'])[0];\n                assertTypeAnnotationsValid(instruction.args[0]);\n                const ia = instructionAnn({ v: 1, f: 1 });\n                const contract = s[refContract];\n                if (contract !== undefined) {\n                    const ep = contractEntryPoint(contract, (_c = ia.f) === null || _c === void 0 ? void 0 : _c[0]);\n                    if (ep === null) {\n                        throw new MichelsonInstructionError(instruction, stack, `${instruction.prim}: contract has no entrypoint ${ep}`);\n                    }\n                    ensureTypesEqual(ep, instruction.args[0]);\n                }\n                return [\n                    annotate({ prim: 'option', args: [{ prim: 'contract', args: [instruction.args[0]] }] }, { v: ia.v ? ia.v : varSuffix(argAnn(s), 'contract') }),\n                    ...stack.slice(1),\n                ];\n            }\n            case 'CAST': {\n                instructionAnn({});\n                const s = args(0, null)[0];\n                assertTypeAnnotationsValid(instruction.args[0]);\n                ensureTypesEqual(instruction.args[0], s);\n                return [instruction.args[0], ...stack.slice(1)];\n            }\n            case 'IF_NONE': {\n                instructionAnn({});\n                const s = args(0, ['option'])[0];\n                const tail = stack.slice(1);\n                const br0 = functionTypeInternal(instruction.args[0], tail, ctx);\n                const br1 = functionTypeInternal(instruction.args[1], [annotate(s.args[0], { t: null, v: varSuffix(argAnn(s), 'some') }), ...tail], ctx);\n                return branchType(br0, br1);\n            }\n            case 'IF_LEFT': {\n                instructionAnn({});\n                const s = args(0, ['or'])[0];\n                const va = argAnn(s);\n                const lefta = argAnn(s.args[0]);\n                const righta = argAnn(s.args[1]);\n                const tail = stack.slice(1);\n                const br0 = functionTypeInternal(instruction.args[0], [\n                    annotate(s.args[0], {\n                        t: null,\n                        v: varSuffix(va, lefta.f ? lefta.f[0].slice(1) : 'left'),\n                    }),\n                    ...tail,\n                ], ctx);\n                const br1 = functionTypeInternal(instruction.args[1], [\n                    annotate(s.args[1], {\n                        t: null,\n                        v: varSuffix(va, righta.f ? righta.f[0].slice(1) : 'right'),\n                    }),\n                    ...tail,\n                ], ctx);\n                return branchType(br0, br1);\n            }\n            case 'IF_CONS': {\n                instructionAnn({});\n                const s = args(0, ['list'])[0];\n                const va = argAnn(s);\n                const tail = stack.slice(1);\n                const br0 = functionTypeInternal(instruction.args[0], [\n                    annotate(s.args[0], { t: null, v: varSuffix(va, 'hd') }),\n                    annotate(s, { t: null, v: varSuffix(va, 'tl') }),\n                    ...tail,\n                ], ctx);\n                const br1 = functionTypeInternal(instruction.args[1], tail, ctx);\n                return branchType(br0, br1);\n            }\n            case 'IF': {\n                instructionAnn({});\n                args(0, ['bool']);\n                const tail = stack.slice(1);\n                const br0 = functionTypeInternal(instruction.args[0], tail, ctx);\n                const br1 = functionTypeInternal(instruction.args[1], tail, ctx);\n                return branchType(br0, br1);\n            }\n            case 'MAP': {\n                const s = args(0, ['list', 'map', 'option'])[0];\n                const tail = stack.slice(1);\n                const elt = s.prim === 'map' ? { prim: 'pair', args: s.args } : s.args[0];\n                const body = functionTypeInternal(instruction.args[0], [annotate(elt, { t: null, v: varSuffix(argAnn(s), 'elt') }), ...tail], ctx);\n                if ('failed' in body) {\n                    if (!('prim' in body.failed) || body.failed.prim !== 'never') {\n                        throw new MichelsonInstructionError(instruction, stack, `${instruction.prim}: FAIL is not allowed in MAP`);\n                    }\n                    return { failed: body.failed, level: body.level + 1 };\n                }\n                if (body.length < 1) {\n                    throw new MichelsonInstructionError(instruction, stack, `${instruction.prim}: function must return a value`);\n                }\n                ensureStacksEqual(body.slice(1), tail);\n                return s.prim === 'list'\n                    ? [annotateVar({ prim: 'list', args: [body[0]] }), ...tail]\n                    : s.prim === 'map'\n                        ? [annotateVar({ prim: 'map', args: [s.args[0], body[0]] }), ...tail]\n                        : [annotateVar({ prim: 'option', args: [body[0]] }), ...tail];\n            }\n            case 'ITER': {\n                instructionAnn({});\n                const s = args(0, ['set', 'list', 'map'])[0];\n                const tail = stack.slice(1);\n                const elt = s.prim === 'map' ? { prim: 'pair', args: s.args } : s.args[0];\n                const body = functionTypeInternal(instruction.args[0], [annotate(elt, { t: null, v: varSuffix(argAnn(s), 'elt') }), ...tail], ctx);\n                if ('failed' in body) {\n                    return { failed: body.failed, level: body.level + 1 };\n                }\n                ensureStacksEqual(body, tail);\n                return tail;\n            }\n            case 'LOOP': {\n                instructionAnn({});\n                args(0, ['bool']);\n                const tail = stack.slice(1);\n                const body = functionTypeInternal(instruction.args[0], tail, ctx);\n                if ('failed' in body) {\n                    return { failed: body.failed, level: body.level + 1 };\n                }\n                ensureStacksEqual(body, [{ prim: 'bool' }, ...tail]);\n                return tail;\n            }\n            case 'LOOP_LEFT': {\n                instructionAnn({});\n                const s = args(0, ['or'])[0];\n                const tail = stack.slice(1);\n                const body = functionTypeInternal(instruction.args[0], [annotate(s.args[0], { t: null, v: varSuffix(argAnn(s), 'left') }), ...tail], ctx);\n                if ('failed' in body) {\n                    return { failed: body.failed, level: body.level + 1 };\n                }\n                ensureStacksEqual(body, [s, ...tail]);\n                return [annotate(s.args[1], { t: null, v: instructionAnn({ v: 1 }).v }), ...tail];\n            }\n            case 'DIP': {\n                instructionAnn({});\n                const n = instruction.args.length === 2 ? parseInt(instruction.args[0].int, 10) : 1;\n                args(n - 1, null);\n                const head = stack.slice(0, n);\n                const tail = stack.slice(n);\n                // ternary operator is a type guard so use it instead of just `instruction.args.length - 1`\n                const body = instruction.args.length === 2\n                    ? functionTypeInternal(instruction.args[1], tail, ctx)\n                    : functionTypeInternal(instruction.args[0], tail, ctx);\n                if ('failed' in body) {\n                    return { failed: body.failed, level: body.level + 1 };\n                }\n                return [...head, ...body];\n            }\n            case 'CREATE_CONTRACT': {\n                const ia = instructionAnn({ v: 2 });\n                const s = args(0, ['option'], ['mutez'], null);\n                if (typeID(s[0].args[0]) !== 'key_hash') {\n                    throw new MichelsonInstructionError(instruction, stack, `${instruction.prim}: key hash expected: ${typeID(s[0].args[0])}`);\n                }\n                if (ensureStorableType(s[2])) {\n                    assertContractValid(instruction.args[0]);\n                    assertScalarTypesEqual(contractSection(instruction.args[0], 'storage').args[0], s[2]);\n                }\n                const va = (_d = ia.v) === null || _d === void 0 ? void 0 : _d.map((v) => (v !== '@' ? [v] : undefined));\n                return [\n                    annotate({ prim: 'operation' }, { v: va === null || va === void 0 ? void 0 : va[0] }),\n                    annotate({\n                        prim: 'address',\n                        [refContract]: {\n                            prim: 'contract',\n                            args: [contractSection(instruction.args[0], 'parameter').args[0]],\n                        },\n                    }, { v: va === null || va === void 0 ? void 0 : va[1] }),\n                    ...stack.slice(3),\n                ];\n            }\n            case 'PUSH':\n                assertTypeAnnotationsValid(instruction.args[0]);\n                assertDataValidInternal(instruction.args[1], instruction.args[0], Object.assign(Object.assign({}, ctx), { contract: undefined }));\n                return [annotateVar(instruction.args[0]), ...stack];\n            case 'EMPTY_SET':\n                assertTypeAnnotationsValid(instruction.args[0]);\n                ensureComparableType(instruction.args[0]);\n                return [\n                    annotate({ prim: 'set', args: instruction.args }, instructionAnn({ t: 1, v: 1 })),\n                    ...stack,\n                ];\n            case 'EMPTY_MAP':\n                assertTypeAnnotationsValid(instruction.args[0]);\n                ensureComparableType(instruction.args[0]);\n                assertTypeAnnotationsValid(instruction.args[1]);\n                return [\n                    annotate({ prim: 'map', args: instruction.args }, instructionAnn({ t: 1, v: 1 })),\n                    ...stack,\n                ];\n            case 'EMPTY_BIG_MAP':\n                assertTypeAnnotationsValid(instruction.args[0]);\n                ensureComparableType(instruction.args[0]);\n                assertTypeAnnotationsValid(instruction.args[1]);\n                ensureBigMapStorableType(instruction.args[0]);\n                return [\n                    annotate({ prim: 'big_map', args: instruction.args }, instructionAnn({ t: 1, v: 1 })),\n                    ...stack,\n                ];\n            case 'LAMBDA_REC':\n            case 'LAMBDA': {\n                assertTypeAnnotationsValid(instruction.args[0]);\n                assertTypeAnnotationsValid(instruction.args[1]);\n                const s = [instruction.args[0]];\n                if (instruction.prim === 'LAMBDA_REC') {\n                    s.push({ prim: 'lambda', args: [instruction.args[0], instruction.args[1]] });\n                }\n                const body = functionTypeInternal(instruction.args[2], s, Object.assign(Object.assign({}, ctx), { contract: undefined }));\n                if ('failed' in body) {\n                    return { failed: body.failed, level: body.level + 1 };\n                }\n                if (body.length !== 1) {\n                    throw new MichelsonInstructionError(instruction, stack, `${instruction.prim}: function must return a value`);\n                }\n                ensureTypesEqual(instruction.args[1], body[0]);\n                return [\n                    annotateVar({ prim: 'lambda', args: [instruction.args[0], instruction.args[1]] }),\n                    ...stack,\n                ];\n            }\n            case 'LEVEL':\n                return [annotateVar({ prim: 'nat' }, '@level'), ...stack];\n            case 'TOTAL_VOTING_POWER':\n                return [annotateVar({ prim: 'nat' }), ...stack];\n            case 'VOTING_POWER':\n                args(0, ['key_hash']);\n                return [annotateVar({ prim: 'nat' }), ...stack.slice(1)];\n            case 'TICKET': {\n                const s = args(0, null, ['nat'])[0];\n                ensureComparableType(s);\n                if (ProtoInferiorTo(proto, Protocol.PtLimaPtL)) {\n                    return [\n                        annotate({ prim: 'ticket', args: [s] }, instructionAnn({ t: 1, v: 1 })),\n                        ...stack.slice(2),\n                    ];\n                }\n                else {\n                    return [\n                        annotateVar({\n                            prim: 'option',\n                            args: [annotate({ prim: 'ticket', args: [s] }, instructionAnn({ t: 1, v: 1 }))],\n                        }),\n                        ...stack.slice(2),\n                    ];\n                }\n            }\n            case 'JOIN_TICKETS': {\n                const s = unpackComb('pair', args(0, ['pair'])[0]);\n                if (typeID(s.args[0]) !== 'ticket') {\n                    throw new MichelsonInstructionError(instruction, stack, `${instruction.prim}: ticket expected: ${typeID(s.args[0])}`);\n                }\n                ensureTypesEqual(s.args[0], s.args[1]);\n                return [\n                    annotateVar({\n                        prim: 'option',\n                        args: [annotate(s.args[0], { t: null })],\n                    }),\n                    ...stack.slice(1),\n                ];\n            }\n            case 'SPLIT_TICKET': {\n                const s = args(0, ['ticket'], ['pair']);\n                const p = unpackComb('pair', s[1]);\n                if (typeID(p.args[0]) !== 'nat') {\n                    throw new MichelsonInstructionError(instruction, stack, `${instruction.prim}: nat expected: ${typeID(p.args[0])}`);\n                }\n                ensureTypesEqual(p.args[0], p.args[1]);\n                return [\n                    annotateVar({\n                        prim: 'option',\n                        args: [\n                            {\n                                prim: 'pair',\n                                args: [annotate(s[0], { t: null }), annotate(s[0], { t: null })],\n                            },\n                        ],\n                    }),\n                    ...stack.slice(2),\n                ];\n            }\n            case 'READ_TICKET': {\n                const ia = instructionAnn({ v: 2 });\n                const s = args(0, ['ticket'])[0];\n                const va = (_e = ia.v) === null || _e === void 0 ? void 0 : _e.map((v) => (v !== '@' ? [v] : undefined));\n                return [\n                    annotate({\n                        prim: 'pair',\n                        args: [{ prim: 'address' }, annotate(s.args[0], { t: null }), { prim: 'nat' }],\n                    }, { v: va === null || va === void 0 ? void 0 : va[0] }),\n                    annotate(s, { v: va === null || va === void 0 ? void 0 : va[1], t: null }),\n                    ...stack.slice(1),\n                ];\n            }\n            case 'PAIRING_CHECK': {\n                const p = args(0, ['list'])[0].args[0];\n                if (!isPairType(p)) {\n                    throw new MichelsonInstructionError(instruction, stack, `${instruction.prim}: pair expected: ${typeID(p)}`);\n                }\n                const c = unpackComb('pair', p);\n                if (typeID(c.args[0]) !== 'bls12_381_g1') {\n                    throw new MichelsonInstructionError(instruction, stack, `${instruction.prim}: bls12_381_g1 expected: ${typeID(c.args[0])}`);\n                }\n                if (typeID(c.args[1]) !== 'bls12_381_g2') {\n                    throw new MichelsonInstructionError(instruction, stack, `${instruction.prim}: bls12_381_g2 expected: ${typeID(c.args[1])}`);\n                }\n                return [annotateVar({ prim: 'bool' }), ...stack.slice(1)];\n            }\n            case 'SAPLING_EMPTY_STATE':\n                return [\n                    annotate({ prim: 'sapling_state', args: [instruction.args[0]] }, instructionAnn({ v: 1, t: 1 })),\n                    ...stack,\n                ];\n            case 'SAPLING_VERIFY_UPDATE': {\n                const s = args(0, ['sapling_transaction'], ['sapling_state']);\n                if (parseInt(s[0].args[0].int, 10) !== parseInt(s[1].args[0].int, 10)) {\n                    throw new MichelsonInstructionError(instruction, stack, `${instruction.prim}: sapling memo size mismatch: ${s[0].args[0].int} != ${s[1].args[0].int}`);\n                }\n                return ProtoInferiorTo(proto, Protocol.PtJakarta)\n                    ? [\n                        annotateVar({\n                            prim: 'option',\n                            args: [\n                                {\n                                    prim: 'pair',\n                                    args: [{ prim: 'int' }, annotate(s[1], { t: null })],\n                                },\n                            ],\n                        }),\n                        ...stack.slice(2),\n                    ]\n                    : [\n                        annotateVar({\n                            prim: 'option',\n                            args: [\n                                {\n                                    prim: 'pair',\n                                    args: [\n                                        { prim: 'bytes' },\n                                        {\n                                            prim: 'pair',\n                                            args: [{ prim: 'int' }, annotate(s[1], { t: null })],\n                                        },\n                                    ],\n                                },\n                            ],\n                        }),\n                        ...stack.slice(2),\n                    ];\n            }\n            case 'OPEN_CHEST':\n                args(0, ['chest_key'], ['chest'], ['nat']);\n                return [\n                    annotateVar({ prim: 'or', args: [{ prim: 'bytes' }, { prim: 'bool' }] }),\n                    ...stack.slice(3),\n                ];\n            case 'VIEW': {\n                const s = args(0, null, ['address']);\n                ensurePushableType(s[0]);\n                return [annotateVar({ prim: 'option', args: [instruction.args[1]] }), ...stack.slice(2)];\n            }\n            case 'MIN_BLOCK_TIME':\n                return [annotateVar({ prim: 'nat' }), ...stack];\n            case 'EMIT': {\n                const ia = instructionAnn({ f: 1, t: 1 });\n                if (instruction.args) {\n                    const s = args(0, null);\n                    ensureTypesEqual(s[0], instruction.args[0]);\n                    return [annotate({ prim: 'operation' }, ia), ...stack.slice(1)];\n                }\n                return [annotate({ prim: 'operation' }, ia), ...stack.slice(1)];\n            }\n            default:\n                throw new MichelsonError(instruction, `unexpected instruction: ${instruction.prim}`);\n        }\n    })(instruction);\n    if ((ctx === null || ctx === void 0 ? void 0 : ctx.traceCallback) !== undefined) {\n        const trace = {\n            op: instruction,\n            in: stack,\n            out: retStack,\n        };\n        ctx.traceCallback(trace);\n    }\n    return retStack;\n}\nfunction contractSection(contract, section) {\n    for (const s of contract) {\n        if (s.prim === section) {\n            return s;\n        }\n    }\n    throw new MichelsonError(contract, `missing contract section: ${section}`);\n}\nfunction contractViews(contract) {\n    const views = {};\n    for (const s of contract) {\n        if (s.prim === 'view') {\n            views[s.args[0].string] = s;\n        }\n    }\n    return views;\n}\nfunction isContract(v) {\n    if (Array.isArray(v)) {\n        for (const s of v) {\n            if ('prim' in s && (s.prim === 'parameter' || s.prim === 'storage' || s.prim === 'code')) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction contractEntryPoint(src, ep) {\n    ep = ep || '%default';\n    const entryPoint = contractEntryPoints(src).find((x) => x[0] === ep);\n    if (entryPoint !== undefined) {\n        return entryPoint[1];\n    }\n    else if (ep === '%default') {\n        return isContract(src) ? contractSection(src, 'parameter').args[0] : src;\n    }\n    return null;\n}\nfunction isOrType(t) {\n    return Array.isArray(t) || t.prim === 'or';\n}\nfunction contractEntryPoints(src) {\n    if (isContract(src)) {\n        const param = contractSection(src, 'parameter');\n        const ch = contractEntryPoints(param.args[0]);\n        const a = unpackAnnotations(param);\n        return a.f ? [[a.f[0], param.args[0]], ...ch] : ch;\n    }\n    if (isOrType(src)) {\n        const args = typeArgs(src);\n        const getArg = (n) => {\n            const a = unpackAnnotations(args[n]);\n            if (typeID(args[n]) === 'or') {\n                const ch = contractEntryPoints(args[n]);\n                return a.f ? [[a.f[0], args[n]], ...ch] : ch;\n            }\n            return a.f ? [[a.f[0], args[n]]] : [];\n        };\n        return [...getArg(0), ...getArg(1)];\n    }\n    return [];\n}\n// Contract validation\nfunction assertContractValid(contract, ctx) {\n    const assertSection = (parameter, storage, ret, code) => {\n        assertTypeAnnotationsValid(parameter, true);\n        assertTypeAnnotationsValid(storage);\n        const arg = {\n            prim: 'pair',\n            args: [\n                Object.assign(Object.assign({}, parameter), { annots: ['@parameter'] }),\n                Object.assign(Object.assign({}, storage), { annots: ['@storage'] }),\n            ],\n        };\n        const out = functionTypeInternal(code, [arg], Object.assign(Object.assign({}, ctx), { contract }));\n        if ('failed' in out) {\n            return out;\n        }\n        try {\n            assertStacksEqual(out, [ret]);\n        }\n        catch (err) {\n            if (err instanceof MichelsonError) {\n                throw new MichelsonInstructionError(code, out, err.message);\n            }\n            else {\n                throw err;\n            }\n        }\n        return out;\n    };\n    const parameter = contractSection(contract, 'parameter').args[0];\n    const storage = contractSection(contract, 'storage').args[0];\n    const code = contractSection(contract, 'code').args[0];\n    const expected = {\n        prim: 'pair',\n        args: [{ prim: 'list', args: [{ prim: 'operation' }] }, storage],\n    };\n    const ret = assertSection(parameter, storage, expected, code);\n    for (const view of Object.values(contractViews(contract))) {\n        assertSection(view.args[1], storage, view.args[2], view.args[3]);\n    }\n    return ret;\n}\n// Exported wrapper functions\nfunction assertDataValid(d, t, ctx) {\n    assertTypeAnnotationsValid(t);\n    assertDataValidInternal(d, t, ctx || null);\n}\nfunction functionType(inst, stack, ctx) {\n    for (const t of stack) {\n        assertTypeAnnotationsValid(t);\n    }\n    if ((ctx === null || ctx === void 0 ? void 0 : ctx.contract) !== undefined) {\n        for (const typesec of ['parameter', 'storage']) {\n            const sec = contractSection(ctx.contract, typesec).args[0];\n            assertTypeAnnotationsValid(sec);\n        }\n    }\n    return functionTypeInternal(inst, stack, ctx || null);\n}\nfunction assertTypesEqual(a, b, field = false) {\n    if (Array.isArray(a)) {\n        // type guards don't work for parametrized generic types\n        for (const v of a) {\n            assertTypeAnnotationsValid(v);\n        }\n        for (const v of b) {\n            assertTypeAnnotationsValid(v);\n        }\n    }\n    else {\n        assertTypeAnnotationsValid(a);\n        assertTypeAnnotationsValid(b);\n    }\n    assertScalarTypesEqual(a, b, field);\n}\nfunction isTypeAnnotationsValid(t, field = false) {\n    try {\n        assertTypeAnnotationsValid(t, field);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nfunction isContractValid(contract, ctx) {\n    try {\n        return assertContractValid(contract, ctx);\n    }\n    catch (_a) {\n        return null;\n    }\n}\nfunction isDataValid(d, t, ctx) {\n    try {\n        assertDataValid(d, t, ctx);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nfunction isTypeEqual(a, b, field = false) {\n    try {\n        assertTypesEqual(a, b, field);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\n\nclass Contract {\n    constructor(contract, opt) {\n        this.contract = contract;\n        this.ctx = Object.assign({ contract }, opt);\n        this.output = assertContractValid(contract, this.ctx);\n    }\n    static parse(src, opt) {\n        const p = new Parser(opt);\n        const expr = typeof src === 'string' ? p.parseScript(src) : p.parseJSON(src);\n        if (expr === null) {\n            throw new InvalidMichelsonError('empty Michelson');\n        }\n        if (assertMichelsonContract(expr)) {\n            return new Contract(expr, opt);\n        }\n    }\n    static parseTypeExpression(src, opt) {\n        const p = new Parser(opt);\n        const expr = typeof src === 'string' ? p.parseScript(src) : p.parseJSON(src);\n        if (expr === null) {\n            throw new InvalidTypeExpressionError('empty type expression');\n        }\n        // remove assertTypeAnnotationsValid from if block because: () => void || throw error\n        if (assertMichelsonType(expr)) {\n            assertTypeAnnotationsValid(expr);\n            return expr;\n        }\n    }\n    static parseDataExpression(src, opt) {\n        const p = new Parser(opt);\n        const expr = typeof src === 'string' ? p.parseScript(src) : p.parseJSON(src);\n        if (expr === null) {\n            throw new InvalidDataExpressionError('empty data expression');\n        }\n        if (assertMichelsonData(expr)) {\n            return expr;\n        }\n        throw undefined;\n    }\n    section(section) {\n        return contractSection(this.contract, section);\n    }\n    entryPoints() {\n        return contractEntryPoints(this.contract);\n    }\n    entryPoint(ep) {\n        return contractEntryPoint(this.contract, ep);\n    }\n    assertDataValid(d, t) {\n        assertDataValid(d, t, this.ctx);\n    }\n    isDataValid(d, t) {\n        return isDataValid(d, t, this.ctx);\n    }\n    assertParameterValid(ep, d) {\n        const t = this.entryPoint(ep || undefined);\n        if (t === null) {\n            throw new InvalidEntrypointError(ep === null || ep === void 0 ? void 0 : ep.toString());\n        }\n        this.assertDataValid(d, t);\n    }\n    isParameterValid(ep, d) {\n        try {\n            this.assertParameterValid(ep, d);\n            return true;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n    functionType(inst, stack) {\n        return functionType(inst, stack, this.ctx);\n    }\n}\n// TODO: dummyContract not used anywhere in the codebase can be deleted?\nconst dummyContract = new Contract([\n    { prim: 'parameter', args: [{ prim: 'unit' }] },\n    { prim: 'storage', args: [{ prim: 'unit' }] },\n    {\n        prim: 'code',\n        args: [[{ prim: 'CAR' }, { prim: 'NIL', args: [{ prim: 'operation' }] }, { prim: 'PAIR' }]],\n    },\n]);\n\nfunction formatStack(s) {\n    if ('failed' in s) {\n        return `[FAILED: ${emitMicheline(s.failed)}]`;\n    }\n    return s\n        .map((v, i) => {\n        const ann = unpackAnnotations(v);\n        return `[${i}${ann.v ? '/' + ann.v[0] : ''}]: ${emitMicheline(v)}`;\n    })\n        .join('\\n');\n}\nfunction traceDumpFunc(blocks, cb) {\n    return (v) => {\n        var _a;\n        if (Array.isArray(v) && !blocks) {\n            return;\n        }\n        const macro = (_a = v.op[sourceReference]) === null || _a === void 0 ? void 0 : _a.macro;\n        const msg = `${macro ? 'Macro' : 'Op'}: ${macro ? emitMicheline(macro, undefined, true) + ' / ' : ''}${emitMicheline(v.op)}\nInput:\n${formatStack(v.in)}\nOutput:\n${formatStack(v.out)}\n`;\n        cb(msg);\n    };\n}\nfunction formatError(err) {\n    var _a;\n    if (err instanceof MichelsonInstructionError) {\n        const macro = (_a = err.val[sourceReference]) === null || _a === void 0 ? void 0 : _a.macro;\n        return `${macro ? 'Macro' : 'Op'}: ${macro ? emitMicheline(macro, undefined, true) + ' / ' : ''}${emitMicheline(err.val)}\nStack:\n${formatStack(err.stackState)}\n`;\n    }\n    else if (err instanceof MichelsonTypeError) {\n        const type = Array.isArray(err.val)\n            ? '[' + err.val.map((v, i) => `[${i}]: ${emitMicheline(v)}`).join('; ') + ']'\n            : emitMicheline(err.val);\n        return `Type: ${type}\n${err.data\n            ? `Data: ${emitMicheline(err.data)}\n`\n            : ''}\n`;\n    }\n    else {\n        return `Value: ${emitMicheline(err.val)}`;\n    }\n}\n\n// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\nconst VERSION = {\n    \"commitHash\": \"a908ab176a8c52c025fd43e7acd452415396f54e\",\n    \"version\": \"17.4.0\"\n};\n\nexport { Contract, DefaultProtocol, JSONParseError, MacroError, MichelineParseError, MichelsonError, MichelsonInstructionError, MichelsonTypeError, MichelsonValidationError, Parser, ProtoGreaterOrEqual, ProtoInferiorTo, Protocol, VERSION, assertContractValid, assertDataListIfAny, assertDataValid, assertMichelsonBigMapStorableType, assertMichelsonComparableType, assertMichelsonContract, assertMichelsonData, assertMichelsonInstruction, assertMichelsonPackableType, assertMichelsonPassableType, assertMichelsonPushableType, assertMichelsonStorableType, assertMichelsonType, assertTypeAnnotationsValid, assertTypesEqual, assertViewNameValid, contractEntryPoint, contractEntryPoints, contractSection, contractViews, decodeAddressBytes, decodePublicKeyBytes, decodePublicKeyHashBytes, dummyContract, emitMicheline, formatError, formatStack, functionType, instructionIDs, isContractValid, isDataValid, isInstruction, isMichelsonCode, isMichelsonData, isMichelsonError, isMichelsonScript, isMichelsonType, isTypeAnnotationsValid, isTypeEqual, packData, packDataBytes, refContract, sourceReference, traceDumpFunc, unpackData, unpackDataBytes };\n//# sourceMappingURL=taquito-michel-codec.es6.js.map\n", "import { Prefix, buf2hex, b58cdecode, prefix, prefixLength, b58cencode, InvalidKeyHashError, invalidDetail, ValidationResult, InvalidPublicKeyError, validateBlock } from '@taquito/utils';\nimport { ParameterValidationError, InvalidHexStringError, InvalidAddressError, InvalidContractAddressError, InvalidOperationKindError, InvalidBlockHashError } from '@taquito/core';\nimport BigNumber$1, { BigNumber } from 'bignumber.js';\n\nconst toHexString = (bytes) => bytes.reduce((str, byte) => str + byte.toString(16).padStart(2, '0'), '');\nconst pad = (num, paddingLen = 8) => {\n    return num.toString(16).padStart(paddingLen, '0');\n};\n\n/*\n * Some code in this file is originally from sotez\n * Copyright (c) 2018 Andrew Kishino\n */\n// See: https://tezos.gitlab.io/protocols/005_babylon.html#transactions-now-have-an-entrypoint\nconst ENTRYPOINT_MAX_LENGTH = 31;\nvar CODEC;\n(function (CODEC) {\n    CODEC[\"SECRET\"] = \"secret\";\n    CODEC[\"RAW\"] = \"raw\";\n    CODEC[\"TZ1\"] = \"tz1\";\n    CODEC[\"BRANCH\"] = \"branch\";\n    CODEC[\"ZARITH\"] = \"zarith\";\n    CODEC[\"PUBLIC_KEY\"] = \"public_key\";\n    CODEC[\"PKH\"] = \"pkh\";\n    CODEC[\"DELEGATE\"] = \"delegate\";\n    CODEC[\"SCRIPT\"] = \"script\";\n    CODEC[\"BALLOT_STATEMENT\"] = \"ballotStmt\";\n    CODEC[\"PROPOSAL\"] = \"proposal\";\n    CODEC[\"PROPOSAL_ARR\"] = \"proposalArr\";\n    CODEC[\"INT32\"] = \"int32\";\n    CODEC[\"INT16\"] = \"int16\";\n    CODEC[\"PARAMETERS\"] = \"parameters\";\n    CODEC[\"ADDRESS\"] = \"address\";\n    CODEC[\"SMART_CONTRACT_ADDRESS\"] = \"smart_contract_address\";\n    CODEC[\"SMART_ROLLUP_ADDRESS\"] = \"smart_rollup_address\";\n    CODEC[\"SMART_ROLLUP_COMMITMENT_HASH\"] = \"smart_rollup_commitment_hash\";\n    CODEC[\"VALUE\"] = \"value\";\n    CODEC[\"PADDED_BYTES\"] = \"padded_bytes\";\n    CODEC[\"SMART_ROLLUP_MESSAGE\"] = \"smart_rollup_message\";\n    CODEC[\"MANAGER\"] = \"manager\";\n    CODEC[\"BLOCK_PAYLOAD_HASH\"] = \"blockPayloadHash\";\n    CODEC[\"ENTRYPOINT\"] = \"entrypoint\";\n    CODEC[\"OPERATION\"] = \"operation\";\n    CODEC[\"OP_ACTIVATE_ACCOUNT\"] = \"activate_account\";\n    CODEC[\"OP_DELEGATION\"] = \"delegation\";\n    CODEC[\"OP_TRANSACTION\"] = \"transaction\";\n    CODEC[\"OP_ORIGINATION\"] = \"origination\";\n    CODEC[\"OP_BALLOT\"] = \"ballot\";\n    CODEC[\"OP_FAILING_NOOP\"] = \"failing_noop\";\n    CODEC[\"OP_ENDORSEMENT\"] = \"endorsement\";\n    CODEC[\"OP_SEED_NONCE_REVELATION\"] = \"seed_nonce_revelation\";\n    CODEC[\"OP_REVEAL\"] = \"reveal\";\n    CODEC[\"OP_PROPOSALS\"] = \"proposals\";\n    CODEC[\"OP_REGISTER_GLOBAL_CONSTANT\"] = \"register_global_constant\";\n    CODEC[\"OP_TRANSFER_TICKET\"] = \"transfer_ticket\";\n    CODEC[\"OP_TX_ROLLUP_ORIGINATION\"] = \"tx_rollup_origination\";\n    CODEC[\"OP_TX_ROLLUP_SUBMIT_BATCH\"] = \"tx_rollup_submit_batch\";\n    CODEC[\"BURN_LIMIT\"] = \"burn_limit\";\n    CODEC[\"TX_ROLLUP_ORIGINATION_PARAM\"] = \"tx_rollup_origination_param\";\n    CODEC[\"TX_ROLLUP_ID\"] = \"tx_rollup_id\";\n    CODEC[\"TX_ROLLUP_BATCH_CONTENT\"] = \"tx_rollup_batch_content\";\n    CODEC[\"OP_INCREASE_PAID_STORAGE\"] = \"increase_paid_storage\";\n    CODEC[\"OP_UPDATE_CONSENSUS_KEY\"] = \"update_consensus_key\";\n    CODEC[\"OP_DRAIN_DELEGATE\"] = \"drain_delegate\";\n    CODEC[\"DEPOSITS_LIMIT\"] = \"deposits_limit\";\n    CODEC[\"OP_SET_DEPOSITS_LIMIT\"] = \"set_deposits_limit\";\n    CODEC[\"OP_SMART_ROLLUP_ORIGINATE\"] = \"smart_rollup_originate\";\n    CODEC[\"PVM_KIND\"] = \"pvm_kind\";\n    CODEC[\"OP_SMART_ROLLUP_ADD_MESSAGES\"] = \"smart_rollup_add_messages\";\n    CODEC[\"OP_SMART_ROLLUP_EXECUTE_OUTBOX_MESSAGE\"] = \"smart_rollup_execute_outbox_message\";\n})(CODEC || (CODEC = {}));\n// See https://tezos.gitlab.io/whitedoc/michelson.html#full-grammar\nconst opMapping = {\n    '00': 'parameter',\n    '01': 'storage',\n    '02': 'code',\n    '03': 'False',\n    '04': 'Elt',\n    '05': 'Left',\n    '06': 'None',\n    '07': 'Pair',\n    '08': 'Right',\n    '09': 'Some',\n    '0a': 'True',\n    '0b': 'Unit',\n    '0c': 'PACK',\n    '0d': 'UNPACK',\n    '0e': 'BLAKE2B',\n    '0f': 'SHA256',\n    '10': 'SHA512',\n    '11': 'ABS',\n    '12': 'ADD',\n    '13': 'AMOUNT',\n    '14': 'AND',\n    '15': 'BALANCE',\n    '16': 'CAR',\n    '17': 'CDR',\n    '18': 'CHECK_SIGNATURE',\n    '19': 'COMPARE',\n    '1a': 'CONCAT',\n    '1b': 'CONS',\n    '1c': 'CREATE_ACCOUNT',\n    '1d': 'CREATE_CONTRACT',\n    '1e': 'IMPLICIT_ACCOUNT',\n    '1f': 'DIP',\n    '20': 'DROP',\n    '21': 'DUP',\n    '22': 'EDIV',\n    '23': 'EMPTY_MAP',\n    '24': 'EMPTY_SET',\n    '25': 'EQ',\n    '26': 'EXEC',\n    '27': 'FAILWITH',\n    '28': 'GE',\n    '29': 'GET',\n    '2a': 'GT',\n    '2b': 'HASH_KEY',\n    '2c': 'IF',\n    '2d': 'IF_CONS',\n    '2e': 'IF_LEFT',\n    '2f': 'IF_NONE',\n    '30': 'INT',\n    '31': 'LAMBDA',\n    '32': 'LE',\n    '33': 'LEFT',\n    '34': 'LOOP',\n    '35': 'LSL',\n    '36': 'LSR',\n    '37': 'LT',\n    '38': 'MAP',\n    '39': 'MEM',\n    '3a': 'MUL',\n    '3b': 'NEG',\n    '3c': 'NEQ',\n    '3d': 'NIL',\n    '3e': 'NONE',\n    '3f': 'NOT',\n    '40': 'NOW',\n    '41': 'OR',\n    '42': 'PAIR',\n    '43': 'PUSH',\n    '44': 'RIGHT',\n    '45': 'SIZE',\n    '46': 'SOME',\n    '47': 'SOURCE',\n    '48': 'SENDER',\n    '49': 'SELF',\n    '4a': 'STEPS_TO_QUOTA',\n    '4b': 'SUB',\n    '4c': 'SWAP',\n    '4d': 'TRANSFER_TOKENS',\n    '4e': 'SET_DELEGATE',\n    '4f': 'UNIT',\n    '50': 'UPDATE',\n    '51': 'XOR',\n    '52': 'ITER',\n    '53': 'LOOP_LEFT',\n    '54': 'ADDRESS',\n    '55': 'CONTRACT',\n    '56': 'ISNAT',\n    '57': 'CAST',\n    '58': 'RENAME',\n    '59': 'bool',\n    '5a': 'contract',\n    '5b': 'int',\n    '5c': 'key',\n    '5d': 'key_hash',\n    '5e': 'lambda',\n    '5f': 'list',\n    '60': 'map',\n    '61': 'big_map',\n    '62': 'nat',\n    '63': 'option',\n    '64': 'or',\n    '65': 'pair',\n    '66': 'set',\n    '67': 'signature',\n    '68': 'string',\n    '69': 'bytes',\n    '6a': 'mutez',\n    '6b': 'timestamp',\n    '6c': 'unit',\n    '6d': 'operation',\n    '6e': 'address',\n    '6f': 'SLICE',\n    '70': 'DIG',\n    '71': 'DUG',\n    '72': 'EMPTY_BIG_MAP',\n    '73': 'APPLY',\n    '74': 'chain_id',\n    '75': 'CHAIN_ID',\n    '76': 'LEVEL',\n    '77': 'SELF_ADDRESS',\n    '78': 'never',\n    '79': 'NEVER',\n    '7a': 'UNPAIR',\n    '7b': 'VOTING_POWER',\n    '7c': 'TOTAL_VOTING_POWER',\n    '7d': 'KECCAK',\n    '7e': 'SHA3',\n    '7f': 'PAIRING_CHECK',\n    '80': 'bls12_381_g1',\n    '81': 'bls12_381_g2',\n    '82': 'bls12_381_fr',\n    '83': 'sapling_state',\n    '84': 'sapling_transaction_deprecated',\n    '85': 'SAPLING_EMPTY_STATE',\n    '86': 'SAPLING_VERIFY_UPDATE',\n    '87': 'ticket',\n    '88': 'TICKET_DEPRECATED',\n    '89': 'READ_TICKET',\n    '8a': 'SPLIT_TICKET',\n    '8b': 'JOIN_TICKETS',\n    '8c': 'GET_AND_UPDATE',\n    '8d': 'chest',\n    '8e': 'chest_key',\n    '8f': 'OPEN_CHEST',\n    '90': 'VIEW',\n    '91': 'view',\n    '92': 'constant',\n    '93': 'SUB_MUTEZ',\n    '94': 'tx_rollup_l2_address',\n    '95': 'MIN_BLOCK_TIME',\n    '96': 'sapling_transaction',\n    '97': 'EMIT',\n    '98': 'Lambda_rec',\n    '99': 'LAMBDA_REC',\n    '9a': 'TICKET',\n    '9b': 'BYTES',\n    '9c': 'NAT',\n};\nconst opMappingReverse = (() => {\n    const result = {};\n    Object.keys(opMapping).forEach((key) => {\n        result[opMapping[key]] = key;\n    });\n    return result;\n})();\n// See https://tezos.gitlab.io/shell/p2p_api.html?highlight=p2p\nconst kindMapping = {\n    0x04: 'activate_account',\n    0x6b: 'reveal',\n    0x6e: 'delegation',\n    0x6c: 'transaction',\n    0x6d: 'origination',\n    0x06: 'ballot',\n    0x15: 'endorsement',\n    0x01: 'seed_nonce_revelation',\n    0x05: 'proposals',\n    0x6f: 'register_global_constant',\n    0x96: 'tx_rollup_origination',\n    0x97: 'tx_rollup_submit_batch',\n    0x9e: 'transfer_ticket',\n    0x70: 'set_deposits_limit',\n    0x71: 'increase_paid_storage',\n    0x72: 'update_consensus_key',\n    0x09: 'drain_delegate',\n    0xc8: 'smart_rollup_originate',\n    0xc9: 'smart_rollup_add_messages',\n    0xce: 'smart_rollup_execute_outbox_message',\n    0x11: 'failing_noop',\n};\nconst kindMappingReverse = (() => {\n    const result = {};\n    Object.keys(kindMapping).forEach((key) => {\n        const keyNum = typeof key === 'string' ? parseInt(key, 10) : key;\n        result[kindMapping[keyNum]] = pad(keyNum, 2);\n    });\n    return result;\n})();\n// See https://tezos.gitlab.io/protocols/005_babylon.html#transactions-now-have-an-entrypoint\nconst entrypointMapping = {\n    '00': 'default',\n    '01': 'root',\n    '02': 'do',\n    '03': 'set_delegate',\n    '04': 'remove_delegate',\n    '05': 'deposit',\n};\nconst entrypointMappingReverse = (() => {\n    const result = {};\n    Object.keys(entrypointMapping).forEach((key) => {\n        result[entrypointMapping[key]] = key;\n    });\n    return result;\n})();\n\n/**\n *  @category Error\n *  @description Error that indicates an invalid operation content being passed or used\n */ class InvalidOperationSchemaError extends ParameterValidationError {\n    constructor(operation, errorDetail) {\n        super();\n        this.operation = operation;\n        this.errorDetail = errorDetail;\n        this.name = 'InvalidOperationSchemaError';\n        this.message = `Invalid operation content recevied`;\n        errorDetail ? (this.message += ` ${errorDetail}.`) : '';\n    }\n}\n/**\n *  @category Error\n *  @description Error that indicates an entrypoint name exceeding maximum length\n */\nclass OversizedEntryPointError extends ParameterValidationError {\n    constructor(entrypoint) {\n        super();\n        this.entrypoint = entrypoint;\n        this.name = 'OversizedEntryPointError';\n        this.message = `Invalid entrypoint length \"${entrypoint.length}\", maximum length is \"${ENTRYPOINT_MAX_LENGTH}\".`;\n    }\n}\n/**\n *  @category Error\n *  @description Error that indicates an invalid ballot value being used\n */\nclass InvalidBallotValueError extends ParameterValidationError {\n    constructor(ballotValue) {\n        super();\n        this.ballotValue = ballotValue;\n        this.name = 'InvalidBallotValueError';\n        this.message = `Invalid ballot value \"${ballotValue}\" expecting one of the following: \"yay\", \"nay\", \"pass\".`;\n    }\n}\n/**\n *  @category Error\n *  @description Error that indicates a failure when trying to decode ballot value\n */\nclass DecodeBallotValueError extends ParameterValidationError {\n    constructor(ballotValue) {\n        super();\n        this.ballotValue = ballotValue;\n        this.name = 'DecodeBallotValueError';\n        this.message = `Invalid ballot value \"${ballotValue}\", cannot be decoded.`;\n    }\n}\n/**\n *  @category Error\n *  @description Error that indicates unexpected Michelson Value being passed or used\n */\nclass UnexpectedMichelsonValueError extends ParameterValidationError {\n    constructor(value) {\n        super();\n        this.value = value;\n        this.name = 'UnexpectedMichelsonValueError';\n        this.message = `Invalid Michelson value \"${value}\", unalbe to encode.`;\n    }\n}\n/**\n *  @category Error\n *  @description Error that indicates a failure when trying to decode an operation\n */\nclass OperationDecodingError extends ParameterValidationError {\n    constructor(message) {\n        super();\n        this.message = message;\n        this.name = 'OperationDecodingError';\n    }\n}\n/**\n *  @category Error\n *  @description Error that indicates a failure when trying to encode an operation\n */\nclass OperationEncodingError extends ParameterValidationError {\n    constructor(message) {\n        super();\n        this.message = message;\n        this.name = 'OperationEncodingError';\n    }\n}\n/**\n *  @category Error\n *  @description Error that indicates an unsupported operation being passed or used\n */\nclass UnsupportedOperationError extends ParameterValidationError {\n    constructor(op) {\n        super();\n        this.op = op;\n        this.name = 'UnsupportedOperationError';\n        this.message = `Unsupported operation \"${op}\", can submit an issue on our github for feature request.`;\n    }\n}\n/**\n * @cateogry Error\n * @description Error that indicates an unsupported pvm being passed or used\n */\nclass UnsupportedPvmKindError extends ParameterValidationError {\n    constructor(pvm) {\n        super();\n        this.pvm = pvm;\n        this.name = 'UnsupportedPvmKindError';\n        this.message = `Invalid Pvm kind \"${pvm}\" expecting either \"arith\" or \"wasm_2_0_0\".`;\n    }\n}\n/**\n * @category Error\n * @description Error that indicates an unsupported pvm to decode\n */\nclass DecodePvmKindError extends ParameterValidationError {\n    constructor(pvm) {\n        super();\n        this.pvm = pvm;\n        this.name = 'DecodePvmKindError';\n        this.message = `Invalid Pvm kind \"${pvm}\", cannot be decoded.`;\n    }\n}\n/**\n * @category Error\n * @description Error that indicates an invalid Smart Rollup Address (sr1)\n */\nclass InvalidSmartRollupAddressError extends ParameterValidationError {\n    constructor(address, errorDetail) {\n        super();\n        this.address = address;\n        this.errorDetail = errorDetail;\n        this.name = 'InvalidSmartRollupAddress';\n        this.message = `Invalid smart rollup address \"${address}\"`;\n        errorDetail ? (this.message += ` ${errorDetail}.`) : '';\n    }\n}\n/**\n * @category Error\n * @description Error that indicates an invalid Smart Rollup commitment hash (src1)\n */\nclass InvalidSmartRollupCommitmentHashError extends ParameterValidationError {\n    constructor(hash, errorDetail) {\n        super();\n        this.hash = hash;\n        this.errorDetail = errorDetail;\n        this.name = 'InvalidSmartRollupCommitmentHashError';\n        this.message = `Invalid smart rollup commitment hash \"${hash}\"`;\n        errorDetail ? (this.message += ` ${errorDetail}.`) : '';\n    }\n}\n\nclass Uint8ArrayConsumer {\n    static fromHexString(hex) {\n        const lowHex = hex.toLowerCase();\n        if (/^(([a-f]|\\d){2})*$/.test(lowHex)) {\n            const arr = new Uint8Array((lowHex.match(/([a-z]|\\d){2}/g) || []).map((byte) => parseInt(byte, 16)));\n            return new Uint8ArrayConsumer(arr);\n        }\n        else {\n            throw new InvalidHexStringError(lowHex);\n        }\n    }\n    constructor(arr, offset = 0) {\n        this.arr = arr;\n        this.offset = offset;\n    }\n    consume(count) {\n        const subArr = this.arr.subarray(this.offset, this.offset + count);\n        this.offset += count;\n        return subArr;\n    }\n    get(idx) {\n        return this.arr[this.offset + idx];\n    }\n    length() {\n        return this.arr.length - this.offset;\n    }\n    slice(start, end) {\n        return new Uint8ArrayConsumer(this.arr.slice(start, end));\n    }\n}\n\nconst isPrim = (value) => {\n    return 'prim' in value;\n};\nconst isBytes = (value) => {\n    return 'bytes' in value && typeof value.bytes === 'string';\n};\nconst isString = (value) => {\n    return 'string' in value && typeof value.string === 'string';\n};\nconst isInt = (value) => {\n    return 'int' in value && typeof value.int === 'string';\n};\nconst scriptEncoder = (script) => {\n    const code = valueEncoder(script.code);\n    const storage = valueEncoder(script.storage);\n    return `${pad(code.length / 2, 8)}${code}${pad(storage.length / 2, 8)}${storage}`;\n};\nconst scriptDecoder = (value) => {\n    const code = extractRequiredLen(value);\n    const storage = extractRequiredLen(value);\n    return {\n        code: valueDecoder(new Uint8ArrayConsumer(code)),\n        storage: valueDecoder(new Uint8ArrayConsumer(storage)),\n    };\n};\nconst valueEncoder = (value) => {\n    if (Array.isArray(value)) {\n        const encoded = value.map((x) => valueEncoder(x)).join('');\n        const len = encoded.length / 2;\n        return `02${pad(len)}${encoded}`;\n    }\n    else if (isPrim(value)) {\n        return primEncoder(value);\n    }\n    else if (isBytes(value)) {\n        return bytesEncoder(value);\n    }\n    else if (isString(value)) {\n        return stringEncoder(value);\n    }\n    else if (isInt(value)) {\n        return intEncoder(value);\n    }\n    throw new UnexpectedMichelsonValueError(JSON.stringify(value));\n};\nconst valueDecoder = (value) => {\n    const preamble = value.consume(1);\n    switch (preamble[0]) {\n        case 0x0a:\n            return bytesDecoder(value);\n        case 0x01:\n            return stringDecoder(value);\n        case 0x00:\n            return intDecoder(value);\n        case 0x02: {\n            const val = new Uint8ArrayConsumer(extractRequiredLen(value));\n            const results = [];\n            while (val.length() > 0) {\n                results.push(valueDecoder(val));\n            }\n            return results;\n        }\n        default:\n            return primDecoder(value, preamble);\n    }\n};\nconst extractRequiredLen = (value, bytesLength = 4) => {\n    const len = value.consume(bytesLength);\n    const valueLen = parseInt(Buffer.from(len).toString('hex'), 16);\n    return value.consume(valueLen);\n};\n/**\n * @description parse bytes into multiple items of an array\n * @param value Uint8ArrayConsumer class of forged segment to parse\n * @param bytesLength default 4 bytes for length of variable bytes\n * @returns array of Uint8Array values for each array item\n */\nconst stripLengthPrefixFromBytes = (value, bytesLength = 4) => {\n    const ret = [];\n    let values = value;\n    while (values.length()) {\n        const len = values.consume(bytesLength);\n        const valueLen = parseInt(Buffer.from(len).toString('hex'), 16);\n        ret.push(values.consume(valueLen));\n        values = values.slice(valueLen + bytesLength);\n    }\n    return ret;\n};\nconst bytesEncoder = (value) => {\n    if (!/^([A-Fa-f0-9]{2})*$/.test(value.bytes)) {\n        throw new InvalidHexStringError(value.bytes);\n    }\n    const len = value.bytes.length / 2;\n    return `0a${pad(len)}${value.bytes}`;\n};\nconst bytesDecoder = (value) => {\n    const bytes = extractRequiredLen(value);\n    return {\n        bytes: Buffer.from(bytes).toString('hex'),\n    };\n};\nconst stringEncoder = (value) => {\n    const str = Buffer.from(value.string, 'utf8').toString('hex');\n    const hexLength = str.length / 2;\n    return `01${pad(hexLength)}${str}`;\n};\nconst stringDecoder = (value) => {\n    const str = extractRequiredLen(value);\n    return {\n        string: Buffer.from(str).toString('utf8'),\n    };\n};\nconst intEncoder = ({ int }) => {\n    const num = new BigNumber(int, 10);\n    const positiveMark = num.toString(2)[0] === '-' ? '1' : '0';\n    const binary = num.toString(2).replace(/-/g, '');\n    const pad = binary.length <= 6\n        ? 6\n        : (binary.length - 6) % 7\n            ? binary.length + 7 - ((binary.length - 6) % 7)\n            : binary.length;\n    const splitted = binary.padStart(pad, '0').match(/\\d{6,7}/g);\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const reversed = splitted.reverse();\n    reversed[0] = positiveMark + reversed[0];\n    const numHex = reversed.map((x, i) => \n    // Add one to the last chunk\n    parseInt((i === reversed.length - 1 ? '0' : '1') + x, 2)\n        .toString(16)\n        .padStart(2, '0'));\n    return `00${numHex.join('')}`;\n};\nconst intDecoder = (value) => {\n    let c = value.consume(1)[0];\n    const hexNumber = [];\n    const isNotLastChunkMask = 1 << 7;\n    while (c & isNotLastChunkMask) {\n        hexNumber.push(c);\n        c = value.consume(1)[0];\n    }\n    hexNumber.push(c);\n    const isNegative = !!((1 << 6) & hexNumber[0]);\n    hexNumber[0] = hexNumber[0] & 0b1111111;\n    const numBin = hexNumber\n        .map((x, i) => x\n        .toString(2)\n        .slice(i === 0 ? -6 : -7)\n        .padStart(i === 0 ? 6 : 7, '0'))\n        .reverse();\n    let num = new BigNumber(numBin.join(''), 2);\n    if (isNegative) {\n        num = num.times(-1);\n    }\n    return {\n        int: num.toFixed(),\n    };\n};\nconst primEncoder = (value) => {\n    const hasAnnot = +Array.isArray(value.annots);\n    const argsCount = Array.isArray(value.args) ? value.args.length : 0;\n    // Specify the number of args max is 3 without annotation\n    const preamble = pad(Math.min(2 * argsCount + hasAnnot + 0x03, 9), 2);\n    const op = opMappingReverse[value.prim];\n    let encodedArgs = (value.args || []).map((arg) => valueEncoder(arg)).join('');\n    const encodedAnnots = Array.isArray(value.annots) ? encodeAnnots(value.annots) : '';\n    if ((value.prim === 'LAMBDA' || value.prim === 'LAMBDA_REC') && argsCount) {\n        encodedArgs = pad(encodedArgs.length / 2) + encodedArgs + pad(0);\n    }\n    if ((value.prim === 'pair' || value.prim === 'Pair') && argsCount > 2) {\n        encodedArgs =\n            encodedAnnots === ''\n                ? pad(encodedArgs.length / 2) + encodedArgs + pad(0)\n                : pad(encodedArgs.length / 2) + encodedArgs;\n    }\n    if (value.prim === 'view' && value.args) {\n        encodedArgs = pad(encodedArgs.length / 2) + encodedArgs + pad(0);\n    }\n    return `${preamble}${op}${encodedArgs}${encodedAnnots}`;\n};\nconst primDecoder = (value, preamble) => {\n    const hasAnnot = (preamble[0] - 0x03) % 2 === 1;\n    let argsCount = Math.floor((preamble[0] - 0x03) / 2);\n    const op = value.consume(1)[0].toString(16).padStart(2, '0');\n    const result = {\n        prim: opMapping[op],\n    };\n    if (opMapping[op] === 'LAMBDA' || opMapping[op] === 'LAMBDA_REC') {\n        value.consume(4);\n    }\n    if (opMapping[op] === 'view') {\n        if (argsCount != 0) {\n            return primViewDecoder(value, result);\n        }\n        else {\n            return result;\n        }\n    }\n    let combPairArgs;\n    let combPairAnnots;\n    if ((opMapping[op] === 'pair' || opMapping[op] === 'Pair') && argsCount > 2) {\n        combPairArgs = decodeCombPair(value);\n        argsCount = 0;\n        combPairAnnots = decodeAnnots(value);\n    }\n    const args = new Array(argsCount).fill(0).map(() => valueDecoder(value));\n    if (opMapping[op] === 'LAMBDA' || opMapping[op] === 'LAMBDA_REC') {\n        value.consume(4);\n    }\n    if (combPairArgs) {\n        result['args'] = combPairArgs;\n    }\n    else if (args.length) {\n        result['args'] = args;\n    }\n    if (combPairAnnots && combPairAnnots[0] !== '') {\n        result['annots'] = combPairAnnots;\n    }\n    else if (hasAnnot) {\n        result['annots'] = decodeAnnots(value);\n    }\n    return result;\n};\nconst primViewDecoder = (value, result) => {\n    value.consume(4);\n    result['args'] = new Array(4).fill(0).map(() => valueDecoder(value));\n    value.consume(4);\n    return result;\n};\nconst decodeCombPair = (val) => {\n    const array = new Uint8ArrayConsumer(extractRequiredLen(val));\n    const args = [];\n    while (array.length() > 0) {\n        args.push(valueDecoder(array));\n    }\n    return args;\n};\nconst encodeAnnots = (value) => {\n    const mergedAnnot = value\n        .map((x) => {\n        return Buffer.from(x, 'utf8').toString('hex');\n    })\n        .join('20');\n    const len = mergedAnnot.length / 2;\n    return `${pad(len)}${mergedAnnot}`;\n};\nconst decodeAnnots = (val) => {\n    const len = val.consume(4);\n    const annotLen = parseInt(Buffer.from(len).toString('hex'), 16);\n    const restOfAnnot = val.consume(annotLen);\n    const restOfAnnotHex = Buffer.from(restOfAnnot).toString('hex');\n    return restOfAnnotHex.split('20').map((x) => Buffer.from(x, 'hex').toString('utf8'));\n};\n\n// https://tezos.gitlab.io/shell/p2p_api.html specifies data types and structure for forging\nconst prefixEncoder = (prefix$1) => (str) => {\n    return buf2hex(Buffer.from(b58cdecode(str, prefix[prefix$1])));\n};\nconst prefixDecoder = (pre) => (str) => {\n    const val = str.consume(prefixLength[pre]);\n    return b58cencode(val, prefix[pre]);\n};\nconst tz1Decoder = prefixDecoder(Prefix.TZ1);\nconst branchDecoder = prefixDecoder(Prefix.B);\nconst pkhDecoder = (val) => {\n    const prefix = val.consume(1);\n    if (prefix[0] === 0x00) {\n        return prefixDecoder(Prefix.TZ1)(val);\n    }\n    else if (prefix[0] === 0x01) {\n        return prefixDecoder(Prefix.TZ2)(val);\n    }\n    else if (prefix[0] === 0x02) {\n        return prefixDecoder(Prefix.TZ3)(val);\n    }\n};\nconst branchEncoder = prefixEncoder(Prefix.B);\nconst tz1Encoder = prefixEncoder(Prefix.TZ1);\nconst boolEncoder = (bool) => (bool ? 'ff' : '00');\nconst proposalEncoder = (proposal) => {\n    return prefixEncoder(Prefix.P)(proposal);\n};\nconst proposalDecoder = (proposal) => {\n    return prefixDecoder(Prefix.P)(proposal);\n};\nconst proposalsDecoder = (proposal) => {\n    const proposals = [];\n    proposal.consume(4);\n    while (proposal.length() > 0) {\n        proposals.push(proposalDecoder(proposal));\n    }\n    return proposals;\n};\nconst proposalsEncoder = (proposals) => {\n    return pad(32 * proposals.length) + proposals.map((x) => proposalEncoder(x)).join('');\n};\nconst ballotEncoder = (ballot) => {\n    switch (ballot) {\n        case 'yay':\n            return '00';\n        case 'nay':\n            return '01';\n        case 'pass':\n            return '02';\n        default:\n            throw new InvalidBallotValueError(ballot);\n    }\n};\nconst ballotDecoder = (ballot) => {\n    const value = ballot.consume(1);\n    switch (value[0]) {\n        case 0x00:\n            return 'yay';\n        case 0x01:\n            return 'nay';\n        case 0x02:\n            return 'pass';\n        default:\n            throw new DecodeBallotValueError(value[0].toString());\n    }\n};\nconst pvmKindEncoder = (pvm) => {\n    switch (pvm) {\n        case 'arith':\n            return '00';\n        case 'wasm_2_0_0':\n            return '01';\n        default:\n            throw new UnsupportedPvmKindError(pvm);\n    }\n};\nconst pvmKindDecoder = (pvm) => {\n    const value = pvm.consume(1);\n    switch (value[0]) {\n        case 0x00:\n            return 'arith';\n        case 0x01:\n            return 'wasm_2_0_0';\n        default:\n            throw new DecodePvmKindError(value[0].toString());\n    }\n};\nconst delegateEncoder = (val) => {\n    if (val) {\n        return boolEncoder(true) + pkhEncoder(val);\n    }\n    else {\n        return boolEncoder(false);\n    }\n};\nconst int32Encoder = (val) => {\n    const num = parseInt(String(val), 10);\n    const byte = [];\n    for (let i = 0; i < 4; i++) {\n        const shiftBy = (4 - (i + 1)) * 8;\n        byte.push((num & (0xff << shiftBy)) >> shiftBy);\n    }\n    return Buffer.from(byte).toString('hex');\n};\nconst int32Decoder = (val) => {\n    const num = val.consume(4);\n    let finalNum = 0;\n    for (let i = 0; i < num.length; i++) {\n        finalNum = finalNum | (num[i] << ((num.length - (i + 1)) * 8));\n    }\n    return finalNum;\n};\nconst int16Encoder = (val) => {\n    const num = parseInt(String(val), 10);\n    const byte = [];\n    for (let i = 0; i < 2; i++) {\n        const shiftBy = (2 - (i + 1)) * 8;\n        byte.push((num & (0xff << shiftBy)) >> shiftBy);\n    }\n    return Buffer.from(byte).toString('hex');\n};\nconst int16Decoder = (val) => {\n    const num = val.consume(2);\n    let finalNum = 0;\n    for (let i = 0; i < num.length; i++) {\n        finalNum = finalNum | (num[i] << ((num.length - (i + 1)) * 8));\n    }\n    return finalNum;\n};\nconst boolDecoder = (val) => {\n    const bool = val.consume(1);\n    return bool[0] === 0xff;\n};\nconst delegateDecoder = (val) => {\n    const hasDelegate = boolDecoder(val);\n    if (hasDelegate) {\n        return pkhDecoder(val);\n    }\n};\nconst pkhEncoder = (val) => {\n    const pubkeyPrefix = val.substring(0, 3);\n    switch (pubkeyPrefix) {\n        case Prefix.TZ1:\n            return '00' + prefixEncoder(Prefix.TZ1)(val);\n        case Prefix.TZ2:\n            return '01' + prefixEncoder(Prefix.TZ2)(val);\n        case Prefix.TZ3:\n            return '02' + prefixEncoder(Prefix.TZ3)(val);\n        case Prefix.TZ4:\n            return '03' + prefixEncoder(Prefix.TZ4)(val);\n        default:\n            throw new InvalidKeyHashError(val, invalidDetail(ValidationResult.NO_PREFIX_MATCHED) +\n                ` expecting one for the following \"${Prefix.TZ1}\", \"${Prefix.TZ2}\", \"${Prefix.TZ3}\" or \"${Prefix.TZ4}\".`);\n    }\n};\nconst publicKeyEncoder = (val) => {\n    const pubkeyPrefix = val.substring(0, 4);\n    switch (pubkeyPrefix) {\n        case Prefix.EDPK:\n            return '00' + prefixEncoder(Prefix.EDPK)(val);\n        case Prefix.SPPK:\n            return '01' + prefixEncoder(Prefix.SPPK)(val);\n        case Prefix.P2PK:\n            return '02' + prefixEncoder(Prefix.P2PK)(val);\n        default:\n            throw new InvalidPublicKeyError(val, invalidDetail(ValidationResult.NO_PREFIX_MATCHED) +\n                ` expecting one of the following '${Prefix.EDPK}', '${Prefix.SPPK}', '${Prefix.P2PK}' or '${Prefix.BLPK}'.`);\n    }\n};\nconst addressEncoder = (val) => {\n    const pubkeyPrefix = val.substring(0, 3);\n    switch (pubkeyPrefix) {\n        case Prefix.TZ1:\n        case Prefix.TZ2:\n        case Prefix.TZ3:\n        case Prefix.TZ4:\n            return '00' + pkhEncoder(val);\n        case Prefix.KT1:\n            return '01' + prefixEncoder(Prefix.KT1)(val) + '00';\n        default:\n            throw new InvalidAddressError(val, invalidDetail(ValidationResult.NO_PREFIX_MATCHED) +\n                ` expecting one of the following prefix '${Prefix.TZ1}', ${Prefix.TZ2}', '${Prefix.TZ3}', '${Prefix.TZ4}' or '${Prefix.KT1}'.`);\n    }\n};\nconst smartRollupAddressEncoder = (val) => {\n    if (val.substring(0, 3) !== Prefix.SR1) {\n        throw new InvalidSmartRollupAddressError(val, invalidDetail(ValidationResult.NO_PREFIX_MATCHED) + ` expecting prefix '${Prefix.SR1}'.`);\n    }\n    return prefixEncoder(Prefix.SR1)(val);\n};\nconst smartContractAddressEncoder = (val) => {\n    const prefix = val.substring(0, 3);\n    if (prefix === Prefix.KT1) {\n        return '01' + prefixEncoder(Prefix.KT1)(val) + '00';\n    }\n    throw new InvalidContractAddressError(val, invalidDetail(ValidationResult.NO_PREFIX_MATCHED) + ` expecting prefix '${Prefix.KT1}'.`);\n};\nconst publicKeyDecoder = (val) => {\n    const preamble = val.consume(1);\n    switch (preamble[0]) {\n        case 0x00:\n            return prefixDecoder(Prefix.EDPK)(val);\n        case 0x01:\n            return prefixDecoder(Prefix.SPPK)(val);\n        case 0x02:\n            return prefixDecoder(Prefix.P2PK)(val);\n        default:\n            throw new InvalidPublicKeyError(val.toString(), invalidDetail(ValidationResult.NO_PREFIX_MATCHED));\n    }\n};\nconst smartRollupCommitmentHashEncoder = (val) => {\n    const prefix = val.substring(0, 4);\n    if (prefix === Prefix.SRC1) {\n        return prefixEncoder(Prefix.SRC1)(val);\n    }\n    throw new InvalidSmartRollupCommitmentHashError(val, invalidDetail(ValidationResult.NO_PREFIX_MATCHED) + ` expecting prefix '${Prefix.SRC1}'`);\n};\nconst addressDecoder = (val) => {\n    const preamble = val.consume(1);\n    switch (preamble[0]) {\n        case 0x00:\n            return pkhDecoder(val);\n        case 0x01: {\n            const address = prefixDecoder(Prefix.KT1)(val);\n            val.consume(1);\n            return address;\n        }\n        default:\n            throw new InvalidAddressError(val.toString(), ': Unable to decode.');\n    }\n};\nconst smartRollupAddressDecoder = (val) => {\n    const address = prefixDecoder(Prefix.SR1)(val);\n    if (address.substring(0, 3) !== Prefix.SR1) {\n        throw new InvalidSmartRollupAddressError(address, invalidDetail(ValidationResult.NO_PREFIX_MATCHED) + ` expecting prefix '${Prefix.SR1}'.`);\n    }\n    return address;\n};\nconst smartContractAddressDecoder = (val) => {\n    const preamble = val.consume(1);\n    if (preamble[0] === 0x01) {\n        const scAddress = prefixDecoder(Prefix.KT1)(val);\n        val.consume(1);\n        return scAddress;\n    }\n    throw new InvalidContractAddressError(val.toString(), invalidDetail(ValidationResult.NO_PREFIX_MATCHED));\n};\nconst smartRollupCommitmentHashDecoder = (val) => {\n    const address = prefixDecoder(Prefix.SRC1)(val);\n    if (address.substring(0, 4) !== Prefix.SRC1) {\n        throw new InvalidSmartRollupCommitmentHashError(address, invalidDetail(ValidationResult.NO_PREFIX_MATCHED) + ` expecting prefix '${Prefix.SRC1}'`);\n    }\n    return address;\n};\nconst zarithEncoder = (n) => {\n    const fn = [];\n    let nn = new BigNumber$1(n, 10);\n    if (nn.isNaN()) {\n        throw new TypeError(`Invalid zarith number ${n}`);\n    }\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        if (nn.lt(128)) {\n            if (nn.lt(16))\n                fn.push('0');\n            fn.push(nn.toString(16));\n            break;\n        }\n        else {\n            let b = nn.mod(128);\n            nn = nn.minus(b);\n            nn = nn.dividedBy(128);\n            b = b.plus(128);\n            fn.push(b.toString(16));\n        }\n    }\n    return fn.join('');\n};\nconst zarithDecoder = (n) => {\n    let mostSignificantByte = 0;\n    while (mostSignificantByte < n.length() && (n.get(mostSignificantByte) & 128) !== 0) {\n        mostSignificantByte += 1;\n    }\n    let num = new BigNumber$1(0);\n    for (let i = mostSignificantByte; i >= 0; i -= 1) {\n        const tmp = n.get(i) & 0x7f;\n        num = num.multipliedBy(128);\n        num = num.plus(tmp);\n    }\n    n.consume(mostSignificantByte + 1);\n    return new BigNumber$1(num).toString();\n};\nconst entrypointDecoder = (value) => {\n    const preamble = pad(value.consume(1)[0], 2);\n    if (preamble in entrypointMapping) {\n        return entrypointMapping[preamble];\n    }\n    else {\n        const entry = extractRequiredLen(value, 1);\n        const entrypoint = Buffer.from(entry).toString('utf8');\n        if (entrypoint.length > ENTRYPOINT_MAX_LENGTH) {\n            throw new OversizedEntryPointError(entrypoint);\n        }\n        return entrypoint;\n    }\n};\nconst parametersDecoder = (val) => {\n    const preamble = val.consume(1);\n    if (preamble[0] === 0x00) {\n        return;\n    }\n    else {\n        const encodedEntrypoint = entrypointDecoder(val);\n        const params = extractRequiredLen(val);\n        const parameters = valueDecoder(new Uint8ArrayConsumer(params));\n        return {\n            entrypoint: encodedEntrypoint,\n            value: parameters,\n        };\n    }\n};\nconst entrypointEncoder = (entrypoint) => {\n    if (entrypoint in entrypointMappingReverse) {\n        return `${entrypointMappingReverse[entrypoint]}`;\n    }\n    else {\n        if (entrypoint.length > ENTRYPOINT_MAX_LENGTH) {\n            throw new OversizedEntryPointError(entrypoint);\n        }\n        const value = { string: entrypoint };\n        return `ff${valueEncoder(value).slice(8)}`;\n    }\n};\nconst parametersEncoder = (val) => {\n    if (!val || (val.entrypoint === 'default' && 'prim' in val.value && val.value.prim === 'Unit')) {\n        return '00';\n    }\n    const encodedEntrypoint = entrypointEncoder(val.entrypoint);\n    const parameters = valueEncoder(val.value);\n    const length = (parameters.length / 2).toString(16).padStart(8, '0');\n    return `ff${encodedEntrypoint}${length}${parameters}`;\n};\nconst valueParameterEncoder = (value) => {\n    const valueEncoded = valueEncoder(value);\n    return `${pad(valueEncoded.length / 2)}${valueEncoded}`;\n};\nconst valueParameterDecoder = (val) => {\n    const value = extractRequiredLen(val);\n    return valueDecoder(new Uint8ArrayConsumer(value));\n};\nconst blockPayloadHashEncoder = prefixEncoder(Prefix.VH);\nconst blockPayloadHashDecoder = prefixDecoder(Prefix.VH);\nconst entrypointNameEncoder = (entrypoint) => {\n    const value = { string: entrypoint };\n    return `${valueEncoder(value).slice(2)}`;\n};\nconst entrypointNameDecoder = (val) => {\n    const entry = extractRequiredLen(val);\n    return Buffer.from(entry).toString('utf8');\n};\nconst txRollupOriginationParamEncoder = (_value) => {\n    return '';\n};\nconst txRollupOriginationParamDecoder = (_val) => {\n    return {};\n};\nconst txRollupIdEncoder = prefixEncoder(Prefix.TXR1);\nconst txRollupIdDecoder = prefixDecoder(Prefix.TXR1);\nconst txRollupBatchContentEncoder = (value) => {\n    return `${pad(value.length / 2)}${value}`;\n};\nconst txRollupBatchContentDecoder = (val) => {\n    const value = extractRequiredLen(val);\n    return Buffer.from(value).toString('hex');\n};\nconst burnLimitEncoder = (val) => {\n    return !val ? '00' : `ff${zarithEncoder(val)}`;\n};\nconst burnLimitDecoder = (value) => {\n    const prefix = value.consume(1);\n    if (Buffer.from(prefix).toString('hex') !== '00') {\n        return zarithDecoder(value);\n    }\n};\nconst depositsLimitEncoder = (val) => {\n    return !val ? '00' : `ff${zarithEncoder(val)}`;\n};\nconst depositsLimitDecoder = (value) => {\n    const prefix = value.consume(1);\n    if (Buffer.from(prefix).toString('hex') !== '00') {\n        return zarithDecoder(value);\n    }\n};\nconst paddedBytesEncoder = (val, paddingLength = 8) => {\n    return `${pad(val.length / 2, paddingLength)}${val}`;\n};\nconst paddedBytesDecoder = (val) => {\n    const value = extractRequiredLen(val);\n    return Buffer.from(value).toString('hex');\n};\nconst smartRollupMessageEncoder = (val) => {\n    const message = val.reduce((prev, curr) => {\n        return prev + `${pad(curr.length / 2)}${curr}`;\n    }, '');\n    return `${pad(message.length / 2)}${message}`;\n};\nconst smartRollupMessageDecoder = (val) => {\n    const valueArray = extractRequiredLen(val);\n    const ret = stripLengthPrefixFromBytes(new Uint8ArrayConsumer(valueArray));\n    return ret.map((value) => Buffer.from(value).toString('hex'));\n};\n\nconst ManagerOperationSchema = {\n    branch: CODEC.BRANCH,\n    contents: [CODEC.OPERATION],\n};\nconst ActivationSchema = {\n    pkh: CODEC.TZ1,\n    secret: CODEC.SECRET,\n};\nconst RevealSchema = {\n    source: CODEC.PKH,\n    fee: CODEC.ZARITH,\n    counter: CODEC.ZARITH,\n    gas_limit: CODEC.ZARITH,\n    storage_limit: CODEC.ZARITH,\n    public_key: CODEC.PUBLIC_KEY,\n};\nconst DelegationSchema = {\n    source: CODEC.PKH,\n    fee: CODEC.ZARITH,\n    counter: CODEC.ZARITH,\n    gas_limit: CODEC.ZARITH,\n    storage_limit: CODEC.ZARITH,\n    delegate: CODEC.DELEGATE,\n};\nconst TransactionSchema = {\n    source: CODEC.PKH,\n    fee: CODEC.ZARITH,\n    counter: CODEC.ZARITH,\n    gas_limit: CODEC.ZARITH,\n    storage_limit: CODEC.ZARITH,\n    amount: CODEC.ZARITH,\n    destination: CODEC.ADDRESS,\n    parameters: CODEC.PARAMETERS,\n};\nconst OriginationSchema = {\n    source: CODEC.PKH,\n    fee: CODEC.ZARITH,\n    counter: CODEC.ZARITH,\n    gas_limit: CODEC.ZARITH,\n    storage_limit: CODEC.ZARITH,\n    balance: CODEC.ZARITH,\n    delegate: CODEC.DELEGATE,\n    script: CODEC.SCRIPT,\n};\nconst BallotSchema = {\n    source: CODEC.PKH,\n    period: CODEC.INT32,\n    proposal: CODEC.PROPOSAL,\n    ballot: CODEC.BALLOT_STATEMENT,\n};\nconst EndorsementSchema = {\n    slot: CODEC.INT16,\n    level: CODEC.INT32,\n    round: CODEC.INT32,\n    block_payload_hash: CODEC.BLOCK_PAYLOAD_HASH,\n};\nconst SeedNonceRevelationSchema = {\n    level: CODEC.INT32,\n    nonce: CODEC.RAW,\n};\nconst ProposalsSchema = {\n    source: CODEC.PKH,\n    period: CODEC.INT32,\n    proposals: CODEC.PROPOSAL_ARR,\n};\nconst RegisterGlobalConstantSchema = {\n    source: CODEC.PKH,\n    fee: CODEC.ZARITH,\n    counter: CODEC.ZARITH,\n    gas_limit: CODEC.ZARITH,\n    storage_limit: CODEC.ZARITH,\n    value: CODEC.VALUE,\n};\nconst TransferTicketSchema = {\n    source: CODEC.PKH,\n    fee: CODEC.ZARITH,\n    counter: CODEC.ZARITH,\n    gas_limit: CODEC.ZARITH,\n    storage_limit: CODEC.ZARITH,\n    ticket_contents: CODEC.VALUE,\n    ticket_ty: CODEC.VALUE,\n    ticket_ticketer: CODEC.ADDRESS,\n    ticket_amount: CODEC.ZARITH,\n    destination: CODEC.ADDRESS,\n    entrypoint: CODEC.ENTRYPOINT,\n};\nconst TxRollupOriginationSchema = {\n    source: CODEC.PKH,\n    fee: CODEC.ZARITH,\n    counter: CODEC.ZARITH,\n    gas_limit: CODEC.ZARITH,\n    storage_limit: CODEC.ZARITH,\n    tx_rollup_origination: CODEC.TX_ROLLUP_ORIGINATION_PARAM,\n};\nconst TxRollupSubmitBatchSchema = {\n    source: CODEC.PKH,\n    fee: CODEC.ZARITH,\n    counter: CODEC.ZARITH,\n    gas_limit: CODEC.ZARITH,\n    storage_limit: CODEC.ZARITH,\n    rollup: CODEC.TX_ROLLUP_ID,\n    content: CODEC.TX_ROLLUP_BATCH_CONTENT,\n    burn_limit: CODEC.BURN_LIMIT,\n};\nconst IncreasePaidStorageSchema = {\n    source: CODEC.PKH,\n    fee: CODEC.ZARITH,\n    counter: CODEC.ZARITH,\n    gas_limit: CODEC.ZARITH,\n    storage_limit: CODEC.ZARITH,\n    amount: CODEC.ZARITH,\n    destination: CODEC.SMART_CONTRACT_ADDRESS,\n};\nconst UpdateConsensusKeySchema = {\n    source: CODEC.PKH,\n    fee: CODEC.ZARITH,\n    counter: CODEC.ZARITH,\n    gas_limit: CODEC.ZARITH,\n    storage_limit: CODEC.ZARITH,\n    pk: CODEC.PUBLIC_KEY,\n};\nconst DrainDelegateSchema = {\n    consensus_key: CODEC.PKH,\n    delegate: CODEC.PKH,\n    destination: CODEC.PKH,\n};\nconst SetDepositsLimitSchema = {\n    source: CODEC.PKH,\n    fee: CODEC.ZARITH,\n    counter: CODEC.ZARITH,\n    gas_limit: CODEC.ZARITH,\n    storage_limit: CODEC.ZARITH,\n    limit: CODEC.DEPOSITS_LIMIT,\n};\nconst SmartRollupOriginateSchema = {\n    source: CODEC.PKH,\n    fee: CODEC.ZARITH,\n    counter: CODEC.ZARITH,\n    gas_limit: CODEC.ZARITH,\n    storage_limit: CODEC.ZARITH,\n    pvm_kind: CODEC.PVM_KIND,\n    kernel: CODEC.PADDED_BYTES,\n    origination_proof: CODEC.PADDED_BYTES,\n    parameters_ty: CODEC.VALUE,\n};\nconst SmartRollupAddMessagesSchema = {\n    source: CODEC.PKH,\n    fee: CODEC.ZARITH,\n    counter: CODEC.ZARITH,\n    gas_limit: CODEC.ZARITH,\n    storage_limit: CODEC.ZARITH,\n    message: CODEC.SMART_ROLLUP_MESSAGE,\n};\nconst SmartRollupExecuteOutboxMessageSchema = {\n    source: CODEC.PKH,\n    fee: CODEC.ZARITH,\n    counter: CODEC.ZARITH,\n    gas_limit: CODEC.ZARITH,\n    storage_limit: CODEC.ZARITH,\n    rollup: CODEC.SMART_ROLLUP_ADDRESS,\n    cemented_commitment: CODEC.SMART_ROLLUP_COMMITMENT_HASH,\n    output_proof: CODEC.PADDED_BYTES,\n};\nconst FailingNoopSchema = {\n    arbitrary: CODEC.PADDED_BYTES,\n};\nconst operationEncoder = (encoders) => (operation) => {\n    if (!(operation.kind in encoders) || !(operation.kind in kindMappingReverse)) {\n        throw new InvalidOperationKindError(operation.kind);\n    }\n    return kindMappingReverse[operation.kind] + encoders[operation.kind](operation);\n};\nconst operationDecoder = (decoders) => (value) => {\n    const op = value.consume(1);\n    const operationName = kindMapping[op[0]];\n    if (operationName === undefined) {\n        throw new UnsupportedOperationError(op[0].toString());\n    }\n    const decodedObj = decoders[operationName](value);\n    if (typeof decodedObj !== 'object') {\n        throw new OperationDecodingError('Invalid operation, cannot be decoded.');\n    }\n    return Object.assign({ kind: operationName }, decodedObj);\n};\nconst schemaEncoder = (encoders) => (schema) => (value) => {\n    const keys = Object.keys(schema);\n    return keys.reduce((prev, key) => {\n        const valueToEncode = schema[key];\n        if (value && Array.isArray(valueToEncode)) {\n            const encoder = encoders[valueToEncode[0]];\n            const values = value[key];\n            if (!Array.isArray(values)) {\n                throw new OperationEncodingError(`Invalid operation value \"${JSON.stringify(values)}\" of key \"${key}, expected value to be Array.`);\n            }\n            return (prev + values.reduce((prevBytes, current) => prevBytes + encoder(current), ''));\n        }\n        else {\n            const encoder = encoders[valueToEncode];\n            return prev + encoder(value[key]);\n        }\n    }, '');\n};\nconst schemaDecoder = (decoders) => (schema) => (value) => {\n    const keys = Object.keys(schema);\n    return keys.reduce((prev, key) => {\n        const valueToEncode = schema[key];\n        if (Array.isArray(valueToEncode)) {\n            const decoder = decoders[valueToEncode[0]];\n            const decoded = [];\n            const lastLength = value.length();\n            while (value.length() > 0) {\n                decoded.push(decoder(value));\n                if (lastLength === value.length()) {\n                    throw new OperationDecodingError('Unable to decode value');\n                }\n            }\n            return Object.assign(Object.assign({}, prev), { [key]: decoded });\n        }\n        else {\n            const decoder = decoders[valueToEncode];\n            const result = decoder(value);\n            if (typeof result !== 'undefined') {\n                return Object.assign(Object.assign({}, prev), { [key]: result });\n            }\n            else {\n                return Object.assign({}, prev);\n            }\n        }\n    }, {});\n};\n\nconst decoders = {\n    [CODEC.SECRET]: (val) => toHexString(val.consume(20)),\n    [CODEC.RAW]: (val) => toHexString(val.consume(32)),\n    [CODEC.TZ1]: tz1Decoder,\n    [CODEC.BRANCH]: branchDecoder,\n    [CODEC.ZARITH]: zarithDecoder,\n    [CODEC.PUBLIC_KEY]: publicKeyDecoder,\n    [CODEC.PKH]: pkhDecoder,\n    [CODEC.DELEGATE]: delegateDecoder,\n    [CODEC.INT32]: int32Decoder,\n    [CODEC.SCRIPT]: scriptDecoder,\n    [CODEC.BALLOT_STATEMENT]: ballotDecoder,\n    [CODEC.PROPOSAL]: proposalDecoder,\n    [CODEC.PROPOSAL_ARR]: proposalsDecoder,\n    [CODEC.PARAMETERS]: parametersDecoder,\n    [CODEC.ADDRESS]: addressDecoder,\n    [CODEC.SMART_ROLLUP_ADDRESS]: smartRollupAddressDecoder,\n    [CODEC.SMART_CONTRACT_ADDRESS]: smartContractAddressDecoder,\n    [CODEC.SMART_ROLLUP_COMMITMENT_HASH]: smartRollupCommitmentHashDecoder,\n    [CODEC.VALUE]: valueParameterDecoder,\n    [CODEC.INT16]: int16Decoder,\n    [CODEC.BLOCK_PAYLOAD_HASH]: blockPayloadHashDecoder,\n    [CODEC.ENTRYPOINT]: entrypointNameDecoder,\n    [CODEC.TX_ROLLUP_ORIGINATION_PARAM]: txRollupOriginationParamDecoder,\n    [CODEC.TX_ROLLUP_ID]: txRollupIdDecoder,\n    [CODEC.TX_ROLLUP_BATCH_CONTENT]: txRollupBatchContentDecoder,\n    [CODEC.BURN_LIMIT]: burnLimitDecoder,\n    [CODEC.DEPOSITS_LIMIT]: depositsLimitDecoder,\n    [CODEC.PVM_KIND]: pvmKindDecoder,\n    [CODEC.PADDED_BYTES]: paddedBytesDecoder,\n    [CODEC.SMART_ROLLUP_MESSAGE]: smartRollupMessageDecoder,\n};\ndecoders[CODEC.OPERATION] = operationDecoder(decoders);\ndecoders[CODEC.OP_ACTIVATE_ACCOUNT] = (val) => schemaDecoder(decoders)(ActivationSchema)(val);\ndecoders[CODEC.OP_FAILING_NOOP] = (val) => schemaDecoder(decoders)(FailingNoopSchema)(val);\ndecoders[CODEC.OP_DELEGATION] = (val) => schemaDecoder(decoders)(DelegationSchema)(val);\ndecoders[CODEC.OP_TRANSACTION] = (val) => schemaDecoder(decoders)(TransactionSchema)(val);\ndecoders[CODEC.OP_ORIGINATION] = (val) => schemaDecoder(decoders)(OriginationSchema)(val);\ndecoders[CODEC.OP_BALLOT] = (val) => schemaDecoder(decoders)(BallotSchema)(val);\ndecoders[CODEC.OP_ENDORSEMENT] = (val) => schemaDecoder(decoders)(EndorsementSchema)(val);\ndecoders[CODEC.OP_SEED_NONCE_REVELATION] = (val) => schemaDecoder(decoders)(SeedNonceRevelationSchema)(val);\ndecoders[CODEC.OP_PROPOSALS] = (val) => schemaDecoder(decoders)(ProposalsSchema)(val);\ndecoders[CODEC.OP_REVEAL] = (val) => schemaDecoder(decoders)(RevealSchema)(val);\ndecoders[CODEC.OP_REGISTER_GLOBAL_CONSTANT] = (val) => schemaDecoder(decoders)(RegisterGlobalConstantSchema)(val);\ndecoders[CODEC.OP_TRANSFER_TICKET] = (val) => schemaDecoder(decoders)(TransferTicketSchema)(val);\ndecoders[CODEC.OP_TX_ROLLUP_ORIGINATION] = (val) => schemaDecoder(decoders)(TxRollupOriginationSchema)(val);\ndecoders[CODEC.OP_TX_ROLLUP_SUBMIT_BATCH] = (val) => schemaDecoder(decoders)(TxRollupSubmitBatchSchema)(val);\ndecoders[CODEC.OP_INCREASE_PAID_STORAGE] = (val) => schemaDecoder(decoders)(IncreasePaidStorageSchema)(val);\ndecoders[CODEC.OP_UPDATE_CONSENSUS_KEY] = (val) => schemaDecoder(decoders)(UpdateConsensusKeySchema)(val);\ndecoders[CODEC.OP_DRAIN_DELEGATE] = (val) => schemaDecoder(decoders)(DrainDelegateSchema)(val);\ndecoders[CODEC.OP_SMART_ROLLUP_ORIGINATE] = (val) => schemaDecoder(decoders)(SmartRollupOriginateSchema)(val);\ndecoders[CODEC.OP_SMART_ROLLUP_ADD_MESSAGES] = (val) => schemaDecoder(decoders)(SmartRollupAddMessagesSchema)(val);\ndecoders[CODEC.OP_SMART_ROLLUP_EXECUTE_OUTBOX_MESSAGE] = (val) => schemaDecoder(decoders)(SmartRollupExecuteOutboxMessageSchema)(val);\ndecoders[CODEC.MANAGER] = schemaDecoder(decoders)(ManagerOperationSchema);\ndecoders[CODEC.OP_SET_DEPOSITS_LIMIT] = (val) => schemaDecoder(decoders)(SetDepositsLimitSchema)(val);\n\nconst encoders = {\n    [CODEC.SECRET]: (val) => val,\n    [CODEC.RAW]: (val) => val,\n    [CODEC.TZ1]: tz1Encoder,\n    [CODEC.BRANCH]: branchEncoder,\n    [CODEC.ZARITH]: zarithEncoder,\n    [CODEC.PUBLIC_KEY]: publicKeyEncoder,\n    [CODEC.PKH]: pkhEncoder,\n    [CODEC.DELEGATE]: delegateEncoder,\n    [CODEC.SCRIPT]: scriptEncoder,\n    [CODEC.BALLOT_STATEMENT]: ballotEncoder,\n    [CODEC.PROPOSAL]: proposalEncoder,\n    [CODEC.PROPOSAL_ARR]: proposalsEncoder,\n    [CODEC.INT32]: int32Encoder,\n    [CODEC.PARAMETERS]: parametersEncoder,\n    [CODEC.ADDRESS]: addressEncoder,\n    [CODEC.SMART_ROLLUP_ADDRESS]: smartRollupAddressEncoder,\n    [CODEC.SMART_CONTRACT_ADDRESS]: smartContractAddressEncoder,\n    [CODEC.SMART_ROLLUP_COMMITMENT_HASH]: smartRollupCommitmentHashEncoder,\n    [CODEC.VALUE]: valueParameterEncoder,\n    [CODEC.INT16]: int16Encoder,\n    [CODEC.BLOCK_PAYLOAD_HASH]: blockPayloadHashEncoder,\n    [CODEC.ENTRYPOINT]: entrypointNameEncoder,\n    [CODEC.TX_ROLLUP_ORIGINATION_PARAM]: txRollupOriginationParamEncoder,\n    [CODEC.TX_ROLLUP_ID]: txRollupIdEncoder,\n    [CODEC.TX_ROLLUP_BATCH_CONTENT]: txRollupBatchContentEncoder,\n    [CODEC.BURN_LIMIT]: burnLimitEncoder,\n    [CODEC.DEPOSITS_LIMIT]: depositsLimitEncoder,\n    [CODEC.PVM_KIND]: pvmKindEncoder,\n    [CODEC.PADDED_BYTES]: paddedBytesEncoder,\n    [CODEC.SMART_ROLLUP_MESSAGE]: smartRollupMessageEncoder,\n};\nencoders[CODEC.OPERATION] = operationEncoder(encoders);\nencoders[CODEC.OP_ACTIVATE_ACCOUNT] = (val) => schemaEncoder(encoders)(ActivationSchema)(val);\nencoders[CODEC.OP_DELEGATION] = (val) => schemaEncoder(encoders)(DelegationSchema)(val);\nencoders[CODEC.OP_TRANSACTION] = (val) => schemaEncoder(encoders)(TransactionSchema)(val);\nencoders[CODEC.OP_ORIGINATION] = (val) => schemaEncoder(encoders)(OriginationSchema)(val);\nencoders[CODEC.OP_BALLOT] = (val) => schemaEncoder(encoders)(BallotSchema)(val);\nencoders[CODEC.OP_ENDORSEMENT] = (val) => schemaEncoder(encoders)(EndorsementSchema)(val);\nencoders[CODEC.OP_SEED_NONCE_REVELATION] = (val) => schemaEncoder(encoders)(SeedNonceRevelationSchema)(val);\nencoders[CODEC.OP_PROPOSALS] = (val) => schemaEncoder(encoders)(ProposalsSchema)(val);\nencoders[CODEC.OP_REVEAL] = (val) => schemaEncoder(encoders)(RevealSchema)(val);\nencoders[CODEC.OP_REGISTER_GLOBAL_CONSTANT] = (val) => schemaEncoder(encoders)(RegisterGlobalConstantSchema)(val);\nencoders[CODEC.OP_TRANSFER_TICKET] = (val) => schemaEncoder(encoders)(TransferTicketSchema)(val);\nencoders[CODEC.OP_TX_ROLLUP_ORIGINATION] = (val) => schemaEncoder(encoders)(TxRollupOriginationSchema)(val);\nencoders[CODEC.OP_TX_ROLLUP_SUBMIT_BATCH] = (val) => schemaEncoder(encoders)(TxRollupSubmitBatchSchema)(val);\nencoders[CODEC.OP_INCREASE_PAID_STORAGE] = (val) => schemaEncoder(encoders)(IncreasePaidStorageSchema)(val);\nencoders[CODEC.OP_UPDATE_CONSENSUS_KEY] = (val) => schemaEncoder(encoders)(UpdateConsensusKeySchema)(val);\nencoders[CODEC.OP_DRAIN_DELEGATE] = (val) => schemaEncoder(encoders)(DrainDelegateSchema)(val);\nencoders[CODEC.OP_SMART_ROLLUP_ORIGINATE] = (val) => schemaEncoder(encoders)(SmartRollupOriginateSchema)(val);\nencoders[CODEC.OP_SMART_ROLLUP_ADD_MESSAGES] = (val) => schemaEncoder(encoders)(SmartRollupAddMessagesSchema)(val);\nencoders[CODEC.OP_SMART_ROLLUP_EXECUTE_OUTBOX_MESSAGE] = (val) => schemaEncoder(encoders)(SmartRollupExecuteOutboxMessageSchema)(val);\nencoders[CODEC.MANAGER] = schemaEncoder(encoders)(ManagerOperationSchema);\nencoders[CODEC.OP_SET_DEPOSITS_LIMIT] = (val) => schemaEncoder(encoders)(SetDepositsLimitSchema)(val);\nencoders[CODEC.OP_FAILING_NOOP] = (val) => schemaEncoder(encoders)(FailingNoopSchema)(val);\n\nconst OperationKindMapping = {\n    activate_account: ActivationSchema,\n    reveal: RevealSchema,\n    delegation: DelegationSchema,\n    transaction: TransactionSchema,\n    origination: OriginationSchema,\n    ballot: BallotSchema,\n    endorsement: EndorsementSchema,\n    seed_nonce_revelation: SeedNonceRevelationSchema,\n    proposals: ProposalsSchema,\n    register_global_constant: RegisterGlobalConstantSchema,\n    transfer_ticket: TransferTicketSchema,\n    tx_rollup_origination: TxRollupOriginationSchema,\n    tx_rollup_submit_batch: TxRollupSubmitBatchSchema,\n    increase_paid_storage: IncreasePaidStorageSchema,\n    update_consensus_key: UpdateConsensusKeySchema,\n    drain_delegate: DrainDelegateSchema,\n    set_deposits_limit: SetDepositsLimitSchema,\n    smart_rollup_originate: SmartRollupOriginateSchema,\n    smart_rollup_add_messages: SmartRollupAddMessagesSchema,\n    smart_rollup_execute_outbox_message: SmartRollupExecuteOutboxMessageSchema,\n    failing_noop: FailingNoopSchema,\n};\n// Asymmetric difference: only account for things in arr2 that are not present in arr1, not vice versa\nconst getArrayDifference = (arr1, arr2) => {\n    return arr2.filter((x) => !arr1.includes(x));\n};\nconst deleteArrayElementByValue = (array, item) => {\n    return array.filter((e) => e !== item);\n};\n/**\n * @returns A boolean value to indicate whether the operation kind is valid or not\n */\nconst validateOperationKind = (opKind) => {\n    const opKindList = Object.keys(OperationKindMapping);\n    return opKindList.includes(opKind);\n};\n/**\n *  returns 0 when the two array of properties are identical or the passed property\n *  does not have any missing parameters from the corresponding schema\n *\n *  @returns array element differences if there are missing required property keys\n */\nconst validateMissingProperty = (operationContent) => {\n    const kind = operationContent.kind;\n    const keys = Object.keys(operationContent);\n    const cleanKeys = deleteArrayElementByValue(keys, 'kind');\n    const schemaKeys = Object.keys(OperationKindMapping[kind]);\n    return getArrayDifference(cleanKeys, schemaKeys);\n};\n\nvar ProtocolsHash;\n(function (ProtocolsHash) {\n    ProtocolsHash[\"Pt24m4xi\"] = \"Pt24m4xiPbLDhVgVfABUjirbmda3yohdN82Sp9FeuAXJ4eV9otd\";\n    ProtocolsHash[\"PsBABY5H\"] = \"PsBABY5HQTSkA4297zNHfsZNKtxULfL18y95qb3m53QJiXGmrbU\";\n    ProtocolsHash[\"PsBabyM1\"] = \"PsBabyM1eUXZseaJdmXFApDSBqj8YBfwELoxZHHW77EMcAbbwAS\";\n    ProtocolsHash[\"PsCARTHA\"] = \"PsCARTHAGazKbHtnKfLzQg3kms52kSRpgnDY982a9oYsSXRLQEb\";\n    ProtocolsHash[\"PsDELPH1\"] = \"PsDELPH1Kxsxt8f9eWbxQeRxkjfbxoqM52jvs5Y5fBxWWh4ifpo\";\n    ProtocolsHash[\"PtEdo2Zk\"] = \"PtEdo2ZkT9oKpimTah6x2embF25oss54njMuPzkJTEi5RqfdZFA\";\n    ProtocolsHash[\"PsFLorena\"] = \"PsFLorenaUUuikDWvMDr6fGBRG8kt3e3D3fHoXK1j1BFRxeSH4i\";\n    ProtocolsHash[\"PtGRANADs\"] = \"PtGRANADsDU8R9daYKAgWnQYAJ64omN1o3KMGVCykShA97vQbvV\";\n    ProtocolsHash[\"PtHangz2\"] = \"PtHangz2aRngywmSRGGvrcTyMbbdpWdpFKuS4uMWxg2RaH9i1qx\";\n    ProtocolsHash[\"Psithaca2\"] = \"Psithaca2MLRFYargivpo7YvUr7wUDqyxrdhC5CQq78mRvimz6A\";\n    ProtocolsHash[\"PtJakart2\"] = \"PtJakart2xVj7pYXJBXrqHgd82rdkLey5ZeeGwDgPp9rhQUbSqY\";\n    ProtocolsHash[\"PtKathman\"] = \"PtKathmankSpLLDALzWw7CGD2j2MtyveTwboEYokqUCP4a1LxMg\";\n    ProtocolsHash[\"PtLimaPtL\"] = \"PtLimaPtLMwfNinJi9rCfDPWea8dFgTZ1MeJ9f1m2SRic6ayiwW\";\n    ProtocolsHash[\"PtMumbaii\"] = \"PtMumbaiiFFEGbew1rRjzSPyzRbA51Tm3RVZL5suHPxSZYDhCEc\";\n    ProtocolsHash[\"PtMumbai2\"] = \"PtMumbai2TmsJHNGRkD8v8YDbtao7BLUC3wjASn1inAKLFCjaH1\";\n    ProtocolsHash[\"PtNairobi\"] = \"PtNairobiyssHuh87hEhfVBGCVrK3WnS8Z2FT4ymB5tAa4r1nQf\";\n    ProtocolsHash[\"ProtoALpha\"] = \"ProtoALphaALphaALphaALphaALphaALphaALphaALphaDdp3zK\";\n})(ProtocolsHash || (ProtocolsHash = {}));\n\n// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\nconst VERSION = {\n    \"commitHash\": \"a908ab176a8c52c025fd43e7acd452415396f54e\",\n    \"version\": \"17.4.0\"\n};\n\n/**\n * @packageDocumentation\n * @module @taquito/local-forging\n */\nconst PROTOCOL_CURRENT = ProtocolsHash.PtMumbai2;\nfunction getCodec(codec, _proto) {\n    return {\n        encoder: encoders[codec],\n        decoder: (hex) => {\n            const consumer = Uint8ArrayConsumer.fromHexString(hex);\n            return decoders[codec](consumer);\n        },\n    };\n}\nclass LocalForger {\n    constructor(protocolHash = PROTOCOL_CURRENT) {\n        this.protocolHash = protocolHash;\n        this.codec = getCodec(CODEC.MANAGER, this.protocolHash);\n    }\n    forge(params) {\n        const branchValidation = validateBlock(params.branch);\n        if (branchValidation !== ValidationResult.VALID) {\n            throw new InvalidBlockHashError(params.branch, invalidDetail(branchValidation));\n        }\n        for (const content of params.contents) {\n            if (!validateOperationKind(content.kind)) {\n                throw new InvalidOperationKindError(content.kind);\n            }\n            const diff = validateMissingProperty(content);\n            if (diff.length === 1) {\n                if (content.kind === 'delegation' && diff[0] === 'delegate') {\n                    continue;\n                }\n                else if (content.kind === 'origination' && diff[0] === 'delegate') {\n                    continue;\n                }\n                else if (content.kind === 'transaction' && diff[0] === 'parameters') {\n                    continue;\n                }\n                else if (content.kind === 'set_deposits_limit' && diff[0] === 'limit') {\n                    continue;\n                }\n                else if (content.kind === 'tx_rollup_submit_batch' &&\n                    diff[0] === 'burn_limit') {\n                    continue;\n                }\n                else {\n                    throw new InvalidOperationSchemaError(content, `missing properties \"${diff.join(', ')}\"`);\n                }\n            }\n            else if (diff.length > 1) {\n                throw new InvalidOperationSchemaError(content, `missing properties \"${diff.join(', ')}\"`);\n            }\n        }\n        const forged = this.codec.encoder(params).toLowerCase();\n        return Promise.resolve(forged);\n    }\n    parse(hex) {\n        return Promise.resolve(this.codec.decoder(hex));\n    }\n}\nconst localForger = new LocalForger();\n\nexport { CODEC, LocalForger, ProtocolsHash, Uint8ArrayConsumer, VERSION, decoders, encoders, getCodec, localForger, opMapping, opMappingReverse };\n//# sourceMappingURL=taquito-local-forging.es6.js.map\n", "import { OpKind, RpcClient } from '@taquito/rpc';\nexport { OpKind } from '@taquito/rpc';\nimport { HttpResponseError, STATUS_CODE } from '@taquito/http-utils';\nimport { TezosToolkitConfigError, ParameterValidationError, RpcError, TaquitoError, NetworkError, InvalidOperationHashError, InvalidAddressError, InvalidOperationKindError as InvalidOperationKindError$1, InvalidContractAddressError, InvalidViewParameterError, DeprecationError, InvalidChainIdError, PublicKeyNotFoundError, InvalidAmountError, InvalidKeyHashError } from '@taquito/core';\nimport { Observable, ReplaySubject, BehaviorSubject, throwError, defer, range, of, EMPTY, combineLatest, from, concat, Subject, NEVER, timer } from 'rxjs';\nimport { switchMap, timeout, concatMap, endWith, tap, shareReplay, map, filter, first, catchError, share, distinctUntilChanged, takeWhile, startWith, mergeMap, takeUntil, retry, pluck, distinctUntilKeyChanged, publish, refCount } from 'rxjs/operators';\nimport { Schema, ParameterSchema, ViewSchema, EventSchema, MichelsonMap } from '@taquito/michelson-encoder';\nexport { MichelsonMap, UnitValue } from '@taquito/michelson-encoder';\nimport { format, validateOperation, ValidationResult, InvalidOperationKindError, validateAddress, invalidDetail, validateContractAddress, validateChain, validateKeyHash, InvalidKeyHashError as InvalidKeyHashError$1, encodeExpr } from '@taquito/utils';\nimport BigNumber, { BigNumber as BigNumber$1 } from 'bignumber.js';\nimport { Parser, packDataBytes } from '@taquito/michel-codec';\nimport { LocalForger } from '@taquito/local-forging';\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\nfunction formatErrorMessage(error, stringToReplace) {\n    const body = JSON.parse(error.body);\n    if (body[0] && body[0].kind && body[0].msg) {\n        const newBody = JSON.stringify({\n            kind: body[0].kind,\n            id: body[0].id,\n            msg: body[0].msg.replace(stringToReplace, ''),\n        });\n        return new HttpResponseError(`Http error response: (${error.status}) ${newBody}`, error.status, error.statusText, newBody, error.url);\n    }\n    else {\n        return error;\n    }\n}\n\nclass RpcInjector {\n    constructor(context) {\n        this.context = context;\n    }\n    inject(signedOperationBytes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let hash;\n            try {\n                hash = yield this.context.rpc.injectOperation(signedOperationBytes);\n            }\n            catch (error) {\n                const stringToStrip = '. You may want to use --replace to provide adequate fee and replace it';\n                if (error instanceof HttpResponseError && error.message.includes(stringToStrip)) {\n                    throw formatErrorMessage(error, stringToStrip);\n                }\n                else {\n                    throw error;\n                }\n            }\n            return hash;\n        });\n    }\n}\n\n/**\n *  @category Error\n *  @description Error that indicates no signer has been configured in the TezosToolkit instance\n */\nclass UnconfiguredSignerError extends TezosToolkitConfigError {\n    constructor() {\n        super();\n        this.name = 'UnconfiguredSignerError';\n        this.message =\n            'No signer has been configured. Please configure one by calling setProvider({signer}) on your TezosToolkit instance.';\n    }\n}\n\n/**\n * @description Default signer implementation which does nothing and produce invalid signature\n * @throw {@link UnconfiguredSignerError}\n */\nclass NoopSigner {\n    publicKey() {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw new UnconfiguredSignerError();\n        });\n    }\n    publicKeyHash() {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw new UnconfiguredSignerError();\n        });\n    }\n    secretKey() {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw new UnconfiguredSignerError();\n        });\n    }\n    sign(_bytes, _watermark) {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw new UnconfiguredSignerError();\n        });\n    }\n}\n\nfunction createObservableFromSubscription(sub) {\n    return new Observable((subscriber) => {\n        sub.on('data', (data) => {\n            subscriber.next(data);\n        });\n        sub.on('error', (error) => {\n            subscriber.error(error);\n        });\n        sub.on('close', () => {\n            subscriber.complete();\n        });\n        return () => {\n            sub.close();\n        };\n    });\n}\n\nconst DEFAULT_GAS_LIMIT = {\n    DELEGATION: 10600,\n    ORIGINATION: 10600,\n    TRANSFER: 10600,\n    /* This is used for gas_limit. There is no harm in setting a higher limit.\n     Only if an account has a balance that is very close to the total gas consumption,\n     then this margin can fail the operation.\n     Another benefit of this higher value is that then Dapps build with Taquito 17 can\n     still work with Mumbainet, as this value is higher than the reveal cost in Mumbai.\n    */\n    REVEAL_TZ1: 1000,\n    REVEAL_TZ2: 1000,\n    REVEAL_TZ3: 2000,\n    REVEAL_TZ4: 2000,\n};\nconst DEFAULT_FEE = {\n    DELEGATION: 1257,\n    ORIGINATION: 10000,\n    TRANSFER: 10000,\n    REVEAL: 374,\n};\nconst DEFAULT_STORAGE_LIMIT = {\n    DELEGATION: 0,\n    ORIGINATION: 257,\n    TRANSFER: 257,\n    REVEAL: 0,\n};\nconst COST_PER_BYTE = 250;\nvar Protocols;\n(function (Protocols) {\n    Protocols[\"Pt24m4xi\"] = \"Pt24m4xiPbLDhVgVfABUjirbmda3yohdN82Sp9FeuAXJ4eV9otd\";\n    Protocols[\"PsBABY5H\"] = \"PsBABY5HQTSkA4297zNHfsZNKtxULfL18y95qb3m53QJiXGmrbU\";\n    Protocols[\"PsBabyM1\"] = \"PsBabyM1eUXZseaJdmXFApDSBqj8YBfwELoxZHHW77EMcAbbwAS\";\n    Protocols[\"PsCARTHA\"] = \"PsCARTHAGazKbHtnKfLzQg3kms52kSRpgnDY982a9oYsSXRLQEb\";\n    Protocols[\"PsDELPH1\"] = \"PsDELPH1Kxsxt8f9eWbxQeRxkjfbxoqM52jvs5Y5fBxWWh4ifpo\";\n    Protocols[\"PtEdo2Zk\"] = \"PtEdo2ZkT9oKpimTah6x2embF25oss54njMuPzkJTEi5RqfdZFA\";\n    Protocols[\"PsFLorena\"] = \"PsFLorenaUUuikDWvMDr6fGBRG8kt3e3D3fHoXK1j1BFRxeSH4i\";\n    Protocols[\"PtGRANADs\"] = \"PtGRANADsDU8R9daYKAgWnQYAJ64omN1o3KMGVCykShA97vQbvV\";\n    Protocols[\"PtHangz2\"] = \"PtHangz2aRngywmSRGGvrcTyMbbdpWdpFKuS4uMWxg2RaH9i1qx\";\n    Protocols[\"PsiThaCa\"] = \"PsiThaCaT47Zboaw71QWScM8sXeMM7bbQFncK9FLqYc6EKdpjVP\";\n    Protocols[\"Psithaca2\"] = \"Psithaca2MLRFYargivpo7YvUr7wUDqyxrdhC5CQq78mRvimz6A\";\n    Protocols[\"PtJakart2\"] = \"PtJakart2xVj7pYXJBXrqHgd82rdkLey5ZeeGwDgPp9rhQUbSqY\";\n    Protocols[\"PtKathman\"] = \"PtKathmankSpLLDALzWw7CGD2j2MtyveTwboEYokqUCP4a1LxMg\";\n    Protocols[\"PtLimaPtL\"] = \"PtLimaPtLMwfNinJi9rCfDPWea8dFgTZ1MeJ9f1m2SRic6ayiwW\";\n    Protocols[\"PtMumbaii\"] = \"PtMumbaiiFFEGbew1rRjzSPyzRbA51Tm3RVZL5suHPxSZYDhCEc\";\n    Protocols[\"PtMumbai2\"] = \"PtMumbai2TmsJHNGRkD8v8YDbtao7BLUC3wjASn1inAKLFCjaH1\";\n    Protocols[\"PtNairobi\"] = \"PtNairobiyssHuh87hEhfVBGCVrK3WnS8Z2FT4ymB5tAa4r1nQf\";\n    Protocols[\"ProtoALpha\"] = \"ProtoALphaALphaALphaALphaALphaALphaALphaALphaDdp3zK\";\n})(Protocols || (Protocols = {}));\nconst protocols = {\n    '004': [Protocols.Pt24m4xi],\n    '005': [Protocols.PsBABY5H, Protocols.PsBabyM1],\n    '006': [Protocols.PsCARTHA],\n    '007': [Protocols.PsDELPH1],\n    '008': [Protocols.PtEdo2Zk],\n    '009': [Protocols.PsFLorena],\n    '010': [Protocols.PtGRANADs],\n    '011': [Protocols.PtHangz2],\n    '012': [Protocols.PsiThaCa, Protocols.Psithaca2],\n    '013': [Protocols.PtJakart2],\n    '014': [Protocols.PtKathman],\n    '015': [Protocols.PtLimaPtL],\n    '016': [Protocols.PtMumbai2],\n    '017': [Protocols.PtNairobi],\n    '018': [Protocols.ProtoALpha],\n};\nvar ChainIds;\n(function (ChainIds) {\n    ChainIds[\"MAINNET\"] = \"NetXdQprcVkpaWU\";\n    ChainIds[\"CARTHAGENET\"] = \"NetXjD3HPJJjmcd\";\n    ChainIds[\"DELPHINET\"] = \"NetXm8tYqnMWky1\";\n    ChainIds[\"EDONET\"] = \"NetXSgo1ZT2DRUG\";\n    ChainIds[\"FLORENCENET\"] = \"NetXxkAx4woPLyu\";\n    ChainIds[\"GRANADANET\"] = \"NetXz969SFaFn8k\";\n    ChainIds[\"HANGZHOUNET\"] = \"NetXZSsxBpMQeAT\";\n    ChainIds[\"ITHACANET\"] = \"NetXbhmtAbMukLc\";\n    ChainIds[\"ITHACANET2\"] = \"NetXnHfVqm9iesp\";\n    ChainIds[\"JAKARTANET2\"] = \"NetXLH1uAxK7CCh\";\n    ChainIds[\"KATHMANDUNET\"] = \"NetXazhm4yetmff\";\n    ChainIds[\"LIMANET\"] = \"NetXizpkH94bocH\";\n    ChainIds[\"MUMBAINET\"] = \"NetXQw6nWSnrJ5t\";\n    ChainIds[\"MUMBAINET2\"] = \"NetXgbcrNtXD2yA\";\n    ChainIds[\"NAIROBINET\"] = \"NetXyuzvDo2Ugzb\";\n})(ChainIds || (ChainIds = {}));\nconst getRevealGasLimit = (address) => Math.round((getRevealGasLimitInternal(address) * 11) / 10);\nconst getRevealGasLimitInternal = (address) => {\n    switch (address.substring(0, 3)) {\n        case 'tz1':\n            return DEFAULT_GAS_LIMIT.REVEAL_TZ1;\n        case 'tz2':\n            return DEFAULT_GAS_LIMIT.REVEAL_TZ2;\n        case 'tz3':\n            return DEFAULT_GAS_LIMIT.REVEAL_TZ3;\n        case 'tz4':\n            return DEFAULT_GAS_LIMIT.REVEAL_TZ4;\n        default:\n            throw new Error(`Cannot estimate reveal gas limit for ${address}`);\n    }\n};\n\n/**\n *  @category Error\n *  @description Error that indicates invalid smart contract parameters being passed or used\n */\nclass InvalidParameterError extends ParameterValidationError {\n    constructor(smartContractMethodName, sigs, invalidParams) {\n        super();\n        this.smartContractMethodName = smartContractMethodName;\n        this.sigs = sigs;\n        this.invalidParams = invalidParams;\n        this.name = 'InvalidParameterError';\n        this.message = `${smartContractMethodName} Received ${invalidParams.length} arguments while expecting one of the following signatures (${JSON.stringify(sigs)})`;\n    }\n}\n/**\n *  @category Error\n *  @description Error that indicates an invalid delegation source contract address being passed or used\n */\nclass InvalidDelegationSource extends ParameterValidationError {\n    constructor(source) {\n        super();\n        this.source = source;\n        this.name = `InvalidDelegationSource`;\n        this.message = `Since Babylon delegation source can no longer be a contract address ${source}. Please use the smart contract abstraction to set your delegate.`;\n    }\n}\n/**\n *  @category Error\n *  @description Error that indicates an invalid smart contract code parameter being passed or used\n */\nclass InvalidCodeParameter extends ParameterValidationError {\n    constructor(message, data) {\n        super();\n        this.message = message;\n        this.data = data;\n        this.name = 'InvalidCodeParameter';\n    }\n}\n/**\n *  @category Error\n *  @description Error that indicates invalid smart contract init parameter being passed or used\n */\nclass InvalidInitParameter extends ParameterValidationError {\n    constructor(message, data) {\n        super();\n        this.message = message;\n        this.data = data;\n        this.name = 'InvalidInitParameter';\n    }\n}\n/**\n *  @category Error\n *  @description Error that indicates a failure when conducting a view simulation\n */\nclass ViewSimulationError extends RpcError {\n    constructor(message, viewName, failWith, cause) {\n        super();\n        this.message = message;\n        this.viewName = viewName;\n        this.failWith = failWith;\n        this.cause = cause;\n        this.name = 'ViewSimulationError';\n    }\n}\nconst validateAndExtractFailwith = (error) => {\n    if (isJsonString(error.body)) {\n        const parsedError = JSON.parse(error.body);\n        if (Array.isArray(parsedError) && 'with' in parsedError[parsedError.length - 1]) {\n            return parsedError[parsedError.length - 1].with;\n        }\n    }\n};\nconst isJsonString = (str) => {\n    try {\n        JSON.parse(str);\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n};\n/**\n *  @category Error\n *  @description Error that indicates invalid or unconfigured context when executing a view\n */\nclass InvalidViewSimulationContext extends ParameterValidationError {\n    constructor(info) {\n        super();\n        this.info = info;\n        this.name = 'InvalidViewSimulationContext';\n        this.message = `${info} Please configure the context of the view execution in the executeView method.`;\n    }\n}\n/**\n *  @category Error\n *  @description Error that indicates a mistake happening during the reveal operation\n */\nclass RevealOperationError extends RpcError {\n    constructor(message) {\n        super();\n        this.message = message;\n        this.name = 'RevealOperationError';\n    }\n}\n/**\n *  @category Error\n *  @description Error that indicates a mistake in the parameters in the preparation of an Origination operation\n */\nclass OriginationParameterError extends ParameterValidationError {\n    constructor(message) {\n        super();\n        this.message = message;\n        this.name;\n    }\n}\n/**\n *  @category Error\n *  @description Error that indicates an invalid balance being passed or used\n */\nclass InvalidBalanceError extends ParameterValidationError {\n    constructor(message) {\n        super();\n        this.message = message;\n        this.name = 'InvalidBalanceError';\n    }\n}\n\nconst createActivationOperation = ({ pkh, secret }) => __awaiter(void 0, void 0, void 0, function* () {\n    return {\n        kind: OpKind.ACTIVATION,\n        pkh,\n        secret,\n    };\n});\nconst createOriginationOperation = ({ code, init, balance = '0', delegate, storage, fee = DEFAULT_FEE.ORIGINATION, gasLimit = DEFAULT_GAS_LIMIT.ORIGINATION, storageLimit = DEFAULT_STORAGE_LIMIT.ORIGINATION, mutez = false, }) => __awaiter(void 0, void 0, void 0, function* () {\n    if (storage !== undefined && init !== undefined) {\n        throw new OriginationParameterError('Storage and Init cannot be set a the same time. Please either use storage or init but not both.');\n    }\n    if (!Array.isArray(code)) {\n        throw new InvalidCodeParameter('Wrong code parameter type, expected an array', code);\n    }\n    let contractStorage;\n    if (storage !== undefined) {\n        const storageType = code.find((p) => 'prim' in p && p.prim === 'storage');\n        if ((storageType === null || storageType === void 0 ? void 0 : storageType.args) === undefined) {\n            throw new InvalidCodeParameter('The storage section is missing from the script', code);\n        }\n        const schema = new Schema(storageType.args[0]); // TODO\n        contractStorage = schema.Encode(storage);\n    }\n    else if (init !== undefined && typeof init === 'object') {\n        contractStorage = init;\n    }\n    else {\n        throw new InvalidInitParameter('Wrong init parameter type, expected JSON Michelson', init);\n    }\n    const script = {\n        code,\n        storage: contractStorage,\n    };\n    if (isNaN(Number(balance))) {\n        throw new InvalidBalanceError(`Invalid Balance \"${balance}\", cannot be converted to a number`);\n    }\n    const operation = {\n        kind: OpKind.ORIGINATION,\n        fee,\n        gas_limit: gasLimit,\n        storage_limit: storageLimit,\n        balance: mutez ? balance.toString() : format('tz', 'mutez', balance).toString(),\n        script,\n    };\n    if (delegate) {\n        operation.delegate = delegate;\n    }\n    return operation;\n});\nconst createTransferOperation = ({ to, amount, parameter, fee = DEFAULT_FEE.TRANSFER, gasLimit = DEFAULT_GAS_LIMIT.TRANSFER, storageLimit = DEFAULT_STORAGE_LIMIT.TRANSFER, mutez = false, }) => __awaiter(void 0, void 0, void 0, function* () {\n    const operation = {\n        kind: OpKind.TRANSACTION,\n        fee,\n        gas_limit: gasLimit,\n        storage_limit: storageLimit,\n        amount: mutez ? amount.toString() : format('tz', 'mutez', amount).toString(),\n        destination: to,\n        parameters: parameter,\n    };\n    return operation;\n});\nconst createSetDelegateOperation = ({ delegate, source, fee = DEFAULT_FEE.DELEGATION, gasLimit = DEFAULT_GAS_LIMIT.DELEGATION, storageLimit = DEFAULT_STORAGE_LIMIT.DELEGATION, }) => __awaiter(void 0, void 0, void 0, function* () {\n    const operation = {\n        kind: OpKind.DELEGATION,\n        source,\n        fee,\n        gas_limit: gasLimit,\n        storage_limit: storageLimit,\n        delegate,\n    };\n    return operation;\n});\nconst createRegisterDelegateOperation = ({ fee = DEFAULT_FEE.DELEGATION, gasLimit = DEFAULT_GAS_LIMIT.DELEGATION, storageLimit = DEFAULT_STORAGE_LIMIT.DELEGATION, }, source) => __awaiter(void 0, void 0, void 0, function* () {\n    return {\n        kind: OpKind.DELEGATION,\n        fee,\n        gas_limit: gasLimit,\n        storage_limit: storageLimit,\n        delegate: source,\n    };\n});\nconst createRevealOperation = ({ fee = DEFAULT_FEE.REVEAL, gasLimit = undefined, storageLimit = DEFAULT_STORAGE_LIMIT.REVEAL, }, source, publicKey) => __awaiter(void 0, void 0, void 0, function* () {\n    return {\n        kind: OpKind.REVEAL,\n        fee,\n        public_key: publicKey,\n        source,\n        gas_limit: gasLimit !== null && gasLimit !== void 0 ? gasLimit : getRevealGasLimit(source),\n        storage_limit: storageLimit,\n    };\n});\nconst createRegisterGlobalConstantOperation = ({ value, source, fee, gasLimit, storageLimit, }) => __awaiter(void 0, void 0, void 0, function* () {\n    return {\n        kind: OpKind.REGISTER_GLOBAL_CONSTANT,\n        value,\n        fee,\n        gas_limit: gasLimit,\n        storage_limit: storageLimit,\n        source,\n    };\n});\nconst createTransferTicketOperation = ({ ticketContents, ticketTy, ticketTicketer, ticketAmount, destination, entrypoint, source, fee, gasLimit, storageLimit, }) => __awaiter(void 0, void 0, void 0, function* () {\n    return {\n        kind: OpKind.TRANSFER_TICKET,\n        fee,\n        gas_limit: gasLimit,\n        storage_limit: storageLimit,\n        source,\n        ticket_contents: ticketContents,\n        ticket_ty: ticketTy,\n        ticket_ticketer: ticketTicketer,\n        ticket_amount: ticketAmount,\n        destination,\n        entrypoint,\n    };\n});\nconst createIncreasePaidStorageOperation = ({ source, fee, gasLimit, storageLimit, amount, destination, }) => __awaiter(void 0, void 0, void 0, function* () {\n    return {\n        kind: OpKind.INCREASE_PAID_STORAGE,\n        source,\n        fee,\n        gas_limit: gasLimit,\n        storage_limit: storageLimit,\n        amount,\n        destination,\n    };\n});\nconst createDrainDelegateOperation = ({ consensus_key, delegate, destination, }) => __awaiter(void 0, void 0, void 0, function* () {\n    return {\n        kind: OpKind.DRAIN_DELEGATE,\n        consensus_key,\n        delegate,\n        destination,\n    };\n});\nconst createBallotOperation = ({ source, proposal, ballot }) => __awaiter(void 0, void 0, void 0, function* () {\n    return {\n        kind: OpKind.BALLOT,\n        source,\n        proposal,\n        ballot,\n    };\n});\nconst createProposalsOperation = ({ source, proposals }) => __awaiter(void 0, void 0, void 0, function* () {\n    return {\n        kind: OpKind.PROPOSALS,\n        source,\n        proposals,\n    };\n});\nconst createUpdateConsensusKeyOperation = ({ source, fee, gasLimit, storageLimit, pk, }) => __awaiter(void 0, void 0, void 0, function* () {\n    return {\n        kind: OpKind.UPDATE_CONSENSUS_KEY,\n        source,\n        fee,\n        gas_limit: gasLimit,\n        storage_limit: storageLimit,\n        pk,\n    };\n});\nconst createSmartRollupAddMessagesOperation = ({ source, fee, gasLimit, storageLimit, message, }) => __awaiter(void 0, void 0, void 0, function* () {\n    return {\n        kind: OpKind.SMART_ROLLUP_ADD_MESSAGES,\n        source,\n        fee,\n        gas_limit: gasLimit,\n        storage_limit: storageLimit,\n        message,\n    };\n});\nconst createSmartRollupOriginateOperation = ({ source, fee, gasLimit, storageLimit, pvmKind, kernel, originationProof, parametersType, }) => __awaiter(void 0, void 0, void 0, function* () {\n    return {\n        kind: OpKind.SMART_ROLLUP_ORIGINATE,\n        source,\n        fee,\n        gas_limit: gasLimit,\n        storage_limit: storageLimit,\n        pvm_kind: pvmKind,\n        kernel,\n        origination_proof: originationProof,\n        parameters_ty: parametersType,\n    };\n});\n\nconst attachKind = (op, kind) => {\n    return Object.assign(Object.assign({}, op), { kind });\n};\nconst findWithKind = (arr, kind) => {\n    if (Array.isArray(arr)) {\n        const found = arr.find((op) => op.kind === kind);\n        if (found && isKind(found, kind)) {\n            return found;\n        }\n    }\n};\nconst isKind = (op, kind) => {\n    return op.kind === kind;\n};\nconst isOpWithFee = (op) => {\n    return ([\n        'transaction',\n        'delegation',\n        'origination',\n        'reveal',\n        'register_global_constant',\n        'increase_paid_storage',\n        'tx_rollup_origination',\n        'tx_rollup_submit_batch',\n        'transfer_ticket',\n        'update_consensus_key',\n        'smart_rollup_add_messages',\n        'smart_rollup_originate',\n    ].indexOf(op.kind) !== -1);\n};\nconst isOpRequireReveal = (op) => {\n    return ([\n        'transaction',\n        'delegation',\n        'origination',\n        'register_global_constant',\n        'increase_paid_storage',\n        'tx_rollup_origination',\n        'tx_rollup_submit_batch',\n        'transfer_ticket',\n        'update_consensus_key',\n        'smart_rollup_add_messages',\n        'smart_rollup_originate',\n    ].indexOf(op.kind) !== -1);\n};\nconst hasMetadata = (op) => {\n    return 'metadata' in op;\n};\nconst hasMetadataWithResult = (op) => {\n    return hasMetadata(op) && 'operation_result' in op.metadata;\n};\nconst hasMetadataWithInternalOperationResult = (op) => {\n    return hasMetadata(op) && 'internal_operation_results' in op.metadata;\n};\n\nconst isErrorWithMessage = (error) => {\n    return 'with' in error;\n};\n/**\n *  @category Error\n *  @description Generic tezos error that will be thrown when a mistake occurs when doing an operation; more details here https://tezos.gitlab.io/api/errors.html\n */\nclass TezosOperationError extends RpcError {\n    constructor(errors, errorDetails) {\n        super();\n        this.errors = errors;\n        this.errorDetails = errorDetails;\n        this.name = 'TezosOperationError';\n        // Last error is 'often' the one with more detail\n        const lastError = errors[errors.length - 1];\n        this.id = lastError.id;\n        this.kind = lastError.kind;\n        this.message = `(${this.kind}) ${this.id}`;\n        if (isErrorWithMessage(lastError)) {\n            if (lastError.with.string) {\n                this.message = lastError.with.string;\n            }\n            else if (lastError.with.int) {\n                this.message = lastError.with.int;\n            }\n            else {\n                this.message = JSON.stringify(lastError.with);\n            }\n        }\n    }\n}\n/**\n *  @category Error\n *  @description Tezos error that will be thrown when a mistake happens during the preapply stage\n */\nclass TezosPreapplyFailureError extends Error {\n    constructor(result) {\n        super();\n        this.result = result;\n        this.name = 'TezosPreapplyFailureError';\n        this.message = 'Preapply returned an unexpected result';\n    }\n}\n// Flatten all operation content results and internal operation results into a single array\n// Some cases where we can have multiple operation results or internal operation results are:\n// - When an operation includes a reveal operation\n// - When an operation is made using the batch API\n// - Smart contract call can contains internal operation results when they call other smart contract internally or originate contracts\nconst flattenOperationResult = (response) => {\n    const results = Array.isArray(response) ? response : [response];\n    const returnedResults = [];\n    for (let i = 0; i < results.length; i++) {\n        for (let j = 0; j < results[i].contents.length; j++) {\n            const content = results[i].contents[j];\n            if (hasMetadataWithResult(content) && 'fee' in content) {\n                returnedResults.push(Object.assign({ fee: content.fee }, content.metadata.operation_result));\n                if (Array.isArray(content.metadata.internal_operation_results)) {\n                    content.metadata.internal_operation_results.forEach((x) => returnedResults.push(x.result));\n                }\n            }\n        }\n    }\n    return returnedResults;\n};\n/***\n * @description Flatten all error from preapply response (including internal error)\n */\nconst flattenErrors = (response, status = 'failed') => {\n    const results = Array.isArray(response) ? response : [response];\n    let errors = [];\n    // Transaction that do not fail will be backtracked in case one failure occur\n    for (let i = 0; i < results.length; i++) {\n        for (let j = 0; j < results[i].contents.length; j++) {\n            const content = results[i].contents[j];\n            if (hasMetadata(content)) {\n                if (hasMetadataWithResult(content) &&\n                    content.metadata.operation_result.status === status) {\n                    errors = errors.concat(content.metadata.operation_result.errors || []);\n                }\n                if (hasMetadataWithInternalOperationResult(content) &&\n                    Array.isArray(content.metadata.internal_operation_results)) {\n                    for (const internalResult of content.metadata.internal_operation_results) {\n                        if ('result' in internalResult && internalResult.result.status === status) {\n                            errors = errors.concat(internalResult.result.errors || []);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return errors;\n};\n/**\n *  @category Error\n *  @description Error that indicates a general failure happening during an origination operation\n */\nclass OriginationOperationError extends TaquitoError {\n    constructor(message) {\n        super();\n        this.message = message;\n        this.name = 'OriginationOperationError';\n    }\n}\n/**\n *  @category Error\n *  @description Error that indicates an invalid estimate value being passed\n */\nclass InvalidEstimateValueError extends ParameterValidationError {\n    constructor(message) {\n        super();\n        this.message = message;\n        this.name = 'InvalidEstimateValueError';\n    }\n}\n\n/**\n *  @category Error\n *  @description Error that indicates invalid confirmation count has been passed or configured\n */\nclass InvalidConfirmationCountError extends ParameterValidationError {\n    constructor(invalidConfirmations) {\n        super();\n        this.invalidConfirmations = invalidConfirmations;\n        this.name = 'InvalidConfirmationCountError';\n        this.message = `Invalid confirmation count ${invalidConfirmations} expecting at least 1`;\n    }\n}\n/**\n *  @category Error\n *  @description Error that indicates that confirmation polling timed out\n */\nclass ConfirmationTimeoutError extends NetworkError {\n    constructor(message) {\n        super();\n        this.message = message;\n        this.name = 'ConfirmationTimeoutError';\n    }\n}\n/**\n *  @category Error\n *  @description Error that indicates an error being returned from the RPC response\n */\nclass RPCResponseError extends RpcError {\n    constructor(message, cause) {\n        super();\n        this.message = message;\n        this.cause = cause;\n        this.name = 'RPCResponseError';\n    }\n}\n\n/**\n * @description Utility class to interact with Tezos operations\n */\nclass Operation {\n    get includedInBlock() {\n        return this._foundAt;\n    }\n    /**\n     *\n     * @param hash Operation hash\n     * @param raw Raw operation that was injected\n     * @param context Taquito context allowing access to rpc and signer\n     * @throws {@link InvalidOperationHashError}\n     */\n    constructor(hash, raw, results, context) {\n        this.hash = hash;\n        this.raw = raw;\n        this.results = results;\n        this.context = context;\n        this._pollingConfig$ = new ReplaySubject(1);\n        this.currentHead$ = this._pollingConfig$.pipe(switchMap((config) => {\n            return new BehaviorSubject(config).pipe(timeout({\n                each: config.timeout * 1000,\n                with: () => throwError(() => new ConfirmationTimeoutError(`Confirmation polling timed out`)),\n            }));\n        }), switchMap(() => {\n            return defer(() => createObservableFromSubscription(this.context.stream.subscribeBlock('head'))).pipe(switchMap((newHead) => {\n                var _a, _b;\n                const prevHead = (_b = (_a = this.lastHead) === null || _a === void 0 ? void 0 : _a.header.level) !== null && _b !== void 0 ? _b : newHead.header.level - 1;\n                return range(prevHead + 1, newHead.header.level - prevHead - 1).pipe(concatMap((level) => this.context.readProvider.getBlock(level)), endWith(newHead));\n            }), tap((newHead) => (this.lastHead = newHead)));\n        }), shareReplay({ refCount: true }));\n        // Observable that emit once operation is seen in a block\n        this.confirmed$ = this.currentHead$.pipe(map((head) => {\n            for (let i = 3; i >= 0; i--) {\n                head.operations[i].forEach((op) => {\n                    if (op.hash === this.hash) {\n                        this._foundAt = head.header.level;\n                    }\n                });\n            }\n            if (head.header.level - this._foundAt >= 0) {\n                return this._foundAt;\n            }\n        }), filter((x) => x !== undefined), first(), shareReplay());\n        this._foundAt = Number.POSITIVE_INFINITY;\n        if (validateOperation(this.hash) !== ValidationResult.VALID) {\n            throw new InvalidOperationHashError(this.hash);\n        }\n        this.confirmed$\n            .pipe(first(), catchError(() => {\n            return of(EMPTY);\n        }))\n            .subscribe();\n    }\n    get revealOperation() {\n        return (Array.isArray(this.results) &&\n            this.results.find((op) => op.kind === 'reveal'));\n    }\n    get revealStatus() {\n        if (this.revealOperation) {\n            return this.revealOperation.metadata.operation_result.status;\n        }\n        else {\n            return 'unknown';\n        }\n    }\n    get status() {\n        return (this.results.map((result) => {\n            if (hasMetadataWithResult(result)) {\n                return result.metadata.operation_result.status;\n            }\n            else {\n                return 'unknown';\n            }\n        })[0] || 'unknown');\n    }\n    /**\n     *\n     * @param confirmations [0] Number of confirmation to wait for\n     * @param timeout [180] Timeout\n     */\n    confirmation(confirmations, timeout) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof confirmations !== 'undefined' && confirmations < 1) {\n                throw new InvalidConfirmationCountError(confirmations);\n            }\n            const { defaultConfirmationCount, confirmationPollingTimeoutSecond } = this.context.config;\n            this._pollingConfig$.next({\n                timeout: timeout || confirmationPollingTimeoutSecond,\n            });\n            const conf = confirmations !== undefined ? confirmations : defaultConfirmationCount;\n            return new Promise((resolve, reject) => {\n                this.confirmed$\n                    .pipe(switchMap(() => this.currentHead$), filter((head) => head.header.level - this._foundAt >= conf - 1), first())\n                    .subscribe((_) => {\n                    resolve(this._foundAt + (conf - 1));\n                }, reject);\n            });\n        });\n    }\n}\n\nclass BatchOperation extends Operation {\n    constructor(hash, params, source, raw, results, context) {\n        super(hash, raw, results, context);\n        this.params = params;\n        this.source = source;\n    }\n    sumProp(arr, prop) {\n        return arr.reduce((prev, current) => {\n            return prop in current ? Number(current[prop]) + prev : prev;\n        }, 0);\n    }\n    getOriginatedContractAddresses() {\n        const originationOpResults = this.results.filter((x) => x.kind === 'origination');\n        let addresses = [];\n        for (const res of originationOpResults) {\n            if (res.metadata.operation_result.originated_contracts) {\n                addresses = [...addresses, ...res.metadata.operation_result.originated_contracts];\n            }\n        }\n        return addresses;\n    }\n    get status() {\n        return (this.results\n            .filter((result) => BATCH_KINDS.indexOf(result.kind) !== -1)\n            .map((result) => {\n            if (hasMetadataWithResult(result)) {\n                const opResult = result.metadata.operation_result;\n                return opResult.status;\n            }\n            else {\n                return 'unknown';\n            }\n        })[0] || 'unknown');\n    }\n    get fee() {\n        return this.sumProp(this.params, 'fee');\n    }\n    get gasLimit() {\n        return this.sumProp(this.params, 'gas_limit');\n    }\n    get storageLimit() {\n        return this.sumProp(this.params, 'storage_limit');\n    }\n    get consumedGas() {\n        BigNumber.config({ DECIMAL_PLACES: 0, ROUNDING_MODE: BigNumber.ROUND_UP });\n        return new BigNumber(this.consumedMilliGas).dividedBy(1000).toString();\n    }\n    get consumedMilliGas() {\n        return String(this.sumProp(flattenOperationResult({ contents: this.results }), 'consumed_milligas'));\n    }\n    get storageDiff() {\n        return String(this.sumProp(flattenOperationResult({ contents: this.results }), 'paid_storage_size_diff'));\n    }\n    get errors() {\n        return flattenErrors({ contents: this.results });\n    }\n}\n\nclass Provider {\n    get rpc() {\n        return this.context.rpc;\n    }\n    get signer() {\n        return this.context.signer;\n    }\n    constructor(context) {\n        this.context = context;\n    }\n    forge({ opOb: { branch, contents, protocol }, counter }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const forgedBytes = yield this.context.forger.forge({ branch, contents });\n            return {\n                opbytes: forgedBytes,\n                opOb: {\n                    branch,\n                    contents,\n                    protocol,\n                },\n                counter,\n            };\n        });\n    }\n    estimate(_a, estimator) {\n        var { fee, gasLimit, storageLimit } = _a, rest = __rest(_a, [\"fee\", \"gasLimit\", \"storageLimit\"]);\n        return __awaiter(this, void 0, void 0, function* () {\n            let calculatedFee = fee;\n            let calculatedGas = gasLimit;\n            let calculatedStorage = storageLimit;\n            if (calculatedFee && calculatedFee % 1 !== 0) {\n                throw new InvalidEstimateValueError(`Fee value must not be a decimal: ${calculatedFee}`);\n            }\n            if (calculatedGas && calculatedGas % 1 !== 0) {\n                throw new InvalidEstimateValueError(`Gas Limit value must not be a decimal: ${calculatedGas}`);\n            }\n            if (calculatedStorage && calculatedStorage % 1 !== 0) {\n                throw new InvalidEstimateValueError(`Storage Limit value must not be a decimal: ${calculatedStorage}`);\n            }\n            if (fee === undefined || gasLimit === undefined || storageLimit === undefined) {\n                const estimation = yield estimator(Object.assign({ fee, gasLimit, storageLimit }, rest));\n                calculatedFee !== null && calculatedFee !== void 0 ? calculatedFee : (calculatedFee = estimation.suggestedFeeMutez);\n                calculatedGas !== null && calculatedGas !== void 0 ? calculatedGas : (calculatedGas = estimation.gasLimit);\n                calculatedStorage !== null && calculatedStorage !== void 0 ? calculatedStorage : (calculatedStorage = estimation.storageLimit);\n            }\n            return {\n                fee: calculatedFee,\n                gasLimit: calculatedGas,\n                storageLimit: calculatedStorage,\n            };\n        });\n    }\n    getRPCOp(param) {\n        return __awaiter(this, void 0, void 0, function* () {\n            switch (param.kind) {\n                case OpKind.TRANSACTION:\n                    return createTransferOperation(Object.assign({}, param));\n                case OpKind.ORIGINATION:\n                    return createOriginationOperation(yield this.context.parser.prepareCodeOrigination(Object.assign({}, param)));\n                case OpKind.DELEGATION:\n                    return createSetDelegateOperation(Object.assign({}, param));\n                case OpKind.REGISTER_GLOBAL_CONSTANT:\n                    return createRegisterGlobalConstantOperation(Object.assign({}, param));\n                case OpKind.INCREASE_PAID_STORAGE:\n                    return createIncreasePaidStorageOperation(Object.assign({}, param));\n                case OpKind.TRANSFER_TICKET:\n                    return createTransferTicketOperation(Object.assign({}, param));\n                case OpKind.SMART_ROLLUP_ADD_MESSAGES:\n                    return createSmartRollupAddMessagesOperation(Object.assign({}, param));\n                case OpKind.SMART_ROLLUP_ORIGINATE:\n                    return createSmartRollupOriginateOperation(Object.assign({}, param));\n                default:\n                    throw new InvalidOperationKindError(param.kind);\n            }\n        });\n    }\n    runOperation(op) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return {\n                opResponse: yield this.rpc.runOperation(op),\n                op,\n                context: this.context.clone(),\n            };\n        });\n    }\n    simulate(op) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return {\n                opResponse: yield this.rpc.simulateOperation(op),\n                op,\n                context: this.context.clone(),\n            };\n        });\n    }\n    isRevealOpNeeded(op, pkh) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return !(yield this.isAccountRevealRequired(pkh)) || !this.isRevealRequiredForOpType(op)\n                ? false\n                : true;\n        });\n    }\n    isAccountRevealRequired(publicKeyHash) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return !(yield this.context.readProvider.isAccountRevealed(publicKeyHash, 'head'));\n        });\n    }\n    isRevealRequiredForOpType(op) {\n        let opRequireReveal = false;\n        for (const operation of op) {\n            if (isOpRequireReveal(operation)) {\n                opRequireReveal = true;\n            }\n        }\n        return opRequireReveal;\n    }\n    signAndInject(forgedBytes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const signed = yield this.signer.sign(forgedBytes.opbytes, new Uint8Array([3]));\n            forgedBytes.opbytes = signed.sbytes;\n            forgedBytes.opOb.signature = signed.prefixSig;\n            const opResponse = [];\n            const results = yield this.rpc.preapplyOperations([forgedBytes.opOb]);\n            if (!Array.isArray(results)) {\n                throw new TezosPreapplyFailureError(results);\n            }\n            for (let i = 0; i < results.length; i++) {\n                for (let j = 0; j < results[i].contents.length; j++) {\n                    opResponse.push(results[i].contents[j]);\n                }\n            }\n            const errors = flattenErrors(results);\n            if (errors.length) {\n                throw new TezosOperationError(errors, 'Error occurred during validation simulation of operation');\n            }\n            return {\n                hash: yield this.context.injector.inject(forgedBytes.opbytes),\n                forgedBytes,\n                opResponse,\n                context: this.context.clone(),\n            };\n        });\n    }\n}\n\nclass WalletOperationBatch {\n    constructor(walletProvider, context) {\n        this.walletProvider = walletProvider;\n        this.context = context;\n        this.operations = [];\n    }\n    /**\n     *\n     * @description Add a transaction operation to the batch\n     *\n     * @param params Transfer operation parameter\n     */\n    withTransfer(params) {\n        const toValidation = validateAddress(params.to);\n        if (toValidation !== ValidationResult.VALID) {\n            throw new InvalidAddressError(params.to, invalidDetail(toValidation));\n        }\n        this.operations.push(Object.assign({ kind: OpKind.TRANSACTION }, params));\n        return this;\n    }\n    /**\n     *\n     * @description Add a contract call to the batch\n     *\n     * @param params Call a contract method\n     * @param options Generic operation parameters\n     */\n    withContractCall(params, options = {}) {\n        return this.withTransfer(params.toTransferParams(options));\n    }\n    /**\n     *\n     * @description Add a delegation operation to the batch\n     *\n     * @param params Delegation operation parameter\n     */\n    withDelegation(params) {\n        var _a;\n        const delegateValidation = validateAddress((_a = params.delegate) !== null && _a !== void 0 ? _a : '');\n        if (params.delegate && delegateValidation !== ValidationResult.VALID) {\n            throw new InvalidAddressError(params.delegate, invalidDetail(delegateValidation));\n        }\n        this.operations.push(Object.assign({ kind: OpKind.DELEGATION }, params));\n        return this;\n    }\n    /**\n     *\n     * @description Add an origination operation to the batch\n     *\n     * @param params Origination operation parameter\n     */\n    withOrigination(params) {\n        this.operations.push(Object.assign({ kind: OpKind.ORIGINATION }, params));\n        return this;\n    }\n    /**\n     *\n     * @description Add an IncreasePaidStorage operation to the batch\n     *\n     * @param param IncreasePaidStorage operation parameter\n     */\n    withIncreasePaidStorage(params) {\n        const destinationValidation = validateAddress(params.destination);\n        if (destinationValidation !== ValidationResult.VALID) {\n            throw new InvalidAddressError(params.destination, invalidDetail(destinationValidation));\n        }\n        this.operations.push(Object.assign({ kind: OpKind.INCREASE_PAID_STORAGE }, params));\n        return this;\n    }\n    mapOperation(param) {\n        return __awaiter(this, void 0, void 0, function* () {\n            switch (param.kind) {\n                case OpKind.TRANSACTION:\n                    return this.walletProvider.mapTransferParamsToWalletParams(() => __awaiter(this, void 0, void 0, function* () { return param; }));\n                case OpKind.ORIGINATION:\n                    return this.walletProvider.mapOriginateParamsToWalletParams(() => __awaiter(this, void 0, void 0, function* () {\n                        return this.context.parser.prepareCodeOrigination(Object.assign({}, param));\n                    }));\n                case OpKind.DELEGATION:\n                    return this.walletProvider.mapDelegateParamsToWalletParams(() => __awaiter(this, void 0, void 0, function* () { return param; }));\n                case OpKind.INCREASE_PAID_STORAGE:\n                    return this.walletProvider.mapIncreasePaidStorageWalletParams(() => __awaiter(this, void 0, void 0, function* () { return param; }));\n                default:\n                    throw new InvalidOperationKindError$1(JSON.stringify(param.kind));\n            }\n        });\n    }\n    /**\n     *\n     * @description Add a group operation to the batch. Operation will be applied in the order they are in the params array\n     *\n     * @param params Operations parameter\n     * @throws {@link InvalidOperationKindError}\n     */\n    with(params) {\n        for (const param of params) {\n            switch (param.kind) {\n                case OpKind.TRANSACTION:\n                    this.withTransfer(param);\n                    break;\n                case OpKind.ORIGINATION:\n                    this.withOrigination(param);\n                    break;\n                case OpKind.DELEGATION:\n                    this.withDelegation(param);\n                    break;\n                case OpKind.INCREASE_PAID_STORAGE:\n                    this.withIncreasePaidStorage(param);\n                    break;\n                default:\n                    throw new InvalidOperationKindError$1(JSON.stringify(param.kind));\n            }\n        }\n        return this;\n    }\n    /**\n     *\n     * @description Submit batch operation to wallet\n     *\n     */\n    send() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const ops = [];\n            for (const op of this.operations) {\n                ops.push(yield this.mapOperation(op));\n            }\n            const opHash = yield this.walletProvider.sendOperations(ops);\n            return this.context.operationFactory.createBatchOperation(opHash);\n        });\n    }\n}\nclass Wallet {\n    constructor(context) {\n        this.context = context;\n        this.walletCommand = (send) => {\n            return {\n                send,\n            };\n        };\n    }\n    get walletProvider() {\n        return this.context.walletProvider;\n    }\n    /**\n     * @description Retrieve the PKH of the account that is currently in use by the wallet\n     *\n     * @param option Option to use while fetching the PKH.\n     * If forceRefetch is specified the wallet provider implementation will refetch the PKH from the wallet\n     */\n    pkh({ forceRefetch } = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._pkh || forceRefetch) {\n                this._pkh = yield this.walletProvider.getPKH();\n            }\n            return this._pkh;\n        });\n    }\n    /**\n     *\n     * @description Originate a new contract according to the script in parameters.\n     *\n     * @returns An operation handle with the result from the rpc node\n     *\n     * @param originateParams Originate operation parameter\n     */\n    originate(params) {\n        return this.walletCommand(() => __awaiter(this, void 0, void 0, function* () {\n            const mappedParams = yield this.walletProvider.mapOriginateParamsToWalletParams(() => this.context.parser.prepareCodeOrigination(Object.assign({}, params)));\n            const opHash = yield this.walletProvider.sendOperations([mappedParams]);\n            return this.context.operationFactory.createOriginationOperation(opHash);\n        }));\n    }\n    /**\n     *\n     * @description Set the delegate for a contract.\n     *\n     * @returns An operation handle with the result from the rpc node\n     *\n     * @param delegateParams operation parameter\n     */\n    setDelegate(params) {\n        var _a;\n        const delegateValidation = validateAddress((_a = params.delegate) !== null && _a !== void 0 ? _a : '');\n        if (params.delegate && delegateValidation !== ValidationResult.VALID) {\n            throw new InvalidAddressError(params.delegate, invalidDetail(delegateValidation));\n        }\n        return this.walletCommand(() => __awaiter(this, void 0, void 0, function* () {\n            const mappedParams = yield this.walletProvider.mapDelegateParamsToWalletParams(() => __awaiter(this, void 0, void 0, function* () { return params; }));\n            const opHash = yield this.walletProvider.sendOperations([mappedParams]);\n            return this.context.operationFactory.createDelegationOperation(opHash);\n        }));\n    }\n    /**\n     *\n     * @description failing_noop operation that is guaranteed to fail. DISCLAIMER: Not all wallets support signing failing_noop operations.\n     *\n     * @returns Signature for a failing_noop\n     *\n     * @param params operation parameter\n     */\n    signFailingNoop(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const op = {\n                kind: OpKind.FAILING_NOOP,\n                arbitrary: params.arbitrary,\n            };\n            const hash = yield this.context.readProvider.getBlockHash(params.basedOnBlock);\n            const forgedBytes = yield this.context.forger.forge({\n                branch: hash,\n                contents: [op],\n            });\n            const signature = yield this.walletProvider.sign(forgedBytes, Uint8Array.from([3]));\n            return {\n                signature,\n                bytes: forgedBytes,\n                signedContent: {\n                    branch: hash,\n                    contents: [\n                        {\n                            kind: OpKind.FAILING_NOOP,\n                            arbitrary: params.arbitrary,\n                        },\n                    ],\n                },\n            };\n        });\n    }\n    /**\n     *\n     * @description Register the current address as delegate.\n     *\n     * @returns An operation handle with the result from the rpc node\n     *\n     */\n    registerDelegate() {\n        return this.walletCommand(() => __awaiter(this, void 0, void 0, function* () {\n            const mappedParams = yield this.walletProvider.mapDelegateParamsToWalletParams(() => __awaiter(this, void 0, void 0, function* () {\n                const delegate = yield this.pkh();\n                return { delegate };\n            }));\n            const opHash = yield this.walletProvider.sendOperations([mappedParams]);\n            return this.context.operationFactory.createDelegationOperation(opHash);\n        }));\n    }\n    /**\n     *\n     * @description Transfer tezos tokens from current address to a specific address or call a smart contract.\n     *\n     * @returns A wallet command from which we can send the operation to the wallet\n     *\n     * @param params operation parameter\n     */\n    transfer(params) {\n        const toValidation = validateAddress(params.to);\n        if (toValidation !== ValidationResult.VALID) {\n            throw new InvalidAddressError(params.to, invalidDetail(toValidation));\n        }\n        return this.walletCommand(() => __awaiter(this, void 0, void 0, function* () {\n            const mappedParams = yield this.walletProvider.mapTransferParamsToWalletParams(() => __awaiter(this, void 0, void 0, function* () { return params; }));\n            const opHash = yield this.walletProvider.sendOperations([mappedParams]);\n            return this.context.operationFactory.createTransactionOperation(opHash);\n        }));\n    }\n    /**\n     *\n     * @description\n     *\n     * @returns\n     *\n     * @param params\n     */\n    increasePaidStorage(params) {\n        const destinationValidation = validateAddress(params.destination);\n        if (destinationValidation !== ValidationResult.VALID) {\n            throw new InvalidAddressError(params.destination, invalidDetail(destinationValidation));\n        }\n        return this.walletCommand(() => __awaiter(this, void 0, void 0, function* () {\n            const mappedParams = yield this.walletProvider.mapIncreasePaidStorageWalletParams(() => __awaiter(this, void 0, void 0, function* () { return params; }));\n            const opHash = yield this.walletProvider.sendOperations([mappedParams]);\n            return this.context.operationFactory.createIncreasePaidStorageOperation(opHash);\n        }));\n    }\n    /**\n     *\n     * @description Create a batch of operation\n     *\n     * @returns A batch object from which we can add more operation or send a command to the wallet to execute the batch\n     *\n     * @param params List of operation to initialize the batch with\n     */\n    batch(params) {\n        const batch = new WalletOperationBatch(this.walletProvider, this.context);\n        if (Array.isArray(params)) {\n            batch.with(params);\n        }\n        return batch;\n    }\n    /**\n     *\n     * @description Create an smart contract abstraction for the address specified. Calling entrypoints with the returned\n     * smart contract abstraction will leverage the wallet provider to make smart contract calls\n     *\n     * @param address Smart contract address\n     * @throws {@link InvalidContractAddressError} If the contract address is not valid\n     */\n    at(address, contractAbstractionComposer = (x) => x) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const addressValidation = validateContractAddress(address);\n            if (addressValidation !== ValidationResult.VALID) {\n                throw new InvalidContractAddressError(address, invalidDetail(addressValidation));\n            }\n            const rpc = this.context.withExtensions().rpc;\n            const readProvider = this.context.withExtensions().readProvider;\n            const script = yield readProvider.getScript(address, 'head');\n            const entrypoints = yield readProvider.getEntrypoints(address);\n            const abs = new ContractAbstraction(address, script, this, this.context.contract, entrypoints, rpc, readProvider);\n            return contractAbstractionComposer(abs, this.context);\n        });\n    }\n    getPK() {\n        return this.walletProvider.getPK();\n    }\n}\n\nconst receiptFromOperation = (op, { ALLOCATION_BURN, ORIGINATION_BURN } = {\n    ALLOCATION_BURN: 257,\n    ORIGINATION_BURN: 257,\n}) => {\n    BigNumber.config({ DECIMAL_PLACES: 0, ROUNDING_MODE: BigNumber.ROUND_UP });\n    const operationResults = flattenOperationResult({ contents: op });\n    let totalMilliGas = new BigNumber(0);\n    let totalStorage = new BigNumber(0);\n    let totalFee = new BigNumber(0);\n    let totalOriginationBurn = new BigNumber(0);\n    let totalAllocationBurn = new BigNumber(0);\n    let totalPaidStorageDiff = new BigNumber(0);\n    operationResults.forEach((result) => {\n        totalFee = totalFee.plus(result.fee || 0);\n        totalOriginationBurn = totalOriginationBurn.plus(Array.isArray(result.originated_contracts)\n            ? result.originated_contracts.length * ORIGINATION_BURN\n            : 0);\n        totalAllocationBurn = totalAllocationBurn.plus('allocated_destination_contract' in result ? ALLOCATION_BURN : 0);\n        totalMilliGas = totalMilliGas.plus(result.consumed_milligas || 0);\n        totalPaidStorageDiff = totalPaidStorageDiff.plus('paid_storage_size_diff' in result ? Number(result.paid_storage_size_diff) || 0 : 0);\n    });\n    totalStorage = totalStorage\n        .plus(totalAllocationBurn)\n        .plus(totalOriginationBurn)\n        .plus(totalPaidStorageDiff);\n    return {\n        totalFee,\n        totalMilliGas,\n        totalGas: totalMilliGas.dividedBy(1000),\n        totalStorage,\n        totalAllocationBurn,\n        totalOriginationBurn,\n        totalPaidStorageDiff,\n        totalStorageBurn: new BigNumber(totalStorage.multipliedBy(COST_PER_BYTE)),\n    };\n};\n\n/**\n *  @category Error\n *  @description Error that indicates undefined confirmation has not been specified or configured\n */\nclass ConfirmationUndefinedError extends TezosToolkitConfigError {\n    constructor() {\n        super();\n        this.name = 'ConfirmationUndefinedError';\n        this.message = 'Default confirmation count can not be undefined';\n    }\n}\n/**\n *  @category Error\n *  @description Error that indicates a generic failure when trying to fetch an observable\n */\nclass ObservableError extends NetworkError {\n    constructor(message) {\n        super();\n        this.message = message;\n        this.name = 'ObservableError';\n    }\n}\n\nconst MAX_BRANCH_ANCESTORS = 60;\n/**\n * @description WalletOperation allows to monitor operation inclusion on chains and surface information related to the operation\n */\nclass WalletOperation {\n    operationResults() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._operationResult.pipe(first()).toPromise();\n        });\n    }\n    /**\n     * @description Receipt expose the total amount of tezos token burn and spent on fees\n     * The promise returned by receipt will resolve only once the transaction is included\n     */\n    receipt() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const results = yield this.operationResults();\n            if (!results) {\n                throw new ObservableError('Unable to get operation results');\n            }\n            return receiptFromOperation(results);\n        });\n    }\n    /**\n     *\n     * @param opHash Operation hash\n     * @param raw Raw operation that was injected\n     * @param context Taquito context allowing access to rpc and signer\n     * @throws {InvalidOperationHashError}\n     */\n    constructor(opHash, context, _newHead$) {\n        this.opHash = opHash;\n        this.context = context;\n        this._newHead$ = _newHead$;\n        this._operationResult = new ReplaySubject(1);\n        this._includedInBlock = new ReplaySubject(1);\n        this._included = false;\n        this.newHead$ = this._newHead$.pipe(switchMap((newHead) => {\n            var _a, _b;\n            const prevHead = (_b = (_a = this.lastHead) === null || _a === void 0 ? void 0 : _a.header.level) !== null && _b !== void 0 ? _b : newHead.header.level - 1;\n            return range(prevHead + 1, newHead.header.level - prevHead - 1).pipe(concatMap((level) => this.context.readProvider.getBlock(level)), endWith(newHead));\n        }), tap((newHead) => (this.lastHead = newHead)), share({\n            connector: () => new ReplaySubject(1),\n            resetOnError: false,\n            resetOnComplete: false,\n            resetOnRefCountZero: false,\n        }));\n        // Observable that emit once operation is seen in a block\n        this.confirmed$ = this.newHead$.pipe(map((head) => {\n            for (const opGroup of head.operations) {\n                for (const op of opGroup) {\n                    if (op.hash === this.opHash) {\n                        this._included = true;\n                        this._includedInBlock.next(head);\n                        this._operationResult.next(op.contents);\n                        // Return the block where the operation was found\n                        return head;\n                    }\n                }\n            }\n        }), filter((x) => {\n            return typeof x !== 'undefined';\n        }), first(), share({\n            connector: () => new ReplaySubject(1),\n            resetOnError: false,\n            resetOnComplete: false,\n            resetOnRefCountZero: false,\n        }));\n        if (validateOperation(this.opHash) !== ValidationResult.VALID) {\n            throw new InvalidOperationHashError(this.opHash);\n        }\n        this.confirmed$\n            .pipe(first(), catchError(() => of(undefined)))\n            .subscribe();\n    }\n    getCurrentConfirmation() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._included) {\n                return 0;\n            }\n            return combineLatest([this._includedInBlock, from(this.context.readProvider.getBlock('head'))])\n                .pipe(map(([foundAtBlock, head]) => {\n                return head.header.level - foundAtBlock.header.level + 1;\n            }), first())\n                .toPromise();\n        });\n    }\n    isInCurrentBranch(tipBlockIdentifier = 'head') {\n        return __awaiter(this, void 0, void 0, function* () {\n            // By default it is assumed that the operation is in the current branch\n            if (!this._included) {\n                return true;\n            }\n            const tipBlockHeaderLevel = yield this.context.readProvider.getBlockLevel(tipBlockIdentifier);\n            const inclusionBlock = yield this._includedInBlock.pipe(first()).toPromise();\n            if (!inclusionBlock) {\n                throw new ObservableError('Inclusion block is undefined');\n            }\n            const levelDiff = (tipBlockHeaderLevel - inclusionBlock.header.level);\n            // Block produced before the operation is included are assumed to be part of the current branch\n            if (levelDiff <= 0) {\n                return true;\n            }\n            const tipBlockLevel = Math.min(inclusionBlock.header.level + levelDiff, inclusionBlock.header.level + MAX_BRANCH_ANCESTORS);\n            const blocks = new Set(yield this.context.readProvider.getLiveBlocks(tipBlockLevel));\n            return blocks.has(inclusionBlock.hash);\n        });\n    }\n    confirmationObservable(confirmations) {\n        if (typeof confirmations !== 'undefined' && confirmations < 1) {\n            throw new InvalidConfirmationCountError(confirmations);\n        }\n        const { defaultConfirmationCount } = this.context.config;\n        const conf = confirmations !== undefined ? confirmations : defaultConfirmationCount;\n        if (conf === undefined) {\n            throw new ConfirmationUndefinedError();\n        }\n        return combineLatest([this._includedInBlock, this.newHead$]).pipe(distinctUntilChanged(([, previousHead], [, newHead]) => {\n            return previousHead.hash === newHead.hash;\n        }), map(([foundAtBlock, head]) => {\n            return {\n                block: head,\n                expectedConfirmation: conf,\n                currentConfirmation: head.header.level - foundAtBlock.header.level + 1,\n                completed: head.header.level - foundAtBlock.header.level >= conf - 1,\n                isInCurrentBranch: () => this.isInCurrentBranch(head.hash),\n            };\n        }), takeWhile(({ completed }) => !completed, true));\n    }\n    /**\n     *\n     * @param confirmations [0] Number of confirmation to wait for\n     */\n    confirmation(confirmations) {\n        return this.confirmationObservable(confirmations).toPromise();\n    }\n}\n\nclass TransactionWalletOperation extends WalletOperation {\n    constructor(opHash, context, newHead$) {\n        super(opHash, context, newHead$);\n        this.opHash = opHash;\n        this.context = context;\n    }\n    revealOperation() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const operationResult = yield this.operationResults();\n            if (!operationResult) {\n                throw new ObservableError('operationResult returned undefined');\n            }\n            return operationResult.find((x) => x.kind === OpKind.REVEAL);\n        });\n    }\n    transactionOperation() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const operationResult = yield this.operationResults();\n            if (!operationResult) {\n                throw new ObservableError('operationResult returned undefined');\n            }\n            return operationResult.find((x) => x.kind === OpKind.TRANSACTION);\n        });\n    }\n    status() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._included) {\n                return 'pending';\n            }\n            const op = yield this.transactionOperation();\n            if (!op) {\n                return 'unknown';\n            }\n            return op.metadata.operation_result.status;\n        });\n    }\n}\n\nclass OriginationWalletOperation extends WalletOperation {\n    constructor(opHash, context, newHead$) {\n        super(opHash, context, newHead$);\n        this.opHash = opHash;\n        this.context = context;\n    }\n    originationOperation() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const operationResult = yield this.operationResults();\n            if (operationResult) {\n                return findWithKind(operationResult, OpKind.ORIGINATION);\n            }\n            else {\n                throw new ObservableError('Unable to fetch operation result');\n            }\n        });\n    }\n    revealOperation() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const operationResult = yield this.operationResults();\n            if (operationResult) {\n                return findWithKind(operationResult, OpKind.REVEAL);\n            }\n            else {\n                throw new ObservableError('Unable to fetch operation result');\n            }\n        });\n    }\n    status() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._included) {\n                return 'pending';\n            }\n            const op = yield this.originationOperation();\n            if (!op) {\n                return 'unknown';\n            }\n            return op.metadata.operation_result.status;\n        });\n    }\n    contract() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const op = yield this.originationOperation();\n            const address = ((op === null || op === void 0 ? void 0 : op.metadata.operation_result.originated_contracts) || [])[0];\n            return this.context.wallet.at(address);\n        });\n    }\n}\n\nclass DelegationWalletOperation extends WalletOperation {\n    constructor(opHash, context, newHead$) {\n        super(opHash, context, newHead$);\n        this.opHash = opHash;\n        this.context = context;\n    }\n    revealOperation() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const operationResult = yield this.operationResults();\n            if (operationResult) {\n                return operationResult.find((x) => x.kind === OpKind.REVEAL);\n            }\n            else {\n                throw new ObservableError('Unable to fetch operation result');\n            }\n        });\n    }\n    delegationOperation() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const operationResult = yield this.operationResults();\n            if (operationResult) {\n                return operationResult.find((x) => x.kind === OpKind.DELEGATION);\n            }\n            else {\n                throw new ObservableError('Unable to fetch operation result');\n            }\n        });\n    }\n    status() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._included) {\n                return 'pending';\n            }\n            const op = yield this.delegationOperation();\n            if (!op) {\n                return 'unknown';\n            }\n            return op.metadata.operation_result.status;\n        });\n    }\n}\n\nclass LegacyWalletProvider {\n    constructor(context) {\n        this.context = context;\n    }\n    getPKH() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.context.signer.publicKeyHash();\n        });\n    }\n    mapTransferParamsToWalletParams(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return attachKind(yield params(), OpKind.TRANSACTION);\n        });\n    }\n    mapOriginateParamsToWalletParams(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return attachKind(yield params(), OpKind.ORIGINATION);\n        });\n    }\n    mapDelegateParamsToWalletParams(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return attachKind(yield params(), OpKind.DELEGATION);\n        });\n    }\n    mapIncreasePaidStorageWalletParams(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return attachKind(yield params(), OpKind.INCREASE_PAID_STORAGE);\n        });\n    }\n    sendOperations(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const op = yield this.context.batch.batch(params).send();\n            return op.hash;\n        });\n    }\n    sign(bytes, watermark) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { prefixSig } = yield this.context.signer.sign(bytes, watermark);\n            return prefixSig;\n        });\n    }\n    getPK() {\n        return this.context.signer.publicKey();\n    }\n}\n\n/**\n * @description Utility class to send smart contract operation\n * The format for the arguments is the object representation\n */\nclass ContractMethodObject {\n    constructor(provider, address, parameterSchema, name, args = 'unit', isMultipleEntrypoint = true, isAnonymous = false) {\n        this.provider = provider;\n        this.address = address;\n        this.parameterSchema = parameterSchema;\n        this.name = name;\n        this.args = args;\n        this.isMultipleEntrypoint = isMultipleEntrypoint;\n        this.isAnonymous = isAnonymous;\n    }\n    /**\n     * @description Get the signature of the smart contract method\n     */\n    getSignature() {\n        return this.isAnonymous\n            ? this.parameterSchema.ExtractSchema()[this.name]\n            : this.parameterSchema.ExtractSchema();\n    }\n    /**\n     *\n     * @description Send the smart contract operation\n     *\n     * @param Options generic operation parameter\n     */\n    send(params = {}) {\n        if (this.provider instanceof Wallet) {\n            return this.provider.transfer(this.toTransferParams(params)).send();\n        }\n        else {\n            return this.provider.transfer(this.toTransferParams(params));\n        }\n    }\n    /**\n     *\n     * @description Create transfer params to be used with TezosToolkit.contract.transfer methods\n     *\n     * @param Options generic transfer operation parameters\n     */\n    toTransferParams({ fee, gasLimit, storageLimit, source, amount = 0, mutez = false, } = {}) {\n        const fullTransferParams = {\n            to: this.address,\n            amount,\n            fee,\n            mutez,\n            source,\n            gasLimit,\n            storageLimit,\n            parameter: {\n                entrypoint: this.isMultipleEntrypoint ? this.name : DEFAULT_SMART_CONTRACT_METHOD_NAME,\n                value: this.isAnonymous\n                    ? this.parameterSchema.EncodeObject({ [this.name]: this.args })\n                    : this.parameterSchema.EncodeObject(this.args),\n            },\n        };\n        return fullTransferParams;\n    }\n}\n\n/**\n * @description Utility class to send smart contract operation\n * The format for the arguments is the flattened representation\n */\nclass ContractMethod {\n    constructor(provider, address, parameterSchema, name, args, isMultipleEntrypoint = true, isAnonymous = false) {\n        this.provider = provider;\n        this.address = address;\n        this.parameterSchema = parameterSchema;\n        this.name = name;\n        this.args = args;\n        this.isMultipleEntrypoint = isMultipleEntrypoint;\n        this.isAnonymous = isAnonymous;\n    }\n    validateArgs(args, schema, name) {\n        const sigs = schema.ExtractSignatures();\n        if (!sigs.find((x) => x.length === args.length)) {\n            throw new InvalidParameterError(name, sigs, args);\n        }\n    }\n    /**\n     * @description Get the schema of the smart contract method\n     */\n    get schema() {\n        return this.isAnonymous\n            ? this.parameterSchema.ExtractSchema()[this.name]\n            : this.parameterSchema.ExtractSchema();\n    }\n    /**\n     * @description Get the signature of the smart contract method\n     */\n    getSignature() {\n        if (this.isAnonymous) {\n            const sig = this.parameterSchema.ExtractSignatures().find((x) => x[0] === this.name);\n            if (sig) {\n                sig.shift();\n                return sig;\n            }\n        }\n        else {\n            const sig = this.parameterSchema.ExtractSignatures();\n            return sig.length == 1 ? sig[0] : sig;\n        }\n    }\n    /**\n     *\n     * @description Send the smart contract operation\n     *\n     * @param Options generic operation parameter\n     */\n    send(params = {}) {\n        if (this.provider instanceof Wallet) {\n            return this.provider\n                .transfer(this.toTransferParams(params))\n                .send();\n        }\n        else {\n            return this.provider.transfer(this.toTransferParams(params));\n        }\n    }\n    /**\n     *\n     * @description Create transfer params to be used with TezosToolkit.contract.transfer methods\n     *\n     * @param Options generic transfer operation parameters\n     */\n    toTransferParams({ fee, gasLimit, storageLimit, source, amount = 0, mutez = false, } = {}) {\n        const fullTransferParams = {\n            to: this.address,\n            amount,\n            fee,\n            mutez,\n            source,\n            gasLimit,\n            storageLimit,\n            parameter: {\n                entrypoint: this.isMultipleEntrypoint ? this.name : DEFAULT_SMART_CONTRACT_METHOD_NAME,\n                value: this.isAnonymous\n                    ? this.parameterSchema.Encode(this.name, ...this.args)\n                    : this.parameterSchema.Encode(...this.args),\n            },\n        };\n        return fullTransferParams;\n    }\n}\n\nclass OnChainView {\n    constructor(_rpc, _readProvider, _contractAddress, _smartContractViewSchema, _contractStorageType, _args = 'Unit') {\n        this._rpc = _rpc;\n        this._readProvider = _readProvider;\n        this._contractAddress = _contractAddress;\n        this._smartContractViewSchema = _smartContractViewSchema;\n        this._contractStorageType = _contractStorageType;\n        this._args = _args;\n    }\n    /**\n     * @description Get the signature of the smart contract view\n     */\n    getSignature() {\n        return {\n            parameter: this._smartContractViewSchema.extractArgsSchema(),\n            result: this._smartContractViewSchema.extractResultSchema(),\n        };\n    }\n    /**\n     * @description Get the result of the view simulation\n     * @param executionContext.source the public key hash of the account who initialized this view execution.\n     * @param executionContext.viewCaller the contract address which is the caller of view.\n     */\n    executeView(executionContext) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.verifyContextExecution(executionContext);\n            const chainId = yield this._readProvider.getChainId();\n            const viewArgs = this.transformArgsToMichelson();\n            const scriptView = {\n                contract: this._contractAddress,\n                view: this._smartContractViewSchema.viewName,\n                input: viewArgs,\n                chain_id: chainId,\n                source: executionContext.viewCaller,\n            };\n            if (executionContext.source) {\n                scriptView.payer = executionContext.source;\n            }\n            return this.executeViewAndDecodeResult(scriptView);\n        });\n    }\n    verifyContextExecution(executionContext) {\n        if (executionContext.source &&\n            validateAddress(executionContext.source) !== ValidationResult.VALID) {\n            throw new InvalidViewSimulationContext(`The source account who initialized the view execution is invalid: ${executionContext.source}.`);\n        }\n        if (!executionContext.viewCaller ||\n            validateAddress(executionContext.viewCaller) !== ValidationResult.VALID) {\n            throw new InvalidViewSimulationContext(`The contract which is the caller of view is invalid: ${executionContext.viewCaller}.`);\n        }\n    }\n    transformArgsToMichelson() {\n        try {\n            return this._smartContractViewSchema.encodeViewArgs(this._args);\n        }\n        catch (error) {\n            throw new InvalidViewParameterError(this._smartContractViewSchema.viewName, this.getSignature(), this._args, error);\n        }\n    }\n    /**\n     * @description Loops through the view's instructions and replace BALANCE, SENDER, SELF_ADDRESS and AMOUNT with Michelson expressions that match the current context, if applicable.\n     *\n     * Certain specific instructions have different semantics in view:\n     * BALANCE represents the current amount of mutez held by the contract where view is;\n     * SENDER represents the contract which is the caller of view;\n     * SELF_ADDRESS represents the contract where view is;\n     * AMOUNT is always 0 mutez.\n     *\n     */\n    adaptViewCodeToContext(instructions, viewCaller, contractBalance) {\n        const instructionsToReplace = {\n            BALANCE: [{ prim: 'PUSH', args: [{ prim: 'mutez' }, { int: contractBalance }] }],\n            SENDER: [{ prim: 'PUSH', args: [{ prim: 'address' }, { string: viewCaller }] }],\n            SELF_ADDRESS: [\n                { prim: 'PUSH', args: [{ prim: 'address' }, { string: this._contractAddress }] },\n            ],\n            AMOUNT: [{ prim: 'PUSH', args: [{ prim: 'mutez' }, { int: '0' }] }],\n        };\n        instructions.forEach((inst, i) => {\n            if (inst.prim in instructionsToReplace) {\n                instructions[i] = Object(instructionsToReplace)[inst.prim];\n            }\n            if (inst.args && inst.args.length !== 0) {\n                this.adaptViewCodeToContext(inst.args, viewCaller, contractBalance);\n            }\n            else if (Array.isArray(inst)) {\n                this.adaptViewCodeToContext(inst, viewCaller, contractBalance);\n            }\n        });\n        return instructions;\n    }\n    executeViewAndDecodeResult(viewScript) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let storage;\n            try {\n                storage = (yield this._rpc.runScriptView(viewScript))\n                    .data;\n            }\n            catch (error) {\n                const failWith = validateAndExtractFailwith(error);\n                throw failWith\n                    ? new ViewSimulationError(`The simulation of the on-chain view named ${this._smartContractViewSchema.viewName} failed with: ${JSON.stringify(failWith)}`, this._smartContractViewSchema.viewName, failWith, error)\n                    : error;\n            }\n            return this._smartContractViewSchema.decodeViewResult(storage);\n        });\n    }\n}\n\nclass ContractMethodFactory {\n    constructor(provider, contractAddress) {\n        this.provider = provider;\n        this.contractAddress = contractAddress;\n    }\n    createContractMethodFlatParams(smartContractMethodSchema, smartContractMethodName, args, isMultipleEntrypoint = true, isAnonymous = false) {\n        return new ContractMethod(this.provider, this.contractAddress, smartContractMethodSchema, smartContractMethodName, args, isMultipleEntrypoint, isAnonymous);\n    }\n    createContractMethodObjectParam(smartContractMethodSchema, smartContractMethodName, args, isMultipleEntrypoint = true, isAnonymous = false) {\n        return new ContractMethodObject(this.provider, this.contractAddress, smartContractMethodSchema, smartContractMethodName, args, isMultipleEntrypoint, isAnonymous);\n    }\n    createContractViewObjectParam(rpc, readProvider, smartContractViewSchema, contractStorageType, viewArgs) {\n        return new OnChainView(rpc, readProvider, this.contractAddress, smartContractViewSchema, contractStorageType, viewArgs);\n    }\n}\n\nconst DEFAULT_SMART_CONTRACT_METHOD_NAME = 'default';\n/**\n * @description Utility class to retrieve data from a smart contract's storage without incurring fees via a contract's view method\n */\nclass ContractView {\n    constructor(currentContract, name, callbackParametersSchema, parameterSchema, args, rpc, readProvider) {\n        this.currentContract = currentContract;\n        this.name = name;\n        this.callbackParametersSchema = callbackParametersSchema;\n        this.parameterSchema = parameterSchema;\n        this.args = args;\n        this.rpc = rpc;\n        this.readProvider = readProvider;\n    }\n    read(chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const chainIdValidation = validateChain(chainId !== null && chainId !== void 0 ? chainId : '');\n            if (validateContractAddress(chainId !== null && chainId !== void 0 ? chainId : '') == ValidationResult.VALID) {\n                throw new DeprecationError(`Since version 12, the lambda view no longer depends on a lambda contract. The read method no longer accepts a contract address as a parameter.`);\n            }\n            else if (chainId && chainIdValidation !== ValidationResult.VALID) {\n                throw new InvalidChainIdError(chainId, invalidDetail(chainIdValidation));\n            }\n            const arg = this.parameterSchema.Encode(...this.args);\n            const result = yield this.rpc.runView({\n                contract: this.currentContract.address,\n                entrypoint: this.name,\n                input: arg,\n                chain_id: chainId ? chainId : yield this.readProvider.getChainId(),\n            });\n            return this.callbackParametersSchema.Execute(result.data);\n        });\n    }\n}\nconst validateArgs = (args, schema, name) => {\n    const sigs = schema.ExtractSignatures();\n    if (!sigs.find((x) => x.length === args.length)) {\n        throw new InvalidParameterError(name, sigs, args);\n    }\n};\n// lambda view tzip4\nconst isView = (entrypoint) => {\n    let isView = false;\n    if ('prim' in entrypoint && entrypoint.prim === 'pair' && entrypoint.args) {\n        const lastElement = entrypoint.args[entrypoint.args.length - 1];\n        if ('prim' in lastElement && lastElement.prim === 'contract') {\n            isView = true;\n        }\n    }\n    return isView;\n};\n/**\n * @description Smart contract abstraction\n */\nclass ContractAbstraction {\n    constructor(address, script, provider, storageProvider, entrypoints, rpc, readProvider) {\n        this.address = address;\n        this.script = script;\n        this.storageProvider = storageProvider;\n        this.entrypoints = entrypoints;\n        this.rpc = rpc;\n        this.readProvider = readProvider;\n        /**\n         * @description Contains methods that are implemented by the target Tezos Smart Contract, and offers the user to call the Smart Contract methods as if they were native TS/JS methods.\n         * NB: if the contract contains annotation it will include named properties; if not it will be indexed by a number.\n         *\n         */\n        this.methods = {};\n        /**\n         * @description Contains methods that are implemented by the target Tezos Smart Contract, and offers the user to call the Smart Contract methods as if they were native TS/JS methods.\n         * `methodsObject` serves the exact same purpose as the `methods` member. The difference is that it allows passing the parameter in an object format when calling the smart contract method (instead of the flattened representation)\n         * NB: if the contract contains annotation it will include named properties; if not it will be indexed by a number.\n         *\n         */\n        this.methodsObject = {};\n        /**\n         * @description Contains lamda views (tzip4) that are implemented by the target Tezos Smart Contract, and offers the user to call the lambda views as if they were native TS/JS methods.\n         * NB: These are the view defined in the tzip4 standard, not the views introduced by the Hangzhou protocol.\n         */\n        this.views = {};\n        /**\n         * @description Contains on-chain views that are defined by the target Tezos Smart Contract, and offers the user to simulate the views execution as if they were native TS/JS methods.\n         * NB: the expected format for the parameter when calling a smart contract view is the object format (same format as for the storage) and not the flattened representation.\n         *\n         */\n        this.contractViews = {};\n        this.contractMethodFactory = new ContractMethodFactory(provider, address);\n        this.schema = Schema.fromRPCResponse({ script: this.script });\n        this.parameterSchema = ParameterSchema.fromRPCResponse({ script: this.script });\n        this.viewSchema = ViewSchema.fromRPCResponse({ script: this.script });\n        if (this.viewSchema.length !== 0) {\n            this._initializeOnChainViews(this, rpc, this.readProvider, this.viewSchema);\n        }\n        this.eventSchema = EventSchema.fromRPCResponse({ script: this.script });\n        this._initializeMethods(this, this.entrypoints.entrypoints, this.rpc, this.readProvider);\n    }\n    _initializeMethods(currentContract, entrypoints, rpc, readProvider) {\n        const parameterSchema = this.parameterSchema;\n        const keys = Object.keys(entrypoints);\n        if (parameterSchema.isMultipleEntryPoint) {\n            keys.forEach((smartContractMethodName) => {\n                const smartContractMethodSchema = new ParameterSchema(entrypoints[smartContractMethodName]);\n                this.methods[smartContractMethodName] = function (...args) {\n                    return currentContract.contractMethodFactory.createContractMethodFlatParams(smartContractMethodSchema, smartContractMethodName, args);\n                };\n                this.methodsObject[smartContractMethodName] = function (args) {\n                    return currentContract.contractMethodFactory.createContractMethodObjectParam(smartContractMethodSchema, smartContractMethodName, args);\n                };\n                if (isView(entrypoints[smartContractMethodName])) {\n                    const view = function (...args) {\n                        const entrypointParamWithoutCallback = entrypoints[smartContractMethodName]\n                            .args[0];\n                        const smartContractMethodSchemaWithoutCallback = new ParameterSchema(entrypointParamWithoutCallback);\n                        const parametersCallback = entrypoints[smartContractMethodName].args[1]\n                            .args[0];\n                        const smartContractMethodCallbackSchema = new ParameterSchema(parametersCallback);\n                        validateArgs(args, smartContractMethodSchemaWithoutCallback, smartContractMethodName);\n                        return new ContractView(currentContract, smartContractMethodName, smartContractMethodCallbackSchema, smartContractMethodSchemaWithoutCallback, args, rpc, readProvider);\n                    };\n                    this.views[smartContractMethodName] = view;\n                }\n            });\n            // Deal with methods with no annotations which were not discovered by the RPC endpoint\n            // Methods with no annotations are discovered using parameter schema\n            const anonymousMethods = Object.keys(parameterSchema.ExtractSchema()).filter((key) => Object.keys(entrypoints).indexOf(key) === -1);\n            anonymousMethods.forEach((smartContractMethodName) => {\n                this.methods[smartContractMethodName] = function (...args) {\n                    return currentContract.contractMethodFactory.createContractMethodFlatParams(parameterSchema, smartContractMethodName, args, false, true);\n                };\n                this.methodsObject[smartContractMethodName] = function (args) {\n                    return currentContract.contractMethodFactory.createContractMethodObjectParam(parameterSchema, smartContractMethodName, args, false, true);\n                };\n            });\n        }\n        else {\n            const smartContractMethodSchema = this.parameterSchema;\n            this.methods[DEFAULT_SMART_CONTRACT_METHOD_NAME] = function (...args) {\n                return currentContract.contractMethodFactory.createContractMethodFlatParams(smartContractMethodSchema, DEFAULT_SMART_CONTRACT_METHOD_NAME, args, false);\n            };\n            this.methodsObject[DEFAULT_SMART_CONTRACT_METHOD_NAME] =\n                function (args) {\n                    return currentContract.contractMethodFactory.createContractMethodObjectParam(smartContractMethodSchema, DEFAULT_SMART_CONTRACT_METHOD_NAME, args, false);\n                };\n        }\n    }\n    _initializeOnChainViews(currentContract, rpc, readProvider, allContractViews) {\n        const storageType = this.schema.val;\n        allContractViews.forEach((viewSchema) => {\n            this.contractViews[viewSchema.viewName] = function (args) {\n                return currentContract.contractMethodFactory.createContractViewObjectParam(rpc, readProvider, viewSchema, storageType, args);\n            };\n        });\n    }\n    /**\n     * @description Return a friendly representation of the smart contract storage\n     */\n    storage() {\n        return this.storageProvider.getStorage(this.address, this.schema);\n    }\n    /**\n     *\n     * @description Return a friendly representation of the smart contract big map value\n     *\n     * @param key BigMap key to fetch\n     *\n     * @deprecated getBigMapKey has been deprecated in favor of getBigMapKeyByID\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#post-block-id-context-contracts-contract-id-big-map-get\n     */\n    bigMap(key) {\n        return this.storageProvider.getBigMapKey(this.address, key, this.schema);\n    }\n}\n\nconst setDelegate = (key) => {\n    return [\n        { prim: 'DROP' },\n        { prim: 'NIL', args: [{ prim: 'operation' }] },\n        {\n            prim: 'PUSH',\n            args: [{ prim: 'key_hash' }, { string: key }],\n        },\n        { prim: 'SOME' },\n        { prim: 'SET_DELEGATE' },\n        { prim: 'CONS' },\n    ];\n};\nconst transferImplicit = (key, mutez) => {\n    return [\n        { prim: 'DROP' },\n        { prim: 'NIL', args: [{ prim: 'operation' }] },\n        {\n            prim: 'PUSH',\n            args: [{ prim: 'key_hash' }, { string: key }],\n        },\n        { prim: 'IMPLICIT_ACCOUNT' },\n        {\n            prim: 'PUSH',\n            args: [{ prim: 'mutez' }, { int: `${mutez}` }],\n        },\n        { prim: 'UNIT' },\n        { prim: 'TRANSFER_TOKENS' },\n        { prim: 'CONS' },\n    ];\n};\nconst removeDelegate = () => {\n    return [\n        { prim: 'DROP' },\n        { prim: 'NIL', args: [{ prim: 'operation' }] },\n        { prim: 'NONE', args: [{ prim: 'key_hash' }] },\n        { prim: 'SET_DELEGATE' },\n        { prim: 'CONS' },\n    ];\n};\nconst transferToContract = (key, amount) => {\n    return [\n        { prim: 'DROP' },\n        { prim: 'NIL', args: [{ prim: 'operation' }] },\n        {\n            prim: 'PUSH',\n            args: [{ prim: 'address' }, { string: key }],\n        },\n        { prim: 'CONTRACT', args: [{ prim: 'unit' }] },\n        {\n            prim: 'IF_NONE',\n            args: [[{ prim: 'UNIT' }, { prim: 'FAILWITH' }], []],\n        },\n        {\n            prim: 'PUSH',\n            args: [{ prim: 'mutez' }, { int: `${amount}` }],\n        },\n        { prim: 'UNIT' },\n        { prim: 'TRANSFER_TOKENS' },\n        { prim: 'CONS' },\n    ];\n};\nconst MANAGER_LAMBDA = {\n    setDelegate,\n    removeDelegate,\n    transferImplicit,\n    transferToContract,\n};\n\nconst code = [\n    {\n        prim: 'parameter',\n        args: [\n            {\n                prim: 'lambda',\n                args: [\n                    { prim: 'unit' },\n                    {\n                        prim: 'pair',\n                        args: [{ prim: 'list', args: [{ prim: 'operation' }] }, { prim: 'unit' }],\n                    },\n                ],\n            },\n        ],\n    },\n    { prim: 'storage', args: [{ prim: 'unit' }] },\n    { prim: 'code', args: [[{ prim: 'CAR' }, { prim: 'UNIT' }, { prim: 'EXEC' }]] },\n];\nconst storage = 'Unit';\nconst VIEW_LAMBDA = {\n    code,\n    storage\n};\n\nfunction compose(functioncomposer1, functioncomposer2) {\n    return (contractAbstraction, context) => functioncomposer2(functioncomposer1(contractAbstraction, context), context);\n}\n\nclass SaplingStateAbstraction {\n    constructor(id, provider) {\n        this.id = id;\n        this.provider = provider;\n    }\n    /**\n     *\n     * @description Fetch the sapling state\n     *\n     * @param block optional block level to fetch the values from (head will be use by default)\n     * @returns Return a json object of the sapling_state\n     *\n     */\n    getSaplingDiff(block) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.provider.getSaplingDiffByID(this.id.toString(), block);\n        });\n    }\n    getId() {\n        return this.id.toString();\n    }\n}\n\nvar _PrepareProvider_counters;\nconst mergeLimits = (userDefinedLimit, defaultLimits) => {\n    var _a, _b, _c;\n    return {\n        fee: (_a = userDefinedLimit.fee) !== null && _a !== void 0 ? _a : defaultLimits.fee,\n        gasLimit: (_b = userDefinedLimit.gasLimit) !== null && _b !== void 0 ? _b : defaultLimits.gasLimit,\n        storageLimit: (_c = userDefinedLimit.storageLimit) !== null && _c !== void 0 ? _c : defaultLimits.storageLimit,\n    };\n};\n/**\n * @description PrepareProvider is a utility class to output the prepared format of an operation\n */\nclass PrepareProvider extends Provider {\n    constructor(context) {\n        super(context);\n        this.context = context;\n        _PrepareProvider_counters.set(this, void 0);\n        __classPrivateFieldSet(this, _PrepareProvider_counters, {}, \"f\");\n    }\n    getBlockHash(block) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.context.readProvider.getBlockHash(block !== null && block !== void 0 ? block : 'head~2');\n        });\n    }\n    getProtocolHash() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.context.readProvider.getNextProtocol('head');\n        });\n    }\n    getHeadCounter(pkh) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            return (_a = this.context.readProvider.getCounter(pkh, 'head')) !== null && _a !== void 0 ? _a : '0';\n        });\n    }\n    adjustGasForBatchOperation(gasLimitBlock, gaslimitOp, numberOfOps) {\n        return BigNumber.min(gaslimitOp, gasLimitBlock.div(numberOfOps + 1));\n    }\n    getAccountLimits(pkh, constants, numberOfOps) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const balance = yield this.context.readProvider.getBalance(pkh, 'head');\n            const { hard_gas_limit_per_operation, hard_gas_limit_per_block, hard_storage_limit_per_operation, cost_per_byte, } = constants;\n            return {\n                fee: 0,\n                gasLimit: numberOfOps\n                    ? Math.floor(this.adjustGasForBatchOperation(hard_gas_limit_per_block, hard_gas_limit_per_operation, numberOfOps).toNumber())\n                    : hard_gas_limit_per_operation.toNumber(),\n                storageLimit: Math.floor(BigNumber.min(balance.dividedBy(cost_per_byte), hard_storage_limit_per_operation).toNumber()),\n            };\n        });\n    }\n    getFee(op, pkh, headCounter) {\n        if (!__classPrivateFieldGet(this, _PrepareProvider_counters, \"f\")[pkh] || __classPrivateFieldGet(this, _PrepareProvider_counters, \"f\")[pkh] < headCounter) {\n            __classPrivateFieldGet(this, _PrepareProvider_counters, \"f\")[pkh] = headCounter;\n        }\n        const opCounter = ++__classPrivateFieldGet(this, _PrepareProvider_counters, \"f\")[pkh];\n        return {\n            counter: `${opCounter}`,\n            fee: typeof op.fee === 'undefined' ? '0' : `${op.fee}`,\n            gas_limit: typeof op.gas_limit === 'undefined' ? '0' : `${op.gas_limit}`,\n            storage_limit: typeof op.storage_limit === 'undefined' ? '0' : `${op.storage_limit}`,\n        };\n    }\n    getSource(op, pkh, source) {\n        return { source: typeof op.source === 'undefined' ? source || pkh : op.source };\n    }\n    addRevealOperationIfNeeded(operation, publicKeyHash) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (isOpRequireReveal(operation)) {\n                const ops = [operation];\n                const { publicKey, pkh } = yield this.getKeys();\n                if (yield this.isAccountRevealRequired(publicKeyHash)) {\n                    if (!publicKey) {\n                        throw new PublicKeyNotFoundError(pkh);\n                    }\n                    ops.unshift(yield createRevealOperation({\n                        fee: DEFAULT_FEE.REVEAL,\n                        storageLimit: DEFAULT_STORAGE_LIMIT.REVEAL,\n                        gasLimit: getRevealGasLimit(pkh),\n                    }, publicKeyHash, publicKey));\n                    return ops;\n                }\n            }\n            return operation;\n        });\n    }\n    getKeys() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const isSignerConfigured = this.context.isAnySignerConfigured();\n            return {\n                pkh: isSignerConfigured\n                    ? yield this.signer.publicKeyHash()\n                    : yield this.context.walletProvider.getPKH(),\n                publicKey: isSignerConfigured ? yield this.signer.publicKey() : undefined,\n            };\n        });\n    }\n    convertIntoArray(op) {\n        if (Array.isArray(op)) {\n            return [...op];\n        }\n        else {\n            return [op];\n        }\n    }\n    constructOpContents(ops, headCounter, pkh, source, currentVotingPeriod) {\n        return ops.map((op) => {\n            switch (op.kind) {\n                case OpKind.ACTIVATION:\n                case OpKind.DRAIN_DELEGATE:\n                    return Object.assign({}, op);\n                case OpKind.ORIGINATION:\n                    return Object.assign(Object.assign(Object.assign(Object.assign({}, op), { balance: typeof op.balance !== 'undefined' ? `${op.balance}` : '0' }), this.getSource(op, pkh, source)), this.getFee(op, pkh, headCounter));\n                case OpKind.TRANSACTION: {\n                    const cops = Object.assign(Object.assign(Object.assign(Object.assign({}, op), { amount: typeof op.amount !== 'undefined' ? `${op.amount}` : '0' }), this.getSource(op, pkh, source)), this.getFee(op, pkh, headCounter));\n                    if (cops.source.toLowerCase().startsWith('kt1')) {\n                        throw new DeprecationError(`KT1 addresses are not supported as source since ${Protocols.PsBabyM1}`);\n                    }\n                    return cops;\n                }\n                case OpKind.REVEAL:\n                case OpKind.DELEGATION:\n                case OpKind.REGISTER_GLOBAL_CONSTANT:\n                case OpKind.UPDATE_CONSENSUS_KEY:\n                case OpKind.SMART_ROLLUP_ADD_MESSAGES:\n                case OpKind.SMART_ROLLUP_ORIGINATE:\n                    return Object.assign(Object.assign(Object.assign({}, op), this.getSource(op, pkh, source)), this.getFee(op, pkh, headCounter));\n                case OpKind.TRANSFER_TICKET:\n                    return Object.assign(Object.assign(Object.assign(Object.assign({}, op), { ticket_amount: `${op.ticket_amount}` }), this.getSource(op, pkh, source)), this.getFee(op, pkh, headCounter));\n                case OpKind.INCREASE_PAID_STORAGE:\n                    return Object.assign(Object.assign(Object.assign(Object.assign({}, op), { amount: `${op.amount}` }), this.getSource(op, pkh, source)), this.getFee(op, pkh, headCounter));\n                case OpKind.BALLOT:\n                    if (currentVotingPeriod === undefined) {\n                        throw new RPCResponseError(`Failed to get the current voting period index`);\n                    }\n                    return Object.assign(Object.assign({}, op), { period: currentVotingPeriod === null || currentVotingPeriod === void 0 ? void 0 : currentVotingPeriod.voting_period.index });\n                case OpKind.PROPOSALS:\n                    if (currentVotingPeriod === undefined) {\n                        throw new RPCResponseError(`Failed to get the current voting period index`);\n                    }\n                    return Object.assign(Object.assign({}, op), { period: currentVotingPeriod === null || currentVotingPeriod === void 0 ? void 0 : currentVotingPeriod.voting_period.index });\n                default:\n                    throw new InvalidOperationKindError$1(op.kind);\n            }\n        });\n    }\n    /**\n     *\n     * @description Method to prepare an activation operation\n     * @param operation RPCOperation object or RPCOperation array\n     * @param source string or undefined source pkh\n     * @returns a PreparedOperation object\n     */\n    activate({ pkh, secret }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const op = yield createActivationOperation({\n                pkh,\n                secret,\n            });\n            const ops = this.convertIntoArray(op);\n            const hash = yield this.getBlockHash();\n            const protocol = yield this.getProtocolHash();\n            __classPrivateFieldSet(this, _PrepareProvider_counters, {}, \"f\");\n            const headCounter = parseInt(yield this.getHeadCounter(pkh), 10);\n            const contents = this.constructOpContents(ops, headCounter, pkh);\n            return {\n                opOb: {\n                    branch: hash,\n                    contents,\n                    protocol,\n                },\n                counter: headCounter,\n            };\n        });\n    }\n    /**\n     *\n     * @description Method to prepare a reveal operation\n     * @param operation RPCOperation object or RPCOperation array\n     * @param source string or undefined source pkh\n     * @returns a PreparedOperation object\n     */\n    reveal({ fee, gasLimit, storageLimit }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { pkh, publicKey } = yield this.getKeys();\n            if (!publicKey) {\n                throw new PublicKeyNotFoundError(pkh);\n            }\n            const protocolConstants = yield this.context.readProvider.getProtocolConstants('head');\n            const DEFAULT_PARAMS = yield this.getAccountLimits(pkh, protocolConstants);\n            const mergedEstimates = mergeLimits({ fee, storageLimit, gasLimit }, DEFAULT_PARAMS);\n            const op = yield createRevealOperation({\n                fee: mergedEstimates.fee,\n                gasLimit: mergedEstimates.gasLimit,\n                storageLimit: mergedEstimates.storageLimit,\n            }, pkh, publicKey);\n            const ops = this.convertIntoArray(op);\n            const hash = yield this.getBlockHash();\n            const protocol = yield this.getProtocolHash();\n            __classPrivateFieldSet(this, _PrepareProvider_counters, {}, \"f\");\n            const headCounter = parseInt(yield this.getHeadCounter(pkh), 10);\n            const contents = this.constructOpContents(ops, headCounter, pkh);\n            return {\n                opOb: {\n                    branch: hash,\n                    contents,\n                    protocol,\n                },\n                counter: headCounter,\n            };\n        });\n    }\n    /**\n     *\n     * @description Method to prepare an origination operation\n     * @param operation RPCOperation object or RPCOperation array\n     * @param source string or undefined source pkh\n     * @returns a PreparedOperation object\n     */\n    originate(_a, source) {\n        var { fee, storageLimit, gasLimit } = _a, rest = __rest(_a, [\"fee\", \"storageLimit\", \"gasLimit\"]);\n        return __awaiter(this, void 0, void 0, function* () {\n            const { pkh } = yield this.getKeys();\n            const protocolConstants = yield this.context.readProvider.getProtocolConstants('head');\n            const DEFAULT_PARAMS = yield this.getAccountLimits(pkh, protocolConstants);\n            const op = yield createOriginationOperation(yield this.context.parser.prepareCodeOrigination(Object.assign(Object.assign({}, rest), mergeLimits({ fee, storageLimit, gasLimit }, DEFAULT_PARAMS))));\n            const operation = yield this.addRevealOperationIfNeeded(op, pkh);\n            const ops = this.convertIntoArray(operation);\n            const hash = yield this.getBlockHash();\n            const protocol = yield this.getProtocolHash();\n            __classPrivateFieldSet(this, _PrepareProvider_counters, {}, \"f\");\n            const headCounter = parseInt(yield this.getHeadCounter(pkh), 10);\n            const contents = this.constructOpContents(ops, headCounter, pkh, source);\n            return {\n                opOb: {\n                    branch: hash,\n                    contents,\n                    protocol,\n                },\n                counter: headCounter,\n            };\n        });\n    }\n    /**\n     *\n     * @description Method to prepare a transaction operation\n     * @param operation RPCOperation object or RPCOperation array\n     * @param source string or undefined source pkh\n     * @returns a PreparedOperation object\n     */\n    transaction(_a) {\n        var { fee, storageLimit, gasLimit } = _a, rest = __rest(_a, [\"fee\", \"storageLimit\", \"gasLimit\"]);\n        return __awaiter(this, void 0, void 0, function* () {\n            const { pkh } = yield this.getKeys();\n            const protocolConstants = yield this.context.readProvider.getProtocolConstants('head');\n            const DEFAULT_PARAMS = yield this.getAccountLimits(pkh, protocolConstants);\n            const op = yield createTransferOperation(Object.assign(Object.assign({}, rest), mergeLimits({ fee, storageLimit, gasLimit }, DEFAULT_PARAMS)));\n            const operation = yield this.addRevealOperationIfNeeded(op, pkh);\n            const ops = this.convertIntoArray(operation);\n            const hash = yield this.getBlockHash();\n            const protocol = yield this.getProtocolHash();\n            __classPrivateFieldSet(this, _PrepareProvider_counters, {}, \"f\");\n            const headCounter = parseInt(yield this.getHeadCounter(pkh), 10);\n            const contents = this.constructOpContents(ops, headCounter, pkh, rest.source);\n            return {\n                opOb: {\n                    branch: hash,\n                    contents,\n                    protocol,\n                },\n                counter: headCounter,\n            };\n        });\n    }\n    /**\n     *\n     * @description Method to prepare a delegation operation\n     * @param operation RPCOperation object or RPCOperation array\n     * @param source string or undefined source pkh\n     * @returns a PreparedOperation object\n     */\n    delegation(_a) {\n        var { fee, storageLimit, gasLimit } = _a, rest = __rest(_a, [\"fee\", \"storageLimit\", \"gasLimit\"]);\n        return __awaiter(this, void 0, void 0, function* () {\n            const { pkh } = yield this.getKeys();\n            const protocolConstants = yield this.context.readProvider.getProtocolConstants('head');\n            const DEFAULT_PARAMS = yield this.getAccountLimits(pkh, protocolConstants);\n            const op = yield createSetDelegateOperation(Object.assign(Object.assign({}, rest), mergeLimits({ fee, storageLimit, gasLimit }, DEFAULT_PARAMS)));\n            const operation = yield this.addRevealOperationIfNeeded(op, pkh);\n            const ops = this.convertIntoArray(operation);\n            const hash = yield this.getBlockHash();\n            const protocol = yield this.getProtocolHash();\n            __classPrivateFieldSet(this, _PrepareProvider_counters, {}, \"f\");\n            const headCounter = parseInt(yield this.getHeadCounter(pkh), 10);\n            const contents = this.constructOpContents(ops, headCounter, pkh, rest.source);\n            return {\n                opOb: {\n                    branch: hash,\n                    contents,\n                    protocol,\n                },\n                counter: headCounter,\n            };\n        });\n    }\n    /**\n     *\n     * @description Method to prepare a register delegate operation\n     * @param operation RPCOperation object or RPCOperation array\n     * @param source string or undefined source pkh\n     * @returns a PreparedOperation object\n     */\n    registerDelegate({ fee, storageLimit, gasLimit }, source) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { pkh } = yield this.getKeys();\n            const protocolConstants = yield this.context.readProvider.getProtocolConstants('head');\n            const DEFAULT_PARAMS = yield this.getAccountLimits(pkh, protocolConstants);\n            const mergedEstimates = mergeLimits({ fee, storageLimit, gasLimit }, DEFAULT_PARAMS);\n            const op = yield createRegisterDelegateOperation({\n                fee: mergedEstimates.fee,\n                storageLimit: mergedEstimates.storageLimit,\n                gasLimit: mergedEstimates.gasLimit,\n            }, pkh);\n            const operation = yield this.addRevealOperationIfNeeded(op, pkh);\n            const ops = this.convertIntoArray(operation);\n            const hash = yield this.getBlockHash();\n            const protocol = yield this.getProtocolHash();\n            __classPrivateFieldSet(this, _PrepareProvider_counters, {}, \"f\");\n            const headCounter = parseInt(yield this.getHeadCounter(pkh), 10);\n            const contents = this.constructOpContents(ops, headCounter, pkh, source);\n            return {\n                opOb: {\n                    branch: hash,\n                    contents,\n                    protocol,\n                },\n                counter: headCounter,\n            };\n        });\n    }\n    /**\n     *\n     * @description Method to prepare a register_global_constant operation\n     * @param operation RPCOperation object or RPCOperation array\n     * @param source string or undefined source pkh\n     * @returns a PreparedOperation object\n     */\n    registerGlobalConstant(_a) {\n        var { fee, storageLimit, gasLimit } = _a, rest = __rest(_a, [\"fee\", \"storageLimit\", \"gasLimit\"]);\n        return __awaiter(this, void 0, void 0, function* () {\n            const { pkh } = yield this.getKeys();\n            const protocolConstants = yield this.context.readProvider.getProtocolConstants('head');\n            const DEFAULT_PARAMS = yield this.getAccountLimits(pkh, protocolConstants);\n            const op = yield createRegisterGlobalConstantOperation(Object.assign(Object.assign({}, rest), mergeLimits({ fee, storageLimit, gasLimit }, DEFAULT_PARAMS)));\n            const operation = yield this.addRevealOperationIfNeeded(op, pkh);\n            const ops = this.convertIntoArray(operation);\n            const hash = yield this.getBlockHash();\n            const protocol = yield this.getProtocolHash();\n            __classPrivateFieldSet(this, _PrepareProvider_counters, {}, \"f\");\n            const headCounter = parseInt(yield this.getHeadCounter(pkh), 10);\n            const contents = this.constructOpContents(ops, headCounter, pkh, rest.source);\n            return {\n                opOb: {\n                    branch: hash,\n                    contents,\n                    protocol,\n                },\n                counter: headCounter,\n            };\n        });\n    }\n    /**\n     *\n     * @description Method to prepare an update_consensus_key operation\n     * @param operation RPCOperation object or RPCOperation array\n     * @param source string or undefined source pkh\n     * @returns a PreparedOperation object\n     */\n    updateConsensusKey(_a, source) {\n        var { fee, storageLimit, gasLimit } = _a, rest = __rest(_a, [\"fee\", \"storageLimit\", \"gasLimit\"]);\n        return __awaiter(this, void 0, void 0, function* () {\n            const { pkh } = yield this.getKeys();\n            const protocolConstants = yield this.context.readProvider.getProtocolConstants('head');\n            const DEFAULT_PARAMS = yield this.getAccountLimits(pkh, protocolConstants);\n            const op = yield createUpdateConsensusKeyOperation(Object.assign(Object.assign({}, rest), mergeLimits({ fee, storageLimit, gasLimit }, DEFAULT_PARAMS)));\n            const operation = yield this.addRevealOperationIfNeeded(op, pkh);\n            const ops = this.convertIntoArray(operation);\n            const hash = yield this.getBlockHash();\n            const protocol = yield this.getProtocolHash();\n            __classPrivateFieldSet(this, _PrepareProvider_counters, {}, \"f\");\n            const headCounter = parseInt(yield this.getHeadCounter(pkh), 10);\n            const contents = this.constructOpContents(ops, headCounter, pkh, source);\n            return {\n                opOb: {\n                    branch: hash,\n                    contents,\n                    protocol,\n                },\n                counter: headCounter,\n            };\n        });\n    }\n    /**\n     *\n     * @description Method to prepare an increase_paid_storage operation\n     * @param operation RPCOperation object or RPCOperation array\n     * @param source string or undefined source pkh\n     * @returns a PreparedOperation object\n     */\n    increasePaidStorage(_a) {\n        var { fee, storageLimit, gasLimit } = _a, rest = __rest(_a, [\"fee\", \"storageLimit\", \"gasLimit\"]);\n        return __awaiter(this, void 0, void 0, function* () {\n            const { pkh } = yield this.getKeys();\n            const protocolConstants = yield this.context.readProvider.getProtocolConstants('head');\n            const DEFAULT_PARAMS = yield this.getAccountLimits(pkh, protocolConstants);\n            const op = yield createIncreasePaidStorageOperation(Object.assign(Object.assign({}, rest), mergeLimits({ fee, storageLimit, gasLimit }, DEFAULT_PARAMS)));\n            const operation = yield this.addRevealOperationIfNeeded(op, pkh);\n            const ops = this.convertIntoArray(operation);\n            const hash = yield this.getBlockHash();\n            const protocol = yield this.getProtocolHash();\n            __classPrivateFieldSet(this, _PrepareProvider_counters, {}, \"f\");\n            const headCounter = parseInt(yield this.getHeadCounter(pkh), 10);\n            const contents = this.constructOpContents(ops, headCounter, pkh, rest.source);\n            return {\n                opOb: {\n                    branch: hash,\n                    contents,\n                    protocol,\n                },\n                counter: headCounter,\n            };\n        });\n    }\n    /**\n     *\n     * @description Method to prepare a ballot operation\n     * @param operation RPCOperation object or RPCOperation array\n     * @returns a PreparedOperation object\n     */\n    ballot(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { pkh } = yield this.getKeys();\n            const op = yield createBallotOperation(Object.assign({}, params));\n            const ops = this.convertIntoArray(op);\n            const hash = yield this.getBlockHash();\n            const protocol = yield this.getProtocolHash();\n            __classPrivateFieldSet(this, _PrepareProvider_counters, {}, \"f\");\n            const headCounter = parseInt(yield this.getHeadCounter(pkh), 10);\n            let currentVotingPeriod;\n            try {\n                currentVotingPeriod = yield this.rpc.getCurrentPeriod();\n            }\n            catch (e) {\n                throw new RPCResponseError('Failed to get the current voting period index');\n            }\n            const contents = this.constructOpContents(ops, headCounter, pkh, undefined, currentVotingPeriod);\n            return {\n                opOb: {\n                    branch: hash,\n                    contents,\n                    protocol,\n                },\n                counter: headCounter,\n            };\n        });\n    }\n    /**\n     *\n     * @description Method to prepare a proposals operation\n     * @param operation RPCOperation object or RPCOperation array\n     * @returns a PreparedOperation object\n     */\n    proposals(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { pkh } = yield this.getKeys();\n            const op = yield createProposalsOperation(Object.assign({}, params));\n            const ops = this.convertIntoArray(op);\n            const hash = yield this.getBlockHash();\n            const protocol = yield this.getProtocolHash();\n            __classPrivateFieldSet(this, _PrepareProvider_counters, {}, \"f\");\n            const headCounter = parseInt(yield this.getHeadCounter(pkh), 10);\n            let currentVotingPeriod;\n            try {\n                currentVotingPeriod = yield this.rpc.getCurrentPeriod();\n            }\n            catch (e) {\n                throw new RPCResponseError('Failed to get the current voting period index');\n            }\n            const contents = this.constructOpContents(ops, headCounter, pkh, undefined, currentVotingPeriod);\n            return {\n                opOb: {\n                    branch: hash,\n                    contents,\n                    protocol,\n                },\n                counter: headCounter,\n            };\n        });\n    }\n    /**\n     *\n     * @description Method to prepare a drain_delegate operation\n     * @param operation RPCOperation object or RPCOperation array\n     * @returns a PreparedOperation object\n     */\n    drainDelegate(params, source) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { pkh } = yield this.getKeys();\n            const op = yield createDrainDelegateOperation(Object.assign({}, params));\n            const ops = this.convertIntoArray(op);\n            const hash = yield this.getBlockHash();\n            const protocol = yield this.getProtocolHash();\n            __classPrivateFieldSet(this, _PrepareProvider_counters, {}, \"f\");\n            const headCounter = parseInt(yield this.getHeadCounter(pkh), 10);\n            const contents = this.constructOpContents(ops, headCounter, pkh, source);\n            return {\n                opOb: {\n                    branch: hash,\n                    contents,\n                    protocol,\n                },\n                counter: headCounter,\n            };\n        });\n    }\n    /**\n     *\n     * @description Method to prepare a transfer_ticket operation\n     * @param operation RPCOperation object or RPCOperation array\n     * @param source string or undefined source pkh\n     * @returns a PreparedOperation object\n     */\n    transferTicket(_a) {\n        var { fee, storageLimit, gasLimit } = _a, rest = __rest(_a, [\"fee\", \"storageLimit\", \"gasLimit\"]);\n        return __awaiter(this, void 0, void 0, function* () {\n            const { pkh } = yield this.getKeys();\n            const protocolConstants = yield this.context.readProvider.getProtocolConstants('head');\n            const DEFAULT_PARAMS = yield this.getAccountLimits(pkh, protocolConstants);\n            const op = yield createTransferTicketOperation(Object.assign(Object.assign({}, rest), mergeLimits({ fee, storageLimit, gasLimit }, DEFAULT_PARAMS)));\n            const operation = yield this.addRevealOperationIfNeeded(op, pkh);\n            const ops = this.convertIntoArray(operation);\n            const hash = yield this.getBlockHash();\n            const protocol = yield this.getProtocolHash();\n            __classPrivateFieldSet(this, _PrepareProvider_counters, {}, \"f\");\n            const headCounter = parseInt(yield this.getHeadCounter(pkh), 10);\n            const contents = this.constructOpContents(ops, headCounter, pkh, rest.source);\n            return {\n                opOb: {\n                    branch: hash,\n                    contents,\n                    protocol,\n                },\n                counter: headCounter,\n            };\n        });\n    }\n    /**\n     *\n     * @description Method to prepare a smart_rollup_add_messages operation\n     * @param operation RPCOperation object or RPCOperation array\n     * @param source string or undefined source pkh\n     * @returns a PreparedOperation object\n     */\n    smartRollupAddMessages(_a) {\n        var { fee, storageLimit, gasLimit } = _a, rest = __rest(_a, [\"fee\", \"storageLimit\", \"gasLimit\"]);\n        return __awaiter(this, void 0, void 0, function* () {\n            const { pkh } = yield this.getKeys();\n            const protocolConstants = yield this.context.readProvider.getProtocolConstants('head');\n            const DEFAULT_PARAMS = yield this.getAccountLimits(pkh, protocolConstants);\n            const op = yield createSmartRollupAddMessagesOperation(Object.assign(Object.assign({}, rest), mergeLimits({ fee, storageLimit, gasLimit }, DEFAULT_PARAMS)));\n            const operation = yield this.addRevealOperationIfNeeded(op, pkh);\n            const ops = this.convertIntoArray(operation);\n            const hash = yield this.getBlockHash();\n            const protocol = yield this.getProtocolHash();\n            __classPrivateFieldSet(this, _PrepareProvider_counters, {}, \"f\");\n            const headCounter = parseInt(yield this.getHeadCounter(pkh), 10);\n            const contents = this.constructOpContents(ops, headCounter, pkh, rest.source);\n            return {\n                opOb: {\n                    branch: hash,\n                    contents,\n                    protocol,\n                },\n                counter: headCounter,\n            };\n        });\n    }\n    /**\n     *\n     * @description Method to prepare a smart_rollup_originate operation\n     * @param operation RPCOperation object or RPCOperation array\n     * @returns a PreparedOperation object\n     */\n    smartRollupOriginate(_a) {\n        var { fee, storageLimit, gasLimit } = _a, rest = __rest(_a, [\"fee\", \"storageLimit\", \"gasLimit\"]);\n        return __awaiter(this, void 0, void 0, function* () {\n            const { pkh } = yield this.getKeys();\n            const originationProof = yield this.rpc.getOriginationProof({\n                kind: rest.pvmKind,\n                kernel: rest.kernel,\n            });\n            const protocolConstants = yield this.context.readProvider.getProtocolConstants('head');\n            const DEFAULT_PARAMS = yield this.getAccountLimits(pkh, protocolConstants);\n            const op = yield createSmartRollupOriginateOperation(Object.assign(Object.assign(Object.assign({}, mergeLimits({ fee, storageLimit, gasLimit }, DEFAULT_PARAMS)), rest), { originationProof }));\n            const operation = yield this.addRevealOperationIfNeeded(op, pkh);\n            const ops = this.convertIntoArray(operation);\n            const hash = yield this.getBlockHash();\n            const protocol = yield this.getProtocolHash();\n            __classPrivateFieldSet(this, _PrepareProvider_counters, {}, \"f\");\n            const headCounter = parseInt(yield this.getHeadCounter(pkh), 10);\n            const contents = this.constructOpContents(ops, headCounter, pkh, rest.source);\n            return {\n                opOb: {\n                    branch: hash,\n                    contents,\n                    protocol,\n                },\n                counter: headCounter,\n            };\n        });\n    }\n    /**\n     *\n     * @description Method to prepare a batch operation\n     * @param operation RPCOperation object or RPCOperation array\n     * @returns a PreparedOperation object\n     */\n    batch(batchParams, estimates) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { pkh, publicKey } = yield this.getKeys();\n            const protocolConstants = yield this.context.readProvider.getProtocolConstants('head');\n            const DEFAULT_PARAMS = yield this.getAccountLimits(pkh, protocolConstants, batchParams.length);\n            const revealNeeded = yield this.isRevealOpNeeded(batchParams, pkh);\n            const ops = [];\n            if (!estimates) {\n                for (const op of batchParams) {\n                    if (isOpWithFee(op)) {\n                        const limits = mergeLimits(op, DEFAULT_PARAMS);\n                        ops.push(yield this.getRPCOp(Object.assign(Object.assign({}, op), limits)));\n                    }\n                    else {\n                        ops.push(Object.assign({}, op));\n                    }\n                }\n            }\n            else {\n                for (const op of batchParams) {\n                    if (isOpWithFee(op)) {\n                        const e = estimates.shift();\n                        const limits = mergeLimits(op, {\n                            fee: e.suggestedFeeMutez,\n                            storageLimit: e.storageLimit,\n                            gasLimit: e.gasLimit,\n                        });\n                        ops.push(yield this.getRPCOp(Object.assign(Object.assign({}, op), limits)));\n                    }\n                    else {\n                        ops.push(Object.assign({}, op));\n                    }\n                }\n            }\n            if (revealNeeded) {\n                if (!publicKey) {\n                    throw new PublicKeyNotFoundError(pkh);\n                }\n                ops.unshift(yield createRevealOperation({\n                    fee: DEFAULT_FEE.REVEAL,\n                    storageLimit: DEFAULT_STORAGE_LIMIT.REVEAL,\n                    gasLimit: getRevealGasLimit(pkh),\n                }, pkh, publicKey));\n            }\n            const hash = yield this.getBlockHash();\n            const protocol = yield this.getProtocolHash();\n            __classPrivateFieldSet(this, _PrepareProvider_counters, {}, \"f\");\n            const headCounter = parseInt(yield this.getHeadCounter(pkh), 10);\n            const contents = this.constructOpContents(ops, headCounter, pkh);\n            return {\n                opOb: {\n                    branch: hash,\n                    contents,\n                    protocol,\n                },\n                counter: headCounter,\n            };\n        });\n    }\n    /**\n     *\n     * @description Method to prepare a batch operation\n     * @param operation RPCOperation object or RPCOperation array\n     * @returns a PreparedOperation object\n     */\n    contractCall(contractMethod) {\n        var _a, _b, _c;\n        return __awaiter(this, void 0, void 0, function* () {\n            const hash = yield this.getBlockHash();\n            const protocol = yield this.getProtocolHash();\n            const { pkh } = yield this.getKeys();\n            __classPrivateFieldSet(this, _PrepareProvider_counters, {}, \"f\");\n            const headCounter = parseInt(yield this.getHeadCounter(pkh), 10);\n            const params = contractMethod.toTransferParams();\n            const protocolConstants = yield this.context.readProvider.getProtocolConstants('head');\n            const DEFAULT_PARAMS = yield this.getAccountLimits(pkh, protocolConstants);\n            const estimateLimits = mergeLimits({\n                fee: params.fee,\n                storageLimit: params.storageLimit,\n                gasLimit: params.gasLimit,\n            }, DEFAULT_PARAMS);\n            const op = {\n                kind: OpKind.TRANSACTION,\n                fee: (_a = params.fee) !== null && _a !== void 0 ? _a : estimateLimits.fee,\n                gas_limit: (_b = params.gasLimit) !== null && _b !== void 0 ? _b : estimateLimits.gasLimit,\n                storage_limit: (_c = params.storageLimit) !== null && _c !== void 0 ? _c : estimateLimits.storageLimit,\n                amount: String(params.amount),\n                destination: params.to,\n                parameters: params.parameter,\n            };\n            const operation = yield this.addRevealOperationIfNeeded(op, pkh);\n            const ops = this.convertIntoArray(operation);\n            const contents = this.constructOpContents(ops, headCounter, pkh);\n            return {\n                opOb: {\n                    branch: hash,\n                    contents,\n                    protocol,\n                },\n                counter: headCounter,\n            };\n        });\n    }\n    /**\n     *\n     * @description Method to convert a PreparedOperation to the params needed for the preapplyOperation method\n     * @param prepared a Prepared Operation\n     * @returns a PreapplyParams object\n     */\n    toPreapply(prepared) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { opOb: { contents, branch, protocol }, } = prepared;\n            const forgeParams = this.toForge(prepared);\n            const forged = yield this.context.forger.forge(forgeParams);\n            const sig = yield this.context.signer.sign(forged, new Uint8Array([3]));\n            return [{ contents, branch, protocol, signature: sig.prefixSig }];\n        });\n    }\n    /**\n     *\n     * @description Method to convert a PreparedOperation to the params needed for forging\n     * @param param a Prepared Operation\n     * @returns a ForgeParams object\n     */\n    toForge({ opOb: { contents, branch } }) {\n        return {\n            branch,\n            contents,\n        };\n    }\n}\n_PrepareProvider_counters = new WeakMap();\n\nconst BATCH_KINDS = [\n    OpKind.ACTIVATION,\n    OpKind.ORIGINATION,\n    OpKind.TRANSACTION,\n    OpKind.DELEGATION,\n];\nclass OperationBatch extends Provider {\n    constructor(context, estimator) {\n        super(context);\n        this.estimator = estimator;\n        this.operations = [];\n        this.prepare = new PrepareProvider(this.context);\n    }\n    /**\n     *\n     * @description Add a transaction operation to the batch\n     *\n     * @param params Transfer operation parameter\n     */\n    withTransfer(params) {\n        const toValidation = validateAddress(params.to);\n        if (params.amount < 0) {\n            throw new InvalidAmountError(params.amount.toString());\n        }\n        if (toValidation !== ValidationResult.VALID) {\n            throw new InvalidAddressError(params.to, invalidDetail(toValidation));\n        }\n        this.operations.push(Object.assign({ kind: OpKind.TRANSACTION }, params));\n        return this;\n    }\n    /**\n     *\n     * @description Transfer tickets from a Tezos address (tz1,tz2 or tz3) to a smart contract address( KT1)\n     *\n     * @param params Transfer operation parameter\n     */\n    withTransferTicket(params) {\n        const destinationValidation = validateAddress(params.destination);\n        if (destinationValidation !== ValidationResult.VALID) {\n            throw new InvalidAddressError(params.destination, invalidDetail(destinationValidation));\n        }\n        this.operations.push(Object.assign({ kind: OpKind.TRANSFER_TICKET }, params));\n        return this;\n    }\n    /**\n     *\n     * @description Add a contract call to the batch\n     *\n     * @param params Call a contract method\n     * @param options Generic operation parameters\n     */\n    withContractCall(params, options = {}) {\n        return this.withTransfer(params.toTransferParams(options));\n    }\n    /**\n     *\n     * @description Add a delegation operation to the batch\n     *\n     * @param params Delegation operation parameter\n     */\n    withDelegation(params) {\n        var _a;\n        const sourceValidation = validateAddress(params.source);\n        if (params.source && sourceValidation !== ValidationResult.VALID) {\n            throw new InvalidAddressError(params.source, invalidDetail(sourceValidation));\n        }\n        const delegateValidation = validateAddress((_a = params.delegate) !== null && _a !== void 0 ? _a : '');\n        if (params.delegate && delegateValidation !== ValidationResult.VALID) {\n            throw new InvalidAddressError(params.delegate, invalidDetail(delegateValidation));\n        }\n        this.operations.push(Object.assign({ kind: OpKind.DELEGATION }, params));\n        return this;\n    }\n    /**\n     *\n     * @description Add an activation operation to the batch\n     *\n     * @param params Activation operation parameter\n     * @throws {@link InvalidKeyHashError}\n     */\n    withActivation({ pkh, secret }) {\n        const pkhValidation = validateKeyHash(pkh);\n        if (pkhValidation !== ValidationResult.VALID) {\n            throw new InvalidKeyHashError(pkh, invalidDetail(pkhValidation));\n        }\n        this.operations.push({ kind: OpKind.ACTIVATION, pkh, secret });\n        return this;\n    }\n    /**\n     *\n     * @description Add an origination operation to the batch\n     *\n     * @param params Origination operation parameter\n     */\n    withOrigination(params) {\n        this.operations.push(Object.assign({ kind: OpKind.ORIGINATION }, params));\n        return this;\n    }\n    /**\n     *\n     * @description Add a register a global constant operation to the batch\n     *\n     * @param params RegisterGlobalConstant operation parameter\n     */\n    withRegisterGlobalConstant(params) {\n        this.operations.push(Object.assign({ kind: OpKind.REGISTER_GLOBAL_CONSTANT }, params));\n        return this;\n    }\n    /**\n     *\n     * @description Add an increase paid storage operation to the batch\n     *\n     * @param params IncreasePaidStorage operation parameter\n     */\n    withIncreasePaidStorage(params) {\n        this.operations.push(Object.assign({ kind: OpKind.INCREASE_PAID_STORAGE }, params));\n        return this;\n    }\n    /**\n     *\n     * @description Add a smart rollup add messages operation to the batch\n     *\n     * @param params Rollup origination operation parameter\n     */\n    withSmartRollupAddMessages(params) {\n        this.operations.push(Object.assign({ kind: OpKind.SMART_ROLLUP_ADD_MESSAGES }, params));\n        return this;\n    }\n    /**\n     *\n     * @description Add a smart rollup originate operation to the batch\n     *\n     * @param params Smart Rollup Originate operation parameter\n     */\n    withSmartRollupOriginate(params) {\n        this.operations.push(Object.assign({ kind: OpKind.SMART_ROLLUP_ORIGINATE }, params));\n        return this;\n    }\n    getRPCOp(param) {\n        return __awaiter(this, void 0, void 0, function* () {\n            switch (param.kind) {\n                case OpKind.TRANSACTION:\n                    return createTransferOperation(Object.assign({}, param));\n                case OpKind.ORIGINATION:\n                    return createOriginationOperation(yield this.context.parser.prepareCodeOrigination(Object.assign({}, param)));\n                case OpKind.DELEGATION:\n                    return createSetDelegateOperation(Object.assign({}, param));\n                case OpKind.REGISTER_GLOBAL_CONSTANT:\n                    return createRegisterGlobalConstantOperation(Object.assign({}, param));\n                case OpKind.INCREASE_PAID_STORAGE:\n                    return createIncreasePaidStorageOperation(Object.assign({}, param));\n                case OpKind.TRANSFER_TICKET:\n                    return createTransferTicketOperation(Object.assign({}, param));\n                case OpKind.SMART_ROLLUP_ADD_MESSAGES:\n                    return createSmartRollupAddMessagesOperation(Object.assign({}, param));\n                case OpKind.SMART_ROLLUP_ORIGINATE:\n                    return createSmartRollupOriginateOperation(Object.assign({}, param));\n                default:\n                    throw new InvalidOperationKindError$1(JSON.stringify(param.kind));\n            }\n        });\n    }\n    /**\n     *\n     * @description Add a group operation to the batch. Operation will be applied in the order they are in the params array\n     *\n     * @param params Operations parameter\n     * @throws {@link InvalidOperationKindError}\n     */\n    with(params) {\n        for (const param of params) {\n            switch (param.kind) {\n                case OpKind.TRANSACTION:\n                    this.withTransfer(param);\n                    break;\n                case OpKind.ORIGINATION:\n                    this.withOrigination(param);\n                    break;\n                case OpKind.DELEGATION:\n                    this.withDelegation(param);\n                    break;\n                case OpKind.ACTIVATION:\n                    this.withActivation(param);\n                    break;\n                case OpKind.REGISTER_GLOBAL_CONSTANT:\n                    this.withRegisterGlobalConstant(param);\n                    break;\n                case OpKind.INCREASE_PAID_STORAGE:\n                    this.withIncreasePaidStorage(param);\n                    break;\n                case OpKind.TRANSFER_TICKET:\n                    this.withTransferTicket(param);\n                    break;\n                case OpKind.SMART_ROLLUP_ADD_MESSAGES:\n                    this.withSmartRollupAddMessages(param);\n                    break;\n                case OpKind.SMART_ROLLUP_ORIGINATE:\n                    this.withSmartRollupOriginate(param);\n                    break;\n                default:\n                    throw new InvalidOperationKindError$1(JSON.stringify(param.kind));\n            }\n        }\n        return this;\n    }\n    /**\n     *\n     * @description Forge and Inject the operation batch\n     *\n     * @param params Optionally specify the source of the operation\n     */\n    send(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const publicKeyHash = yield this.signer.publicKeyHash();\n            const source = (params && params.source) || publicKeyHash;\n            const estimates = yield this.estimator.batch(this.operations);\n            if (estimates.length !== this.operations.length) {\n                estimates.shift();\n            }\n            const preparedOp = yield this.prepare.batch(this.operations, estimates);\n            const opBytes = yield this.forge(preparedOp);\n            const { hash, context, forgedBytes, opResponse } = yield this.signAndInject(opBytes);\n            return new BatchOperation(hash, preparedOp.opOb.contents, source, forgedBytes, opResponse, context);\n        });\n    }\n}\nclass RPCBatchProvider {\n    constructor(context, estimator) {\n        this.context = context;\n        this.estimator = estimator;\n    }\n    /***\n     *\n     * @description Batch a group of operation together. Operations will be applied in the order in which they are added to the batch\n     *\n     * @param params List of operation to batch together\n     */\n    batch(params) {\n        const batch = new OperationBatch(this.context, this.estimator);\n        if (Array.isArray(params)) {\n            batch.with(params);\n        }\n        return batch;\n    }\n}\n\nclass BatchWalletOperation extends WalletOperation {\n    constructor(opHash, context, newHead$) {\n        super(opHash, context, newHead$);\n        this.opHash = opHash;\n        this.context = context;\n        this.getOriginatedContractAddresses = () => __awaiter(this, void 0, void 0, function* () {\n            const opResult = yield this.operationResults();\n            if (!opResult) {\n                throw new ObservableError('Unable to fetch operation results');\n            }\n            else {\n                const originationOpResults = opResult.filter((x) => x.kind === 'origination');\n                let addresses = [];\n                for (const res of originationOpResults) {\n                    if (res.metadata.operation_result.originated_contracts) {\n                        addresses = [...addresses, ...res.metadata.operation_result.originated_contracts];\n                    }\n                }\n                return addresses;\n            }\n        });\n    }\n    revealOperation() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const operationResult = yield this.operationResults();\n            if (!operationResult) {\n                throw new ObservableError('Unable to fetch operation results');\n            }\n            else {\n                return operationResult.find((x) => x.kind === OpKind.REVEAL);\n            }\n        });\n    }\n    status() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._included) {\n                return 'pending';\n            }\n            const op = yield this.operationResults();\n            if (op) {\n                return (op\n                    .filter((result) => BATCH_KINDS.indexOf(result.kind) !== -1)\n                    .map((result) => {\n                    if (hasMetadataWithResult(result)) {\n                        const opResult = result.metadata.operation_result;\n                        return opResult.status;\n                    }\n                    else {\n                        return 'unknown';\n                    }\n                })[0] || 'unknown');\n            }\n            else {\n                throw new ObservableError('Unable to fetch operation results');\n            }\n        });\n    }\n}\n\nclass IncreasePaidStorageWalletOperation extends WalletOperation {\n    constructor(opHash, context, newHead$) {\n        super(opHash, context, newHead$);\n        this.opHash = opHash;\n        this.context = context;\n    }\n    revealOperation() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const operationResult = yield this.operationResults();\n            if (!operationResult) {\n                throw new ObservableError('Unable to fetch operation result');\n            }\n            else {\n                return operationResult.find((x) => x.kind === OpKind.REVEAL);\n            }\n        });\n    }\n    increasePaidStorageOperation() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const operationResult = yield this.operationResults();\n            if (!operationResult) {\n                throw new ObservableError('Unable to fetch operation result');\n            }\n            else {\n                return operationResult.find((x) => x.kind === OpKind.INCREASE_PAID_STORAGE);\n            }\n        });\n    }\n    status() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._included) {\n                return 'pending';\n            }\n            const op = yield this.increasePaidStorageOperation();\n            if (!op) {\n                return 'unknown';\n            }\n            return op.metadata.operation_result.status;\n        });\n    }\n}\n\nfunction timeoutAfter(timeoutMillisec) {\n    return function inner(source) {\n        return new BehaviorSubject(null).pipe(timeout({\n            each: timeoutMillisec,\n            with: () => throwError(() => new ConfirmationTimeoutError(`Confirmation polling timed out`)),\n        }), mergeMap(() => source));\n    };\n}\nconst createNewPollingBasedHeadObservable = (sharedHeadOb, context, _scheduler) => {\n    return sharedHeadOb.pipe(timeoutAfter(context.config.confirmationPollingTimeoutSecond * 1000), share({\n        connector: () => new ReplaySubject(1),\n        resetOnError: false,\n        resetOnComplete: false,\n        resetOnRefCountZero: false,\n    }));\n};\nclass OperationFactory {\n    constructor(context) {\n        this.context = context;\n        // Cache the last block for one second across all operations\n        this.sharedHeadObs = defer(() => {\n            return createObservableFromSubscription(this.context.stream.subscribeBlock('head'));\n        });\n    }\n    createNewHeadObservable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return createNewPollingBasedHeadObservable(this.sharedHeadObs, this.context);\n        });\n    }\n    createPastBlockWalker(startBlock, count = 1) {\n        return from(this.context.readProvider.getBlock(startBlock)).pipe(switchMap((block) => {\n            if (count === 1) {\n                return of(block);\n            }\n            return range(block.header.level, count - 1).pipe(startWith(block), concatMap((level) => __awaiter(this, void 0, void 0, function* () {\n                return this.context.readProvider.getBlock(typeof level === 'number' ? level : level.header.level);\n            })));\n        }));\n    }\n    createHeadObservableFromConfig({ blockIdentifier }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const observableSequence = [];\n            if (blockIdentifier) {\n                observableSequence.push(this.createPastBlockWalker(blockIdentifier));\n            }\n            observableSequence.push(yield this.createNewHeadObservable());\n            return concat(...observableSequence);\n        });\n    }\n    createOperation(hash, config = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new WalletOperation(hash, this.context.clone(), yield this.createHeadObservableFromConfig(config));\n        });\n    }\n    createBatchOperation(hash, config = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new BatchWalletOperation(hash, this.context.clone(), yield this.createHeadObservableFromConfig(config));\n        });\n    }\n    createTransactionOperation(hash, config = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new TransactionWalletOperation(hash, this.context.clone(), yield this.createHeadObservableFromConfig(config));\n        });\n    }\n    createDelegationOperation(hash, config = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new DelegationWalletOperation(hash, this.context.clone(), yield this.createHeadObservableFromConfig(config));\n        });\n    }\n    createOriginationOperation(hash, config = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new OriginationWalletOperation(hash, this.context.clone(), yield this.createHeadObservableFromConfig(config));\n        });\n    }\n    createIncreasePaidStorageOperation(hash, config = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new IncreasePaidStorageWalletOperation(hash, this.context.clone(), yield this.createHeadObservableFromConfig(config));\n        });\n    }\n}\n\nclass RpcTzProvider extends Provider {\n    constructor(context) {\n        super(context);\n        this.prepare = new PrepareProvider(this.context);\n    }\n    getBalance(address) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const addressValidation = validateAddress(address);\n            if (addressValidation !== ValidationResult.VALID) {\n                throw new InvalidAddressError(address, invalidDetail(addressValidation));\n            }\n            return this.context.readProvider.getBalance(address, 'head');\n        });\n    }\n    getDelegate(address) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const addressValidation = validateAddress(address);\n            if (addressValidation !== ValidationResult.VALID) {\n                throw new InvalidAddressError(address, invalidDetail(addressValidation));\n            }\n            return this.context.readProvider.getDelegate(address, 'head');\n        });\n    }\n    activate(pkh, secret) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const pkhValidation = validateKeyHash(pkh);\n            if (pkhValidation !== ValidationResult.VALID) {\n                throw new InvalidKeyHashError$1(pkh, invalidDetail(pkhValidation));\n            }\n            const prepared = yield this.prepare.activate({ pkh, secret });\n            const forgedBytes = yield this.forge(prepared);\n            const bytes = `${forgedBytes.opbytes}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`;\n            return new Operation(yield this.rpc.injectOperation(bytes), Object.assign(Object.assign({}, forgedBytes), { opbytes: bytes }), [], this.context.clone());\n        });\n    }\n}\n\nconst MINIMAL_FEE_MUTEZ = 100;\nconst MINIMAL_FEE_PER_BYTE_MUTEZ = 1;\nconst MINIMAL_FEE_PER_GAS_MUTEZ = 0.1;\nconst GAS_BUFFER = 100;\n/**\n * Examples of use :\n *\n *  Estimate a transfer operation :\n * ```\n * // Assuming that provider and signer are already configured...\n *\n * const amount = 2;\n * const address = 'tz1h3rQ8wBxFd8L9B3d7Jhaawu6Z568XU3xY';\n *\n * // Estimate gasLimit, storageLimit and fees for a transfer operation\n * const est = await Tezos.estimate.transfer({ to: address, amount: amount })\n * console.log(est.burnFeeMutez, est.gasLimit, est.minimalFeeMutez, est.storageLimit,\n *  est.suggestedFeeMutez, est.totalCost, est.usingBaseFeeMutez)\n *\n * ```\n *\n * Estimate a contract origination :\n * ```\n * // generic.json is referring to a Michelson Smart Contract\n *\n * const genericMultisigJSON = require('./generic.json')\n * const est = await Tezos.estimate.originate({\n *   code: genericMultisigJSON,\n *   storage: {\n *     stored_counter: 0,\n *     threshold: 1,\n *     keys: ['edpkuLxx9PQD8fZ45eUzrK3BhfDZJHhBuK4Zi49DcEGANwd2rpX82t']\n *   }\n * })\n * console.log(est.burnFeeMutez, est.gasLimit, est.minimalFeeMutez, est.storageLimit,\n *   est.suggestedFeeMutez, est.totalCost, est.usingBaseFeeMutez)\n *\n * ```\n */\nclass Estimate {\n    constructor(_milligasLimit, _storageLimit, opSize, minimalFeePerStorageByteMutez, \n    /**\n     * @description Base fee in mutez (1 mutez = 1e10−6 tez)\n     */\n    baseFeeMutez = MINIMAL_FEE_MUTEZ) {\n        this._milligasLimit = _milligasLimit;\n        this._storageLimit = _storageLimit;\n        this.opSize = opSize;\n        this.minimalFeePerStorageByteMutez = minimalFeePerStorageByteMutez;\n        this.baseFeeMutez = baseFeeMutez;\n    }\n    /**\n     * @description The number of Mutez that will be burned for the storage of the [operation](https://tezos.gitlab.io/user/glossary.html#operations). (Storage + Allocation fees)\n     */\n    get burnFeeMutez() {\n        return this.roundUp(Number(this.storageLimit) * Number(this.minimalFeePerStorageByteMutez));\n    }\n    /**\n     * @description  The limit on the amount of storage an [operation](https://tezos.gitlab.io/user/glossary.html#operations) can use.\n     */\n    get storageLimit() {\n        const limit = Math.max(Number(this._storageLimit), 0);\n        return limit > 0 ? limit : 0;\n    }\n    /**\n     * @description The limit on the amount of [gas](https://tezos.gitlab.io/user/glossary.html#gas) a given operation can consume.\n     */\n    get gasLimit() {\n        return this.roundUp(Number(this._milligasLimit) / 1000 + GAS_BUFFER);\n    }\n    get operationFeeMutez() {\n        return ((Number(this._milligasLimit) / 1000 + GAS_BUFFER) * MINIMAL_FEE_PER_GAS_MUTEZ +\n            Number(this.opSize) * MINIMAL_FEE_PER_BYTE_MUTEZ);\n    }\n    roundUp(nanotez) {\n        return Math.ceil(Number(nanotez));\n    }\n    /**\n     * @description Minimum fees for the [operation](https://tezos.gitlab.io/user/glossary.html#operations) according to [baker](https://tezos.gitlab.io/user/glossary.html#baker) defaults.\n     */\n    get minimalFeeMutez() {\n        return this.roundUp(MINIMAL_FEE_MUTEZ + this.operationFeeMutez);\n    }\n    /**\n     * @description The suggested fee for the operation which includes minimal fees and a small buffer.\n     */\n    get suggestedFeeMutez() {\n        return this.roundUp(this.operationFeeMutez + MINIMAL_FEE_MUTEZ * 2);\n    }\n    /**\n     * @description Fees according to your specified base fee will ensure that at least minimum fees are used.\n     */\n    get usingBaseFeeMutez() {\n        return (Math.max(Number(this.baseFeeMutez), MINIMAL_FEE_MUTEZ) + this.roundUp(this.operationFeeMutez));\n    }\n    /**\n     * @description The sum of `minimalFeeMutez` + `burnFeeMutez`.\n     */\n    get totalCost() {\n        return this.minimalFeeMutez + this.burnFeeMutez;\n    }\n    /**\n     * @description Since Delphinet, consumed gas is provided in milligas for more precision.\n     * This function returns an estimation of the gas that operation will consume in milligas.\n     */\n    get consumedMilligas() {\n        return Number(this._milligasLimit);\n    }\n    static createEstimateInstanceFromProperties(estimateProperties) {\n        let milligasLimit = 0;\n        let storageLimit = 0;\n        let opSize = 0;\n        let minimalFeePerStorageByteMutez = 0;\n        let baseFeeMutez;\n        estimateProperties.forEach((estimate) => {\n            milligasLimit += estimate.milligasLimit;\n            storageLimit += estimate.storageLimit;\n            opSize += estimate.opSize;\n            minimalFeePerStorageByteMutez = Math.max(estimate.minimalFeePerStorageByteMutez, minimalFeePerStorageByteMutez);\n            if (estimate.baseFeeMutez) {\n                baseFeeMutez = baseFeeMutez ? baseFeeMutez + estimate.baseFeeMutez : estimate.baseFeeMutez;\n            }\n        });\n        return new Estimate(milligasLimit, storageLimit, opSize, minimalFeePerStorageByteMutez, baseFeeMutez);\n    }\n    static createArrayEstimateInstancesFromProperties(estimateProperties) {\n        return estimateProperties.map((x) => new Estimate(x.milligasLimit, x.storageLimit, x.opSize, x.minimalFeePerStorageByteMutez, x.baseFeeMutez));\n    }\n}\n\n/**\n *  @category Error\n *  @description Error that indicates unable to get public key to estimate reveal operation in Wallet API\n */\nclass RevealEstimateError extends TaquitoError {\n    constructor() {\n        super();\n        this.name = 'RevealEstimateError';\n        this.message = 'Public key is unknown, unable to estimate the reveal operation in Wallet API.';\n    }\n}\n\nclass RPCEstimateProvider extends Provider {\n    constructor() {\n        super(...arguments);\n        this.ALLOCATION_STORAGE = 257;\n        this.ORIGINATION_STORAGE = 257;\n        this.OP_SIZE_REVEAL = 128;\n        this.prepare = new PrepareProvider(this.context);\n    }\n    getKeys() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const isSignerConfigured = this.context.isAnySignerConfigured();\n            return {\n                publicKeyHash: isSignerConfigured\n                    ? yield this.signer.publicKeyHash()\n                    : yield this.context.walletProvider.getPKH(),\n                publicKey: isSignerConfigured ? yield this.signer.publicKey() : undefined,\n            };\n        });\n    }\n    getEstimationPropertiesFromOperationContent(content, size, costPerByte) {\n        const operationResults = flattenOperationResult({ contents: [content] });\n        let totalMilligas = 0;\n        let totalStorage = 0;\n        operationResults.forEach((result) => {\n            totalStorage +=\n                'originated_contracts' in result && typeof result.originated_contracts !== 'undefined'\n                    ? result.originated_contracts.length * this.ORIGINATION_STORAGE\n                    : 0;\n            totalStorage += 'allocated_destination_contract' in result ? this.ALLOCATION_STORAGE : 0;\n            totalMilligas += Number(result.consumed_milligas) || 0;\n            totalStorage +=\n                'paid_storage_size_diff' in result ? Number(result.paid_storage_size_diff) || 0 : 0;\n            totalStorage +=\n                'storage_size' in result && 'global_address' in result\n                    ? Number(result.storage_size) || 0\n                    : 0;\n            totalStorage += 'genesis_commitment_hash' in result ? Number(result.size) : 0;\n        });\n        if (isOpWithFee(content)) {\n            return {\n                milligasLimit: totalMilligas || 0,\n                storageLimit: Number(totalStorage || 0),\n                opSize: size,\n                minimalFeePerStorageByteMutez: costPerByte.toNumber(),\n            };\n        }\n        else {\n            return {\n                milligasLimit: 0,\n                storageLimit: 0,\n                opSize: size,\n                minimalFeePerStorageByteMutez: costPerByte.toNumber(),\n                baseFeeMutez: 0,\n            };\n        }\n    }\n    calculateEstimates(op, constants) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { opbytes, opOb: { branch, contents }, } = yield this.forge(op);\n            const operation = {\n                operation: { branch, contents },\n                chain_id: yield this.context.readProvider.getChainId(),\n            };\n            const { opResponse } = yield this.simulate(operation);\n            const { cost_per_byte } = constants;\n            const errors = [...flattenErrors(opResponse, 'backtracked'), ...flattenErrors(opResponse)];\n            // Fail early in case of errors\n            if (errors.length) {\n                throw new TezosOperationError(errors, 'Error occurred during estimation');\n            }\n            let numberOfOps = 1;\n            if (Array.isArray(op.opOb.contents) && op.opOb.contents.length > 1) {\n                numberOfOps =\n                    opResponse.contents[0].kind === 'reveal'\n                        ? op.opOb.contents.length - 1\n                        : op.opOb.contents.length;\n            }\n            return opResponse.contents.map((x) => {\n                return this.getEstimationPropertiesFromOperationContent(x, \n                // TODO: Calculate a specific opSize for each operation.\n                x.kind === 'reveal' ? this.OP_SIZE_REVEAL / 2 : opbytes.length / 2 / numberOfOps, cost_per_byte);\n            });\n        });\n    }\n    /**\n     *\n     * @description Estimate gasLimit, storageLimit and fees for an origination operation\n     *\n     * @returns An estimation of gasLimit, storageLimit and fees for the operation\n     *\n     * @param OriginationOperation Originate operation parameter\n     */\n    originate(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const preparedOperation = yield this.prepare.originate(params);\n            const protocolConstants = yield this.context.readProvider.getProtocolConstants('head');\n            const estimateProperties = yield this.calculateEstimates(preparedOperation, protocolConstants);\n            if (preparedOperation.opOb.contents[0].kind === 'reveal') {\n                estimateProperties.shift();\n            }\n            return Estimate.createEstimateInstanceFromProperties(estimateProperties);\n        });\n    }\n    /**\n     *\n     * @description Estimate gasLimit, storageLimit and fees for an transfer operation\n     *\n     * @returns An estimation of gasLimit, storageLimit and fees for the operation\n     *\n     * @param TransferOperation Originate operation parameter\n     */\n    transfer(_a) {\n        var _b;\n        var { fee, storageLimit, gasLimit } = _a, rest = __rest(_a, [\"fee\", \"storageLimit\", \"gasLimit\"]);\n        return __awaiter(this, void 0, void 0, function* () {\n            const toValidation = validateAddress(rest.to);\n            if (toValidation !== ValidationResult.VALID) {\n                throw new InvalidAddressError(rest.to, invalidDetail(toValidation));\n            }\n            const sourceValidation = validateAddress((_b = rest.source) !== null && _b !== void 0 ? _b : '');\n            if (rest.source && sourceValidation !== ValidationResult.VALID) {\n                throw new InvalidAddressError(rest.source, invalidDetail(sourceValidation));\n            }\n            if (rest.amount < 0) {\n                throw new InvalidAmountError(rest.amount.toString());\n            }\n            const preparedOperation = yield this.prepare.transaction(Object.assign({ fee,\n                storageLimit,\n                gasLimit }, rest));\n            const protocolConstants = yield this.context.readProvider.getProtocolConstants('head');\n            const estimateProperties = yield this.calculateEstimates(preparedOperation, protocolConstants);\n            if (preparedOperation.opOb.contents[0].kind === 'reveal') {\n                estimateProperties.shift();\n            }\n            return Estimate.createEstimateInstanceFromProperties(estimateProperties);\n        });\n    }\n    /**\n     *\n     * @description Estimate gasLimit, storageLimit and fees for a transferTicket operation\n     *\n     * @returns An estimation of gasLimit, storageLimit and fees for the operation\n     *\n     * @param TransferTicketParams operation parameter\n     */\n    transferTicket(_a) {\n        var _b;\n        var { fee, storageLimit, gasLimit } = _a, rest = __rest(_a, [\"fee\", \"storageLimit\", \"gasLimit\"]);\n        return __awaiter(this, void 0, void 0, function* () {\n            const destinationValidation = validateAddress(rest.destination);\n            if (destinationValidation !== ValidationResult.VALID) {\n                throw new InvalidAddressError(rest.destination, invalidDetail(destinationValidation));\n            }\n            const sourceValidation = validateAddress((_b = rest.source) !== null && _b !== void 0 ? _b : '');\n            if (rest.source && sourceValidation !== ValidationResult.VALID) {\n                throw new InvalidAddressError(rest.source, invalidDetail(sourceValidation));\n            }\n            const protocolConstants = yield this.context.readProvider.getProtocolConstants('head');\n            const preparedOperation = yield this.prepare.transferTicket(Object.assign({ fee,\n                storageLimit,\n                gasLimit }, rest));\n            const estimateProperties = yield this.calculateEstimates(preparedOperation, protocolConstants);\n            if (preparedOperation.opOb.contents[0].kind === 'reveal') {\n                estimateProperties.shift();\n            }\n            return Estimate.createEstimateInstanceFromProperties(estimateProperties);\n        });\n    }\n    /**\n     *\n     * @description Estimate gasLimit, storageLimit and fees for a delegate operation\n     *\n     * @returns An estimation of gasLimit, storageLimit and fees for the operation\n     *\n     * @param Estimate\n     */\n    setDelegate(_a) {\n        var _b;\n        var { fee, gasLimit, storageLimit } = _a, rest = __rest(_a, [\"fee\", \"gasLimit\", \"storageLimit\"]);\n        return __awaiter(this, void 0, void 0, function* () {\n            const sourceValidation = validateAddress(rest.source);\n            if (rest.source && sourceValidation !== ValidationResult.VALID) {\n                throw new InvalidAddressError(rest.source, invalidDetail(sourceValidation));\n            }\n            const delegateValidation = validateAddress((_b = rest.delegate) !== null && _b !== void 0 ? _b : '');\n            if (rest.delegate && delegateValidation !== ValidationResult.VALID) {\n                throw new InvalidAddressError(rest.delegate, invalidDetail(delegateValidation));\n            }\n            const preparedOperation = yield this.prepare.delegation(Object.assign({ fee,\n                storageLimit,\n                gasLimit }, rest));\n            const protocolConstants = yield this.context.readProvider.getProtocolConstants('head');\n            const estimateProperties = yield this.calculateEstimates(preparedOperation, protocolConstants);\n            if (preparedOperation.opOb.contents[0].kind === 'reveal') {\n                estimateProperties.shift();\n            }\n            return Estimate.createEstimateInstanceFromProperties(estimateProperties);\n        });\n    }\n    /**\n     *\n     * @description Estimate gasLimit, storageLimit and fees for a each operation in the batch\n     *\n     * @returns An array of Estimate objects. If a reveal operation is needed, the first element of the array is the Estimate for the reveal operation.\n     */\n    batch(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const protocolConstants = yield this.context.readProvider.getProtocolConstants('head');\n            const preparedOperations = yield this.prepare.batch(params);\n            const estimateProperties = yield this.calculateEstimates(preparedOperations, protocolConstants);\n            return Estimate.createArrayEstimateInstancesFromProperties(estimateProperties);\n        });\n    }\n    /**\n     *\n     * @description Estimate gasLimit, storageLimit and fees for a delegate operation\n     *\n     * @returns An estimation of gasLimit, storageLimit and fees for the operation\n     *\n     * @param Estimate\n     */\n    registerDelegate(_a, source) {\n        var { fee, storageLimit, gasLimit } = _a, rest = __rest(_a, [\"fee\", \"storageLimit\", \"gasLimit\"]);\n        return __awaiter(this, void 0, void 0, function* () {\n            const pkh = (yield this.getKeys()).publicKeyHash;\n            const protocolConstants = yield this.context.readProvider.getProtocolConstants('head');\n            const checkSource = source || pkh;\n            const preparedOperation = yield this.prepare.registerDelegate(Object.assign({ fee, storageLimit, gasLimit }, rest), checkSource);\n            const estimateProperties = yield this.calculateEstimates(preparedOperation, protocolConstants);\n            if (preparedOperation.opOb.contents[0].kind === 'reveal') {\n                estimateProperties.shift();\n            }\n            return Estimate.createEstimateInstanceFromProperties(estimateProperties);\n        });\n    }\n    /**\n     *\n     * @description Estimate gasLimit, storageLimit and fees to reveal the current account\n     *\n     * @returns An estimation of gasLimit, storageLimit and fees for the operation or undefined if the account is already revealed\n     *\n     * @param Estimate\n     */\n    reveal(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { publicKeyHash, publicKey } = yield this.getKeys();\n            if (!publicKey) {\n                throw new RevealEstimateError();\n            }\n            if (yield this.isAccountRevealRequired(publicKeyHash)) {\n                const protocolConstants = yield this.context.readProvider.getProtocolConstants('head');\n                const preparedOperation = params\n                    ? yield this.prepare.reveal(params)\n                    : yield this.prepare.reveal({});\n                const estimateProperties = yield this.calculateEstimates(preparedOperation, protocolConstants);\n                return Estimate.createEstimateInstanceFromProperties(estimateProperties);\n            }\n        });\n    }\n    /**\n     *\n     * @description Estimate gasLimit, storageLimit and fees for an registerGlobalConstant operation\n     *\n     * @returns An estimation of gasLimit, storageLimit and fees for the operation\n     *\n     * @param params registerGlobalConstant operation parameter\n     */\n    registerGlobalConstant(_a) {\n        var { fee, storageLimit, gasLimit } = _a, rest = __rest(_a, [\"fee\", \"storageLimit\", \"gasLimit\"]);\n        return __awaiter(this, void 0, void 0, function* () {\n            const preparedOperation = yield this.prepare.registerGlobalConstant(Object.assign({ fee,\n                storageLimit,\n                gasLimit }, rest));\n            const protocolConstants = yield this.context.readProvider.getProtocolConstants('head');\n            const estimateProperties = yield this.calculateEstimates(preparedOperation, protocolConstants);\n            if (preparedOperation.opOb.contents[0].kind === 'reveal') {\n                estimateProperties.shift();\n            }\n            return Estimate.createEstimateInstanceFromProperties(estimateProperties);\n        });\n    }\n    /**\n     *\n     * @description Estimate gasLimit, storageLimit, and fees for an increasePaidStorage operation\n     *\n     * @returns An estimation of gasLimit, storageLimit, and fees for the operation\n     *\n     * @param params increasePaidStorage operation parameters\n     */\n    increasePaidStorage(_a) {\n        var { fee, storageLimit, gasLimit } = _a, rest = __rest(_a, [\"fee\", \"storageLimit\", \"gasLimit\"]);\n        return __awaiter(this, void 0, void 0, function* () {\n            if (rest.amount < 0) {\n                throw new InvalidAmountError(rest.amount.toString());\n            }\n            const protocolConstants = yield this.context.readProvider.getProtocolConstants('head');\n            const preparedOperation = yield this.prepare.increasePaidStorage(Object.assign({ fee,\n                storageLimit,\n                gasLimit }, rest));\n            const estimateProperties = yield this.calculateEstimates(preparedOperation, protocolConstants);\n            if (preparedOperation.opOb.contents[0].kind === 'reveal') {\n                estimateProperties.shift();\n            }\n            return Estimate.createEstimateInstanceFromProperties(estimateProperties);\n        });\n    }\n    /**\n     *\n     * @description Estimate gasLimit, storageLimit and fees for an Update Consensus Key operation\n     *\n     * @returns An estimation of gasLimit, storageLimit and fees for the operation\n     *\n     * @param Estimate\n     */\n    updateConsensusKey(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const protocolConstants = yield this.context.readProvider.getProtocolConstants('head');\n            const preparedOperation = yield this.prepare.updateConsensusKey(params);\n            const estimateProperties = yield this.calculateEstimates(preparedOperation, protocolConstants);\n            if (preparedOperation.opOb.contents[0].kind === 'reveal') {\n                estimateProperties.shift();\n            }\n            return Estimate.createEstimateInstanceFromProperties(estimateProperties);\n        });\n    }\n    /**\n     *\n     * @description Estimate gasLimit, storageLimit and fees for a smart_rollup_add_messages operation\n     *\n     * @returns An estimation of gasLimit, storageLimit and fees for the operation\n     *\n     * @param Estimate\n     */\n    smartRollupAddMessages(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const protocolConstants = yield this.context.readProvider.getProtocolConstants('head');\n            const preparedOperation = yield this.prepare.smartRollupAddMessages(params);\n            const estimateProperties = yield this.calculateEstimates(preparedOperation, protocolConstants);\n            if (preparedOperation.opOb.contents[0].kind === 'reveal') {\n                estimateProperties.shift();\n            }\n            return Estimate.createEstimateInstanceFromProperties(estimateProperties);\n        });\n    }\n    /**\n     *\n     * @description Estimate gasLimit, storageLimit and fees for an Smart Rollup Originate operation\n     *\n     * @returns An estimation of gasLimit, storageLimit and fees for the operation\n     *\n     * @param SmartRollupOriginateParams\n     */\n    smartRollupOriginate(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const protocolConstants = yield this.context.readProvider.getProtocolConstants('head');\n            const preparedOperation = yield this.prepare.smartRollupOriginate(params);\n            const estimateProperties = yield this.calculateEstimates(preparedOperation, protocolConstants);\n            if (preparedOperation.opOb.contents[0].kind === 'reveal') {\n                estimateProperties.shift();\n            }\n            return Estimate.createEstimateInstanceFromProperties(estimateProperties);\n        });\n    }\n    /**\n     *\n     * @description Estimate gasLimit, storageLimit and fees for contract call\n     *\n     * @returns An estimation of gasLimit, storageLimit and fees for the contract call\n     *\n     * @param Estimate\n     */\n    contractCall(contractMethod) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const protocolConstants = yield this.context.readProvider.getProtocolConstants('head');\n            const preparedOperation = yield this.prepare.contractCall(contractMethod);\n            const estimateProperties = yield this.calculateEstimates(preparedOperation, protocolConstants);\n            if (preparedOperation.opOb.contents[0].kind === 'reveal') {\n                estimateProperties.shift();\n            }\n            return Estimate.createEstimateInstanceFromProperties(estimateProperties);\n        });\n    }\n}\n\n/**\n * @description Delegation operation provide utility function to fetch newly issued delegation\n *\n * @warn Currently support only one delegation per operation\n */\nclass DelegateOperation extends Operation {\n    constructor(hash, params, source, raw, results, context) {\n        super(hash, raw, results, context);\n        this.params = params;\n        this.source = source;\n    }\n    get operationResults() {\n        const delegationOp = Array.isArray(this.results) &&\n            this.results.find((op) => op.kind === 'delegation');\n        const result = delegationOp && delegationOp.metadata && delegationOp.metadata.operation_result;\n        return result ? result : undefined;\n    }\n    get status() {\n        var _a, _b;\n        return (_b = (_a = this.operationResults) === null || _a === void 0 ? void 0 : _a.status) !== null && _b !== void 0 ? _b : 'unknown';\n    }\n    get delegate() {\n        return this.params.delegate;\n    }\n    get isRegisterOperation() {\n        return this.delegate === this.source;\n    }\n    get fee() {\n        return Number(this.params.fee);\n    }\n    get gasLimit() {\n        return Number(this.params.gas_limit);\n    }\n    get storageLimit() {\n        return Number(this.params.storage_limit);\n    }\n    get consumedGas() {\n        BigNumber$1.config({ DECIMAL_PLACES: 0, ROUNDING_MODE: BigNumber$1.ROUND_UP });\n        return this.consumedMilliGas\n            ? new BigNumber$1(this.consumedMilliGas).dividedBy(1000).toString()\n            : undefined;\n    }\n    get consumedMilliGas() {\n        var _a;\n        return (_a = this.operationResults) === null || _a === void 0 ? void 0 : _a.consumed_milligas;\n    }\n    get errors() {\n        var _a;\n        return (_a = this.operationResults) === null || _a === void 0 ? void 0 : _a.errors;\n    }\n}\n\n/**\n * @description Origination operation provide utility function to fetch newly originated contract\n *\n * @warn Currently support only one origination per operation\n */\nclass OriginationOperation extends Operation {\n    constructor(hash, params, raw, results, context, contractProvider) {\n        super(hash, raw, results, context);\n        this.params = params;\n        this.contractProvider = contractProvider;\n        const originatedContracts = this.operationResults && this.operationResults.originated_contracts;\n        if (Array.isArray(originatedContracts)) {\n            this.contractAddress = originatedContracts[0];\n        }\n    }\n    get status() {\n        var _a, _b;\n        return (_b = (_a = this.operationResults) === null || _a === void 0 ? void 0 : _a.status) !== null && _b !== void 0 ? _b : 'unknown';\n    }\n    get operationResults() {\n        const originationOp = Array.isArray(this.results) &&\n            this.results.find((op) => op.kind === 'origination');\n        const result = originationOp &&\n            hasMetadataWithResult(originationOp) &&\n            originationOp.metadata.operation_result;\n        return result ? result : undefined;\n    }\n    get fee() {\n        return Number(this.params.fee);\n    }\n    get gasLimit() {\n        return Number(this.params.gas_limit);\n    }\n    get storageLimit() {\n        return Number(this.params.storage_limit);\n    }\n    get consumedGas() {\n        BigNumber$1.config({ DECIMAL_PLACES: 0, ROUNDING_MODE: BigNumber$1.ROUND_UP });\n        return this.consumedMilliGas\n            ? new BigNumber$1(this.consumedMilliGas).dividedBy(1000).toString()\n            : undefined;\n    }\n    get consumedMilliGas() {\n        var _a;\n        return (_a = this.operationResults) === null || _a === void 0 ? void 0 : _a.consumed_milligas;\n    }\n    get storageDiff() {\n        const storageDiff = this.operationResults && this.operationResults.paid_storage_size_diff;\n        return storageDiff ? storageDiff : undefined;\n    }\n    get storageSize() {\n        const storageSize = this.operationResults && this.operationResults.storage_size;\n        return storageSize ? storageSize : undefined;\n    }\n    get errors() {\n        var _a;\n        return (_a = this.operationResults) === null || _a === void 0 ? void 0 : _a.errors;\n    }\n    /**\n     * @description Provide the contract abstract of the newly originated contract\n     * @throws {@link OriginationOperationError}\n     */\n    contract(confirmations, timeout) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.contractAddress) {\n                throw new OriginationOperationError('No contract was originated in this operation');\n            }\n            yield this.confirmation(confirmations, timeout);\n            return this.contractProvider.at(this.contractAddress);\n        });\n    }\n}\n\n/**\n * @description RegisterGlobalConstantOperation provides utility functions to fetch a newly issued operation of kind register_global_constant\n */\nclass RegisterGlobalConstantOperation extends Operation {\n    constructor(hash, params, source, raw, results, context) {\n        super(hash, raw, results, context);\n        this.params = params;\n        this.source = source;\n        this.globalConstantHash = this.operationResults && this.operationResults.global_address;\n    }\n    get operationResults() {\n        const registerGlobalConstantOp = Array.isArray(this.results) &&\n            this.results.find((op) => op.kind === 'register_global_constant');\n        const result = registerGlobalConstantOp &&\n            registerGlobalConstantOp.metadata &&\n            registerGlobalConstantOp.metadata.operation_result;\n        return result ? result : undefined;\n    }\n    get status() {\n        var _a, _b;\n        return (_b = (_a = this.operationResults) === null || _a === void 0 ? void 0 : _a.status) !== null && _b !== void 0 ? _b : 'unknown';\n    }\n    get registeredExpression() {\n        return this.params.value;\n    }\n    get fee() {\n        return Number(this.params.fee);\n    }\n    get gasLimit() {\n        return Number(this.params.gas_limit);\n    }\n    get storageLimit() {\n        return Number(this.params.storage_limit);\n    }\n    get errors() {\n        var _a;\n        return (_a = this.operationResults) === null || _a === void 0 ? void 0 : _a.errors;\n    }\n    get consumedGas() {\n        BigNumber$1.config({ DECIMAL_PLACES: 0, ROUNDING_MODE: BigNumber$1.ROUND_UP });\n        return this.consumedMilliGas\n            ? new BigNumber$1(this.consumedMilliGas).dividedBy(1000).toString()\n            : undefined;\n    }\n    get consumedMilliGas() {\n        var _a;\n        return (_a = this.operationResults) === null || _a === void 0 ? void 0 : _a.consumed_milligas;\n    }\n}\n\n/**\n * @description Reveal operation provides utility functions to fetch a newly issued revelation\n */\nclass RevealOperation extends Operation {\n    constructor(hash, params, source, raw, results, context) {\n        super(hash, raw, results, context);\n        this.params = params;\n        this.source = source;\n    }\n    get operationResults() {\n        const revealOp = Array.isArray(this.results) &&\n            this.results.find((op) => op.kind === 'reveal');\n        return revealOp ? [revealOp] : [];\n    }\n    get status() {\n        const operationResults = this.operationResults;\n        const txResult = operationResults[0];\n        if (txResult) {\n            return txResult.metadata.operation_result.status;\n        }\n        else {\n            return 'unknown';\n        }\n    }\n    get fee() {\n        return Number(this.params.fee);\n    }\n    get gasLimit() {\n        return Number(this.params.gas_limit);\n    }\n    get storageLimit() {\n        return Number(this.params.storage_limit);\n    }\n    get publicKey() {\n        return this.params.public_key;\n    }\n    sumProp(arr, prop) {\n        return arr.reduce((prev, current) => {\n            return prop in current ? Number(current[prop]) + prev : prev;\n        }, 0);\n    }\n    get consumedGas() {\n        BigNumber$1.config({ DECIMAL_PLACES: 0, ROUNDING_MODE: BigNumber$1.ROUND_UP });\n        return new BigNumber$1(this.consumedMilliGas).dividedBy(1000).toString();\n    }\n    get consumedMilliGas() {\n        return String(this.sumProp(flattenOperationResult({ contents: this.operationResults }), 'consumed_milligas'));\n    }\n    get storageDiff() {\n        return String(this.sumProp(flattenOperationResult({ contents: this.operationResults }), 'paid_storage_size_diff'));\n    }\n    get storageSize() {\n        return String(this.sumProp(flattenOperationResult({ contents: this.operationResults }), 'storage_size'));\n    }\n    get errors() {\n        return flattenErrors({ contents: this.operationResults });\n    }\n}\n\n/**\n * @description Transaction operation provides utility functions to fetch a newly issued transaction\n *\n * @warn Currently supports one transaction per operation\n */\nclass TransactionOperation extends Operation {\n    constructor(hash, params, source, raw, results, context) {\n        super(hash, raw, results, context);\n        this.params = params;\n        this.source = source;\n    }\n    get operationResults() {\n        const transactionOp = Array.isArray(this.results) &&\n            this.results.find((op) => op.kind === 'transaction');\n        return transactionOp ? [transactionOp] : [];\n    }\n    get status() {\n        const operationResults = this.operationResults;\n        const txResult = operationResults[0];\n        if (txResult) {\n            return txResult.metadata.operation_result.status;\n        }\n        else {\n            return 'unknown';\n        }\n    }\n    get amount() {\n        return new BigNumber(this.params.amount);\n    }\n    get destination() {\n        return this.params.destination;\n    }\n    get fee() {\n        return Number(this.params.fee);\n    }\n    get gasLimit() {\n        return Number(this.params.gas_limit);\n    }\n    get storageLimit() {\n        return Number(this.params.storage_limit);\n    }\n    sumProp(arr, prop) {\n        return arr.reduce((prev, current) => {\n            return prop in current ? Number(current[prop]) + prev : prev;\n        }, 0);\n    }\n    get consumedGas() {\n        BigNumber.config({ DECIMAL_PLACES: 0, ROUNDING_MODE: BigNumber.ROUND_UP });\n        return new BigNumber(this.consumedMilliGas).dividedBy(1000).toString();\n    }\n    get consumedMilliGas() {\n        return String(this.sumProp(flattenOperationResult({ contents: this.operationResults }), 'consumed_milligas'));\n    }\n    get storageDiff() {\n        return String(this.sumProp(flattenOperationResult({ contents: this.operationResults }), 'paid_storage_size_diff'));\n    }\n    get storageSize() {\n        return String(this.sumProp(flattenOperationResult({ contents: this.operationResults }), 'storage_size'));\n    }\n    get errors() {\n        return flattenErrors({ contents: this.operationResults });\n    }\n}\n\nclass BigMapAbstraction {\n    constructor(id, schema, provider) {\n        this.id = id;\n        this.schema = schema;\n        this.provider = provider;\n    }\n    /**\n     *\n     * @description Fetch one value in a big map\n     *\n     * @param keysToEncode Key to query (will be encoded properly according to the schema)\n     * @param block optional block level to fetch the values from (head will be use by default)\n     * @returns Return a well formatted json object of a big map value or undefined if the key is not found in the big map\n     *\n     */\n    get(keyToEncode, block) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const id = yield this.provider.getBigMapKeyByID(this.id.toString(), keyToEncode, this.schema, block);\n                return id;\n            }\n            catch (e) {\n                if (e instanceof HttpResponseError && e.status === STATUS_CODE.NOT_FOUND) {\n                    return undefined;\n                }\n                else {\n                    throw e;\n                }\n            }\n        });\n    }\n    /**\n     *\n     * @description Fetch multiple values in a big map\n     * All values will be fetched on the same block level. If a block is specified in the request, the values will be fetched at it.\n     * Otherwise, a first request will be done to the node to fetch the level of the head and all values will be fetched at this level.\n     * If one of the keys does not exist in the big map, its value will be set to undefined.\n     *\n     * @param keysToEncode Array of keys to query (will be encoded properly according to the schema)\n     * @param block optional block level to fetch the values from\n     * @param batchSize optional batch size representing the number of requests to execute in parallel\n     * @returns A MichelsonMap containing the keys queried in the big map and their value in a well-formatted JSON object format\n     *\n     */\n    getMultipleValues(keysToEncode, block, batchSize = 5) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.provider.getBigMapKeysByID(this.id.toString(), keysToEncode, this.schema, block, batchSize);\n        });\n    }\n    toJSON() {\n        return this.id.toString();\n    }\n    toString() {\n        return this.id.toString();\n    }\n}\n\n// Override the default michelson encoder semantic to provide richer abstraction over storage properties\nconst smartContractAbstractionSemantic = (provider) => ({\n    // Provide a specific abstraction for BigMaps\n    big_map: (val, code) => {\n        if (!val || !('int' in val) || val.int === undefined) {\n            // Return an empty object in case of missing big map ID\n            return {};\n        }\n        else {\n            const schema = new Schema(code);\n            return new BigMapAbstraction(new BigNumber(val.int), schema, provider);\n        }\n    },\n    sapling_state: (val) => {\n        if (!val || !('int' in val) || val.int === undefined) {\n            // Return an empty object in case of missing sapling state ID\n            return {};\n        }\n        else {\n            return new SaplingStateAbstraction(new BigNumber(val.int), provider);\n        }\n    }\n    /*\n    // TODO: embed useful other abstractions\n    'contract':  () => {},\n    'address':  () => {}\n    */\n});\n\n/**\n *\n * @description BallotOperation provides utility functions to fetch a new operation of kind ballot\n *\n */\nclass BallotOperation extends Operation {\n    constructor(hash, params, source, raw, results, context) {\n        super(hash, raw, results, context);\n        this.params = params;\n        this.source = source;\n    }\n    get operationResults() {\n        const ballotOp = Array.isArray(this.results) &&\n            this.results.find((op) => op.kind === 'ballot');\n        const result = ballotOp;\n        return result ? result : undefined;\n    }\n    get period() {\n        var _a;\n        return (_a = this.operationResults) === null || _a === void 0 ? void 0 : _a.period;\n    }\n    get proposal() {\n        return this.params.proposal;\n    }\n    get ballot() {\n        return this.params.ballot;\n    }\n}\n\n/**\n *\n * @description DrainDelegateOperation provides utility functions to fetch a new operation of kind drain_delegate\n *\n */\nclass DrainDelegateOperation extends Operation {\n    constructor(hash, params, raw, results, context) {\n        super(hash, raw, results, context);\n        this.params = params;\n    }\n    get operationResults() {\n        const drainDelegateOp = Array.isArray(this.results) &&\n            this.results.find((op) => op.kind === 'drain_delegate');\n        const result = drainDelegateOp && drainDelegateOp.metadata && drainDelegateOp.metadata.balance_updates;\n        return result ? result : undefined;\n    }\n    get consensusKey() {\n        return this.params.consensus_key;\n    }\n    get delegate() {\n        return this.params.delegate;\n    }\n    get destination() {\n        return this.params.destination;\n    }\n}\n\n/**\n *\n * @description Transfer tickets from a Tezos address (tz1, tz2 or tz3) to a smart contract address (KT1) (everything on layer 1 at this step)\n *\n * @warn Currently only supports one L2 ticket holder transfer at once. ie. one collection of tickets owned by tz1, tz2 or tz3 to a smart contract.\n */\nclass TransferTicketOperation extends Operation {\n    constructor(hash, params, source, raw, results, context) {\n        super(hash, raw, results, context);\n        this.params = params;\n        this.source = source;\n    }\n    get operationResults() {\n        const transferOp = Array.isArray(this.results) &&\n            this.results.find((op) => op.kind === OpKind.TRANSFER_TICKET);\n        const result = transferOp && transferOp.metadata && transferOp.metadata.operation_result;\n        return result ? result : undefined;\n    }\n    get status() {\n        var _a, _b;\n        return (_b = (_a = this.operationResults) === null || _a === void 0 ? void 0 : _a.status) !== null && _b !== void 0 ? _b : 'unknown';\n    }\n    get fee() {\n        return Number(this.params.fee);\n    }\n    get gasLimit() {\n        return Number(this.params.gas_limit);\n    }\n    get storageLimit() {\n        return Number(this.params.storage_limit);\n    }\n    get consumedGas() {\n        BigNumber$1.config({ DECIMAL_PLACES: 0, ROUNDING_MODE: BigNumber$1.ROUND_UP });\n        return this.consumedMilliGas\n            ? new BigNumber$1(this.consumedMilliGas).dividedBy(1000).toString()\n            : undefined;\n    }\n    get consumedMilliGas() {\n        var _a;\n        return (_a = this.operationResults) === null || _a === void 0 ? void 0 : _a.consumed_milligas;\n    }\n}\n\n/**\n *\n * @description IncreasePaidStorageOperation provides utility functions to fetch a new operation of kind increase_paid_storage\n *\n */\nclass IncreasePaidStorageOperation extends Operation {\n    constructor(hash, params, source, raw, results, context) {\n        super(hash, raw, results, context);\n        this.params = params;\n        this.source = source;\n    }\n    get operationResults() {\n        const increasePaidStorageOp = Array.isArray(this.results) &&\n            this.results.find((op) => op.kind === 'increase_paid_storage');\n        const result = increasePaidStorageOp &&\n            increasePaidStorageOp.metadata &&\n            increasePaidStorageOp.metadata.operation_result;\n        return result ? result : undefined;\n    }\n    get status() {\n        var _a, _b;\n        return (_b = (_a = this.operationResults) === null || _a === void 0 ? void 0 : _a.status) !== null && _b !== void 0 ? _b : 'unknown';\n    }\n    get fee() {\n        return Number(this.params.fee);\n    }\n    get gasLimit() {\n        return Number(this.params.gas_limit);\n    }\n    get storageLimit() {\n        return Number(this.params.storage_limit);\n    }\n    get errors() {\n        var _a;\n        return (_a = this.operationResults) === null || _a === void 0 ? void 0 : _a.errors;\n    }\n    get consumedMilliGas() {\n        var _a;\n        return (_a = this.operationResults) === null || _a === void 0 ? void 0 : _a.consumed_milligas;\n    }\n    get amount() {\n        return this.params.amount;\n    }\n    get destination() {\n        return this.params.destination;\n    }\n}\n\n/**\n *\n * @description ProposalsOperation provides utility functions to fetch a new operation of kind proposals\n *\n */\nclass ProposalsOperation extends Operation {\n    constructor(hash, params, source, raw, results, context) {\n        super(hash, raw, results, context);\n        this.params = params;\n        this.source = source;\n    }\n    get operationResults() {\n        const proposalsOp = Array.isArray(this.results) &&\n            this.results.find((op) => op.kind === 'proposals');\n        const result = proposalsOp;\n        return result ? result : undefined;\n    }\n    get proposals() {\n        return this.params.proposals;\n    }\n    get period() {\n        var _a;\n        return (_a = this.operationResults) === null || _a === void 0 ? void 0 : _a.period;\n    }\n}\n\n/**\n *\n * @description UpdateConsensusKeyOperation provides utility to fetch properties for Operation of kind UpdateConsensusKey\n *\n */\nclass UpdateConsensusKeyOperation extends Operation {\n    constructor(hash, params, source, raw, results, context) {\n        super(hash, raw, results, context);\n        this.params = params;\n        this.source = source;\n    }\n    get operationResults() {\n        const updateConsensusKeyOp = Array.isArray(this.results) &&\n            this.results.find((op) => op.kind === 'update_consensus_key');\n        const result = updateConsensusKeyOp &&\n            updateConsensusKeyOp.metadata &&\n            updateConsensusKeyOp.metadata.operation_result;\n        return result ? result : undefined;\n    }\n    get status() {\n        var _a, _b;\n        return (_b = (_a = this.operationResults) === null || _a === void 0 ? void 0 : _a.status) !== null && _b !== void 0 ? _b : 'unknown';\n    }\n    get fee() {\n        return Number(this.params.fee);\n    }\n    get gasLimit() {\n        return Number(this.params.gas_limit);\n    }\n    get storageLimit() {\n        return Number(this.params.storage_limit);\n    }\n    get pk() {\n        return this.params.pk;\n    }\n    get consumedMilliGas() {\n        var _a;\n        return (_a = this.operationResults) === null || _a === void 0 ? void 0 : _a.consumed_milligas;\n    }\n    get errors() {\n        var _a;\n        return (_a = this.operationResults) === null || _a === void 0 ? void 0 : _a.errors;\n    }\n}\n\n/**\n * @description SmartRollupAddMessagesOperation provides utility to fetch properties of SmartRollupAddMessages\n */\nclass SmartRollupAddMessagesOperation extends Operation {\n    constructor(hash, params, source, raw, results, context) {\n        super(hash, raw, results, context);\n        this.params = params;\n        this.source = source;\n    }\n    get operationResults() {\n        const smartRollupAddMessagesOp = Array.isArray(this.results) &&\n            this.results.find((op) => op.kind === 'smart_rollup_add_messages');\n        const result = smartRollupAddMessagesOp &&\n            smartRollupAddMessagesOp.metadata &&\n            smartRollupAddMessagesOp.metadata.operation_result;\n        return result ? result : undefined;\n    }\n    get status() {\n        var _a, _b;\n        return (_b = (_a = this.operationResults) === null || _a === void 0 ? void 0 : _a.status) !== null && _b !== void 0 ? _b : 'unknown';\n    }\n    get message() {\n        return this.params.message;\n    }\n    get fee() {\n        return Number(this.params.fee);\n    }\n    get gasLimit() {\n        return Number(this.params.gas_limit);\n    }\n    get storageLimit() {\n        return Number(this.params.storage_limit);\n    }\n    get consumedMilliGas() {\n        var _a;\n        return (_a = this.operationResults) === null || _a === void 0 ? void 0 : _a.consumed_milligas;\n    }\n    get errors() {\n        var _a;\n        return (_a = this.operationResults) === null || _a === void 0 ? void 0 : _a.errors;\n    }\n}\n\n/**\n *\n * @description SmartRollupOriginate Operation provides utility to fetch properties for Operation of kind SmartRollupOriginate\n *\n */\nclass SmartRollupOriginateOperation extends Operation {\n    constructor(hash, params, source, raw, results, context) {\n        super(hash, raw, results, context);\n        this.params = params;\n        this.source = source;\n    }\n    get operationResults() {\n        const smartRollupOriginateOp = Array.isArray(this.results) &&\n            this.results.find((op) => op.kind === OpKind.SMART_ROLLUP_ORIGINATE);\n        const result = smartRollupOriginateOp &&\n            smartRollupOriginateOp.metadata &&\n            smartRollupOriginateOp.metadata.operation_result;\n        return result ? result : undefined;\n    }\n    get status() {\n        var _a, _b;\n        return (_b = (_a = this.operationResults) === null || _a === void 0 ? void 0 : _a.status) !== null && _b !== void 0 ? _b : 'unknown';\n    }\n    get fee() {\n        return Number(this.params.fee);\n    }\n    get gasLimit() {\n        return Number(this.params.gas_limit);\n    }\n    get storageLimit() {\n        return Number(this.params.storage_limit);\n    }\n    get consumedMilliGas() {\n        var _a;\n        return (_a = this.operationResults) === null || _a === void 0 ? void 0 : _a.consumed_milligas;\n    }\n    get pvmKind() {\n        return this.params.pvm_kind;\n    }\n    get kernel() {\n        return this.params.kernel;\n    }\n    get originationProof() {\n        return this.params.origination_proof;\n    }\n    get errors() {\n        var _a;\n        return (_a = this.operationResults) === null || _a === void 0 ? void 0 : _a.errors;\n    }\n}\n\nclass RpcContractProvider extends Provider {\n    constructor(context, estimator) {\n        super(context);\n        this.estimator = estimator;\n        this.contractProviderTypeSymbol = Symbol.for('taquito-contract-provider-type-symbol');\n        this.prepare = new PrepareProvider(this.context);\n    }\n    /**\n     *\n     * @description Return a well formatted json object of the contract storage\n     *\n     * @param contract contract address you want to get the storage from\n     * @param schema optional schema can either be the contract script rpc response or a michelson-encoder schema\n     * @throws {@link InvalidContractAddressError}\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-context-contracts-contract-id-script\n     */\n    getStorage(contract, schema) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const contractValidation = validateContractAddress(contract);\n            if (contractValidation !== ValidationResult.VALID) {\n                throw new InvalidContractAddressError(contract, invalidDetail(contractValidation));\n            }\n            const script = yield this.context.readProvider.getScript(contract, 'head');\n            if (!schema) {\n                schema = script;\n            }\n            let contractSchema;\n            if (Schema.isSchema(schema)) {\n                contractSchema = schema;\n            }\n            else {\n                contractSchema = Schema.fromRPCResponse({ script: schema });\n            }\n            return contractSchema.Execute(script.storage, smartContractAbstractionSemantic(this)); // Cast into T because only the caller can know the true type of the storage\n        });\n    }\n    /**\n     *\n     * @description Return a well formatted json object of the contract big map storage\n     *\n     * @param contract contract address you want to get the storage from\n     * @param key contract big map key to fetch value from\n     * @param schema optional schema can either be the contract script rpc response or a michelson-encoder schema\n     * @throws {@link InvalidContractAddressError}\n     * @deprecated Deprecated in favor of getBigMapKeyByID\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#post-block-id-context-contracts-contract-id-big-map-get\n     */\n    getBigMapKey(contract, key, schema) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const contractValidation = validateContractAddress(contract);\n            if (contractValidation !== ValidationResult.VALID) {\n                throw new InvalidContractAddressError(contract, invalidDetail(contractValidation));\n            }\n            if (!schema) {\n                schema = (yield this.rpc.getContract(contract)).script;\n            }\n            let contractSchema;\n            if (Schema.isSchema(schema)) {\n                contractSchema = schema;\n            }\n            else {\n                contractSchema = Schema.fromRPCResponse({ script: schema });\n            }\n            const encodedKey = contractSchema.EncodeBigMapKey(key);\n            const val = yield this.rpc.getBigMapKey(contract, encodedKey);\n            return contractSchema.ExecuteOnBigMapValue(val); // Cast into T because only the caller can know the true type of the storage\n        });\n    }\n    /**\n     *\n     * @description Return a well formatted json object of a big map value\n     *\n     * @param id Big Map ID\n     * @param keyToEncode key to query (will be encoded properly according to the schema)\n     * @param schema Big Map schema (can be determined using your contract type)\n     * @param block optional block level to fetch the values from\n     *\n     * @see https://tezos.gitlab.io/api/rpc.html#get-block-id-context-big-maps-big-map-id-script-expr\n     */\n    getBigMapKeyByID(id, keyToEncode, schema, block) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { key, type } = schema.EncodeBigMapKey(keyToEncode);\n            const { packed } = yield this.context.packer.packData({ data: key, type });\n            const encodedExpr = encodeExpr(packed);\n            const bigMapValue = block\n                ? yield this.context.readProvider.getBigMapValue({ id: id.toString(), expr: encodedExpr }, block)\n                : yield this.context.readProvider.getBigMapValue({ id: id.toString(), expr: encodedExpr }, 'head');\n            return schema.ExecuteOnBigMapValue(bigMapValue, smartContractAbstractionSemantic(this));\n        });\n    }\n    /**\n     *\n     * @description Fetch multiple values in a big map\n     * All values will be fetched on the same block level. If a block is specified in the request, the values will be fetched at it.\n     * Otherwise, a first request will be done to the node to fetch the level of the head and all values will be fetched at this level.\n     * If one of the keys does not exist in the big map, its value will be set to undefined.\n     *\n     * @param id Big Map ID\n     * @param keys Array of keys to query (will be encoded properly according to the schema)\n     * @param schema Big Map schema (can be determined using your contract type)\n     * @param block optional block level to fetch the values from\n     * @param batchSize optional batch size representing the number of requests to execute in parallel\n     * @returns A MichelsonMap containing the keys queried in the big map and their value in a well-formatted JSON object format\n     *\n     */\n    getBigMapKeysByID(id, keys, schema, block, batchSize = 5) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const level = yield this.getBlockForRequest(keys, block);\n            const bigMapValues = new MichelsonMap();\n            // Execute batch of promises in series\n            let position = 0;\n            let results = [];\n            while (position < keys.length) {\n                const keysBatch = keys.slice(position, position + batchSize);\n                const batch = keysBatch.map((keyToEncode) => this.getBigMapValueOrUndefined(keyToEncode, id, schema, level));\n                results = [...results, ...(yield Promise.all(batch))];\n                position += batchSize;\n            }\n            for (let i = 0; i < results.length; i++) {\n                bigMapValues.set(keys[i], results[i]);\n            }\n            return bigMapValues;\n        });\n    }\n    getBlockForRequest(keys, block) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return keys.length === 1 || typeof block !== 'undefined'\n                ? block\n                : yield this.context.readProvider.getBlockLevel('head');\n        });\n    }\n    getBigMapValueOrUndefined(keyToEncode, id, schema, level) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                return yield this.getBigMapKeyByID(id, keyToEncode, schema, level);\n            }\n            catch (ex) {\n                if (ex instanceof HttpResponseError && ex.status === STATUS_CODE.NOT_FOUND) {\n                    return;\n                }\n                else {\n                    throw ex;\n                }\n            }\n        });\n    }\n    /**\n     *\n     * @description Return a well formatted json object of a sapling state\n     *\n     * @param id Sapling state ID\n     * @param block optional block level to fetch the value from\n     *\n     */\n    getSaplingDiffByID(id, block) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const saplingState = block\n                ? yield this.context.readProvider.getSaplingDiffById({ id: id.toString() }, block)\n                : yield this.context.readProvider.getSaplingDiffById({ id: id.toString() }, 'head');\n            return saplingState;\n        });\n    }\n    /**\n     *\n     * @description Originate a new contract according to the script in parameters. Will sign and inject an operation using the current context\n     *\n     * @returns An operation handle with the result from the rpc node\n     *\n     * @warn You cannot specify storage and init at the same time (use init to pass the raw michelson representation of storage)\n     *\n     * @param OriginationOperation Originate operation parameter\n     */\n    originate(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const estimate = yield this.estimate(params, this.estimator.originate.bind(this.estimator));\n            const preparedOrigination = yield this.prepare.originate(Object.assign(Object.assign({}, params), estimate));\n            const content = preparedOrigination.opOb.contents.find((op) => op.kind === OpKind.ORIGINATION);\n            const forgedOrigination = yield this.forge(preparedOrigination);\n            const { hash, context, forgedBytes, opResponse } = yield this.signAndInject(forgedOrigination);\n            return new OriginationOperation(hash, content, forgedBytes, opResponse, context, this);\n        });\n    }\n    /**\n     *\n     * @description Set the delegate for a contract. Will sign and inject an operation using the current context\n     *\n     * @returns An operation handle with the result from the rpc node\n     *\n     * @param SetDelegate operation parameter\n     */\n    setDelegate(params) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const sourceValidation = validateAddress(params.source);\n            if (params.source && sourceValidation !== ValidationResult.VALID) {\n                throw new InvalidAddressError(params.source, invalidDetail(sourceValidation));\n            }\n            const delegateValidation = validateAddress((_a = params.delegate) !== null && _a !== void 0 ? _a : '');\n            if (params.delegate && delegateValidation !== ValidationResult.VALID) {\n                throw new InvalidAddressError(params.delegate, invalidDetail(delegateValidation));\n            }\n            // Since babylon delegation source cannot smart contract\n            if (/kt1/i.test(params.source)) {\n                throw new InvalidDelegationSource(params.source);\n            }\n            const publicKeyHash = yield this.signer.publicKeyHash();\n            const sourceOrDefault = params.source || publicKeyHash;\n            const estimate = yield this.estimate(params, this.estimator.setDelegate.bind(this.estimator));\n            const preparedDelegation = yield this.prepare.delegation(Object.assign(Object.assign({}, params), estimate));\n            const content = preparedDelegation.opOb.contents.find((op) => op.kind === OpKind.DELEGATION);\n            const opBytes = yield this.forge(preparedDelegation);\n            const { hash, context, forgedBytes, opResponse } = yield this.signAndInject(opBytes);\n            return new DelegateOperation(hash, content, sourceOrDefault, forgedBytes, opResponse, context);\n        });\n    }\n    /**\n     *\n     * @description Register the current address as delegate. Will sign and inject an operation using the current context\n     *\n     * @returns An operation handle with the result from the rpc node\n     *\n     * @param RegisterDelegate operation parameter\n     */\n    registerDelegate(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const estimate = yield this.estimate(params, this.estimator.registerDelegate.bind(this.estimator));\n            const source = yield this.signer.publicKeyHash();\n            const prepared = yield this.prepare.registerDelegate(Object.assign(Object.assign({}, params), estimate));\n            const content = prepared.opOb.contents.find((op) => op.kind === OpKind.DELEGATION);\n            const opBytes = yield this.forge(prepared);\n            const { hash, context, forgedBytes, opResponse } = yield this.signAndInject(opBytes);\n            return new DelegateOperation(hash, content, source, forgedBytes, opResponse, context);\n        });\n    }\n    /**\n     *\n     * @description Transfer tz from current address to a specific address. Will sign and inject an operation using the current context\n     *\n     * @returns An operation handle with the result from the rpc node\n     *\n     * @param Transfer operation parameter\n     */\n    transfer(params) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const toValidation = validateAddress(params.to);\n            if (toValidation !== ValidationResult.VALID) {\n                throw new InvalidAddressError(params.to, invalidDetail(toValidation));\n            }\n            const sourceValidation = validateAddress((_a = params.source) !== null && _a !== void 0 ? _a : '');\n            if (params.source && sourceValidation !== ValidationResult.VALID) {\n                throw new InvalidAddressError(params.source, invalidDetail(sourceValidation));\n            }\n            if (params.amount < 0) {\n                throw new InvalidAmountError(params.amount.toString());\n            }\n            const publicKeyHash = yield this.signer.publicKeyHash();\n            const estimate = yield this.estimate(params, this.estimator.transfer.bind(this.estimator));\n            const source = params.source || publicKeyHash;\n            const prepared = yield this.prepare.transaction(Object.assign(Object.assign({}, params), estimate));\n            const content = prepared.opOb.contents.find((op) => op.kind === OpKind.TRANSACTION);\n            const opBytes = yield this.forge(prepared);\n            const { hash, context, forgedBytes, opResponse } = yield this.signAndInject(opBytes);\n            return new TransactionOperation(hash, content, source, forgedBytes, opResponse, context);\n        });\n    }\n    /**\n     *\n     * @description Transfer Tickets to a smart contract address\n     *\n     * @returns An operation handle with the result from the rpc node\n     *\n     * @param TransferTicketParams operation parameter\n     */\n    transferTicket(params) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            const destinationValidation = validateAddress(params.destination);\n            if (destinationValidation !== ValidationResult.VALID) {\n                throw new InvalidAddressError(params.destination, invalidDetail(destinationValidation));\n            }\n            const sourceValidation = validateAddress((_a = params.source) !== null && _a !== void 0 ? _a : '');\n            if (params.source && sourceValidation !== ValidationResult.VALID) {\n                throw new InvalidAddressError(params.source, invalidDetail(sourceValidation));\n            }\n            const publicKeyHash = yield this.signer.publicKeyHash();\n            const source = (_b = params.source) !== null && _b !== void 0 ? _b : publicKeyHash;\n            const estimate = yield this.estimate(params, this.estimator.transferTicket.bind(this.estimator));\n            const prepared = yield this.prepare.transferTicket(Object.assign(Object.assign({}, params), estimate));\n            const content = prepared.opOb.contents.find((op) => op.kind === OpKind.TRANSFER_TICKET);\n            const opBytes = yield this.forge(prepared);\n            const { hash, context, forgedBytes, opResponse } = yield this.signAndInject(opBytes);\n            return new TransferTicketOperation(hash, content, source, forgedBytes, opResponse, context);\n        });\n    }\n    /**\n     *\n     * @description Reveal the current address. Will throw an error if the address is already revealed.\n     *\n     * @returns An operation handle with the result from the rpc node\n     *\n     * @param RevealParams operation parameter\n     */\n    reveal(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const publicKeyHash = yield this.signer.publicKeyHash();\n            const estimateReveal = yield this.estimator.reveal(params);\n            if (estimateReveal) {\n                const estimated = yield this.estimate(params, () => __awaiter(this, void 0, void 0, function* () { return estimateReveal; }));\n                const prepared = yield this.prepare.reveal(Object.assign(Object.assign({}, params), estimated));\n                const content = prepared.opOb.contents.find((op) => op.kind === OpKind.REVEAL);\n                const opBytes = yield this.forge(prepared);\n                const { hash, context, forgedBytes, opResponse } = yield this.signAndInject(opBytes);\n                return new RevealOperation(hash, content, publicKeyHash, forgedBytes, opResponse, context);\n            }\n            else {\n                throw new RevealOperationError(`The publicKeyHash '${publicKeyHash}' has already been revealed.`);\n            }\n        });\n    }\n    /**\n     *\n     * @description Register a Micheline expression in a global table of constants. Will sign and inject an operation using the current context\n     *\n     * @returns An operation handle with the result from the rpc node\n     *\n     * @param params registerGlobalConstant operation parameter\n     */\n    registerGlobalConstant(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const publicKeyHash = yield this.signer.publicKeyHash();\n            const estimate = yield this.estimate(params, this.estimator.registerGlobalConstant.bind(this.estimator));\n            const prepared = yield this.prepare.registerGlobalConstant(Object.assign(Object.assign({}, params), estimate));\n            const content = prepared.opOb.contents.find((op) => op.kind === OpKind.REGISTER_GLOBAL_CONSTANT);\n            const opBytes = yield this.forge(prepared);\n            const { hash, context, forgedBytes, opResponse } = yield this.signAndInject(opBytes);\n            return new RegisterGlobalConstantOperation(hash, content, publicKeyHash, forgedBytes, opResponse, context);\n        });\n    }\n    /**\n     *\n     * @description Increase the paid storage of a smart contract\n     *\n     * @returns An operation handle with the result from the rpc node\n     *\n     * @param params increasePaidStorage operation parameter\n     */\n    increasePaidStorage(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (params.amount < 0) {\n                throw new InvalidAmountError(params.amount.toString());\n            }\n            const publicKeyHash = yield this.signer.publicKeyHash();\n            const estimate = yield this.estimate(params, this.estimator.increasePaidStorage.bind(this.estimator));\n            const prepared = yield this.prepare.increasePaidStorage(Object.assign(Object.assign({}, params), estimate));\n            const content = prepared.opOb.contents.find((op) => op.kind === OpKind.INCREASE_PAID_STORAGE);\n            const opBytes = yield this.forge(prepared);\n            const { hash, context, forgedBytes, opResponse } = yield this.signAndInject(opBytes);\n            return new IncreasePaidStorageOperation(hash, content, publicKeyHash, forgedBytes, opResponse, context);\n        });\n    }\n    /**\n     *\n     * @description Transfers the spendable balance of the delegate to destination when consensus_key is the active consensus key of delegate\n     *\n     * @returns An operation handle with the result from the rpc node\n     *\n     * @param params drainDelegate operation parameter\n     */\n    drainDelegate(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const prepared = yield this.prepare.drainDelegate(params);\n            const content = prepared.opOb.contents.find((op) => op.kind === OpKind.DRAIN_DELEGATE);\n            const opBytes = yield this.forge(prepared);\n            const { hash, context, forgedBytes, opResponse } = yield this.signAndInject(opBytes);\n            return new DrainDelegateOperation(hash, content, forgedBytes, opResponse, context);\n        });\n    }\n    /**\n     *\n     * @description Submit a ballot vote to a specified proposal\n     *\n     * @returns An operation handle with the result from the rpc node\n     *\n     * @param BallotParams Ballot operation parameter\n     */\n    ballot(params) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            const publicKeyHash = yield this.signer.publicKeyHash();\n            const sourceValidation = validateAddress((_a = params.source) !== null && _a !== void 0 ? _a : '');\n            if (params.source && sourceValidation !== ValidationResult.VALID) {\n                throw new InvalidAddressError(params.source, invalidDetail(sourceValidation));\n            }\n            const source = (_b = params.source) !== null && _b !== void 0 ? _b : publicKeyHash;\n            const prepared = yield this.prepare.ballot(Object.assign(Object.assign({}, params), { source }));\n            const content = prepared.opOb.contents.find((op) => op.kind === OpKind.BALLOT);\n            const opBytes = yield this.forge(prepared);\n            const { hash, context, forgedBytes, opResponse } = yield this.signAndInject(opBytes);\n            return new BallotOperation(hash, content, publicKeyHash, forgedBytes, opResponse, context);\n        });\n    }\n    /**\n     *\n     * @description Submit or upvote a proposal during the Proposal period\n     *\n     * @returns An operation handle with the result from the rpc node\n     *\n     * @param ProposalsParams Proposals operation parameter\n     */\n    proposals(params) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            const publicKeyHash = yield this.signer.publicKeyHash();\n            const sourceValidation = validateAddress((_a = params.source) !== null && _a !== void 0 ? _a : '');\n            if (params.source && sourceValidation !== ValidationResult.VALID) {\n                throw new InvalidAddressError(params.source, invalidDetail(sourceValidation));\n            }\n            const source = (_b = params.source) !== null && _b !== void 0 ? _b : publicKeyHash;\n            const prepared = yield this.prepare.proposals(Object.assign(Object.assign({}, params), { source }));\n            const content = prepared.opOb.contents.find((op) => op.kind === OpKind.PROPOSALS);\n            const opBytes = yield this.forge(prepared);\n            const { hash, context, forgedBytes, opResponse } = yield this.signAndInject(opBytes);\n            return new ProposalsOperation(hash, content, publicKeyHash, forgedBytes, opResponse, context);\n        });\n    }\n    /**\n     *\n     * @description Updates the consensus key of the baker to public_key starting from the current cycle plus PRESERVED_CYCLES + 1\n     *\n     * @returns An operation handle with the result from the rpc node\n     *\n     * @param UpdateConsensusKeyParams\n     */\n    updateConsensusKey(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const publicKeyHash = yield this.signer.publicKeyHash();\n            const estimate = yield this.estimate(params, this.estimator.updateConsensusKey.bind(this.estimator));\n            const prepared = yield this.prepare.updateConsensusKey(Object.assign(Object.assign({}, params), estimate));\n            const content = prepared.opOb.contents.find((op) => op.kind === OpKind.UPDATE_CONSENSUS_KEY);\n            const opBytes = yield this.forge(prepared);\n            const { hash, context, forgedBytes, opResponse } = yield this.signAndInject(opBytes);\n            return new UpdateConsensusKeyOperation(hash, content, publicKeyHash, forgedBytes, opResponse, context);\n        });\n    }\n    /**\n     * @description Adds messages to the rollup inbox that can be executed/claimed after it gets cemented\n     * @param SmartRollupAddMessagesParams\n     * @returns An operation handle with results from the RPC node\n     */\n    smartRollupAddMessages(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const publicKeyHash = yield this.signer.publicKeyHash();\n            const estimate = yield this.estimate(params, this.estimator.smartRollupAddMessages.bind(this.estimator));\n            const prepared = yield this.prepare.smartRollupAddMessages(Object.assign(Object.assign({}, params), estimate));\n            const content = prepared.opOb.contents.find((op) => op.kind === OpKind.SMART_ROLLUP_ADD_MESSAGES);\n            const opBytes = yield this.forge(prepared);\n            const { hash, context, forgedBytes, opResponse } = yield this.signAndInject(opBytes);\n            return new SmartRollupAddMessagesOperation(hash, content, publicKeyHash, forgedBytes, opResponse, context);\n        });\n    }\n    /**\n     * @description Creates a smart rollup originate operation\n     * @param SmartRollupOriginateParams\n     * @returns An operation handle with results from the RPC node\n     */\n    smartRollupOriginate(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const publicKeyHash = yield this.signer.publicKeyHash();\n            const estimate = yield this.estimate(params, this.estimator.smartRollupOriginate.bind(this.estimator));\n            const originationProof = yield this.rpc.getOriginationProof({\n                kind: params.pvmKind,\n                kernel: params.kernel,\n            });\n            const completeParams = Object.assign(Object.assign({}, params), { originationProof });\n            const prepared = yield this.prepare.smartRollupOriginate(Object.assign(Object.assign({}, completeParams), estimate));\n            const content = prepared.opOb.contents.find((op) => op.kind === OpKind.SMART_ROLLUP_ORIGINATE);\n            const opBytes = yield this.forge(prepared);\n            const { hash, context, forgedBytes, opResponse } = yield this.signAndInject(opBytes);\n            return new SmartRollupOriginateOperation(hash, content, publicKeyHash, forgedBytes, opResponse, context);\n        });\n    }\n    /**\n     *\n     * @description A failing_noop operation that is guaranteed to fail.\n     *\n     * @returns A FailingNoopOperation object representing the signed failing_noop operation\n     *\n     * @param params failingNoop operation parameter\n     */\n    failingNoop(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const op = {\n                kind: OpKind.FAILING_NOOP,\n                arbitrary: params.arbitrary,\n            };\n            const hash = yield this.context.readProvider.getBlockHash(params.basedOnBlock);\n            const forged = yield this.context.forger.forge({\n                branch: hash,\n                contents: [op],\n            });\n            const { prefixSig } = yield this.signer.sign(forged, new Uint8Array([3]));\n            return {\n                signature: prefixSig,\n                bytes: forged,\n                signedContent: {\n                    branch: hash,\n                    contents: [\n                        {\n                            kind: OpKind.FAILING_NOOP,\n                            arbitrary: params.arbitrary,\n                        },\n                    ],\n                },\n            };\n        });\n    }\n    /**\n     *\n     * @description Create an smart contract abstraction for the address specified.\n     *\n     * @param address Smart contract address\n     * @throws {@link InvalidContractAddressError}\n     */\n    at(address, contractAbstractionComposer = (x) => x) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const addressValidation = validateContractAddress(address);\n            if (addressValidation !== ValidationResult.VALID) {\n                throw new InvalidContractAddressError(address, invalidDetail(addressValidation));\n            }\n            const rpc = this.context.withExtensions().rpc;\n            const readProvider = this.context.withExtensions().readProvider;\n            const script = yield readProvider.getScript(address, 'head');\n            const entrypoints = yield readProvider.getEntrypoints(address);\n            const abs = new ContractAbstraction(address, script, this, this, entrypoints, rpc, readProvider);\n            return contractAbstractionComposer(abs, this.context);\n        });\n    }\n    /**\n     *\n     * @description Batch a group of operation together. Operations will be applied in the order in which they are added to the batch\n     *\n     * @returns A batch object from which we can add more operation or send a command to execute the batch\n     *\n     * @param params List of operation to batch together\n     */\n    batch(params) {\n        const batch = new OperationBatch(this.context, this.estimator);\n        if (Array.isArray(params)) {\n            batch.with(params);\n        }\n        return batch;\n    }\n}\n\nclass MichelCodecParser {\n    constructor(context) {\n        this.context = context;\n    }\n    getNextProto() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.context.proto) {\n                const nextProto = yield this.context.readProvider.getNextProtocol('head');\n                this.context.proto = nextProto;\n            }\n            return this.context.proto;\n        });\n    }\n    parseScript(src) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const parser = new Parser({ protocol: yield this.getNextProto() });\n            return parser.parseScript(src);\n        });\n    }\n    parseMichelineExpression(src) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const parser = new Parser({ protocol: yield this.getNextProto() });\n            return parser.parseMichelineExpression(src);\n        });\n    }\n    parseJSON(src) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const parser = new Parser({ protocol: yield this.getNextProto() });\n            return parser.parseJSON(src);\n        });\n    }\n    prepareCodeOrigination(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const parsedParams = params;\n            parsedParams.code = yield this.formatCodeParam(params.code);\n            if (params.init) {\n                parsedParams.init = yield this.formatInitParam(params.init);\n            }\n            else if (params.storage) {\n                const storageType = parsedParams.code.find((p) => 'prim' in p && p.prim === 'storage');\n                if (!(storageType === null || storageType === void 0 ? void 0 : storageType.args)) {\n                    throw new InvalidCodeParameter('The storage section is missing from the script', params.code);\n                }\n                const schema = new Schema(storageType.args[0]);\n                const globalconstantsHashAndValue = yield this.findGlobalConstantsHashAndValue(schema);\n                if (Object.keys(globalconstantsHashAndValue).length !== 0) {\n                    // If there are global constants in the storage part of the contract code,\n                    // they need to be locally expanded in order to encode the storage arguments\n                    const p = new Parser({ expandGlobalConstant: globalconstantsHashAndValue });\n                    const storageTypeNoGlobalConst = p.parseJSON(storageType.args[0]);\n                    const schemaNoGlobalConst = new Schema(storageTypeNoGlobalConst);\n                    parsedParams.init = schemaNoGlobalConst.Encode(params.storage);\n                }\n                else {\n                    parsedParams.init = schema.Encode(params.storage);\n                }\n                delete parsedParams.storage;\n            }\n            return parsedParams;\n        });\n    }\n    formatCodeParam(code) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let parsedCode;\n            if (typeof code === 'string') {\n                const c = yield this.parseScript(code);\n                if (c === null) {\n                    throw new InvalidCodeParameter('Unable to parse', code);\n                }\n                parsedCode = c;\n            }\n            else {\n                const c = yield this.parseJSON(code);\n                const order = ['parameter', 'storage', 'code'];\n                // Ensure correct ordering for RPC\n                parsedCode = c.sort((a, b) => order.indexOf(a.prim) - order.indexOf(b.prim));\n            }\n            return parsedCode;\n        });\n    }\n    formatInitParam(init) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let parsedInit;\n            if (typeof init === 'string') {\n                const c = yield this.parseMichelineExpression(init);\n                if (c === null) {\n                    throw new InvalidInitParameter('Invalid init parameter', init);\n                }\n                parsedInit = c;\n            }\n            else {\n                parsedInit = yield this.parseJSON(init);\n            }\n            return parsedInit;\n        });\n    }\n    findGlobalConstantsHashAndValue(schema) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const globalConstantTokens = schema.findToken('constant');\n            const globalConstantsHashAndValue = {};\n            if (globalConstantTokens.length !== 0) {\n                for (const token of globalConstantTokens) {\n                    const tokenArgs = token.tokenVal.args;\n                    if (tokenArgs) {\n                        const expression = tokenArgs[0];\n                        if (expression.string) {\n                            const hash = expression.string;\n                            const michelineValue = yield this.context.globalConstantsProvider.getGlobalConstantByHash(hash);\n                            Object.assign(globalConstantsHashAndValue, {\n                                [hash]: michelineValue,\n                            });\n                        }\n                    }\n                }\n            }\n            return globalConstantsHashAndValue;\n        });\n    }\n}\n\nclass RpcPacker {\n    constructor(context) {\n        this.context = context;\n    }\n    packData(data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.context.rpc.packData(data);\n        });\n    }\n}\n\n/**\n *  @category Error\n *  @description Error that indicates that a global constant does not exist\n */\nclass GlobalConstantNotFound extends TaquitoError {\n    constructor(hash) {\n        super();\n        this.hash = hash;\n        this.name = 'GlobalConstantNotFound';\n        this.message = `Please load the value associated with the constant ${hash} using the loadGlobalConstant method of the DefaultGlobalConstantsProvider.`;\n    }\n}\n/**\n *  @category Error\n *  @description Error that indicates the global constant provider not being configured under TezosToolkit\n */\nclass UnconfiguredGlobalConstantsProviderError extends TezosToolkitConfigError {\n    constructor() {\n        super();\n        this.name = 'UnconfiguredGlobalConstantsProviderError';\n        this.message =\n            'No global constants provider has been configured. Please configure one by calling setGlobalConstantsProvider({globalConstantsProvider}) on your TezosToolkit instance.';\n    }\n}\n\nclass NoopGlobalConstantsProvider {\n    getGlobalConstantByHash(_hash) {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw new UnconfiguredGlobalConstantsProviderError();\n        });\n    }\n}\n\n/**\n * @description Converts calls from TzReadProvider into calls to the wrapped RpcClient in a format it can understand.\n */\nclass RpcReadAdapter {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    /**\n     * @description Access the balance of a contract.\n     * @param address address from which we want to retrieve the balance\n     * @param block from which we want to retrieve the balance\n     * @returns the balance in mutez\n     */\n    getBalance(address, block) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.rpc.getBalance(address, { block: String(block) });\n        });\n    }\n    /**\n     * @description Access the delegate of a contract, if any.\n     * @param address contract address from which we want to retrieve the delegate (baker)\n     * @param block from which we want to retrieve the delegate\n     * @returns the public key hash of the delegate or null if no delegate\n     */\n    getDelegate(address, block) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.rpc.getDelegate(address, { block: String(block) });\n        });\n    }\n    /**\n     * @description Access the next protocol hash\n     * @param block from which we want to retrieve the next protocol hash\n     */\n    getNextProtocol(block) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const protocols = yield this.rpc.getProtocols({ block: String(block) });\n            return protocols.next_protocol;\n        });\n    }\n    /**\n     * @description Access protocol constants used in Taquito\n     * @param block from which we want to retrieve the constants\n     */\n    getProtocolConstants(block) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { time_between_blocks, minimal_block_delay, hard_gas_limit_per_operation, hard_gas_limit_per_block, hard_storage_limit_per_operation, cost_per_byte, tx_rollup_origination_size, smart_rollup_origination_size, } = yield this.rpc.getConstants({ block: String(block) });\n            return {\n                time_between_blocks,\n                minimal_block_delay,\n                hard_gas_limit_per_operation,\n                hard_gas_limit_per_block,\n                hard_storage_limit_per_operation,\n                cost_per_byte,\n                tx_rollup_origination_size,\n                smart_rollup_origination_size,\n            };\n        });\n    }\n    /**\n     * @description Access the script (code and storage) of a smart contract\n     * @param contract contract address from which we want to retrieve the script\n     * @param block from which we want to retrieve the storage value\n     * @returns Note: The code must be in the JSON format and not contain global constant\n     */\n    getScript(contract, block) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { script } = yield this.rpc.getContract(contract, { block: String(block) });\n            return script;\n        });\n    }\n    /**\n     * @description Access the storage value of a contract\n     * @param contract contract address from which we want to retrieve the storage\n     * @param block from which we want to retrieve the storage value\n     */\n    getStorage(contract, block) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.rpc.getStorage(contract, { block: String(block) });\n        });\n    }\n    /**\n     * @description Access the block hash\n     */\n    getBlockHash(block) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { hash } = yield this.rpc.getBlockHeader({ block: String(block) });\n            return hash;\n        });\n    }\n    /**\n     * @description Access the block level\n     */\n    getBlockLevel(block) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { level } = yield this.rpc.getBlockHeader({ block: String(block) });\n            return level;\n        });\n    }\n    /**\n     * @description Access the counter of an address\n     * @param pkh from which we want to retrieve the counter\n     * @param block from which we want to retrieve the counter\n     */\n    getCounter(pkh, block) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { counter } = yield this.rpc.getContract(pkh, { block: String(block) });\n            return counter || '0';\n        });\n    }\n    /**\n     * @description Access the timestamp of a block\n     * @param block from which we want to retrieve the timestamp\n     * @returns date ISO format zero UTC offset (\"2022-01-19T22:37:07Z\")\n     */\n    getBlockTimestamp(block) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { timestamp } = yield this.rpc.getBlockHeader({ block: String(block) });\n            return timestamp;\n        });\n    }\n    /**\n     * @description Access the value associated with a key in a big map.\n     * @param bigMapQuery Big Map ID and Expression hash to query (A b58check encoded Blake2b hash of the expression)\n     * @param block from which we want to retrieve the big map value\n     */\n    getBigMapValue(bigMapQuery, block) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.rpc.getBigMapExpr(bigMapQuery.id, bigMapQuery.expr, {\n                block: String(block),\n            });\n        });\n    }\n    /**\n     * @description Access the value associated with a sapling state ID.\n     * @param id Sapling state ID\n     * @param block from which we want to retrieve the sapling state\n     */\n    getSaplingDiffById(saplingStateQuery, block) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.rpc.getSaplingDiffById(saplingStateQuery.id, { block: String(block) });\n        });\n    }\n    /**\n     * @description Access the sapling state of a smart contract.\n     * @param contractAddress The address of the smart contract\n     * @param block The block you want to retrieve the sapling state from\n     */\n    getSaplingDiffByContract(contractAddress, block) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.rpc.getSaplingDiffByContract(contractAddress, { block: String(block) });\n        });\n    }\n    /**\n     * @description Return the list of entrypoints of the contract\n     * @param contract address of the contract we want to get the entrypoints of\n     */\n    getEntrypoints(contract) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.rpc.getEntrypoints(contract);\n        });\n    }\n    /**\n     * @description Access the chain id\n     */\n    getChainId() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.rpc.getChainId();\n        });\n    }\n    /**\n     * @description Indicate if an account is revealed\n     * @param publicKeyHash of the account\n     * @param block from which we want to know if the account is revealed\n     */\n    isAccountRevealed(publicKeyHash, block) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const manager = yield this.rpc.getManagerKey(publicKeyHash, { block: String(block) });\n            const haveManager = manager && typeof manager === 'object' ? !!manager.key : !!manager;\n            return haveManager;\n        });\n    }\n    /**\n     * @description Return all the information about a block\n     * @param block from which we want to retrieve the information\n     */\n    getBlock(block) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.rpc.getBlock({ block: String(block) });\n        });\n    }\n    /**\n     * @description Return a list of the ancestors of the given block which, if referred to as the branch in an operation header, are recent enough for that operation to be included in the current block.\n     * @param block from which we want to retrieve the information\n     */\n    getLiveBlocks(block) {\n        return this.rpc.getLiveBlocks({ block: String(block) });\n    }\n}\n\n/**\n *  @category Error\n *  @description Error that indicates an unsupported event being passed or used\n */\nclass UnsupportedEventError extends ParameterValidationError {\n    constructor(type) {\n        super();\n        this.type = type;\n        this.name = 'UnsupportedEventError';\n        this.message = `Unsupported event type \"${type}\" expecting one of the \"data\", \"error\", or \"close\".`;\n    }\n}\n/**\n *  @category Error\n *  @description Error that indicates an invalid filter expression being passed or used\n */\nclass InvalidFilterExpressionError extends ParameterValidationError {\n    constructor(invalidExpression) {\n        super();\n        this.invalidExpression = invalidExpression;\n        this.name = 'InvalidFilterExpressionError';\n        this.message = `Invalid filter expression expecting the object to contain either and/or property`;\n    }\n}\n\nconst opHashFilter = (op, filter) => op.hash === filter.opHash;\nconst sourceFilter = (x, filter) => {\n    switch (x.kind) {\n        case 'endorsement':\n            return 'metadata' in x && x.metadata.delegate === filter.source;\n        case 'activate_account':\n            return 'metadata' in x && x.pkh === filter.source;\n        default:\n            return 'source' in x && x.source === filter.source;\n    }\n};\nconst kindFilter = (x, filter) => 'kind' in x && x.kind === filter.kind;\nconst destinationFilter = (x, filter) => {\n    switch (x.kind) {\n        case 'delegation':\n            return x.delegate === filter.destination;\n        case 'origination':\n            if ('metadata' in x &&\n                'operation_result' in x.metadata &&\n                'originated_contracts' in x.metadata.operation_result &&\n                Array.isArray(x.metadata.operation_result.originated_contracts)) {\n                return x.metadata.operation_result.originated_contracts.some((contract) => contract === filter.destination);\n            }\n            break;\n        case 'transaction':\n            return x.destination === filter.destination;\n        default:\n            return false;\n    }\n};\nconst eventFilter = (result, address, tag, excludeFailedOperations) => {\n    if (result.kind !== 'event') {\n        return false;\n    }\n    if (tag && result.tag !== tag) {\n        return false;\n    }\n    if (address && result.source !== address) {\n        return false;\n    }\n    if (excludeFailedOperations && result.result.status !== 'applied') {\n        return false;\n    }\n    return true;\n};\nconst evaluateOpFilter = (op, filter) => {\n    if ('opHash' in filter) {\n        return opHashFilter(op, filter);\n    }\n    else if ('source' in filter) {\n        return sourceFilter(op, filter);\n    }\n    else if ('kind' in filter) {\n        return kindFilter(op, filter);\n    }\n    else if ('destination' in filter) {\n        return destinationFilter(op, filter);\n    }\n    return false;\n};\nconst evaluateExpression = (op, exp) => {\n    if (Array.isArray(exp.and)) {\n        return exp.and.every((x) => evaluateFilter(op, x));\n    }\n    else if (Array.isArray(exp.or)) {\n        return exp.or.some((x) => evaluateFilter(op, x));\n    }\n    else {\n        throw new InvalidFilterExpressionError(exp);\n    }\n};\nconst evaluateFilter = (op, filter) => {\n    const filters = [];\n    if (!Array.isArray(filter)) {\n        filters.push(filter);\n    }\n    else {\n        filters.push(...filter);\n    }\n    return filters.every((filterOrExp) => {\n        if ('and' in filterOrExp || 'or' in filterOrExp) {\n            return evaluateExpression(op, filterOrExp);\n        }\n        else {\n            return evaluateOpFilter(op, filterOrExp);\n        }\n    });\n};\n\n/* eslint-disable no-dupe-class-members */\nclass ObservableSubscription {\n    constructor(obs, shouldRetry = false, operatorFunction = retry()) {\n        this.shouldRetry = shouldRetry;\n        this.operatorFunction = operatorFunction;\n        this.errorListeners = [];\n        this.messageListeners = [];\n        this.closeListeners = [];\n        this.completed$ = new Subject();\n        obs\n            .pipe(takeUntil(this.completed$), tap((data) => {\n            this.call(this.messageListeners, data);\n        }, (error) => {\n            this.call(this.errorListeners, error);\n        }, () => {\n            this.call(this.closeListeners);\n        }), this.shouldRetry ? operatorFunction : tap(), catchError(() => NEVER))\n            .subscribe();\n    }\n    call(listeners, value) {\n        for (const l of listeners) {\n            try {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                l(value);\n            }\n            catch (ex) {\n                console.error(ex);\n            }\n        }\n    }\n    remove(listeners, value) {\n        const idx = listeners.indexOf(value);\n        if (idx !== -1) {\n            listeners.splice(idx, 1);\n        }\n    }\n    on(type, cb) {\n        switch (type) {\n            case 'data':\n                this.messageListeners.push(cb);\n                break;\n            case 'error':\n                this.errorListeners.push(cb);\n                break;\n            case 'close':\n                this.closeListeners.push(cb);\n                break;\n            default:\n                throw new UnsupportedEventError(type);\n        }\n    }\n    off(type, cb) {\n        switch (type) {\n            case 'data':\n                this.remove(this.messageListeners, cb);\n                break;\n            case 'error':\n                this.remove(this.errorListeners, cb);\n                break;\n            case 'close':\n                this.remove(this.closeListeners, cb);\n                break;\n            default:\n                throw new UnsupportedEventError(type);\n        }\n    }\n    close() {\n        this.completed$.next();\n    }\n}\n\nconst defaultConfigStreamer = {\n    shouldObservableSubscriptionRetry: false,\n    observableSubscriptionRetryFunction: retry(),\n};\nconst getLastBlock = (context) => {\n    return from(context.rpc.getBlock()).pipe(first());\n};\nconst applyFilter = (filter) => concatMap((block) => {\n    return new Observable((sub) => {\n        for (const ops of block.operations) {\n            for (const op of ops) {\n                for (const content of op.contents) {\n                    if (evaluateFilter(Object.assign({ hash: op.hash }, content), filter)) {\n                        sub.next(Object.assign({ hash: op.hash }, content));\n                    }\n                }\n            }\n        }\n        sub.complete();\n    });\n});\nconst applyEventFilter = (filter) => concatMap((block) => {\n    return new Observable((sub) => {\n        for (const ops of block.operations) {\n            for (const op of ops) {\n                for (const content of op.contents) {\n                    const tx = content;\n                    const internalOpResults = tx.metadata.internal_operation_results;\n                    if (internalOpResults) {\n                        for (const event of internalOpResults) {\n                            if (eventFilter(event, filter === null || filter === void 0 ? void 0 : filter.address, filter === null || filter === void 0 ? void 0 : filter.tag, filter === null || filter === void 0 ? void 0 : filter.excludeFailedOperations)) {\n                                sub.next(Object.assign({ opHash: op.hash, blockHash: block.hash, level: block.header.level }, event));\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        sub.complete();\n    });\n});\nclass PollingSubscribeProvider {\n    constructor(context, config = {}) {\n        this.context = context;\n        this._config$ = new BehaviorSubject(Object.assign(Object.assign({}, defaultConfigStreamer), config));\n        this.timer$ = this._config$.pipe(pluck('pollingIntervalMilliseconds'), switchMap((pollingIntervalMilliseconds) => {\n            if (!pollingIntervalMilliseconds) {\n                return from(this.getConfirmationPollingInterval()).pipe(switchMap((interval) => {\n                    return timer(0, interval);\n                }));\n            }\n            else {\n                return timer(0, pollingIntervalMilliseconds);\n            }\n        }));\n        this.newBlock$ = this.timer$.pipe(switchMap(() => getLastBlock(this.context)), distinctUntilKeyChanged('hash'), publish(), refCount());\n    }\n    get config() {\n        return this._config$.getValue();\n    }\n    getConfirmationPollingInterval() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.config.pollingIntervalMilliseconds) {\n                const defaultIntervalTestnetsMainnet = 5000;\n                const defaultIntervalSandbox = 1000;\n                try {\n                    const constants = yield this.context.readProvider.getProtocolConstants('head');\n                    const blockTime = constants.minimal_block_delay\n                        ? constants.minimal_block_delay.multipliedBy(1000)\n                        : constants.time_between_blocks\n                            ? constants.time_between_blocks[0].multipliedBy(1000)\n                            : new BigNumber(defaultIntervalTestnetsMainnet);\n                    const confirmationPollingInterval = blockTime.dividedBy(3);\n                    this.config.pollingIntervalMilliseconds =\n                        confirmationPollingInterval.toNumber() === 0\n                            ? defaultIntervalSandbox\n                            : confirmationPollingInterval.toNumber();\n                }\n                catch (exception) {\n                    return defaultIntervalTestnetsMainnet;\n                }\n            }\n            return this.config.pollingIntervalMilliseconds;\n        });\n    }\n    subscribeBlock(_filter) {\n        return new ObservableSubscription(this.newBlock$, this.config.shouldObservableSubscriptionRetry, this.config.observableSubscriptionRetryFunction);\n    }\n    subscribe(_filter) {\n        return new ObservableSubscription(this.newBlock$.pipe(pluck('hash')), this.config.shouldObservableSubscriptionRetry, this.config.observableSubscriptionRetryFunction);\n    }\n    subscribeOperation(filter) {\n        return new ObservableSubscription(this.newBlock$.pipe(applyFilter(filter)), this.config.shouldObservableSubscriptionRetry, this.config.observableSubscriptionRetryFunction);\n    }\n    subscribeEvent(eventFilter) {\n        return new ObservableSubscription(this.newBlock$.pipe(applyEventFilter(eventFilter)), this.config.shouldObservableSubscriptionRetry, this.config.observableSubscriptionRetryFunction);\n    }\n}\n\nclass TaquitoLocalForger {\n    constructor(context) {\n        this.context = context;\n    }\n    getNextProto() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.context.proto) {\n                const nextProto = yield this.context.readProvider.getNextProtocol('head');\n                this.context.proto = nextProto;\n            }\n            return this.context.proto;\n        });\n    }\n    forge({ branch, contents }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const forger = new LocalForger(yield this.getNextProto());\n            return forger.forge({ branch, contents });\n        });\n    }\n}\n\nconst defaultConfigConfirmation = {\n    defaultConfirmationCount: 1,\n    confirmationPollingTimeoutSecond: 180,\n};\n/**\n * @description Encapsulate common service used throughout different part of the library\n */\nclass Context {\n    constructor(_rpc, _signer = new NoopSigner(), _proto, _config = new BehaviorSubject(Object.assign({}, defaultConfigConfirmation)), forger, injector, packer, wallet, parser, globalConstantsProvider, readProvider, stream) {\n        this._rpc = _rpc;\n        this._signer = _signer;\n        this._proto = _proto;\n        this._config = _config;\n        this.providerDecorator = [];\n        this.tz = new RpcTzProvider(this);\n        this.estimate = new RPCEstimateProvider(this);\n        this.contract = new RpcContractProvider(this, this.estimate);\n        this.prepare = new PrepareProvider(this);\n        this.batch = new RPCBatchProvider(this, this.estimate);\n        this.wallet = new Wallet(this);\n        /**\n         * @description Applies the decorators on a cloned instance of the context and returned this cloned instance.\n         * The decorators are functions that inject logic into the context.\n         * They are provided by the extensions set on the TezosToolkit by calling the registerProviderDecorator method.\n         */\n        this.withExtensions = () => {\n            let clonedContext = this.clone();\n            this.providerDecorator.forEach((decorator) => {\n                clonedContext = decorator(clonedContext);\n            });\n            return clonedContext;\n        };\n        if (typeof this._rpc === 'string') {\n            this._rpcClient = new RpcClient(this._rpc);\n        }\n        else {\n            this._rpcClient = this._rpc;\n        }\n        this._forger = forger ? forger : new TaquitoLocalForger(this);\n        this._injector = injector ? injector : new RpcInjector(this);\n        this.operationFactory = new OperationFactory(this);\n        this._walletProvider = wallet ? wallet : new LegacyWalletProvider(this);\n        this._parser = parser ? parser : new MichelCodecParser(this);\n        this._packer = packer ? packer : new RpcPacker(this);\n        this._globalConstantsProvider = globalConstantsProvider\n            ? globalConstantsProvider\n            : new NoopGlobalConstantsProvider();\n        this._readProvider = readProvider ? readProvider : new RpcReadAdapter(this._rpcClient);\n        this._stream = stream ? stream : new PollingSubscribeProvider(this);\n    }\n    get config() {\n        return this._config.getValue();\n    }\n    set config(value) {\n        this._config.next(Object.assign({}, value));\n    }\n    setPartialConfig(value) {\n        this._config.next(Object.assign(Object.assign({}, this._config.getValue()), value));\n    }\n    get rpc() {\n        return this._rpcClient;\n    }\n    set rpc(value) {\n        this._rpcClient = value;\n    }\n    get injector() {\n        return this._injector;\n    }\n    set injector(value) {\n        this._injector = value;\n    }\n    get forger() {\n        return this._forger;\n    }\n    set forger(value) {\n        this._forger = value;\n    }\n    get signer() {\n        return this._signer;\n    }\n    set signer(value) {\n        this._signer = value;\n    }\n    get walletProvider() {\n        return this._walletProvider;\n    }\n    set walletProvider(value) {\n        this._walletProvider = value;\n    }\n    set proto(value) {\n        this._proto = value;\n    }\n    get proto() {\n        return this._proto;\n    }\n    get parser() {\n        return this._parser;\n    }\n    set parser(value) {\n        this._parser = value;\n    }\n    get packer() {\n        return this._packer;\n    }\n    set packer(value) {\n        this._packer = value;\n    }\n    get globalConstantsProvider() {\n        return this._globalConstantsProvider;\n    }\n    set globalConstantsProvider(value) {\n        this._globalConstantsProvider = value;\n    }\n    get readProvider() {\n        return this._readProvider;\n    }\n    set readProvider(value) {\n        this._readProvider = value;\n    }\n    get stream() {\n        return this._stream;\n    }\n    set stream(value) {\n        this._stream = value;\n    }\n    isAnyProtocolActive(protocol = []) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._proto) {\n                return protocol.includes(this._proto);\n            }\n            else {\n                const next_protocol = yield this.readProvider.getNextProtocol('head');\n                return protocol.includes(next_protocol);\n            }\n        });\n    }\n    isAnySignerConfigured() {\n        return !(this.signer instanceof NoopSigner);\n    }\n    /**\n     * @description Create a copy of the current context. Useful when you have long running operation and you do not want a context change to affect the operation\n     */\n    clone() {\n        return new Context(this.rpc, this.signer, this.proto, this._config, this.forger, this._injector, this.packer, this._walletProvider, this._parser, this._globalConstantsProvider, this._readProvider, this._stream);\n    }\n    /**\n     * @description Allows extensions set on the TezosToolkit to inject logic into the context\n     */\n    registerProviderDecorator(fx) {\n        this.providerDecorator.push(fx);\n    }\n}\n\n// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\nconst VERSION = {\n    \"commitHash\": \"a908ab176a8c52c025fd43e7acd452415396f54e\",\n    \"version\": \"17.4.0\"\n};\n\n/**\n *  @category Error\n *  @description Error that indicates CompositeForger.forge() results doesn't match each other\n */\nclass ForgingMismatchError extends TaquitoError {\n    constructor(results) {\n        super();\n        this.results = results;\n        this.name = 'ForgingMismatchError';\n        this.message = `Forging mismatch error`;\n    }\n}\n/**\n *  @category Error\n *  @description Error that indicates no forger has been configured for CompositeForger\n */\nclass UnspecifiedForgerError extends TezosToolkitConfigError {\n    constructor() {\n        super();\n        this.name = 'UnspecifiedForgerError';\n        this.message =\n            'No forger has been configured. Please configure new CompositeForger([rpcForger, localForger]) with your TezosToolkit instance.';\n    }\n}\n\nclass CompositeForger {\n    constructor(forgers) {\n        this.forgers = forgers;\n        if (forgers.length === 0) {\n            throw new UnspecifiedForgerError();\n        }\n    }\n    forge({ branch, contents }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const results = yield Promise.all(this.forgers.map((forger) => {\n                return forger.forge({ branch, contents });\n            }));\n            if (results.length === 0) {\n                throw new UnspecifiedForgerError();\n            }\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            let lastResult = results.pop(); // Assumed to be more than one since we\n            while (results.length) {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                const currentResult = results.pop();\n                if (currentResult !== lastResult) {\n                    throw new ForgingMismatchError([lastResult, currentResult]);\n                }\n                lastResult = currentResult;\n            }\n            return lastResult;\n        });\n    }\n}\n\nclass RpcForger {\n    constructor(context) {\n        this.context = context;\n    }\n    forge({ branch, contents }) {\n        return this.context.rpc.forgeOperations({ branch, contents });\n    }\n}\n\nclass NoopParser {\n    prepareCodeOrigination(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return params;\n        });\n    }\n}\n\nclass MichelCodecPacker {\n    packData(data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { bytes } = packDataBytes(data.data, data.type);\n            return { packed: bytes };\n        });\n    }\n}\n\nclass DefaultGlobalConstantsProvider {\n    constructor() {\n        this._globalConstantsLibrary = {};\n    }\n    /**\n     *\n     * @description Allows to load global constant hashes and their corresponding Michelson JSON values\n     */\n    loadGlobalConstant(globalConstant) {\n        for (const hash in globalConstant) {\n            Object.assign(this._globalConstantsLibrary, {\n                [hash]: globalConstant[hash],\n            });\n        }\n    }\n    /**\n     *\n     * @description Retrieve the Michelson value of a global constant based on its hash\n     *\n     * @param hash a string representing the global constant hash\n     * @returns Expr, the JSON Michelson value\n     */\n    getGlobalConstantByHash(hash) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const value = this._globalConstantsLibrary[hash];\n            if (!value) {\n                throw new GlobalConstantNotFound(hash);\n            }\n            return value;\n        });\n    }\n}\n\n/**\n * @packageDocumentation\n * @module @taquito/taquito\n */\n/**\n * @description Facade class that surfaces all of the libraries capability and allow it's configuration\n *\n * @param _rpc The RPC server to use\n */\nclass TezosToolkit {\n    constructor(_rpc) {\n        this._rpc = _rpc;\n        this._options = {};\n        this.format = format;\n        if (typeof this._rpc === 'string') {\n            this._rpcClient = new RpcClient(this._rpc);\n        }\n        else {\n            this._rpcClient = this._rpc;\n        }\n        this._context = new Context(_rpc);\n        this._wallet = new Wallet(this._context);\n        this.setProvider({ rpc: this._rpcClient });\n        this.batch = this._context.batch.batch.bind(this._context.batch);\n    }\n    /**\n     * @description Sets configuration on the Tezos Taquito instance. Allows user to choose which signer, rpc client, rpc url, forger and so forth\n     *\n     * @param options rpc url or rpcClient to use to interact with the Tezos network\n     *\n     * @example Tezos.setProvider({rpc: 'https://mainnet.ecadinfra.com/', signer: new InMemorySigner.fromSecretKey(“edsk...”)})\n     * @example Tezos.setProvider({ config: { confirmationPollingTimeoutSecond: 300 }})\n     *\n     */\n    setProvider({ rpc, stream, signer, protocol, config, forger, wallet, packer, globalConstantsProvider, readProvider, parserProvider, injectorProvider, }) {\n        this.setRpcProvider(rpc);\n        this.setStreamProvider(stream);\n        this.setSignerProvider(signer);\n        this.setForgerProvider(forger);\n        this.setWalletProvider(wallet);\n        this.setPackerProvider(packer);\n        this.setGlobalConstantsProvider(globalConstantsProvider);\n        this.setReadProvider(readProvider);\n        this.setParserProvider(parserProvider);\n        this.setInjectorProvider(injectorProvider);\n        this._context.proto = protocol;\n        if (config) {\n            this._context.setPartialConfig(config);\n        }\n    }\n    /**\n     * @description Sets signer provider on the Tezos Taquito instance.\n     *\n     * @param options signer to use to interact with the Tezos network\n     *\n     * @example Tezos.setSignerProvider(new InMemorySigner.fromSecretKey('edsk...'))\n     *\n     */\n    setSignerProvider(signer) {\n        if (!this._options.signer && typeof signer === 'undefined') {\n            this._context.signer = new NoopSigner();\n            this._options.signer = signer;\n        }\n        else if (typeof signer !== 'undefined') {\n            this._context.signer = signer;\n            this._options.signer = signer;\n        }\n    }\n    /**\n     * @description Sets rpc provider on the Tezos Taquito instance\n     *\n     * @param options rpc url or rpcClient to use to interact with the Tezos network\n     *\n     * @example Tezos.setRpcProvider('https://mainnet.ecadinfra.com/')\n     *\n     */\n    setRpcProvider(rpc) {\n        if (typeof rpc === 'string') {\n            this._rpcClient = new RpcClient(rpc);\n        }\n        else if (rpc === undefined) ;\n        else {\n            this._rpcClient = rpc;\n        }\n        this._options.rpc = this._rpcClient;\n        this._context.rpc = this._rpcClient;\n    }\n    /**\n     * @description Sets forger provider on the Tezos Taquito instance\n     * The `LocalForger` from `@taquito/local-forging` is set by default.\n     *\n     * @param options forger to use to interact with the Tezos network\n     *\n     * @example Tezos.setForgerProvider(this.getFactory(RpcForger)())\n     *\n     */\n    setForgerProvider(forger) {\n        if (typeof forger !== 'undefined') {\n            this._options.forger = forger;\n            this._context.forger = forger;\n        }\n        else if (this._options.forger === undefined) {\n            const f = this.getFactory(TaquitoLocalForger)();\n            this._options.forger = f;\n            this._context.forger = f;\n        }\n    }\n    /**\n     * @description Sets stream provider on the Tezos Taquito instance\n     *\n     * @param options stream to use to interact with the Tezos network\n     *\n     * @example Tezos.setStreamProvider(...)\n     *\n     */\n    setStreamProvider(stream) {\n        if (typeof stream === 'string') {\n            const s = new PollingSubscribeProvider(new Context(new RpcClient(stream)));\n            this._options.stream = s;\n            this._context.stream = s;\n        }\n        else if (typeof stream !== 'undefined') {\n            this._options.stream = stream;\n            this._context.stream = stream;\n        }\n        else if (this._options.stream === undefined) {\n            const s = this.getFactory(PollingSubscribeProvider)();\n            this._options.stream = s;\n            this._context.stream = s;\n        }\n    }\n    /**\n     * @description Sets wallet provider on the Tezos Taquito instance\n     *\n     * @param options wallet to use to interact with the Tezos network\n     *\n     * @example Tezos.setWalletProvider(...)\n     *\n     */\n    setWalletProvider(wallet) {\n        if (!this._options.wallet && typeof wallet === 'undefined') {\n            const w = this.getFactory(LegacyWalletProvider)();\n            this._options.wallet = w;\n            this._context.walletProvider = w;\n        }\n        else if (typeof wallet !== 'undefined') {\n            this._options.wallet = wallet;\n            this._context.walletProvider = wallet;\n        }\n    }\n    /**\n     * @description Sets Packer provider on the Tezos Taquito instance\n     *\n     * @param options packer to use to interact with the Tezos network\n     *\n     * @example Tezos.setPackerProvider(new MichelCodecPacker())\n     *\n     */\n    setPackerProvider(packer) {\n        if (!this._options.packer && typeof packer === 'undefined') {\n            const p = this.getFactory(RpcPacker)();\n            this._context.packer = p;\n            this._options.packer = p;\n        }\n        else if (typeof packer !== 'undefined') {\n            this._context.packer = packer;\n            this._options.packer = packer;\n        }\n    }\n    /**\n     * @description Sets global constants provider on the Tezos Taquito instance\n     *\n     * @param options globalConstantsProvider to use to interact with the Tezos network\n     *\n     * @example\n     * ```\n     * const globalConst = new DefaultGlobalConstantsProvider();\n     * globalConst.loadGlobalConstant({\n     *  \"expruu5BTdW7ajqJ9XPTF3kgcV78pRiaBW3Gq31mgp3WSYjjUBYxre\": { prim: \"int\" },\n     *  // ...\n     * })\n     * Tezos.setGlobalConstantsProvider(globalConst);\n     * ```\n     *\n     */\n    setGlobalConstantsProvider(globalConstantsProvider) {\n        if (!this._options.globalConstantsProvider && typeof globalConstantsProvider === 'undefined') {\n            const g = new NoopGlobalConstantsProvider();\n            this._context.globalConstantsProvider = g;\n            this._options.globalConstantsProvider = g;\n        }\n        else if (typeof globalConstantsProvider !== 'undefined') {\n            this._context.globalConstantsProvider = globalConstantsProvider;\n            this._options.globalConstantsProvider = globalConstantsProvider;\n        }\n    }\n    /**\n     * @description Sets read provider on the Tezos Taquito instance\n     * By default reads are done from the RPC usign the RpcReadAdapter class, this can be overridden to read from an indexer that implements the TzReadProvider interface\n     *\n     * @param options TzReadProvider to use to interact with the Tezos network\n     *\n     */\n    setReadProvider(readProvider) {\n        const readP = readProvider ? readProvider : new RpcReadAdapter(this._context.rpc);\n        this._options.readProvider = readP;\n        this._context.readProvider = readP;\n    }\n    /**\n     * @description Sets parser provider on the Tezos Taquito instance\n     *\n     * @param options parserProvider to use to interact with the Tezos network\n     *\n     */\n    setParserProvider(parserProvider) {\n        if (!this._options.parserProvider && typeof parserProvider === 'undefined') {\n            const p = new MichelCodecParser(this._context);\n            this._context.parser = p;\n            this._options.parserProvider = p;\n        }\n        else if (typeof parserProvider !== 'undefined') {\n            this._context.parser = parserProvider;\n            this._options.parserProvider = parserProvider;\n        }\n    }\n    /**\n     * @description Sets injector provider on the Tezos Taquito instance\n     *\n     * @param options Injector to use to interact with the Tezos network by default RpcInjector\n     *\n     */\n    setInjectorProvider(injectorProvider) {\n        if (!this._options.injectorProvider && typeof injectorProvider === 'undefined') {\n            const i = new RpcInjector(this._context);\n            this._context.injector = i;\n            this._options.injectorProvider = i;\n        }\n        else if (typeof injectorProvider !== 'undefined') {\n            this._context.injector = injectorProvider;\n            this._options.injectorProvider = injectorProvider;\n        }\n    }\n    /**\n     * @description Provide access to tezos account management\n     */\n    get tz() {\n        return this._context.tz;\n    }\n    /**\n     * @description Provide access to smart contract utilities\n     */\n    get contract() {\n        return this._context.contract;\n    }\n    /**\n     * @description Provide access to tezos operation preparation utilities\n     */\n    get prepare() {\n        return this._context.prepare;\n    }\n    get wallet() {\n        return this._wallet;\n    }\n    get operation() {\n        return this._context.operationFactory;\n    }\n    /**\n     * @description Provide access to operation estimation utilities\n     */\n    get estimate() {\n        return this._context.estimate;\n    }\n    /**\n     * @description Provide access to streaming utilities backed by an streamer implementation\n     */\n    get stream() {\n        return this._context.stream;\n    }\n    /**\n     * @description Provide access to the currently used rpc client\n     */\n    get rpc() {\n        return this._context.rpc;\n    }\n    /**\n     * @description Provide access to the currently used signer\n     */\n    get signer() {\n        return this._context.signer;\n    }\n    /**\n     * @description Provide access to the currently used globalConstantsProvider\n     */\n    get globalConstants() {\n        return this._context.globalConstantsProvider;\n    }\n    /**\n     * @description Allow to add a module to the TezosToolkit instance. This method adds the appropriate Providers(s) required by the module to the internal context.\n     *\n     * @param module extension to add to the TezosToolkit instance\n     *\n     * @example Tezos.addExtension(new Tzip16Module());\n     */\n    addExtension(module) {\n        if (Array.isArray(module)) {\n            module.forEach((extension) => extension.configureContext(this._context));\n        }\n        else {\n            module.configureContext(this._context);\n        }\n    }\n    getFactory(ctor) {\n        return (...args) => {\n            return new ctor(this._context, ...args);\n        };\n    }\n    /**\n     * @description Gets an object containing the version of Taquito library and git sha of the commit this library is compiled from\n     */\n    getVersionInfo() {\n        return VERSION;\n    }\n}\n\nexport { BallotOperation, BatchOperation, BigMapAbstraction, COST_PER_BYTE, ChainIds, CompositeForger, Context, ContractAbstraction, ContractMethod, ContractMethodObject, ContractView, DEFAULT_FEE, DEFAULT_GAS_LIMIT, DEFAULT_SMART_CONTRACT_METHOD_NAME, DEFAULT_STORAGE_LIMIT, DefaultGlobalConstantsProvider, DelegateOperation, DelegationWalletOperation, DrainDelegateOperation, Estimate, GlobalConstantNotFound, InvalidBalanceError, InvalidCodeParameter, InvalidDelegationSource, InvalidEstimateValueError, InvalidInitParameter, InvalidParameterError, InvalidViewSimulationContext, LegacyWalletProvider, MANAGER_LAMBDA, MichelCodecPacker, MichelCodecParser, NoopParser, ObservableSubscription, Operation, OperationBatch, OriginationOperation, OriginationParameterError, OriginationWalletOperation, PollingSubscribeProvider, PrepareProvider, Protocols, RPCEstimateProvider, RevealEstimateError, RevealOperationError, RpcForger, RpcInjector, RpcPacker, RpcReadAdapter, SaplingStateAbstraction, TaquitoLocalForger, TezosOperationError, TezosPreapplyFailureError, TezosToolkit, TransactionOperation, TransactionWalletOperation, UnconfiguredGlobalConstantsProviderError, VIEW_LAMBDA, ViewSimulationError, Wallet, WalletOperation, WalletOperationBatch, compose, createActivationOperation, createBallotOperation, createDrainDelegateOperation, createIncreasePaidStorageOperation, createOriginationOperation, createProposalsOperation, createRegisterDelegateOperation, createRegisterGlobalConstantOperation, createRevealOperation, createSetDelegateOperation, createSmartRollupAddMessagesOperation, createSmartRollupOriginateOperation, createTransferOperation, createTransferTicketOperation, createUpdateConsensusKeyOperation, defaultConfigConfirmation, getRevealGasLimit, protocols, validateAndExtractFailwith };\n//# sourceMappingURL=taquito.es6.js.map\n"],
  "mappings": "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AM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,UAAI,EAAE,CAAC;AACP,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,UAAI,EAAE,CAAC;AACP,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,UAAI,EAAE,CAAC;AACP,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,UAAI,EAAE,CAAC;AACP,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,UAAI,EAAE,CAAC;AACP,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,UAAI,EAAE,CAAC;AACP,YAAM,IAAI;AACV,YAAM,IAAI;AACV,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,UAAI,EAAE,CAAC;AACP,YAAM,IAAI;AACV,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,UAAI,EAAE,EAAE;AACR,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,UAAI,EAAE,EAAE;AACR,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,UAAI,EAAE,EAAE;AACR,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,UAAI,EAAE,EAAE;AACR,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,UAAI,EAAE,EAAE;AACR,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,UAAI,EAAE,EAAE;AACR,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AAEX,YAAM,KAAK;AACX,YAAM,KAAK;AACX,YAAM,KAAK;AA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",
  "names": ["bind", "bind", "isArray", "isUndefined", "isString", "isFunction", "isFormData", "isStandardBrowserEnv", "merge", "filter", "toArray", "buildURL", "code", "config", "filter", "settle", "buildFullPath", "settle", "buildURL", "buildFullPath", "config", "adapter", "context", "config", "adapter", "config", "mergeMap", "merge", "VERSION", "buildURL", "buildFullPath", "config", "bind", "context", "axios", "require_axios", "buffer", "SHA512", "K", "hash", "reduce", "verify", "BLAKE2b", "config", "hash", "require_blake2b", "v", "last", "v", "last", "isBytes", "hash", "min", "isBytes", "pad", "buffer", "take", "H", "i", "j", "buffer", "buffer", "sha256", "buffer", "stringify", "__awaiter", "config", "__awaiter", "_a", "code", "STATUS_CODE", "ResponseType", "timeout", "__awaiter", "axios", "Prefix", "ValidationResult", "bs58check", "format", "from", "blake", "prefix", "bs58check", "buffer", "__awaiter", "RPCMethodName", "OPERATION_METADATA", "METADATA_BALANCE_UPDATES_CATEGORY", "PvmKind", "SmartRollupRefutationOptions", "SmartRollupInputProofKind", "SmartRollupRefuteRevealProofKind", "SmartRollupRefuteGameStatusOptions", "SmartRollupRefuteGameEndedPlayerOutcomes", "SmartRollupRefuteGameEndedReason", "OpKind", "__awaiter", "hash", "_a", "code", "Subscription", "_a", "empty", "timeout", "_a", "Subscriber", "ConsumerObserver", "SafeSubscriber", "Observable", "observable", "_a", "_a", "OperatorSubscriber", "err", "_a", "ConnectableObservable", "timestamp", "timestamp", "Subject", "_a", "observable", "AnonymousSubject", "_a", "BehaviorSubject", "_a", "ReplaySubject", "_a", "last", "AsyncSubject", "_a", "Action", "delay", "timeout", "AsyncAction", "delay", "_a", "AsapAction", "delay", "_a", "Scheduler", "delay", "AsyncScheduler", "AsapScheduler", "QueueAction", "delay", "QueueScheduler", "AnimationFrameAction", "delay", "_a", "AnimationFrameScheduler", "VirtualTimeScheduler", "_a", "VirtualAction", "delay", "_a", "process", "delay", "repeat", "delay", "delay", "iterator", "_a", "iterator", "NotificationKind", "Notification", "_a", "_a", "config", "_a", "first", "delay", "isArray", "_a", "i", "expand", "buffer", "isArray", "count", "config", "count", "first", "config", "_a", "count", "delay", "_a", "refCount", "windowTime", "refCount", "_a", "_a", "map", "stringify", "tokens", "concat", "_a", "code", "storage", "Literal", "scan", "Protocol", "_a", "r", "v", "tok", "scan", "pad", "buffer", "i", "v", "buffer", "_a", "_a", "ex", "__rest", "Tag", "buffer", "ContractID", "PublicKeyHashID", "PublicKeyID", "_a", "_a", "isFunction", "args", "a", "__rest", "instruction", "s", "s1", "parameter", "storage", "ret", "code", "_a", "_a", "CODEC", "hash", "count", "isPrim", "code", "storage", "pad", "prefix", "encoders", "decoders", "ProtocolsHash", "__rest", "__awaiter", "context", "__awaiter", "hash", "Protocols", "ChainIds", "code", "storage", "config", "_a", "timeout", "__rest", "isView", "count", "protocols", "timestamp", "filter", "interval", "eventFilter"]
}
