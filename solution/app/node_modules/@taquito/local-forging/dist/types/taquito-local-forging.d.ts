/**
 * @packageDocumentation
 * @module @taquito/local-forging
 */
import { CODEC } from '@taquito/local-forging/dist/types/constants';
import { ForgeParams, Forger } from '@taquito/local-forging/dist/types/interface';
import { ProtocolsHash } from '@taquito/local-forging/dist/types/protocols';
export { CODEC, opMapping, opMappingReverse } from '@taquito/local-forging/dist/types/constants';
export * from '@taquito/local-forging/dist/types/decoder';
export * from '@taquito/local-forging/dist/types/encoder';
export * from '@taquito/local-forging/dist/types/interface';
export { ProtocolsHash } from '@taquito/local-forging/dist/types/protocols';
export * from '@taquito/local-forging/dist/types/uint8array-consumer';
export { VERSION } from '@taquito/local-forging/dist/types/version';
export declare function getCodec(codec: CODEC, _proto: ProtocolsHash): {
    encoder: import("@taquito/local-forging/dist/types/encoder").Encoder<any>;
    decoder: (hex: string) => any;
};
export declare class LocalForger implements Forger {
    readonly protocolHash: ProtocolsHash;
    constructor(protocolHash?: ProtocolsHash);
    private codec;
    forge(params: ForgeParams): Promise<string>;
    parse(hex: string): Promise<ForgeParams>;
}
export declare const localForger: LocalForger;
