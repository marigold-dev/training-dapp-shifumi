import { BlockResponse, InternalOperationResult } from '@taquito/rpc';
import { Context } from '@taquito/taquito/dist/types/context';
import { EventFilter, Filter, OperationContent, SubscribeProvider, Subscription } from '@taquito/taquito/dist/types/subscribe/interface';
import { OperatorFunction } from 'rxjs';
export interface PollingSubscribeProviderConfig {
    pollingIntervalMilliseconds?: number;
    shouldObservableSubscriptionRetry: boolean;
    observableSubscriptionRetryFunction: OperatorFunction<any, any>;
}
export declare const defaultConfigStreamer: PollingSubscribeProviderConfig;
export declare class PollingSubscribeProvider implements SubscribeProvider {
    private context;
    private _config$;
    private timer$;
    private newBlock$;
    constructor(context: Context, config?: Partial<PollingSubscribeProviderConfig>);
    get config(): PollingSubscribeProviderConfig;
    private getConfirmationPollingInterval;
    subscribeBlock(_filter: 'head'): Subscription<BlockResponse>;
    subscribe(_filter: 'head'): Subscription<string>;
    subscribeOperation(filter: Filter): Subscription<OperationContent>;
    subscribeEvent(eventFilter?: EventFilter): Subscription<InternalOperationResult>;
}
