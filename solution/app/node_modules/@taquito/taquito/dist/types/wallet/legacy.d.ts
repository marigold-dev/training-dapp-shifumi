import { Context } from '@taquito/taquito/dist/types/context';
import { OpKind } from '@taquito/taquito/dist/types/operations/types';
import { WalletDelegateParams, WalletIncreasePaidStorageParams, WalletOriginateParams, WalletProvider, WalletTransferParams } from '@taquito/taquito/dist/types/wallet/interface';
import { WalletParamsWithKind } from '@taquito/taquito/dist/types/wallet/wallet';
export declare class LegacyWalletProvider implements WalletProvider {
    private context;
    constructor(context: Context);
    getPKH(): Promise<string>;
    mapTransferParamsToWalletParams(params: () => Promise<WalletTransferParams>): Promise<import("@taquito/taquito/dist/types/operations/types").withKind<WalletTransferParams, OpKind.TRANSACTION>>;
    mapOriginateParamsToWalletParams(params: () => Promise<WalletOriginateParams>): Promise<import("@taquito/taquito/dist/types/operations/types").withKind<WalletOriginateParams, OpKind.ORIGINATION>>;
    mapDelegateParamsToWalletParams(params: () => Promise<WalletDelegateParams>): Promise<import("@taquito/taquito/dist/types/operations/types").withKind<WalletDelegateParams, OpKind.DELEGATION>>;
    mapIncreasePaidStorageWalletParams(params: () => Promise<WalletIncreasePaidStorageParams>): Promise<import("@taquito/taquito/dist/types/operations/types").withKind<WalletIncreasePaidStorageParams, OpKind.INCREASE_PAID_STORAGE>>;
    sendOperations(params: WalletParamsWithKind[]): Promise<string>;
    sign(bytes: string, watermark?: Uint8Array): Promise<string>;
    getPK(): Promise<string>;
}
