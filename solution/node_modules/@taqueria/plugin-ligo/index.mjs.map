{"version":3,"sources":["index.ts","ligo_templates.ts"],"sourcesContent":["import { configurePlugin } from '@taqueria/lib-ligo';\nimport * as templates from './ligo_templates';\n\nconfigurePlugin({\n\tname: '@taqueria/plugin-ligo',\n\talias: 'ligo',\n\tdockerImage: 'ligolang/ligo:1.2.0',\n\tdockerImageEnvVar: 'TAQ_LIGO_IMAGE',\n\tcanUseLIGOBinary: true,\n\tunparsedArgs: process.argv,\n\ttemplates,\n});\n","export const mligo_template = `\nmodule Counter = struct\n  type storage = int\n\n  type ret = operation list * storage\n\n  (* Three entrypoints *)\n\n  [@entry]\n  let increment (delta : int) (store : storage) : ret = [], store + delta\n\n  [@entry]\n  let decrement (delta : int) (store : storage) : ret = [], store - delta\n\n  [@entry]\n  let reset (() : unit) (_ : storage) : ret = [], 0\n\nend\n`;\n\nexport const jsligo_template = `\nexport namespace Counter {\n    export type storage = int;\n    type ret = [list<operation>, storage];\n    // Three entrypoints\n  \n    @entry\n    const increment = (delta: int, store: storage): ret =>\n      [list([]), store + delta];\n    @entry\n    const decrement = (delta: int, store: storage): ret =>\n      [list([]), store - delta];\n    @entry\n    const reset = (_p: unit, _s: storage): ret => [list([]), 0]\n  };\n`;\n"],"mappings":";;;;;;;AAAA,SAAS,uBAAuB;;;ACAhC;AAAA;AAAA;AAAA;AAAA;AAAO,IAAM,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBvB,IAAM,kBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ADjB/B,gBAAgB;AAAA,EACf,MAAM;AAAA,EACN,OAAO;AAAA,EACP,aAAa;AAAA,EACb,mBAAmB;AAAA,EACnB,kBAAkB;AAAA,EAClB,cAAc,QAAQ;AAAA,EACtB;AACD,CAAC;","names":[]}