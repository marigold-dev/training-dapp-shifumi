{"version":3,"sources":["tzkt-config.ts"],"sourcesContent":["import createType from '@taqueria/protocol/Base';\nimport { z } from 'zod';\n\nexport const rawSchema = z.object({\n\tdisableAutostartWithSandbox: z.boolean({ description: 'Do not start TzKt when sandbox starts' }).default(false),\n\tpostgresqlPort: z.number({ description: 'Port number for postgresql container' }).default(5432),\n\tapiPort: z.number({ description: 'Port number for TzKt API' }).default(5000),\n});\n\ntype Input = z.infer<typeof rawSchema>;\n\nexport const { schemas: generatedSchemas, factory } = createType<Input, Input>({\n\trawSchema,\n\tparseErrMsg: (value: unknown) => `${value} is not a valid TzKt configuration `,\n\tunknownErrMsg: 'Something went wrong trying to parse the TzKt configuration',\n});\n\nexport type TzKtConfig = z.infer<typeof generatedSchemas.schema>;\n\nexport type t = TzKtConfig;\n\nexport const { create, of, make } = factory;\n\nexport const schemas = {\n\t...generatedSchemas,\n\tschema: generatedSchemas.schema.transform(val => val as TzKtConfig),\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAuB;AACvB,iBAAkB;AAEX,IAAM,YAAY,aAAE,OAAO;AAAA,EACjC,6BAA6B,aAAE,QAAQ,EAAE,aAAa,wCAAwC,CAAC,EAAE,QAAQ,KAAK;AAAA,EAC9G,gBAAgB,aAAE,OAAO,EAAE,aAAa,uCAAuC,CAAC,EAAE,QAAQ,IAAI;AAAA,EAC9F,SAAS,aAAE,OAAO,EAAE,aAAa,2BAA2B,CAAC,EAAE,QAAQ,GAAI;AAC5E,CAAC;AAIM,IAAM,EAAE,SAAS,kBAAkB,QAAQ,QAAI,YAAAA,SAAyB;AAAA,EAC9E;AAAA,EACA,aAAa,CAAC,UAAmB,GAAG;AAAA,EACpC,eAAe;AAChB,CAAC;AAMM,IAAM,EAAE,QAAQ,IAAI,KAAK,IAAI;AAE7B,IAAM,UAAU;AAAA,EACtB,GAAG;AAAA,EACH,QAAQ,iBAAiB,OAAO,UAAU,SAAO,GAAiB;AACnE;","names":["createType"]}